cset: moving following pidspec: 21230
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.507206542 seconds)
loading group "string"... done (took 0.892683391 seconds)
loading group "linalg"... done (took 9.887468768 seconds)
loading group "parallel"... done (took 0.190299734 seconds)
loading group "find"... done (took 1.678813584 seconds)
loading group "tuple"... done (took 2.242944747 seconds)
loading group "dates"... done (took 1.5327847 seconds)
loading group "micro"... done (took 0.227707043 seconds)
loading group "io"... done (took 0.622619719 seconds)
loading group "scalar"... done (took 49.175803294 seconds)
loading group "sparse"... done (took 14.871276435 seconds)
loading group "broadcast"... done (took 1.277798037 seconds)
loading group "union"... done (took 11.163221908 seconds)
loading group "simd"... done (took 2.908180991 seconds)
loading group "random"... done (took 11.259554171 seconds)
loading group "problem"... done (took 1832.246301214 seconds)
loading group "array"... done (took 25.136473627 seconds)
loading group "misc"... done (took 1.206176013 seconds)
loading group "sort"... done (took 3.852284346 seconds)
loading group "collection"... done (took 19.720513739 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.744429977 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.148539567 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.23536044 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.372149458 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.235028574 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.160021283 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.171456811 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.588352809 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.007168134 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.240031745 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.151297761 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.591441076 seconds)
done (took 6.296247804 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.254137822 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.074994295 seconds)
    (2/2) benchmarking "String"...
    done (took 0.17596873 seconds)
  done (took 0.842177374 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.086734165 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.180448609 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.108901436 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.097450456 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.110837371 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.110646581 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.110921531 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.111107734 seconds)
  done (took 1.421132433 seconds)
done (took 3.206678205 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.525150223 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.861625924 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.575606522 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.160990925 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.331636893 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.407624475 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.29620032 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.21886377 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.103872234 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.090944671 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.187270356 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.420892063 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.516021729 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.044623472 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.106002386 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.096009855 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.131386341 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.830933417 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.077543744 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.131933342 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.575900557 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.212205484 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.108924217 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.117073296 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.197055673 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.130831557 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.162849683 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.103229449 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.666959573 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.125633442 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.196500201 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.095062403 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.167884787 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.230456294 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.23959886 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.091304901 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.682282046 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.197070862 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098925363 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.098996823 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.681765828 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.127543597 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.166788839 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.103220242 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.091446271 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.18496101 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.114987744 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.09126355 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.11425264 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.086386317 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.17150995 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.45879373 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.089333695 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.163391346 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.088895085 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.69507827 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.096713727 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.280213414 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.13450749 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.102752385 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.073290166 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.104103303 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.155225398 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.108038591 seconds)
  done (took 20.793010755 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.157062822 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.166867301 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.090939878 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141710903 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.143343992 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.093608352 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.081406354 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.091166275 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.12645283 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.238485469 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.141093229 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.170936374 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.088170691 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.085474824 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.145262243 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.2511627 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120263052 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.119555174 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.084112946 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103920105 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.140593997 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.096636734 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107968468 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.109538821 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168429767 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.20303037 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.108125057 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.119766339 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097930563 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.115281769 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.137156185 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.148353217 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.090691672 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082688638 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.185972914 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.118093165 seconds)
  done (took 5.28740312 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.221999041 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121413918 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.234081191 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.177822445 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.148409157 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.167279825 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.157936455 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.309568785 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.241598928 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.179494382 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128548495 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.093609453 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091365019 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.084724299 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.093776711 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.66005073 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.18498475 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.148195156 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.151495824 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102140535 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.085527796 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.381084058 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099752605 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.095657291 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085244462 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.091178369 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.20742591 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102048904 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.210941645 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.09855813 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.091748389 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131903217 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.207800985 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.13328066 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.123962837 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101652426 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.095720195 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.221846242 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.110053981 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.193383805 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.094569512 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.134668136 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.080795352 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133745754 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.135228478 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098041408 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.11111059 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.226628144 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.098096983 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.119080806 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.125609871 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.196805808 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.137568495 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.079160142 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.334072342 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.113367213 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103645877 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.080924358 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.308699389 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.129751718 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.08022098 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.093898617 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085395385 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.092417592 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.429120696 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10872301 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.914290583 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.094415413 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.165571552 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098721459 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105830894 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100269232 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084445464 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.11630234 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079158917 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.094040763 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.077543961 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.093432173 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.095520085 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.084340162 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.11877036 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.098181062 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080589199 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.157665383 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.095094216 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.116538594 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.120932965 seconds)
    (88/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.082425617 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.094204827 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.083269837 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.126582092 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094852872 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.083222413 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.188427259 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087248226 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.117701724 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099077715 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.139131965 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.080807012 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.206566862 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.092793209 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.121001689 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098311089 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111293393 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.113957568 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095520979 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08298452 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.092398236 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.094801637 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.145500186 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.081412598 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.094413055 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.098396684 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.09557952 seconds)
  done (took 23.947286146 seconds)
done (took 50.620028384 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.527849859 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.120088468 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.119049352 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.116248737 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.099846458 seconds)
  done (took 1.658398621 seconds)
done (took 2.304636097 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.381459899 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.182623882 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.12515893 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.187094226 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.103441405 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.19200606 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.188504401 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.09947184 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.216625296 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.096050352 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.17922129 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.095304305 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085943135 seconds)
  done (took 2.808665988 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096265045 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.125321964 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095177164 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111945005 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075386485 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113580308 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.110023826 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11199257 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110632087 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087679904 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094770043 seconds)
  done (took 1.777343284 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093229531 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117787187 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083300965 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.108120112 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07543703 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109186981 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091722183 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.126506059 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108271689 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090658556 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093160704 seconds)
  done (took 1.740395142 seconds)
done (took 6.96525125 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.161116384 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.684388118 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.146413557 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.202529218 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.375067223 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.244422784 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.58986597 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.161592894 seconds)
  done (took 11.4170668 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.115297614 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.140636947 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.099800204 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.098501232 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.083775103 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.096862972 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.083840627 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.09795932 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.084299123 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.098406364 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.08329415 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.099598208 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.099290179 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.086537978 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.098604285 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.084578961 seconds)
  done (took 2.271838326 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.1219799 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.119923877 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.104926959 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108121489 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087395325 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.102545495 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.103840047 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.090820029 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.101397324 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103738246 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.097174678 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.107713986 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.092531939 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.10292947 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.10603822 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.095610547 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.102593848 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.10691115 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.09507697 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.107233559 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.109496615 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.090929084 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.106553069 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.10849328 seconds)
  done (took 3.235868467 seconds)
done (took 17.5688007 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.175537367 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.09502971 seconds)
  done (took 0.927558156 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.145826688 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.147895788 seconds)
  done (took 0.957232408 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.111598257 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.093842348 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.13741759 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.115776449 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.08187407 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.094878696 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.131547524 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.081174109 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.095261859 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.094411217 seconds)
  done (took 1.70356582 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.08613524 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.099968056 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.094341677 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.158630565 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.094740753 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.100003833 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.08699846 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099873153 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.101545215 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.082958901 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.104176957 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.11956437 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.089293929 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.121222245 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.099827746 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.091523802 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.110116063 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.103316779 seconds)
  done (took 2.507440526 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081546082 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.09741998 seconds)
  done (took 0.843920927 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.08760782 seconds)
    (2/7) benchmarking "second"...
    done (took 0.097009113 seconds)
    (3/7) benchmarking "month"...
    done (took 0.087659843 seconds)
    (4/7) benchmarking "year"...
    done (took 0.101506378 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.096501726 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.083699295 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.097404786 seconds)
  done (took 1.316499686 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.558405325 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.27399415 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.381174474 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.120223911 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.143153299 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.396602432 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.142568387 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.114005861 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.098660417 seconds)
  done (took 2.935828229 seconds)
done (took 11.853174189 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.08835295 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.237513655 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.651450841 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.105547959 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.096057042 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.140192916 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.318799827 seconds)
done (took 2.311034364 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.346907828 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.154165541 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.087455783 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.093368865 seconds)
  done (took 1.348114973 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.076695651 seconds)
    (2/2) benchmarking "read"...
    done (took 0.103717758 seconds)
  done (took 0.851099007 seconds)
done (took 2.880572802 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079187799 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.129128517 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.077804938 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.095594566 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.078427108 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.095431884 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.078117948 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.0936463 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.077342642 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.092515478 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.078219869 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092821005 seconds)
    (13/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.077706304 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093721275 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080056791 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092672033 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.077197469 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092408721 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.07747208 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093804189 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.078067186 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.091963171 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.07741097 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.092074054 seconds)
  done (took 2.799735123 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.103764865 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098418654 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.099869728 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086792168 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.103847185 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086481573 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102955882 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.099378574 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.089344741 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.100332368 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089429919 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.104819777 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099869494 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.089323633 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10009088 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.104677144 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.089848212 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099975818 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084393194 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.104042322 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.102810417 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084974564 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.104080025 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08802809 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.104362142 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103646903 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084941078 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.099783792 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088616623 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.104629897 seconds)
  done (took 3.575720134 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.088250372 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.089213402 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080036298 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.100400098 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.076980454 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.09511512 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077251296 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.094044093 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.083646462 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.093710866 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.084407377 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094835386 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078392419 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.097313195 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.083011817 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.099025343 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.092429104 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.094666732 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.077647733 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.099065759 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.082900946 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.094358158 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.08197958 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.098065559 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.080379657 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.094673078 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.082007532 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.098609357 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.082286248 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.096691003 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.084063633 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.100364107 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.09554346 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.091425269 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.098686581 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.08200762 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.102565585 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.07852126 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.098686865 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.07941749 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.093724042 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.082120218 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.094467167 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.090040947 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.096959895 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083659041 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.095175396 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.084170445 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.098163711 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.08712845 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.093302021 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.079139898 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.099438682 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.082078804 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.097256136 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.089712758 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.081500705 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.089557579 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.082450681 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.093722441 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.076555161 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.089481042 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.084009995 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.094863615 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.09791101 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.102236553 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.075455756 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.097007262 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.081631888 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.099707632 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096312695 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.092820887 seconds)
  done (took 7.145290255 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.095087321 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107183654 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082298456 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097656631 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08075436 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.094821009 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.102271283 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080456201 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097299569 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.089769515 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095554283 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081345994 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097197189 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081238613 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095825757 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.081824145 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.105511022 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095175698 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.081089885 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.097236433 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081730769 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.104264328 seconds)
  done (took 2.708857027 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.257138264 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.087019358 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.149226154 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.114862562 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.121502204 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.10099481 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104102246 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.105871429 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089490891 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110199473 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110933608 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088781348 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.123969566 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110010245 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095255805 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.112383532 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105094856 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.096237761 seconds)
  done (took 2.764459826 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.098834179 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.09924168 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.122571078 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.085038422 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.101845325 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086123082 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.110372253 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.117215793 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086827246 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.101900032 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.096534295 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102795191 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.101056089 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085809584 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101544899 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.085895475 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.102306338 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088150829 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111815447 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110225123 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.094806756 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112454537 seconds)
  done (took 2.889559035 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100944626 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098980833 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.137964963 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089070838 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.100751851 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.195924969 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.105254782 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.083885098 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.106537485 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.098013901 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083498937 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097635013 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.093645847 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099317627 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.109457926 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086826445 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100815241 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.085274604 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10112973 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.084090288 seconds)
  done (took 2.746586594 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.175037013 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099707241 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.113118729 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12834986 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097526448 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.113584143 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.126342344 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.098016364 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113735728 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129199481 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.113878803 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.098154039 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127300271 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.121727702 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.098704892 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126111028 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126474457 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.128961544 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.099053614 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114162854 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.131089159 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.098904037 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.127211965 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.115784615 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099050514 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114513919 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11365453 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.106429734 seconds)
  done (took 3.94525758 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080633182 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.079743762 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.096032775 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.078701777 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.095232578 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.07987956 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.096413696 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.079622131 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.095041908 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.080317068 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.094911991 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.079899384 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.095388998 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.079647096 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.095213526 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.079732002 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095413711 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.079421516 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095814367 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079625648 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.096143433 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080938664 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.09879133 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082575834 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097586689 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.080398648 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095420984 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08040122 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095647494 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.080364649 seconds)
  done (took 3.316266151 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.093522008 seconds)
    (2/2) benchmarking "in"...
    done (took 0.122379594 seconds)
  done (took 0.90889991 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.089636128 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115628779 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080679378 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.097650394 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.090768373 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.100117666 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111074784 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094838049 seconds)
  done (took 1.474044566 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.147309591 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.149732576 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.087343935 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.111482227 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.147083337 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.142702945 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.144058242 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.088212894 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.099901356 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.074762001 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.140880065 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.094335003 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.085290301 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099064091 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.10039536 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093133583 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097596031 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.091206429 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.106473828 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.085322112 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102830271 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108631935 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08933027 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.109770628 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.081534793 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.109090215 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.110352933 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.097192 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102085396 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.093020624 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.103777042 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.085167059 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.106533902 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.106418089 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.085565566 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.15172103 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115461472 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085740668 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.107328344 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10745302 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095325681 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.102250528 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.092378962 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.104167597 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092288188 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.108488015 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.106151756 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.083250443 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.09510125 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.079892555 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.099747151 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082428044 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.096770982 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087506488 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103898216 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110497452 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.084590393 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.094715928 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.081532151 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.097649131 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.085335547 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.099683919 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108808224 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.089356224 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.100054141 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086827442 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104365763 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.086113314 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.103734149 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.085478408 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.10598692 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.122035058 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.092658233 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.108223463 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109194273 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.08655526 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102772817 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092172648 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104225545 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.090349517 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.105677137 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108080601 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.085103016 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.097083407 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.081482096 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.106601436 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.08440213 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.10376606 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.077842976 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114519215 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.099808078 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.083928422 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.096238131 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.085893315 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.096691999 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.085181796 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.095425936 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087236368 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.097128961 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.089113227 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104738949 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094794028 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.089477029 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10432306 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089648982 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.101800901 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.142529374 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08406005 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.09889703 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.100165683 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.0878309 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.095751124 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.085921738 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.09639807 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080195443 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.098787148 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.088328866 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.103201678 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.100513174 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.087054723 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.101394357 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.089739502 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.100739126 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.081225784 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.096949205 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.088427869 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.110144302 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.105611192 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.085337572 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.099324637 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.08350975 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.104560591 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.08959859 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.100782793 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088484174 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.100307733 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.097545687 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.084266676 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.103332989 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.087401904 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.099606233 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.087798038 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.10871567 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.106720234 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.08851078 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.108383527 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.083810379 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.096433633 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.105758656 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.082751696 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.099746581 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.092947426 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.099078045 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.08392602 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.098894114 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.09355878 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.100171736 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.105610842 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085746483 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.103247315 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089509322 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.093182852 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085347719 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.102416593 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.092072902 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.099076409 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.099972635 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.086229427 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.108131084 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.079930271 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.102730947 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.078658433 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.097325046 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.090176599 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.102085533 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.087375962 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.100554029 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.117762845 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.096392757 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107829423 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088387382 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.104474156 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.104151678 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.086870577 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.102167138 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088771394 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.105524945 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.085982987 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.104002551 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088463382 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.096314519 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.100323353 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.085319625 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105524216 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.078212748 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.101312724 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.080118259 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.106910833 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.093057948 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.106118255 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.106675511 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085800214 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105964541 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.095357325 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.102010034 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.08910045 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.096562845 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.089848924 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.112640039 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.108066199 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089258584 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.114004242 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.084288634 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.101457699 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.093839723 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103970243 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.102508261 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.084000555 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.096334155 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.080049086 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.106351763 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.085923862 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.098728703 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.081505116 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105114495 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088114867 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.101179023 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.096213487 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.08786979 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110976118 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.083691622 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106205269 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.082137822 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.10342599 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115605564 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.083170194 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.103865542 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.093654038 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.10636982 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.102412373 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.087741485 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.102555187 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.101251567 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.105146149 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.088441318 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.102983499 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.09500188 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.105902297 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.084609178 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.10506695 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.089735589 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.101509558 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.104057262 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.090428117 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.100110179 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.081902249 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109071227 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089230574 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.105545148 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.102338974 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.088014763 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.107275357 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.089659804 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.098099342 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.088551342 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.098569491 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.078846692 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.099545865 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.093382948 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.085746383 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.101624955 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.087430122 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.101700398 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087256054 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.10337537 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105438603 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.084338882 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.106136574 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.099024252 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.095580109 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.097349949 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.085327971 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10292378 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.084350186 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.100916814 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.087129595 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106386382 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.087654005 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106964275 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.097708058 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.082147621 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.104196425 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.082656987 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107366551 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.089470581 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.107351217 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.081607568 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.104054094 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.100044984 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092404432 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.098710905 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.086043294 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104929873 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102616518 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.083005525 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.102018997 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.081815366 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.097709008 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.085104456 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.107168315 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.079705946 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.105436089 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.101594773 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.084531379 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.097023801 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082075417 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.107054416 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.08010622 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.10788102 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.083179185 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.096985092 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.080761149 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.107765086 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105730788 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.088942783 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.099109345 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.08584274 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106530255 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.085697583 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.099426696 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.091605683 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108903714 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.089573093 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112143674 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.095219758 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.08478904 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111670931 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.081259305 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.102438065 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.083818409 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.09769923 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106842485 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.089991828 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.104841503 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.08548473 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.097565086 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.083444505 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.107884169 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.086340117 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.105514331 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.084695215 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104840685 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.098141344 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085833811 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.10662583 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.087496445 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108361527 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088177529 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.105432962 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.100652045 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.089060517 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.099768036 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.080988777 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.097927136 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.085042753 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.107277332 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.077666166 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.105256026 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.088674106 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.100540586 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.084311687 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.104669099 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.099959331 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.085481385 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10408984 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.082398208 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.113052082 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.084189246 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.101052247 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.086448861 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.105515407 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.079671599 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.102025115 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.099462367 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090634968 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.103053073 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.087872442 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10640527 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087968625 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.103162412 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.087364321 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.105995222 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.107189044 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.079875534 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.106850932 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092128075 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.104203927 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.085396898 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103776774 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.080637603 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.102934964 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.107481179 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.084582694 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.11018755 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.088963129 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.103013482 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.084678989 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.105195942 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103487758 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.090903789 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.099651205 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.086376143 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.098270757 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.09116069 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.105186578 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.106951251 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.083706255 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.099275291 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087547331 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.104902426 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086108396 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.108449044 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.092751811 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.098111075 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.080909583 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.103429753 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.101860975 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.093972527 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.100618021 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.085299396 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104370075 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.084654862 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.101482604 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090075678 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.09916329 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.100697843 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.087868205 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105711026 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.081880448 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.098592856 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.088413295 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.10424835 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.08789575 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.104872518 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.099516193 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.086024302 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.107421056 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.085511109 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.097853697 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.08739569 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108512366 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.085871718 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.101997555 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.097939545 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094648592 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.107702365 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08995779 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.099710629 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.105446938 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.085092038 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.102430308 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.090348507 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.102840566 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087033087 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.104120222 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087588007 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112401903 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.098490043 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.082726765 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.113518178 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090253352 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.109174084 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.085900668 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.104819383 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108032746 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090792196 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.102301473 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.080465978 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.100059068 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.081283499 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.100439361 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.085823164 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111812437 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.103857072 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.085051067 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104499029 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086884101 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.102931763 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.085879585 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.100525708 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.093321323 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.103986797 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.109440051 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.080536348 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.096007736 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.085943083 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105472514 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.082632443 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.100249444 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.083704831 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.103654811 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.08128908 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.104698267 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.094972779 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10684804 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.088491452 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105309037 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.103839428 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.085748872 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.113848837 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.083051211 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.103429644 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113798179 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.090604465 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105357686 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.086678553 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111943006 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.091855983 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.104280622 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.10840473 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.084874198 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.099272601 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.091000431 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.110113382 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098675373 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104021443 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.09676361 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.087423705 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.098813447 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.082027917 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.110160724 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090693309 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.110541927 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.087202423 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.101907313 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10996523 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085443925 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104822082 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.085803864 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.105551077 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.088373313 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102671664 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.086873278 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.102004839 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.107973762 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.092662429 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10679423 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.092419522 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.097431174 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094186842 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.109639913 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.109258853 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.084499367 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.097538854 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.080823661 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.102626825 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.090728554 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.107566811 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.086901406 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.104529583 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.087273868 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.107319079 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.08766577 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.102870397 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.107552777 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.088767502 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.101608358 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.090735208 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.10101514 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082939379 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.103365153 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.089647616 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.110365308 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.088686668 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.114425582 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.107568907 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.086200716 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.103114706 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088799536 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.105808902 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.091118273 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105057389 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.084374826 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.099790583 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.106893394 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.091345966 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106155891 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.09165983 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.112836589 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.084787187 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.111210471 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.110632023 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.088684246 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.102211959 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.088276825 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.104875214 seconds)
  done (took 58.510367973 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.161198911 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09249018 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104360929 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.085801821 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.134310808 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106388584 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.087641419 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106652521 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.088733588 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.118336845 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104541106 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086294089 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.129436022 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137003106 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.13170502 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.11903475 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085848326 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107232293 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085609937 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106918078 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.125894675 seconds)
  done (took 3.048430998 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.11001598 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.125161138 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.12356721 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.125575548 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095499465 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.120915561 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.121962871 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11994921 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.123812121 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098562092 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.126121669 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120275613 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.114938403 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.097788384 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117411343 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116049425 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.106817995 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.115417584 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.122256808 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.12315153 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099116019 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.122770464 seconds)
  done (took 3.287540226 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.094833635 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.105906061 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.091259539 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.102905095 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.088574615 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.104760904 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.094245593 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.104956096 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.095247007 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.107265264 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.081449224 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.102547902 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.104660031 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.085621948 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.101025512 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.084735248 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.112960387 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.088811971 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.10969617 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.084640684 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.121567936 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.103663929 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.086941209 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.101364199 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.098988792 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.109628096 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.086957296 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.108957601 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.081855763 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.107831835 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.085746243 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.10602927 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.106519116 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.082962769 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.099653293 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.088972833 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.107941977 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.084982937 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.103599174 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.083004007 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.103987762 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.089718182 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.11122629 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.086253681 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.105129052 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.082837867 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.107780587 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.083991583 seconds)
  done (took 5.420117191 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.12547486 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.162499133 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.090447659 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.132983775 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.126626105 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.121828679 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088902452 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.148418231 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.089536891 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.109619416 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.128066514 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.108945147 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.111354633 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.115352524 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.094716799 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.110873328 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.113751661 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.090649971 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.117256304 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.091400179 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.119080456 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.113290508 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.126283648 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.1276348 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.095687086 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.110783576 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.092109487 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.11688965 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.12649808 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.120575092 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.095676201 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.119053459 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.129661111 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.092008095 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.11158822 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.110937142 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.108763097 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.112631486 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.111854892 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.08952686 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.112317911 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.113744374 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.094931094 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.12958699 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.111632377 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.094444536 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.11248101 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.086969277 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.126562235 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.112882224 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.120733786 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.12943023 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.094993579 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.113239432 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.114622329 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.107909378 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.112933233 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.108353274 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.093637807 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.126441809 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.107902431 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.09541004 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.127524077 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.109644191 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.100098834 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.129155768 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.117937985 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.116306407 seconds)
  done (took 8.571543532 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.122476163 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.116326519 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.13050382 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.132202361 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.098053634 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.115859752 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.115097238 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.096860394 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.116015492 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.12529775 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.097225177 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.221908139 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.093422024 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.12157559 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.116119793 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096681507 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115646116 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.116204257 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097008816 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115654092 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.115472335 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.129238865 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.096805146 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.130273697 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.132053376 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.109476143 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.096827927 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115894076 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.129292773 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.096856037 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.13144494 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.116777703 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.116233625 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.109867444 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.132571879 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.118558005 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.088239043 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117161954 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.116115492 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.097821884 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.11137393 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.129055894 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.114478332 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.094200134 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116288248 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.094917177 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.130821581 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.133711041 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.124330504 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.123817236 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.095753933 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.1302099 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117683635 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.115656965 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.109437628 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.139297852 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129818277 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.130648361 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117897341 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.129747518 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109398114 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.138859486 seconds)
  done (took 8.047340916 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086606729 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.085746953 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.105836552 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.085150623 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106134186 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085976724 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.106338303 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.085192294 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.105266878 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.08473205 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105047372 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085014248 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105263253 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085279805 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.106465959 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085532934 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107412668 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084748215 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105298838 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085710115 seconds)
  done (took 2.651129987 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.098774747 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.132356232 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.089853045 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.119341778 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.110781199 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.09820798 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.109180073 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108611287 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090405774 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109631247 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10166708 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.121022471 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109546698 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09880695 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.122965836 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11904951 seconds)
  done (took 2.500644493 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.114026648 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.13155064 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.166049305 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.112189217 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.090570141 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.117905498 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.108597559 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.091170062 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.107960653 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.097036868 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.112991996 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.093690525 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.108772334 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.089273199 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.110790706 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.113195792 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.087966003 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.112778949 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.089902501 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.165481843 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.116294335 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.11256986 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.09104904 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.114758853 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.095929478 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.115023624 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.116443116 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.089908828 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.111523654 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.091929755 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.11403582 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.11847706 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.089032793 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.1159717 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.089557917 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.110635985 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.089816562 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.11037679 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.112490554 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.089030447 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.111057785 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.092091661 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.108634255 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.092205951 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.108369877 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.109006981 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.088840367 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.115177744 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.092691399 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.111422497 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.090034767 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.116047165 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.114054344 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.103066717 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.11789809 seconds)
  done (took 6.646945644 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10392555 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.111766116 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.104739673 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.106806656 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08958618 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.113262762 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.111901644 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.093642278 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.111205309 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086120134 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.111961391 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.091452579 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.113809799 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.110878942 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.09248891 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111560941 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.087649882 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110034105 seconds)
  done (took 2.625271218 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.095207163 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.108833099 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.096359382 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.109356686 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.089189403 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109729066 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087449499 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.109849624 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087548978 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.10848515 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108024237 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.090906107 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106122696 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.089818664 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108258868 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089744384 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.109386269 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08784276 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.108112523 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087349004 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.110601701 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.087093078 seconds)
  done (took 2.948996652 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.102603462 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.167884667 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.120735791 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.179759916 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.109876878 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.088776564 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.121053537 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.112313804 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.110738713 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.107808205 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.106450254 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.088759105 seconds)
  done (took 2.184967117 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118249007 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14979978 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110514983 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090611463 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124096448 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116434282 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097118531 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117590682 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129316058 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132780566 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098499722 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13030832 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129743436 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134413245 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103540548 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123649526 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116855795 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098413886 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112081171 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14140156 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115385748 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107578708 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116926698 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117667378 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097705814 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130430195 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127071658 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134791804 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116557374 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109274064 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123050814 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116137133 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128798001 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11304872 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111389494 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127014806 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096145163 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140561077 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12409387 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131464217 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109142531 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10366431 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128250335 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12509544 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130031792 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097208377 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125346057 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116044875 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09795229 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.166263467 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105745137 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129590191 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122042879 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127252273 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10856569 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.166801215 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11340436 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131860782 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122985834 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134836327 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129772229 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122252375 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111081437 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133877904 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122692265 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130349329 seconds)
  done (took 8.745680978 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137391358 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.114637207 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117671264 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134174003 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110484835 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117122212 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116353369 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097130671 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117033647 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112724522 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.17113459 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097084893 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131088399 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130391951 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117593993 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097765135 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118272722 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131595197 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09257357 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.169269403 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099442854 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13113997 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13079428 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131278514 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134252506 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10428708 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118484184 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116447965 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098224216 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117846127 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126927286 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098209069 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131049123 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.112451399 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130469755 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098700724 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118670089 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128115311 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096990815 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124493351 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130735576 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142157149 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116479641 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098085837 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134010812 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116295234 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097356093 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113278541 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116595666 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092897808 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134692514 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134002498 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132950733 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130857222 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096940554 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118522094 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11702081 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097244255 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118311551 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12473067 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130901087 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09800716 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.148971516 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118294502 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117673201 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111021829 seconds)
  done (took 8.642101592 seconds)
done (took 158.775713212 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.152245026 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.174402518 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.149402904 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.148687683 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.103279824 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.119446111 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138173671 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.150814718 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.083548333 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.103995844 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.083874413 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.108065475 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.14977651 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.105272606 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.08398026 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.109250548 seconds)
  done (took 2.734186635 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.203546961 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.321880642 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.126501031 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.114759135 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.093240951 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.108047566 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.095341224 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.118384788 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.107714622 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.098919471 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.108365774 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.105722719 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.09914538 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.107184591 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.088455341 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.108566975 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.119232929 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.086915567 seconds)
  done (took 2.990954447 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.111669788 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.147421428 seconds)
  done (took 1.040570124 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.123465948 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.190836902 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.325644959 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.158472122 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.135505599 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.132377573 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.139164506 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.12470248 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.199396353 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.129283024 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.130261362 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.11006747 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.117396978 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.118353002 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.122621532 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.090691602 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.141042648 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.123039003 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.100729676 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.115225648 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.13586725 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.092579823 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.11867274 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.120752731 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.190497364 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.128917355 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.092772007 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.113548287 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.092997807 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.121315312 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.111931065 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.130671188 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.108512833 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.203406139 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.116217527 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.176981319 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.120856579 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.091079352 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.12177 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.109692336 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.097567132 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.116119212 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.127200001 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.091080642 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.113445832 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.120305923 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.093870601 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.112422745 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.093818064 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.124254511 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.115694664 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.112128869 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.176002924 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.122544439 seconds)
  done (took 7.720533681 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.925260047 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.159867486 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091488778 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.035338264 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.142558987 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.127985472 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.911632202 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114275673 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.277037895 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.902346093 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.127270072 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.102062616 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.278230268 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.270034945 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.187291119 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.390108467 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.747172678 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.123951982 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.139344804 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.1600576 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097470932 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.141823526 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.130667919 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.438137118 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.112141532 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.08808391 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118543737 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.12234103 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.177543905 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.10940504 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.09342567 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.222183422 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.302015564 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.203742022 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.111684957 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.106450135 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.088765075 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.204519451 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.295863416 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.241073782 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.182072404 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08462643 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.109471562 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122536888 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.111728981 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.105022186 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.180716772 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.212545509 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.191627452 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115397844 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.122018483 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.118226552 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.102151419 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.198100183 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.086233697 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.366492588 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.390744034 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088646728 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120905507 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.128958929 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.292646652 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.087744021 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.274587003 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.117615286 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.238940377 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.109697065 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.814529385 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.183026099 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.108973014 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118157353 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.097621696 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116174712 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122055322 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.17355715 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.392118295 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126050398 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093067177 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108314185 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.260591794 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08948721 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108543969 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.180155485 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.111719701 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.098161907 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.127404564 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.125883184 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.188026578 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.28926369 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12390411 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099133715 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116085944 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.121806529 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.090623243 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.252022762 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.245803982 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.17478965 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.251667446 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124023356 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.182238817 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.203775917 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.101275163 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.208778743 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.117573124 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108047514 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123732643 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.245775311 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.150943112 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.110646352 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115732178 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.098359717 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.154431654 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.112913192 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.122127476 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.187562488 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.49809903 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.182408354 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.105942211 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.093565485 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119522168 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.179074259 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119385122 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.290110302 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119867767 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.184833055 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118825614 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.08545234 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121002464 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.203253467 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.105336916 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121714542 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124311484 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098413308 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.288141377 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.247741841 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.126230487 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.259365597 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.186868375 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.099498728 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.211922293 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.118868371 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.18679945 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120353077 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121532899 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092604528 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.808925804 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124797501 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.116305402 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095779932 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.20011881 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.110518387 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.088519236 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.109577602 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.084581614 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.840360136 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.112756682 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.084923338 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.111420487 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121042828 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.099369526 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.11752021 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114375424 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.182435398 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.263897895 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.124244273 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120046334 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.088705701 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.198447115 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.090845375 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.110283542 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.088535481 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.111327266 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119697292 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094030851 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.111634433 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.190768601 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.19704004 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.248736308 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.570297472 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.087968171 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.109312956 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.259975583 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109584758 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.337160905 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117913727 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.255891048 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.185715131 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.106861386 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.366567988 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.185859435 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.219509288 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.093064158 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.208054316 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.08782523 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118378801 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.179431799 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.109411458 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09688962 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.196185342 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.127568429 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.105407963 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.207536563 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089833782 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.268772724 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.08718134 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.206479396 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.092006251 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123804261 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.342586253 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.109004018 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.11057915 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.201813816 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113220009 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.091521773 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.748336407 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.090148542 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122405653 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121677215 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.254351016 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.182537198 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119797682 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119351512 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.123059403 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.182292478 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.247405661 seconds)
  done (took 46.856033089 seconds)
done (took 62.121754594 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.319869934 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.277160091 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.33430807 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.231075548 seconds)
  done (took 2.045534787 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.224946509 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.159686299 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.187590145 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.109836459 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.19692347 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.109165465 seconds)
  done (took 1.793168727 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.531031106 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.432438015 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.344769151 seconds)
  done (took 2.112557826 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.275723589 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.271670848 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.359888212 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.490841326 seconds)
  done (took 2.337242861 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.252086091 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.13290141 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.126607017 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.179857297 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.21843944 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.219752457 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.150646761 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.166004328 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.112931238 seconds)
  done (took 2.413663115 seconds)
done (took 11.507328785 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.305447424 seconds)
    (2/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.204066181 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.301249102 seconds)
    (4/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.203912068 seconds)
    (5/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.203051856 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.117545759 seconds)
    (7/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.287929109 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.119933157 seconds)
    (9/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.101177564 seconds)
    (10/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.277468749 seconds)
    (11/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.338779503 seconds)
    (12/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.323027841 seconds)
    (13/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.230119005 seconds)
    (14/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.229954331 seconds)
    (15/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.181342677 seconds)
    (16/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.239391097 seconds)
    (17/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.26036367 seconds)
    (18/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.094858803 seconds)
    (19/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.117743886 seconds)
    (20/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.205110845 seconds)
    (21/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.259724191 seconds)
    (22/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.127071625 seconds)
    (23/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.273098116 seconds)
    (24/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.302419268 seconds)
    (25/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.304863583 seconds)
    (26/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.15391172 seconds)
    (27/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.229131902 seconds)
    (28/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.151754837 seconds)
    (29/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.21258095 seconds)
    (30/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.154810678 seconds)
    (31/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.153237737 seconds)
    (32/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.1211677 seconds)
    (33/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.221907289 seconds)
    (34/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.101632626 seconds)
    (35/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.106932429 seconds)
    (36/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.132947093 seconds)
    (37/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.118962149 seconds)
    (38/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.078299558 seconds)
    (39/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.257508527 seconds)
    (40/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.091464087 seconds)
    (41/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.118284839 seconds)
    (42/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.218513491 seconds)
    (43/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.191970988 seconds)
    (44/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.188462893 seconds)
    (45/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.11870285 seconds)
    (46/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.173227337 seconds)
    (47/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.350755684 seconds)
    (48/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.207436623 seconds)
    (49/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.18856259 seconds)
    (50/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.097229306 seconds)
    (51/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.100796325 seconds)
    (52/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.219312735 seconds)
    (53/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.195598253 seconds)
    (54/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.119953508 seconds)
    (55/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.180304538 seconds)
    (56/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.106238245 seconds)
    (57/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.10689893 seconds)
    (58/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.080727701 seconds)
    (59/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.216981663 seconds)
    (60/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.180653089 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.096272075 seconds)
    (62/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.194920563 seconds)
    (63/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.079747778 seconds)
    (64/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.21608852 seconds)
    (65/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.100960923 seconds)
    (66/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.07967205 seconds)
    (67/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.118130482 seconds)
    (68/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.113268277 seconds)
    (69/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.100184807 seconds)
    (70/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.080868223 seconds)
    (71/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.10921126 seconds)
    (72/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.082653834 seconds)
    (73/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.078684057 seconds)
    (74/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.149054957 seconds)
    (75/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.101662752 seconds)
    (76/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.09349974 seconds)
    (77/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.274887291 seconds)
    (78/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.19870249 seconds)
    (79/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.080380608 seconds)
    (80/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.108188901 seconds)
    (81/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.080617362 seconds)
    (82/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.117670157 seconds)
    (83/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.086438338 seconds)
    (84/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.238336337 seconds)
    (85/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.119338837 seconds)
    (86/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.079656394 seconds)
    (87/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.179449019 seconds)
    (88/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.11494243 seconds)
    (89/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.134140769 seconds)
    (90/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.081337908 seconds)
    (91/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.194866637 seconds)
    (92/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.090880985 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.118182232 seconds)
    (94/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.135377238 seconds)
    (95/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.175854384 seconds)
    (96/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.118067866 seconds)
    (97/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.077990435 seconds)
    (98/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.11859019 seconds)
    (99/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.08739155 seconds)
    (100/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.120656873 seconds)
    (101/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.078746943 seconds)
    (102/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.112270247 seconds)
    (103/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.215885035 seconds)
    (104/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.085689629 seconds)
    (105/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.080169702 seconds)
    (106/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.165487349 seconds)
    (107/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.127159725 seconds)
    (108/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.196668212 seconds)
    (109/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.107607528 seconds)
    (110/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.218398742 seconds)
    (111/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.18044679 seconds)
    (112/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.180856001 seconds)
    (113/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.080892986 seconds)
    (114/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.128026281 seconds)
    (115/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.21406561 seconds)
    (116/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.081131901 seconds)
    (117/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.080332247 seconds)
    (118/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.101620317 seconds)
    (119/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.096539294 seconds)
    (120/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.102217661 seconds)
    (121/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.080801155 seconds)
    (122/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.117348537 seconds)
    (123/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.096586455 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.118648669 seconds)
    (125/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.117769564 seconds)
    (126/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.096582318 seconds)
    (127/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.172746352 seconds)
    (128/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.096352885 seconds)
    (129/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.108522108 seconds)
    (130/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.095443304 seconds)
    (131/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.122254395 seconds)
    (132/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.116885079 seconds)
    (133/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.081356021 seconds)
    (134/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.08018289 seconds)
    (135/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.10468073 seconds)
    (136/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.088563217 seconds)
    (137/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.118388663 seconds)
    (138/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.080277872 seconds)
    (139/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.100673962 seconds)
    (140/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.094355585 seconds)
    (141/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.117346828 seconds)
    (142/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.198770738 seconds)
    (143/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.114338204 seconds)
    (144/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.134286565 seconds)
    (145/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.105684558 seconds)
    (146/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.120042764 seconds)
    (147/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.089933576 seconds)
    (148/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.100701403 seconds)
    (149/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.096959949 seconds)
    (150/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.118807576 seconds)
    (151/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.175116045 seconds)
    (152/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.080009757 seconds)
    (153/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.118918847 seconds)
    (154/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.096430585 seconds)
    (155/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.103562154 seconds)
    (156/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.08113129 seconds)
    (157/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.080389021 seconds)
    (158/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.102453999 seconds)
    (159/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.081943761 seconds)
    (160/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.107884768 seconds)
    (161/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.096449139 seconds)
    (162/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.102858244 seconds)
    (163/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.079817632 seconds)
    (164/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.117912427 seconds)
    (165/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.097649623 seconds)
    (166/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.119156984 seconds)
    (167/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.089587815 seconds)
    (168/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.119122011 seconds)
    (169/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.098487309 seconds)
    (170/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.118058176 seconds)
    (171/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.13573982 seconds)
    (172/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.08938483 seconds)
    (173/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.100248656 seconds)
    (174/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.079626438 seconds)
    (175/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.080726493 seconds)
    (176/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.109816692 seconds)
    (177/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.081174314 seconds)
    (178/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.102494213 seconds)
    (179/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.081452021 seconds)
    (180/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.080921047 seconds)
    (181/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.102936728 seconds)
    (182/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.085289281 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.118111811 seconds)
    (184/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.088868922 seconds)
    (185/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.102476838 seconds)
    (186/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.081636793 seconds)
    (187/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.135159431 seconds)
    (188/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.09615428 seconds)
    (189/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.12105643 seconds)
    (190/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.119360447 seconds)
    (191/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.088692308 seconds)
    (192/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.085833531 seconds)
  done (took 27.445927644 seconds)
done (took 28.259902188 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.228240608 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.126670619 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.100598977 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.123165161 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.18289242 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123844714 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.109552759 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.124806276 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.105627017 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.118944479 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.109596262 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.107887846 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.121892879 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.182321386 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.102921534 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.11603801 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.342435845 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.106012452 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.130986969 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.110066495 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.18055412 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117311859 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.126406543 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.093059632 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.1804049 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115210838 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.09912194 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.122750175 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.128601851 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.096987241 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.120328664 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.091188334 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.131068059 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.129691778 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090109941 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.118252972 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089429252 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.108506205 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.099167855 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.118604811 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.106980909 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.11946293 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.122483381 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.092532929 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.118452635 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.097610295 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.111923343 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.103026805 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.112239531 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121243455 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092865105 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.130948076 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.096257549 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111811472 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.08889175 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.115757689 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.125704076 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09034195 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.127534358 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090083157 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.114247082 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089303062 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.121586334 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089545213 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.11935654 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.11286393 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.097509892 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.12052528 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.094744333 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114350861 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089163041 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.118149337 seconds)
done (took 9.439679846 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.096228447 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.176280557 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.179168202 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.186245927 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.145461412 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.133497741 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.133793166 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.120519982 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.130909103 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.137403921 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.151089267 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.121173552 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.191547518 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.128069044 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.131906463 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.098222647 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.128881533 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.121731154 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.189494028 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.116038343 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.147975577 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.127999919 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.15013913 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.111707833 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120535819 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.153076874 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.1213873 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.098948818 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.118937483 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.105758634 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.13979366 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.119795149 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.098804897 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.13667192 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.129626874 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.104524257 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.132685758 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.121144953 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.097227288 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.119925954 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.10978582 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.131539413 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.118330677 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.109402683 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.123341957 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.127683298 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.106453207 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.1262957 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.099062434 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.122902966 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.122622466 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.147417073 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.105306116 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.131261311 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.104389048 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.127324282 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.126066391 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.104272489 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.120556298 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.104342374 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.119916482 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.120037463 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.099658754 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.146340744 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.122218289 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.104683432 seconds)
  done (took 9.201656608 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.11955334 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.156557302 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.129338655 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.128243061 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.104469506 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.108866216 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.087370001 seconds)
  done (took 1.695773566 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.089939582 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.184152292 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.18198164 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.181463437 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.179972067 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.215274278 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.111162915 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.111961472 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.147488936 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.100439589 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.18251276 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.236406854 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.097470496 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.130349696 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.185492707 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.111802573 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.186092794 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.090180912 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.124163822 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.184155844 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.128443205 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.120252363 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.128062105 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.111933051 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.176658709 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.09125769 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.260251626 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.106326931 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11737497 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.099740189 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.124993918 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.197156186 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.176447736 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.1277387 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.09385882 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.17921727 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.200716356 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.102620565 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.193216078 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.117021519 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.178147232 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.124503968 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.10344825 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.126909778 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.102097222 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.164507587 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.131490695 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.127073868 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.099349676 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.184888097 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.125710426 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.181472811 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.120293592 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.101483309 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.124860424 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.103342823 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.131647666 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.12341143 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.183868002 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.104904774 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.177575867 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.179358981 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.17987742 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.20267864 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.112610531 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.178708504 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.17572344 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.122690946 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.121065414 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.102869878 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.179004293 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.125439418 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.103342654 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.165885525 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.128723469 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.179799269 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.178711914 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.122304911 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.103774696 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.118747094 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.099412373 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.115000571 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.169081343 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.124239918 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.099685608 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.133043907 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.103635334 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.126684084 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.117405892 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.115977698 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.128058326 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.127155998 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.107637742 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.124260299 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.131742226 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.184260621 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.12585445 seconds)
  done (took 14.486519393 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.09289485 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114361385 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.099039021 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115135151 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.092044153 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115431291 seconds)
  done (took 1.5035734 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.1223456 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.128975679 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.137113295 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.105222396 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.183662411 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.186472694 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.18841534 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123892495 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.143825046 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.114086863 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.2091417 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.192003712 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.187823641 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.106732108 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.189293031 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.130554821 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.18790473 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126250803 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.111348391 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12401638 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.13318137 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.106344536 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123285234 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.178399188 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.129234875 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.105281596 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125968481 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.136481272 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.111701522 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122931125 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.129837609 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.104452669 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.121110082 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.122151938 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.189500743 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.097015589 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.138997496 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.132379076 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.106919131 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.12897969 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.191472286 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122911027 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.11193462 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.13402277 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.122512359 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.098019595 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.133287219 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124502276 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.190523161 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.108420992 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.133092226 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.128172808 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.105735964 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.131581346 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.120232059 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100511661 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.132604281 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.190533159 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.131974215 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.097627577 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.128885867 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.129875915 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.101411345 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.132459835 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.127764451 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.110380006 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.120261166 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.104435314 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123644073 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.127703126 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.109416662 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.128053311 seconds)
  done (took 10.474107686 seconds)
done (took 38.213689595 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.105391719 seconds)
  done (took 1.976658727 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.91025159 seconds)
  done (took 1.785180528 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.339214885 seconds)
  done (took 17.249582199 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.553544282 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.642719235 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.975258304 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.167183878 seconds)
  done (took 3.212216189 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.96794869 seconds)
  done (took 1.861576782 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.380845227 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.255040825 seconds)
  done (took 1.514918243 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.690866056 seconds)
  done (took 1.579792378 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.096420608 seconds)
  done (took 2.97698097 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.373850533 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.19614938 seconds)
  done (took 1.467391651 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.684230348 seconds)
  done (took 1.576781743 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 28.538541457 seconds)
  done (took 29.433104139 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.242344762 seconds)
  done (took 1.14503873 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.314029815 seconds)
  done (took 1.207783145 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.42049449 seconds)
  done (took 4.314130181 seconds)
done (took 72.181558973 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.104284058 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.130423891 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.106835187 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.127531994 seconds)
  done (took 1.356044179 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.112069522 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.12808044 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.109159056 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.126606773 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.136326907 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.103644192 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.127357652 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.13279051 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.103681914 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.128689742 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.10512555 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.127605147 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.128638786 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.101742176 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.125674783 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.1053349 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.132066147 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.128622236 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.104940087 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.128439214 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.105116872 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.127352316 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.130244284 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.107082012 seconds)
  done (took 3.76293179 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.102354318 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119495646 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.098352883 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.119286394 seconds)
  done (took 1.341529588 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.112706306 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.145088189 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.142227571 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.110652074 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.145414176 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.143033015 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.100586918 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.122837189 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.101292763 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.135125874 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.151027743 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.14650309 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.120273478 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.128652732 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.113662348 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.122135347 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.130290199 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.121728051 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.136041015 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.11312567 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.128617851 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.136422349 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.101468753 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.139623811 seconds)
  done (took 3.948171132 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.212880066 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.116524085 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.152384315 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.182121109 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.1593744 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.10022072 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.153359057 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.13167588 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.109405029 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.130460315 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.129153944 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.189937533 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.105360846 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.128745097 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.1292726 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.110321333 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.141423659 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.132694753 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.175500264 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.108351559 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.132047067 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.140281392 seconds)
  done (took 3.975364735 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.104408924 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.120223403 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.091463137 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.121134315 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.103677689 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.123966119 seconds)
  done (took 1.569177986 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.099131717 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.112993173 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.095629763 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114817225 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094656006 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.112350407 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089022471 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.113424645 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089474276 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.112109937 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090701028 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.11246788 seconds)
  done (took 2.141782052 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.305923238 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.093877348 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.123214421 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.118232682 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.102217284 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.119679987 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.137100295 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.09538759 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.258855905 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.092020696 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.138952655 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.199833344 seconds)
  done (took 2.688755271 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226580605 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104043675 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.319337263 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.389677514 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168266766 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178184622 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.284740843 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180407678 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.20367893 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150393215 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235188242 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142465183 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164423343 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190770035 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150063307 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.223708386 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189591896 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239438811 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13445548 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.247993974 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176300186 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179003658 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192688431 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162534273 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120030965 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171184655 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.132725936 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136845939 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188226007 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182857935 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189251903 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159431576 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151500054 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218634571 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253281039 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19554319 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.330036834 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143926344 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.205648539 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.19793375 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.286179534 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15010553 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21419046 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166455535 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140172973 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19259278 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168096833 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.192770739 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.141062924 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148394025 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204912162 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189850413 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.201099785 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147710195 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.323696482 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132189473 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.158067064 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188394439 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226627876 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203077088 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176716729 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.103932992 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.218368063 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196166981 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19279724 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.155910861 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.182643809 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134119407 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185292837 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.208805169 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196908489 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174150013 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.226182679 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116534021 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173523996 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181284521 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163957641 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189824529 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17046437 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.127501085 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159414503 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145548635 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109920932 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.19670364 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127435937 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222360773 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143431509 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.399106597 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218388126 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170216541 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175595005 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176091369 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177825029 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156416628 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.102898478 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155896011 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.174831539 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168401664 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139722644 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16860142 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151464992 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.110983865 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16297662 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.131987931 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16823745 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.133623839 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206145776 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172276015 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.11425635 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175129679 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160003754 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.166907737 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184039105 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197916359 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138695158 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138255926 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206595006 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165495625 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.117611294 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.213963751 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.202552944 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.178230223 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121211515 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17819143 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233941246 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124882082 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226578353 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125780089 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142607763 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.165191355 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168054568 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169089005 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162619783 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10880372 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.163604717 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235244385 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.108769825 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145061676 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1866498 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135662401 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10917853 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148842136 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145974456 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.150134338 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.135597491 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.147186426 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167752272 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168869565 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163657211 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170286244 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151687499 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20802066 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141912333 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.168916409 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155923654 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.101119457 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.197700708 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224784383 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111869183 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236732125 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.184433469 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205055692 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173871194 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137627728 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191711871 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110383243 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.129359631 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176385617 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.174191506 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175437255 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.19797642 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227525485 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.18730547 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.166365722 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158660054 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181537362 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.186302399 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169142207 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.15295274 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146615862 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20783588 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.103187105 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.132758872 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.110171538 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147157557 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139791914 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137818779 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198161096 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176090971 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196913089 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169966731 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147936187 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195010033 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.13545803 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176922313 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.186280106 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147471517 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.200338635 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192993845 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17760608 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15071838 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18131585 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.100988992 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132228088 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.144177199 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.180713814 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113089999 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142033393 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154038456 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194579887 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188354032 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158042914 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239553591 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181432206 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205686695 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.129328907 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.146349707 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210143377 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140803142 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.19315566 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14027294 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.171418936 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188958796 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153486309 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205967149 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171217787 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177723718 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240729818 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.138923826 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137787793 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159356922 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175423266 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150787472 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176605035 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155305181 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116987642 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164524076 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.147507444 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134670556 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198739919 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15225806 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195989214 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.16846668 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186969421 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133803371 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155066459 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169344842 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128840827 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.127389252 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184367462 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203864287 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155526598 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169720286 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189201818 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138965831 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.326984571 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203322064 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226284915 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145183052 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125946952 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171326568 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171525174 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176388106 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192383397 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155024191 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194149837 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16883531 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.152496527 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142539647 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131857955 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161056058 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.166081526 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.143962242 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.166303697 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.15101149 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200006161 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149165668 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167612016 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174315974 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.132124884 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.167082687 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150423838 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213445682 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168400864 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192776409 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.165942794 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.181253559 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213660225 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131042561 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133781925 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.109580522 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192289946 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139589367 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168447622 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.190323247 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230403929 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171283428 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176382309 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119148268 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.133437682 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170458756 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157509 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209552352 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150725057 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.147473678 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20774046 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.163985443 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112411005 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173601385 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.310704261 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128572918 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18646465 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.130397315 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.279060907 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132397971 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113408786 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172127816 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182421202 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.157684987 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.19111719 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17683861 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151937635 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171666463 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119998652 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.223552808 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219065596 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181151326 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188567633 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.151734604 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169832846 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174405464 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190404625 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150498569 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.157177454 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173199604 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19556129 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.202386272 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.143706394 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172246973 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174008675 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168179617 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191417715 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141155449 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213991172 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136415063 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174806792 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123203483 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132482591 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16955353 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.191923873 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14016582 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188542032 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166842093 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137972559 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10961722 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161290897 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167047858 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154413532 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.136153634 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196567584 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.105946803 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17286011 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191462525 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137407629 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163967873 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156051751 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114374795 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152784257 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152940977 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144099906 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.150728275 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220041425 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.116100692 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189309126 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181450039 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20229845 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169997766 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127285423 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.672672092 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.137033616 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194003916 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157388392 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200933049 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158004595 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176742599 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147056706 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159254884 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176493189 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160972822 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.232728497 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176280043 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.172064003 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141258578 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153187799 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123909236 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.142752426 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16295783 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171532233 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147985425 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.119911096 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.169022076 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153876489 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.154789381 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146448576 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195405026 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129327835 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226626007 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193799253 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146709294 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177615686 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192986703 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108553593 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.17667557 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21276989 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122849217 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162451144 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.141429553 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.145255506 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190568562 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.10458477 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172124083 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170637572 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172499858 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171932427 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.145409358 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169509764 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124175809 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17070725 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136225518 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.168350716 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167055956 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113544137 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.138725808 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165559742 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171996572 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.167024908 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134749283 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.150382645 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194520226 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.130504158 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113956381 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.310678908 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169946162 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205784327 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.167386776 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11548344 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153457526 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167407059 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.166644592 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169202922 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.111291954 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139397498 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.141074555 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.189762854 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.16704619 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140951526 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190493077 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174043371 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244241356 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.126216589 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.277416284 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148860019 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164739358 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.140454656 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.113097643 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150311966 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14245393 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155257451 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.199562974 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192595269 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.160002044 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.152699076 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110217428 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.130535056 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111401936 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174423524 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166536266 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166890473 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155038101 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.099198309 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154511326 seconds)
  done (took 82.733634767 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.148668193 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.141936231 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.150969564 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201670253 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.169888531 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.262349741 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.208793061 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.232773913 seconds)
  done (took 2.518252137 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.106488112 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.139906052 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.146844988 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.129037827 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.129249684 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.45744725 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.141757737 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.102969628 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.192937492 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.142865876 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.124785543 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.667463168 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.128775959 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.125641589 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.097753509 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.128208049 seconds)
  done (took 3.952985688 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.320977734 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.530678749 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.759478761 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.251555824 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.236146454 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.186006139 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.719288719 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.175456699 seconds)
  done (took 12.17936409 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.133159691 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.146920152 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.35127684 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.221007676 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.166800237 seconds)
  done (took 2.025480923 seconds)
done (took 125.08284867 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.105992118 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.146946484 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.106992059 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.150086965 seconds)
  done (took 1.501602199 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.154688063 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.117510058 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.092424924 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.114939211 seconds)
  done (took 1.48323798 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.525420925 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.088785846 seconds)
  done (took 1.648329898 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.144640901 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.149042785 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.148500816 seconds)
  done (took 1.453182365 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.114334021 seconds)
  done (took 1.117614026 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.10235879 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130421387 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.1868781 seconds)
  done (took 1.427608635 seconds)
done (took 9.635638428 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.128579742 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.432392259 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.420286676 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.114180335 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.731767307 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.407941529 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.01721879 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.162243577 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.21106383 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121416797 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.142497109 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.67545325 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.032717008 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.343214986 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.014942631 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.36901104 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.697352893 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120362525 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.102009468 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122728853 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.992518128 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120861282 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096029961 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121624734 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.722191141 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.415048549 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.12222792 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.362531682 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121452438 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128608983 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382648607 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.120469049 seconds)
  done (took 17.068022707 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.141887423 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.190978878 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.134297873 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.096421838 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.131264477 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095690887 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.134008747 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.135944445 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202850024 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094467009 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.144715142 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.1206853 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101262498 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.12184506 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.118495927 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121529002 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.094926566 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122219845 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.128885898 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.097997369 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141390132 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094644011 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.124046256 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094255063 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.121546422 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.152502786 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096133045 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.136657531 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094700066 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.130045436 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.097370593 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122609613 seconds)
  done (took 4.94216876 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.145730529 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.200245426 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.134971389 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.155626099 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.155820354 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124360078 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.214028657 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.162978991 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202787056 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.120627403 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.117421943 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121743009 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.164576431 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096185131 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.146837543 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094576383 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124819678 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.095199007 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.130632523 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123068087 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.117957799 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.12029436 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.098237329 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122490961 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094975337 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.156643594 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.121570451 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.110724952 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121996629 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.103404609 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.125937167 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094933201 seconds)
  done (took 5.23248457 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.10874592 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.136478292 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.120740426 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.148176722 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.101440661 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.134960654 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.134255127 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.102867437 seconds)
  done (took 2.00469017 seconds)
done (took 30.250364476 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.121794753 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.140964443 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.114628599 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.136147315 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.19966423 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.098814675 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.139912013 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.098651813 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.136483766 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.117854378 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.122059078 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.100466708 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.144116292 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.104058281 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.181636474 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.140373054 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.190888622 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.185731648 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.128481499 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.109822467 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.128611175 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.191338773 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.106098516 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.129296984 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.196072544 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.098254735 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.178751525 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.133577014 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.104130635 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.133129224 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.186064995 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.106718074 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.128406838 seconds)
  done (took 5.537334426 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.202736052 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.210750502 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.101319334 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.128829575 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.213362226 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.101080092 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.203394002 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.129414697 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.100338463 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.13026838 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.099098713 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.203224351 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.213694266 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.222280322 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.24073013 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.211337015 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.199154993 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.237098706 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.195807323 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.215534176 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.205220376 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.100758442 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.211326245 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.213074777 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.127427923 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.100735262 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.23853608 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.208720153 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.237064407 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.197564521 seconds)
  done (took 6.426288016 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.10961686 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.145170739 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.122259098 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.198234771 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161732622 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.104796582 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.141872085 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.147984194 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.123193785 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.123646924 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.112013676 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.161960166 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.1417976 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.106784013 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.129830658 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.115606227 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.150846825 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.097412823 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.130979042 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.144173961 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.116125432 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.143295384 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.111426378 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.135431097 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.094351528 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.131667598 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.128059991 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.109944598 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.134215957 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.109221015 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.132188301 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.128054381 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.100011253 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.133451576 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.103639758 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.135351688 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.124223295 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.135027012 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.136000053 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.126257276 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.134621277 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.102205285 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.148588359 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.177589918 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.09741532 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.137217017 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.109268525 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.136631112 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.096700691 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.146501106 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.139053244 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.098085665 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.146920488 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.096587409 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.125035931 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107527692 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.126130084 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.099600399 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.138751806 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.128730062 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.123879125 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.13250249 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.106078621 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.126899262 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.103693127 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.125626246 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.096099052 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.128657606 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.150820247 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10397818 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.159635188 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.097723927 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.136209554 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.13364782 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.104088135 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.134178668 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.098541984 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.131759138 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.105605723 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.131429564 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.10824922 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.129551837 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.10163252 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.144214708 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.144359774 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.107551887 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.136617407 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.13503995 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.100807834 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.125162295 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.110878384 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.126691426 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.101380674 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.138716561 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.096997505 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.129482219 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.108190895 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.134936547 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.122762578 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.11896124 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.131674745 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.096523708 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.143681347 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.09733169 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.130914635 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.106337206 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.138823177 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.123607776 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.107963915 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.136369491 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.096338489 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.130235356 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.101016744 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.123971411 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.11499406 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.136842901 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.129195795 seconds)
  done (took 15.565277234 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.302906172 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.311164563 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.204153678 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.368615597 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.122219534 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.205192067 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.307032366 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.323968133 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.10428235 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.169732923 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.185774678 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.277207685 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.097488744 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.159545502 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.308738156 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.374730653 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.156955514 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.173079685 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.171141206 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.122888622 seconds)
  done (took 5.510765279 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.121211959 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.171716799 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.157711439 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.158598314 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.104456559 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.140286437 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.097054529 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.151519806 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.133388248 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.104853078 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.124479619 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.112221366 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.135137095 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.107401616 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.145931843 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.172402695 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.102474623 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.133325739 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.150993634 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.104532647 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.135253176 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.156802641 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.135252891 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.127292743 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.14196239 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.111917161 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.124785463 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.132374151 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.101514743 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.130431247 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.1046057 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.147073448 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.103009133 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.13200832 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.135176344 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.110866439 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.128194231 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.100181936 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.127472772 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.102921 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.143950438 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.106682503 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.130715825 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.094690573 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.139167488 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.099572129 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.13920659 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.107397067 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.137812545 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.139974735 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.108716772 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.137304667 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.104615515 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.145381133 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.100245139 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.141601191 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.139561123 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.109062477 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.134483762 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.095938298 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124894279 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.129829962 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.103318228 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.137546793 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.107471571 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.148633598 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.140250896 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.097781093 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.133122279 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.101642741 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.129574487 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.143845611 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.122054917 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.131308875 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.100710305 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.142696327 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.100877718 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.118542793 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.108032137 seconds)
  done (took 10.950427873 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.128788165 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.131730646 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.119113709 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.164095915 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.138687803 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.104459289 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.130393826 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.11825734 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.138871592 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.10944394 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.138624084 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.139055516 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.123886769 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.139375088 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.102478861 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.142091817 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.135953669 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.142824122 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.14652745 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.161956769 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.110784182 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.132541083 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.111538174 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.139990217 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.163365016 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.109865383 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.161026578 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.138807513 seconds)
  done (took 4.780952979 seconds)
done (took 49.788204803 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.176859939 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.335956562 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.124266122 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.116667415 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.138253161 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.13834462 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.12213143 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.330217703 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.824862909 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.110468053 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.118383617 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.115502798 seconds)
done (took 26.695307489 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.372038618 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.691500803 seconds)
    (2/2) benchmarking "String"...
    done (took 1.416288916 seconds)
  done (took 4.146934811 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.11055198 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.112389877 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.358790507 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.122458219 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.114390309 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.127420309 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.110501459 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.133453668 seconds)
  done (took 15.118576722 seconds)
done (took 24.788807852 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.143798956 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.297519572 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.368680036 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.127389658 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.117995726 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.111722204 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.115794806 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.131709727 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.121819026 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.118585702 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.513733596 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.38788416 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.142860272 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.516948691 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.112507756 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.13894347 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.119088296 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.35610209 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.112684974 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.172011108 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.106558266 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.124379853 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.149734055 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.122463523 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.114830311 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.11735505 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.115986799 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.118003742 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.314665277 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.117425525 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.158710068 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.118524591 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.115714923 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.118040696 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.115845173 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.127655173 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.323390515 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.117819326 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.110256166 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.128358733 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.310592908 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.125517253 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.115546065 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.12566613 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.121679081 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.15937621 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.111992472 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.222748475 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.135883702 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.129108422 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.194788993 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.500149666 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.127231671 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.135199648 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.119810252 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.349883696 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.122852347 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.160703979 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.140931941 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.134386678 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.117028401 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.121046073 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.134972583 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.130513661 seconds)
  done (took 138.153387451 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.116064285 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.121822619 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.122949054 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.177732194 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.121497928 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.122025944 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.114043236 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.117053341 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.121128505 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.148054171 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.120738256 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.12191415 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.121772641 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.065896878 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.120399903 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.136513426 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.121090331 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.133017212 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.126267284 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.117277074 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.117075902 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.121225868 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.13662955 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.121976369 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.158287078 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.201261125 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.14427635 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.131450291 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.127700331 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.116612767 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.156162117 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.181942536 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.689478806 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.988323653 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.125496522 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.12405422 seconds)
  done (took 77.153978 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.118675469 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.116648932 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.117986725 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.147059765 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.118075264 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.652361562 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.658131131 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.834766774 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.393185248 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.355368975 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.364055233 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.124161997 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.210898104 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.131231566 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.120649114 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.133845057 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.162363511 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.123870123 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.119980832 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.65279267 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.135717136 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.265503406 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.308170954 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.133569304 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.149133115 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.517860354 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.119389059 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.148367841 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.444095016 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.165711772 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.120362705 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.454643199 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.1701839 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.232326486 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.121940041 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.149292936 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.120268564 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.396115309 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.119224803 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.120234787 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.120600181 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.122672259 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.120116039 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.749478562 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.126049321 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.656522113 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.12490273 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.023909145 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.119850916 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.120581763 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.029110115 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.689886276 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.141386326 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.119845934 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.122562388 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.120099645 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.12136957 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.150566102 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.05677059 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.216146976 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.13798024 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.124249818 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.151919904 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.121162985 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.270473528 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.137241949 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.838776379 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.183089152 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.246914556 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.657881689 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.127731952 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.215724437 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.23870611 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.121469596 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.122323016 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.121986649 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.122011965 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.230478637 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.122660976 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.12171431 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.517191699 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.289819208 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.138360123 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.361102903 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.220472785 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.122294718 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.45508 seconds)
    (88/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.129056943 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.122718837 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.123484534 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.821835342 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.217782452 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.121648409 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.122686359 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.121417705 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.518205218 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.659956896 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.337124223 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.129321444 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.354778119 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.127079245 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.522211482 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.642608892 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.755796409 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.130210995 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.234379267 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.29334683 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.139627162 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.123689702 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.365931183 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.129135418 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.178888355 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.12837534 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.519659444 seconds)
  done (took 356.744179461 seconds)
done (took 573.091941237 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.811517107 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.768106978 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.896597498 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.79103509 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.762944469 seconds)
  done (took 10.080715737 seconds)
done (took 11.131368441 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.307158027 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.310873825 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.186118863 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.306918611 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.16004403 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.32325734 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.291150969 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.149183287 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.226095082 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.203048801 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.223906112 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.175459486 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.154971517 seconds)
  done (took 17.070581693 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.384775417 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.137110486 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.195056843 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.371082585 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.174171708 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.399725724 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.441987157 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.136662688 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.291115523 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.141639054 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.141435733 seconds)
  done (took 16.866971637 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.421887498 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.136595541 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.212346846 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.370661411 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.177729831 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.402041972 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.432856801 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.136534149 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.281671445 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.144577481 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.14330752 seconds)
  done (took 16.912805818 seconds)
done (took 51.902537336 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.168994116 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.288663492 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.16007219 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.143667015 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.137568905 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.141157781 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.143690885 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.138478332 seconds)
  done (took 10.376013605 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.138771707 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.136970671 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.137817723 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.136783235 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.138072095 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.138416174 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.139003393 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.137795566 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.137367563 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.137510144 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.1371821 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.137274967 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.138464397 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.137557987 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.139011065 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.137724535 seconds)
  done (took 19.25887053 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.141445103 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.138226859 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.138660292 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.139308502 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.138600464 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.138992322 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.140120123 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.138189334 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.137572665 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.13942234 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.140846294 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.137900439 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.137589758 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.139000378 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.138983581 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.140655061 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.138813914 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.138708079 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.144303566 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.139052717 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.139465892 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.13947226 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.14039599 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.139835048 seconds)
  done (took 28.400615907 seconds)
done (took 59.08771067 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.128931866 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.151670081 seconds)
  done (took 5.335602042 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.19942836 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.199696515 seconds)
  done (took 3.455093275 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.140341443 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.138724775 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.140865137 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.140029618 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.140218669 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.140352927 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.139820942 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.140005812 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.139469399 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.140331147 seconds)
  done (took 12.456682716 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.139343194 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.139576717 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.142094216 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.139759711 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.141372372 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.140318504 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.139595365 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.140388122 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.140191039 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.139890547 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.141279884 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.141143653 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.141170943 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.14041304 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.141812508 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.141858979 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.140821395 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.141397416 seconds)
  done (took 21.589075919 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.155277789 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.162995231 seconds)
  done (took 3.373814297 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.282315115 seconds)
    (2/7) benchmarking "second"...
    done (took 1.183160346 seconds)
    (3/7) benchmarking "month"...
    done (took 1.258462568 seconds)
    (4/7) benchmarking "year"...
    done (took 1.247756472 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.184257262 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.16241293 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.182157658 seconds)
  done (took 9.558417629 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.14444344 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.335365612 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.440218587 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.705556012 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.142556218 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.1677197 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.93987555 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.16624319 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.163277228 seconds)
  done (took 13.262494522 seconds)
done (took 70.086521802 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.131185638 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.16108075 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.154677147 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.158441983 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.48150713 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.189276204 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.137388905 seconds)
done (took 15.471192969 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.124248149 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.129128591 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.130750386 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.142263024 seconds)
  done (took 9.583979999 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.120940857 seconds)
    (2/2) benchmarking "read"...
    done (took 1.44227463 seconds)
  done (took 4.621407025 seconds)
done (took 15.263495938 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.144532241 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.143934157 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.143618556 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.143731717 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.141565616 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.144190579 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.143382512 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.144137181 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.143321846 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.144371505 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.143954756 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.143177279 seconds)
    (13/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.142334926 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.144171168 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.142349151 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.144257084 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.144202499 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.14494346 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.143851801 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.143409019 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.144211088 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.143600482 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.143557363 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.144462117 seconds)
  done (took 28.510006967 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.145633307 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.145774369 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.144917414 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.144190014 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.143981066 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.144438934 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.14523715 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.143886823 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.143660435 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.145710771 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.145428553 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.146463446 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.14551631 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.145188828 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.146180972 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.147657632 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.145382556 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.146682053 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.145227925 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.14584743 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.145169477 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.145655403 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.144949591 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.145818162 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.146139922 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.146112527 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.144063632 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.145996435 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.147233318 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.146080917 seconds)
  done (took 35.42551475 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.151826118 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.151993557 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.146357212 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.147285869 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.146638148 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.146642083 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.146222669 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.145877804 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.14634677 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.145586683 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.146316245 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.147254386 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.145794779 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.14682751 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.147086866 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.146135441 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.147159492 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.147708073 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.147174543 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.14724096 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.1479001 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.146767341 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.147692182 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.147310724 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.146254798 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.148327866 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.146811376 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.147095711 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.148448974 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.148055629 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.147542902 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.147349964 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.147264857 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.146954838 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.147621041 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.147649225 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.152422766 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.153153433 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.146510254 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.148653542 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.148702673 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.148372776 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.148988358 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.149500381 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.147806657 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.148956455 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.146773683 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.149269005 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.14934396 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.14799102 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.148569318 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.149343487 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.148507465 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.148179866 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.148302666 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.14973058 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.14917599 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.150606718 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.148841719 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.149570027 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.150056285 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.149976761 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.148602889 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.150143157 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.151875787 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.150033321 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.149365485 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.150225623 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.150226031 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.151848957 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.14941946 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.150674037 seconds)
  done (took 83.747324886 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.151012224 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.15149101 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.149224886 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.151533545 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.151432578 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.150847089 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.150900868 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.151021586 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.151897277 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.150424528 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.152246591 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.151723309 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.153023917 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.154272555 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.156950886 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.155010293 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.156470873 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.154243624 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.152209962 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.151115426 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.150446322 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.153852856 seconds)
  done (took 26.417660352 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.152847317 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.152544966 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.151741086 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.152399471 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.152853782 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.151928459 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.152279548 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.152790417 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.150216774 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.151014597 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.151829286 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.151402046 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.155282647 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.151630125 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.152648417 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.154431342 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.153374441 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.154145476 seconds)
  done (took 21.813205257 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.154219433 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.15311051 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.152854713 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.150702296 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.152860698 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.154018518 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.155056506 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.152544241 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.152577963 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.153730814 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.153043469 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.154963953 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.154178816 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.153481882 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.153478554 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.152953092 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.15366469 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.154321399 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.153949453 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.152577419 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.154551153 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.154393471 seconds)
  done (took 26.445569638 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.154728712 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.154996074 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.156021492 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.154665989 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.154879482 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.154868049 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.153736111 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.1532462 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.155779803 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.155301035 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.155142456 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.154281887 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.156101305 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.154933801 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.155688034 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.154790425 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.154570629 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.155102205 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.155736783 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.154284112 seconds)
  done (took 24.168621457 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.156454888 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.158121363 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.156578431 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.156598834 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.157607693 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.15625392 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.157508781 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.15672132 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.157276675 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.156521837 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.157462815 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.15733085 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.157254606 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.157591984 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.158082576 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.157309406 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.156634796 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.156947991 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.156727117 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.158318733 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.157058104 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.155814542 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.158308562 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.156660697 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.156526297 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.156907951 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.157239247 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.157759953 seconds)
  done (took 33.471211425 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.155642463 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.157056856 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.15634885 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.156920028 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.157455337 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.158006823 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.158617247 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.156813148 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.159161 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.157408557 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.157998286 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.158224108 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.157842423 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.159162285 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.157023616 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.15695675 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.158361178 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.159105655 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.159705024 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.156988802 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.159222495 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.158982849 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.158434058 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.157850052 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.158119863 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.159157137 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.159454837 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.160738819 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.159103451 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.159288946 seconds)
  done (took 35.816405718 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.204779964 seconds)
    (2/2) benchmarking "in"...
    done (took 1.204859701 seconds)
  done (took 3.482630963 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.160630451 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.158613617 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.159614678 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.158296184 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.158887826 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.158713061 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.159907037 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.15945427 seconds)
  done (took 10.347243042 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.157280833 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.162460278 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.160927939 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.16212682 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.160690837 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.15630113 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.1652593 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.168373761 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.158542926 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.159537898 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.163214748 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.163907715 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.16161789 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.160538522 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.15828676 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.160681394 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.164925881 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.161992699 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.162793022 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.162050707 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.161723569 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.160064436 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.163848218 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.165703143 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.160012079 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.168080094 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.167266354 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.165248936 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.157229268 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.162517407 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.161344108 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.164102729 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.162125765 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.162500768 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.162431898 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.161337698 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.169431051 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.183409779 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.165001625 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.166770633 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.162341419 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.162481729 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.158731631 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.161164986 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.162369713 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.164763189 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.164420703 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.163328518 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.157258676 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.162287681 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.169047217 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.158795344 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.164387768 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.162421755 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.162887423 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.168609902 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.187582117 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.162612076 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.165991557 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.169578654 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.176991179 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.172213117 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.163661739 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.166615105 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.169347451 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.178197384 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.169832542 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.16977295 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.164120581 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.163209337 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.166720814 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.177324907 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.17560693 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.165979466 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.164216994 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.164967983 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.161126551 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.165574307 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.168386559 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.170377482 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.166774167 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.166149068 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.169934041 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.17759461 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.161556082 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.166483005 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.165420067 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.165083534 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.162767175 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.171920781 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.187276027 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.167493982 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.161533083 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.161708561 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.16405221 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.166566106 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.161839441 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.163109066 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.167170677 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.165828217 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.165873021 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.166264167 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.168641395 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.166665619 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.16731589 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.171128049 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.170496155 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.161778679 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.171286858 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.171673828 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.165947931 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.163619573 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.16741804 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.167707632 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.165763084 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.170518973 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.168976813 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.16581518 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.169214093 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.16726388 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.17120555 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.184477291 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.171198391 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.166934398 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.168488901 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.175056251 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.167248192 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.167678561 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.170717727 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.167868208 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.167224805 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.166895423 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.170643544 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.164696936 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.170648009 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.166719569 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.169984707 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.168959356 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.168132356 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.16714825 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.168331348 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.166553382 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.16782877 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.169936878 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.17004594 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.16683761 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.175365422 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.170164855 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.166861031 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.169082531 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.171816353 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.16988833 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.166561154 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.170140685 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.166771708 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.169982861 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.165244102 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.172142382 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.170037564 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.1697604 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.17020748 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.165412724 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.169893944 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.171442193 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.170506154 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.169054073 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.171262831 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.171904759 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.170479282 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.165608392 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.171394247 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.165689046 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.169164007 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.176092309 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.170672587 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.169710834 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.169959951 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.172997121 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.170596898 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.170772531 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.16939837 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.171944813 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.172552163 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.173789862 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.174348772 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.171681149 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.172061187 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.168573533 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.167991365 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.172447347 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.169986544 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.177426866 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.180275308 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.18206553 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.169901814 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.174104353 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.167208115 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.174425411 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.173022721 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.173754827 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.172392916 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.171769525 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.168123468 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.171810678 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.169403051 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.172811174 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.168238744 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.173807469 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.173504773 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.173239812 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.17339829 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.168363473 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.1710053 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.17459238 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.173830492 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.172446984 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.169770141 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.174596863 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.167590842 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.169056344 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.17424438 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.171973207 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.175985197 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.176271288 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.170874738 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.173784516 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.171612573 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.170297581 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.174583451 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.171995382 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.171494413 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.179247473 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.174346376 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.172002679 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.179218721 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.192648231 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.172065058 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.174633926 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.177152517 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.173772491 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.172000408 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.180535166 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.174877957 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.174501804 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.174380049 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.171309207 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.176786113 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.177762315 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.180265391 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.170908234 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.175722552 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.172321392 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.176241435 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.173467085 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.173295999 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.174386228 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.175311901 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.177406536 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.174810938 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.173219399 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.176638145 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.17643384 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.176158399 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.177139344 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.181556684 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.178080532 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.17584652 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.175037826 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.174421621 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.179329858 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.172545703 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.178830321 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.172630224 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.186740876 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.190623649 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.181000315 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.178264224 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.178816105 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.180198353 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.178097225 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.175630304 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.173158985 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.174863654 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.174790301 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.175032173 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.178153655 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.174488141 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.178979957 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.175943188 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.177914543 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.180978272 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.178092589 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.175428035 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.178416805 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.177052729 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.178521046 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.172727341 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.178411452 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.176163932 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.17838306 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.176614788 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.174236512 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.182786591 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.181325103 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.176567323 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.174775953 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.175674895 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.17547168 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.177048912 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.180660327 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.177328714 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.184600029 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.177292525 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.180254693 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.176187886 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.183901335 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.181987809 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.178493509 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.184443803 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.179730296 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.174264725 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.176345184 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.179658638 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.183801457 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.185263802 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.177209508 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.182566608 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.178956298 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.179991607 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.17937632 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.17952735 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.179474954 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.179211155 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.185683948 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.201680373 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.179002362 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.180879305 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.183469964 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.179841251 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.181047369 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.176393512 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.18103873 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.184370124 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.178274847 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.178729898 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.178443727 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.181653551 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.180675389 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.179922334 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.181431735 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.181335538 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.189047369 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.182882175 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.183377069 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.181625433 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.186002376 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.185999371 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.185892178 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.188589626 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.179553877 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.182630978 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.18183114 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.178981039 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.178281627 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.180102643 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.183841429 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.179525582 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.188287502 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.181362844 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.182408259 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.181466529 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.184151045 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.178446062 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.189360857 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.20059452 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.179622841 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.185922357 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.183974803 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.179010886 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.185602273 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.182677817 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.177479339 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.180772506 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.188443387 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.192029739 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.182451865 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.185790256 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.181989941 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.186565465 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.185289159 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.185492216 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.186061858 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.186790151 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.181736938 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.186999965 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.184930789 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.188820206 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.182657974 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.184879913 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.182965176 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.193008859 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.191001549 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.18374613 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.187216673 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.18782323 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.184033575 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.184285656 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.188722524 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.183702939 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.189082957 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.182916195 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.18730111 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.187465998 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.187743047 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.186291166 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.186655991 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.184661839 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.184579888 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.188024557 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.186866696 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.188159966 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.185668509 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.188776081 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.184794627 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.184268145 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.188957676 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.185920501 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.189990372 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.185718828 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.189819713 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.185174513 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.189419846 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.187467676 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.189366411 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.183620972 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.185625241 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.193678212 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.192340663 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.192574449 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.190398401 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.192110751 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.185910951 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.188649773 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.191226914 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.185930302 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.187404474 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.189264154 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.187342382 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.187574357 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.187714307 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.189244096 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.19336394 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.190948859 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.186043947 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.196023776 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.213365441 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.191776693 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.188230057 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.188957562 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.187126915 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.191010267 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.189989742 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.186801656 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.195051839 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.194175237 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.191374283 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.189433685 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.188367036 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.187029073 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.192893364 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.19183567 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.189568222 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.19276635 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.188461818 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.192793451 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.190497965 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.190671527 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.186215819 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.188955419 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.190476235 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.19309865 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.192737735 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.191113512 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.191999962 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.18939157 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.192798145 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.191877524 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.191200805 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.190587736 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.186736713 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.191251718 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.187823344 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.192761916 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.190588917 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.189546413 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.195200002 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.192110899 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.189487727 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.195901827 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.198063725 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.191921122 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.188271376 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.189921407 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.193502015 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.194976819 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.191653844 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.189113907 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.191197788 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.194914427 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.194467282 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.191407113 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.190848886 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.204045867 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.218385349 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.189892216 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.191647379 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.194534809 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.198248504 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.193992388 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.193727634 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.192719735 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.192621479 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.198246461 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.194061639 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.197132666 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.216088509 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.192139527 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.197599842 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.192590516 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.19535669 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.195375308 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.196524491 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.193478722 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.195878947 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.204545979 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.198842948 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.199416515 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.215865183 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.198259838 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.195086576 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.195819508 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.19049337 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.195450382 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.192629219 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.196616332 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.195333377 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.19597657 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.195342455 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.190872581 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.197292352 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.195965224 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.199786098 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.194665008 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.191321812 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.192702659 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.19737841 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.195616659 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.1980283 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.19460099 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.196413212 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.196042643 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.192539233 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.206029348 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.207684514 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.198647755 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.195646874 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.197479645 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.197278187 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.196651832 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.200519918 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.201871458 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.194782142 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.196738127 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.195188827 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.198606086 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.198297339 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.193708304 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.194183917 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.194349857 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.197170835 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.2053743 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.208629046 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.198836633 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.196633881 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.19667983 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.197848015 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.194298393 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.199105601 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.196745958 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.193879863 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.195886384 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.200703466 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.199492454 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.198108779 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.195764578 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.203829949 seconds)
  done (took 704.194433198 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.199229016 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.197683163 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.196943499 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.197074727 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.198164686 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.197501008 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.199557205 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.196815249 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.198469862 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.19793799 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.198284077 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.197531016 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.198150402 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.199302747 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.199325236 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.198802302 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.197676371 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.198524882 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.198641307 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.198552625 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.199910402 seconds)
  done (took 26.27229331 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.198376931 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.200737497 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.199041787 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.20199927 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.199958355 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.19804068 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.199394909 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.19941816 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.199287534 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.199962558 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.1979139 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.199818241 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.198169115 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.199480712 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.199320626 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.198536873 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.199718631 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.199355365 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.200170905 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.198346467 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.198448779 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.199459795 seconds)
  done (took 27.494374165 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.198670353 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.198591007 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.195304243 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.200074762 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.19912118 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.198627679 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.199337247 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.199697394 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.199026338 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.196402586 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.195306346 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.196146556 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.200155862 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.2035465 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.19834884 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.201508986 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.199780215 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.199911048 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.199799631 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.200332043 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.203332896 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.204209927 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.200713722 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.194451518 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.20081149 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.200292484 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.199857465 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.199958204 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.197674612 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.202353026 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.200358849 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.19613634 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.198664037 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.198706633 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.196667406 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.203661822 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.200021806 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.199796925 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.199938009 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.203053515 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.216242369 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.198636812 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.202838848 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.20508193 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.200999386 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.197914187 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.206698923 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.199630208 seconds)
  done (took 58.719246879 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.199921617 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.200903085 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.202265223 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.199727327 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.200132883 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.200147776 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.199552136 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.200606209 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.200044974 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.200893625 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.200121549 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.200758196 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.199638453 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.201246463 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.201785829 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.2015549 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.200975719 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.201515019 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.202005248 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.200707038 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.200874782 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.201444877 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.201120908 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.200823533 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.200590414 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.201738118 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.201716135 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.201984368 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.201205506 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.201623038 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.199686414 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.200180844 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.201116276 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.201457142 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.20247119 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.202041452 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.201386499 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.200908075 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.202912719 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.201196642 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.20042947 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.200201976 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.201150229 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.20066385 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.202331764 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.201555618 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.200641603 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.202047325 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.202335119 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.2017974 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.202592634 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.201573161 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.201682652 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.202530929 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.202635942 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.201576951 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.201578122 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.201141333 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.202027241 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.201481252 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.201160114 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.201932127 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.203790994 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.20282028 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.202309152 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.204015166 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.201886459 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.203335719 seconds)
  done (took 82.80694671 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.201929885 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.201564606 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.20298737 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.202727335 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.203314908 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.203604571 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.203799466 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.202924868 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.202576713 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.202938465 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.204300812 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.202640418 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.2030692 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.20422539 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.204398354 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.204651352 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.20424921 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.204009058 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.205075136 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.204197807 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.206154387 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.203822081 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.202965609 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.204092969 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.204655631 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.203911227 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.205016161 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.204271332 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.204090897 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.203969946 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.205185512 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.204648943 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.204809577 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.204301999 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.205524769 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.204262907 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.202732251 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.204267177 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.204558661 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.205568056 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.205298212 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.204693869 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.205109459 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.204914491 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.204095759 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.205463644 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.20563247 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.205727781 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.204909921 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.204462342 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.206452057 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.204702701 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.205921045 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.20521441 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.205329433 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.206647603 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.203969476 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.20688992 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.205879682 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.205798727 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.205972853 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.205790732 seconds)
  done (took 75.789275305 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.206017846 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.205534764 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.206567444 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.206755238 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.20544709 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.20651284 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.206079559 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.205008827 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.205813897 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.206424604 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.207955865 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.207181469 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.207420928 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.207096697 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.207385668 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.207493909 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.208853582 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.206154205 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.206191411 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.207658763 seconds)
  done (took 25.248034407 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.207008165 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.208586863 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.205804501 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.207281168 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.208036789 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.208419947 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.208251509 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.207732949 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.207573452 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.208029483 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.206810116 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.2087159 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.207158437 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.206842828 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.208919919 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.207833563 seconds)
  done (took 20.438832899 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.207251231 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.208781387 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.205602908 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.207364372 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.20722557 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.206966025 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.2086101 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.207385916 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.207364732 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.208215619 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.206246012 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.207494722 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.20622923 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.207260557 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.206573655 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.208173085 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.207470982 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.207900921 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.208818075 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.207891659 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.211289675 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.208415477 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.209427082 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.211079968 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.212197596 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.212107415 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.210570883 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.211711442 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.210021918 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.210932459 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.210261807 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.208537039 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.207468141 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.206880023 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.208141823 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.207947977 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.208309502 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.206388521 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.208269923 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.207871598 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.206983134 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.207555745 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.208150788 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.207679911 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.208573669 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.208609344 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.207775888 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.208026346 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.207471834 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.207237857 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.209098041 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.208570381 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.208285528 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.208286927 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.207457544 seconds)
  done (took 67.574316418 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.208390125 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.208011964 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.207597156 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.207196232 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.20849558 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.208110441 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.208139611 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.209708319 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.207665974 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.207991951 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.208031731 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.210684182 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.207822941 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.207551647 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.208523145 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.209231848 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.206925638 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.209312433 seconds)
  done (took 22.864721401 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.208655366 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.208475859 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.208167345 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.209438108 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.207043807 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.208201367 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.207263508 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.209040468 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.207312712 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.207310556 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.208399049 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.208442036 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.208443049 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.207658835 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.208868999 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.209444729 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.207549402 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.208933065 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.207784011 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.206716724 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.208728235 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.207151783 seconds)
  done (took 27.694305863 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.202649388 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.202137481 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.203078809 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.217804479 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.216912335 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.2025382 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.201799341 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.202650058 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.223838267 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.244691546 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.240962152 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.216110767 seconds)
  done (took 15.691260356 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.20808307 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.20771929 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.208157315 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.207838385 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.207738342 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.208570279 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.208593372 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.207795313 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.208315777 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.208784031 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.208575125 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.208563377 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.208159666 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.207863211 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.2089433 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.210215104 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.209859349 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.208747114 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.208422903 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.209074188 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.209690811 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.209151669 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.209410812 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.20757964 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.208992014 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.209596462 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.20974192 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.208819793 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.209903088 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.208612707 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.209024211 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.210114116 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.210365493 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.210173422 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.208190842 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.20988365 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2091656 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.210328469 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.210688909 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.210470419 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.209595106 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.210189996 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.20850302 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.209279035 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.209239165 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.209954581 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.210097084 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.21094409 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.210470377 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.211202188 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.210930159 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.210826011 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.210999754 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.211131083 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.210894465 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.210715554 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.211505217 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.210957289 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.211400235 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.211503868 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.211506111 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.211855158 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.211058239 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.210633359 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.212052159 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.212157809 seconds)
  done (took 80.957974242 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.213072657 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.210635862 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.211589685 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.211516518 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.211440973 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.212108917 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.212255734 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.212032332 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.212311036 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.212159423 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.211854081 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.213067823 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.211788872 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.212263269 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.212882956 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.211437113 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.21262499 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.212051721 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.212302039 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.211894013 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.212394781 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.211445715 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.212613208 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.213292777 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.213324746 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.212535006 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.213629555 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.213270124 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.212665628 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.213048226 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.212946548 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.212387731 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.213653757 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.212198581 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.21440623 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.21286468 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.213729259 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.213191949 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.214341346 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.213310495 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.213896422 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.214173619 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.213598735 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.214448869 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.213570716 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.213559055 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.21416107 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.213950385 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.21378698 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.214702375 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.214087361 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.214249087 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.213175462 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.215626716 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.213956821 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.214199929 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.213682919 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.214993251 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.213068543 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.214954286 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.215544009 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.213676869 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.215055609 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.214629487 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.214989316 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.215291383 seconds)
  done (took 81.195293626 seconds)
done (took 1647.646148104 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.376708876 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.332008416 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.210657682 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.223452783 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.209767238 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.204057024 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.221289437 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.210334732 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.209879962 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.210023361 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.210643665 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.403293047 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.205137694 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.210802246 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.211758606 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.309187565 seconds)
  done (took 25.079658089 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.237138072 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.222035141 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.318018568 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.233596479 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.238765958 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.388692611 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.2708282 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.216165145 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.36955984 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.236292821 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.216011808 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.239413278 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.215591404 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.206943619 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.250096344 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.385855049 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.445714015 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.224701203 seconds)
  done (took 27.03811411 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.619006307 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.235294123 seconds)
  done (took 4.978233755 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.233094753 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.215468294 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.217540261 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.215155704 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.207629484 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.207753256 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.212574752 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.209201726 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.212992312 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.331904682 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.221844964 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.228640274 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.23288245 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.216948324 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.219834079 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.254699089 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.384131506 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.220625292 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.219687947 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.220612347 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.216434982 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.297511048 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.257492826 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.223781088 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.328865467 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.218392528 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.225212982 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.223974145 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.350510987 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.221268023 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.215617569 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.216401774 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.218472219 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.209705597 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.657135893 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.233147436 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.224802229 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.247405174 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.221954776 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.355637826 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.218579121 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.223467335 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.210801509 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.647263128 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.366414851 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.331478523 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.239275439 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.221239687 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.219637753 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.277880694 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.217921061 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.218393949 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.275709387 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.987791395 seconds)
  done (took 78.830003883 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.225784511 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.210729724 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.385943972 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.23107887 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.21190326 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.216070473 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.229641955 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.471834774 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.260139139 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.21716797 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.4888053 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.758855222 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.236659267 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.269543893 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.108224119 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.308219562 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.213596465 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.214439072 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.214015076 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.213054866 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.74126214 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.219642016 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.212838342 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.365097429 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.248702395 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.70096275 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.212391982 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.216119717 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.214001978 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.212827211 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.713255948 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.236731838 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.277736488 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.216334499 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.470895534 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.565657978 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.532264051 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.220537376 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.247581837 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.212728806 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.225223578 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.686869813 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.549065783 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.217523359 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.227342568 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.720849273 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.217320679 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.217043492 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.218261451 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.457448571 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.212985016 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.215030083 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.213498226 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.218426937 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.213289792 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.323263728 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.297966651 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.708824653 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.220365387 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.236608842 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.238586263 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.21509214 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.217428029 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.216984606 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.230186407 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.553796562 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.373603733 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.219086564 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.551583919 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.715003503 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.22892361 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.77565773 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.23296247 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.224032935 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.434332123 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.217979623 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.215046502 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.712177148 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.250608475 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.216635917 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.529641592 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.220611378 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.493465144 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.232033143 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.244122665 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.75891843 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.221675223 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.219811602 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.216069563 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.215785637 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.216472099 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.219985302 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.481183598 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.269073441 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.216070624 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.215795351 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.231269243 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.225389435 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.217281504 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.219158375 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.772972048 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.235986859 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.217246241 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.222072509 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.222990308 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.221352703 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.217894289 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.219338972 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.481725081 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.21744867 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.223973729 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.217685496 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.222329353 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.224279904 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.352214156 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.223381973 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.502477285 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.223494821 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.217260338 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.223167347 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.219860753 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.228381547 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.219934135 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.219225638 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.055566733 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.480336869 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.234787476 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.218303391 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.220298291 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.235190836 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.218611071 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.219385169 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.260459866 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.221019818 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.987253848 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.278804001 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.226610484 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.219076053 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.231982145 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.219603463 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.22862173 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.220343989 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.503907249 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.478709477 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.368075182 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.222806595 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.220147499 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.948514729 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.249883359 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.395945231 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.231981139 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.217367597 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.456133289 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.437024819 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.210949021 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.208150121 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.209202778 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.45839652 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.202234665 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.49839175 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.731240855 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.222706402 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.205659926 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.968393267 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.883711173 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.203942037 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.197227278 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.463071581 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.205190691 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.191364913 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.190208092 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.191680704 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.203528074 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.209972401 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.191216384 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.190249995 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.191970894 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.23517663 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.375733241 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.202302489 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.201376774 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.680274163 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.211962596 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.198788089 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.195054071 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.185676887 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.186783452 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.255792038 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.190035841 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.192200609 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.189695912 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.189625975 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.68972564 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.192463914 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.196317081 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.37658412 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.860267089 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.209135877 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.190251126 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.188350569 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.094709248 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.697498358 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.250608147 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.474810688 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.192872939 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.224780233 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.189461966 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.254971291 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.696961227 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.192133429 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.189174792 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.825356143 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.204671409 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.704722778 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.190730364 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.191112448 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.756827173 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.203907022 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.192915671 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.189439918 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.201423487 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.485890647 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.190473985 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.211988404 seconds)
  done (took 469.650928598 seconds)
done (took 606.698593088 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.189698593 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.195845499 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.187794953 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.194150236 seconds)
  done (took 9.876455068 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.202942941 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.196451542 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.202176941 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.196250317 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.202549971 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.195957079 seconds)
  done (took 8.305018138 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.190047492 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.196421615 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.196814197 seconds)
  done (took 7.693021327 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.38262598 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.206297561 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.497741379 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.22230914 seconds)
  done (took 8.418717949 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.201181756 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.201367048 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.201205862 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.204109233 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.205898412 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.207700678 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.204156785 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.203651465 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.20639478 seconds)
  done (took 11.94568851 seconds)
done (took 47.347728167 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.184498674 seconds)
    (2/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.314738547 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.341944868 seconds)
    (4/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.283337216 seconds)
    (5/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.216404866 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.255148174 seconds)
    (7/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.077365219 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.237292002 seconds)
    (9/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.22804647 seconds)
    (10/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.184103153 seconds)
    (11/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.095560186 seconds)
    (12/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.899760116 seconds)
    (13/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.2568798 seconds)
    (14/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.190663761 seconds)
    (15/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.292741607 seconds)
    (16/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.328387685 seconds)
    (17/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.290346611 seconds)
    (18/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.239753024 seconds)
    (19/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.327721146 seconds)
    (20/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.943095742 seconds)
    (21/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.9854923 seconds)
    (22/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.253407524 seconds)
    (23/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.191459217 seconds)
    (24/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.904322856 seconds)
    (25/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.188848257 seconds)
    (26/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.301871112 seconds)
    (27/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.300147425 seconds)
    (28/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.392776044 seconds)
    (29/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.337705209 seconds)
    (30/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.279769698 seconds)
    (31/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.216222501 seconds)
    (32/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.205657931 seconds)
    (33/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.197420218 seconds)
    (34/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.233430118 seconds)
    (35/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.359036094 seconds)
    (36/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.293904537 seconds)
    (37/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.265019991 seconds)
    (38/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.232356569 seconds)
    (39/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.202846008 seconds)
    (40/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.294320693 seconds)
    (41/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.246443085 seconds)
    (42/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.276011243 seconds)
    (43/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.189239561 seconds)
    (44/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.261569722 seconds)
    (45/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.240607908 seconds)
    (46/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.354753281 seconds)
    (47/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.371818227 seconds)
    (48/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.190340571 seconds)
    (49/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.19303404 seconds)
    (50/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.248765063 seconds)
    (51/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.337401334 seconds)
    (52/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.192207124 seconds)
    (53/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.940214653 seconds)
    (54/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.886631629 seconds)
    (55/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.348052057 seconds)
    (56/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.255424092 seconds)
    (57/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.389646984 seconds)
    (58/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.100179352 seconds)
    (59/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.997995553 seconds)
    (60/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.363062832 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.320682734 seconds)
    (62/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.946085715 seconds)
    (63/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.946379789 seconds)
    (64/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.19292389 seconds)
    (65/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.412068433 seconds)
    (66/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.28548796 seconds)
    (67/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.254028776 seconds)
    (68/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.284217827 seconds)
    (69/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.240269265 seconds)
    (70/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.332476395 seconds)
    (71/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.274983857 seconds)
    (72/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.000113839 seconds)
    (73/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.339019297 seconds)
    (74/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.354455389 seconds)
    (75/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.191229073 seconds)
    (76/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.199282668 seconds)
    (77/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.197462759 seconds)
    (78/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.856795971 seconds)
    (79/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.97022861 seconds)
    (80/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.316870565 seconds)
    (81/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.190543453 seconds)
    (82/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.305935083 seconds)
    (83/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.366092929 seconds)
    (84/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.235951422 seconds)
    (85/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.290798501 seconds)
    (86/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.19066487 seconds)
    (87/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.24066728 seconds)
    (88/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.211567269 seconds)
    (89/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.282506284 seconds)
    (90/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.979498507 seconds)
    (91/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.37606026 seconds)
    (92/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.216703241 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.331348739 seconds)
    (94/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.282081529 seconds)
    (95/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.329359607 seconds)
    (96/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.286813237 seconds)
    (97/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.256092959 seconds)
    (98/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.26656283 seconds)
    (99/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.303322122 seconds)
    (100/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.229544021 seconds)
    (101/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.006963078 seconds)
    (102/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.209683166 seconds)
    (103/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.203081298 seconds)
    (104/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.262859395 seconds)
    (105/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.202802845 seconds)
    (106/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.449364766 seconds)
    (107/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.245788356 seconds)
    (108/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.34145218 seconds)
    (109/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.261722482 seconds)
    (110/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.847524684 seconds)
    (111/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.33613829 seconds)
    (112/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.257615332 seconds)
    (113/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.89521389 seconds)
    (114/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.288635226 seconds)
    (115/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.333566017 seconds)
    (116/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.192309791 seconds)
    (117/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.196225937 seconds)
    (118/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.857089699 seconds)
    (119/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.229022781 seconds)
    (120/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.200010262 seconds)
    (121/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.900834675 seconds)
    (122/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.404432275 seconds)
    (123/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.236874851 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.331186542 seconds)
    (125/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.404966418 seconds)
    (126/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.338265939 seconds)
    (127/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.292629516 seconds)
    (128/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.238064763 seconds)
    (129/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.451303633 seconds)
    (130/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.221976171 seconds)
    (131/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.275143217 seconds)
    (132/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.339428461 seconds)
    (133/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.193672709 seconds)
    (134/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.20245759 seconds)
    (135/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.201755651 seconds)
    (136/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.313017289 seconds)
    (137/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.240319406 seconds)
    (138/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.849251899 seconds)
    (139/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.945285132 seconds)
    (140/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.215744869 seconds)
    (141/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.363561345 seconds)
    (142/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.402473235 seconds)
    (143/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.332795033 seconds)
    (144/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.27968123 seconds)
    (145/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.241037974 seconds)
    (146/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.231569057 seconds)
    (147/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.195297283 seconds)
    (148/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.964260698 seconds)
    (149/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.250060577 seconds)
    (150/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.242262677 seconds)
    (151/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.240199778 seconds)
    (152/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.063354085 seconds)
    (153/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.25965878 seconds)
    (154/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.285620877 seconds)
    (155/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.891246286 seconds)
    (156/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.382808198 seconds)
    (157/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.371676555 seconds)
    (158/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.38030471 seconds)
    (159/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.337202527 seconds)
    (160/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.369156597 seconds)
    (161/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.284552778 seconds)
    (162/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.194825175 seconds)
    (163/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.30877147 seconds)
    (164/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.257725084 seconds)
    (165/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.236294828 seconds)
    (166/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.239102388 seconds)
    (167/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.261340717 seconds)
    (168/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.244662203 seconds)
    (169/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.240436474 seconds)
    (170/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.233926806 seconds)
    (171/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.310260132 seconds)
    (172/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.362811045 seconds)
    (173/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.239649903 seconds)
    (174/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.287053962 seconds)
    (175/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.197056144 seconds)
    (176/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.232889301 seconds)
    (177/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.224893632 seconds)
    (178/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.202226609 seconds)
    (179/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.357900769 seconds)
    (180/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.196927965 seconds)
    (181/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.211099302 seconds)
    (182/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.268021468 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.314937956 seconds)
    (184/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.264247677 seconds)
    (185/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.198380532 seconds)
    (186/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.213887994 seconds)
    (187/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.435752741 seconds)
    (188/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.204748005 seconds)
    (189/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.290806428 seconds)
    (190/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.292197038 seconds)
    (191/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.300301356 seconds)
    (192/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.35244326 seconds)
  done (took 311.378704317 seconds)
done (took 312.490180905 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.229413713 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.395730356 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.213645224 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.21217281 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.214859068 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.199475766 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.230548792 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.213628297 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.225368129 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.223950578 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.200650239 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.218048583 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.22673714 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.220244547 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.247804275 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.213817865 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.214136137 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.220288671 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.225690323 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.226914539 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.216072722 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.216347457 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.234857326 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.214884708 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.223385898 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.223543649 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.222253092 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.212692196 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.219245878 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.226338897 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.215243695 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.221041773 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.228908527 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.223252923 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.216149901 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.221631987 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.216737931 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.40051198 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.232569423 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.22194387 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.220554643 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.227665215 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.222049287 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.221385807 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.222774589 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.235602672 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.22321259 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.232010485 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.217217429 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.190078579 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.232472115 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.224285985 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.220247623 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.19176968 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.208061212 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.232100651 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.222661099 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.233876992 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.22125748 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.218295763 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.251969803 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.233722287 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.226461277 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.224976637 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.221389205 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.229800717 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.223363581 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.228386475 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.221541565 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.218125925 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.220051509 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.222603267 seconds)
done (took 97.446707297 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.346222252 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.216790595 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.3616619 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.221270574 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.383188916 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.365374026 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.221525543 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.22241964 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.220040114 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.070653964 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.221596152 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.220536491 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.218302243 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.222082663 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.350968899 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.22272119 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.222731993 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.959762292 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.223043412 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.363376393 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.215080891 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.222549288 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.222125478 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.07628987 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.217617936 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.215350724 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.363794923 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.222536897 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.972831319 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.212830327 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.214636644 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.972194444 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.365757809 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.242250815 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.232565539 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.232001942 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.384545953 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.240040642 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.348539068 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.350200156 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.366081347 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.260978679 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.214569013 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.218493072 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.224153564 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.224359208 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.223766814 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.253583888 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.220528183 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.222767477 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.962198147 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.234115455 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.225033818 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.224385038 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.223269077 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.253224502 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.225510473 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.22447635 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.367739769 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.224840776 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.349991241 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.079347643 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.075958016 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.225305345 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.21878201 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.225012346 seconds)
  done (took 101.27573748 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.287485208 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.303474529 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.327415645 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.234974749 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.273419941 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.334160375 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.235478221 seconds)
  done (took 10.126097748 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.225541808 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.225368381 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.268722955 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.269428159 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.224476429 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.374695007 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.224629737 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.231691455 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.225184782 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.273545865 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.226928494 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.225891878 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.236250665 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.21961273 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.269656638 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.23350431 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.336400285 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.221803645 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.226248782 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.372873897 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.227149262 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.236753807 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.275066419 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.233201925 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.228721455 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.22936077 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.987789121 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.228093371 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.227214081 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.22848186 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.22779003 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.275941566 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.228027801 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.221597779 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.226915039 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.340350585 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.228230668 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.228487536 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.228151656 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.224262308 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.227897694 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.228773596 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.227650273 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.228396937 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.228543271 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.24777611 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.22869073 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.228462443 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.228092737 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.227578488 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.275320096 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.230336741 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.228358347 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.228718734 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.278587552 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.23933957 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.227746172 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.227382547 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.229168717 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.228777246 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.375246029 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.27280718 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.231152813 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.272884856 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.229282714 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.229808942 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.230243241 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.228859939 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.315718695 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.230546069 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.271966483 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.229882591 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.404031899 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.249738308 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.231940738 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.228249239 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.229028561 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.229338701 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.222634891 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.232087533 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.22982304 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.227035893 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.231937803 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.229129811 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.231335772 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.388882851 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.335462195 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.230014943 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.239831665 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.232852985 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.230263624 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.277460343 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.230292445 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.231950659 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.278912916 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.341055471 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.280019117 seconds)
  done (took 127.06622978 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.239379429 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.240958048 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.231664867 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.256315826 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.229215259 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.228040325 seconds)
  done (took 8.562739587 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.230595852 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.235190316 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.231558764 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.232925616 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.230720253 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.231328591 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.230963173 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.2276423 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.23517271 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.231379055 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.232528292 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.234081388 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.234221155 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.233307828 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.232081658 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.231637246 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.233584799 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.23299429 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.233129492 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.233987649 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.227189273 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.233888527 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.234127023 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.228629427 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.235401218 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.233361297 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.250188857 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.234161755 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.233017741 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.236076674 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.252904658 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.234534111 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.230891683 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.233088028 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.236123282 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.230451655 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.236047613 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.235914164 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.234743715 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.23390094 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.235300939 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.234326725 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.234075191 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.23719056 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.232132534 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.233653515 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.238533644 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.252475042 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.235189529 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.236417485 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.235593464 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.234280295 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.235959082 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.235908974 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.234484328 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.251168752 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.238976951 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.237119677 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.234551343 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.231623502 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.23690793 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.235611315 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.232960126 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.238545071 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.236700115 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.236373374 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.232912281 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.237892837 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.235359414 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.237321676 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.238039682 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.236019129 seconds)
  done (took 91.067478275 seconds)
done (took 339.225417037 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.995519859 seconds)
  done (took 4.135821024 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.230221331 seconds)
  done (took 3.374507305 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.312601548 seconds)
  done (took 21.457865666 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.239422358 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.333926185 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.239228366 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.236651139 seconds)
  done (took 10.191911484 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.464600511 seconds)
  done (took 3.607357139 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.236490052 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.232598455 seconds)
  done (took 5.613799976 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.379188425 seconds)
  done (took 3.5234976 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.376514315 seconds)
  done (took 3.519925425 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.258652951 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.249754183 seconds)
  done (took 5.659520634 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.22208376 seconds)
  done (took 3.365342045 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 29.983826723 seconds)
  done (took 31.128364068 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.23982571 seconds)
  done (took 3.386006994 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.259216107 seconds)
  done (took 3.402453915 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.644240636 seconds)
  done (took 5.787797764 seconds)
done (took 109.294615772 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.228669257 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.230063526 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.228640939 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.229747842 seconds)
  done (took 10.061634462 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.292614564 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.29216684 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.292384861 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.29289488 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.291991555 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.293734673 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.266830068 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.266674712 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.293475827 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.292303003 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.293275438 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.292394031 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.293389408 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.267329852 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.293297274 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.293676385 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.293954477 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.293305834 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.267985046 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.293973121 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.243329634 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.294323501 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.293689281 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.243685114 seconds)
  done (took 31.978400721 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.754197337 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.306549805 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.39092501 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.289698108 seconds)
  done (took 6.886738332 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.319082582 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.319773654 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.331987832 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.371545544 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.397329114 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.331252971 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.269063976 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.263274233 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.249831894 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.320922432 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.371122259 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.311284241 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.397475252 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.241540891 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.448167087 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.242165428 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.242751145 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.320608799 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.371908518 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.385240132 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.243136043 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.319607208 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.320047636 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.312904332 seconds)
  done (took 32.848549356 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.251957757 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.258591614 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.244031571 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.259853488 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.24560079 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.245338125 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.246382756 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.251897843 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.243798547 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.24342122 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.245667629 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.259053312 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.249788014 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.245848313 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.254407228 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.246260886 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.247082718 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.252374948 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.25312442 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.245922214 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.2500751 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.251195787 seconds)
  done (took 28.639824875 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.234396364 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.233418509 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.584013851 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.489477559 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.234293867 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.237928402 seconds)
  done (took 13.162331167 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.305565221 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.450198038 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.240327138 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.572418008 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.660415232 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.246559258 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.242330403 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.476982278 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.773267666 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.748662097 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.301826462 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.307919677 seconds)
  done (took 18.47608915 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.23711153 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.238969004 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.240552373 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.269416114 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.292184293 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.259105615 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.247769307 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.235705031 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.295886388 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.310433101 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.259031165 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.293319363 seconds)
  done (took 20.330541924 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.336158803 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.242601369 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.242305452 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30428121 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.262456204 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.084983783 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.300693099 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.970948021 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.270358572 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.517883382 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.242635627 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.350180443 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.494666032 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.250190154 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.248772992 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.205426196 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.472633089 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.699800522 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.244530774 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.241534578 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.2944939 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.242853454 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.257092048 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.447794488 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.091730502 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.242751417 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.506119213 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.243706226 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.506153798 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.261442447 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.252946908 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.243552928 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.517679179 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.883923374 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.365270141 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441492468 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.244864568 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.265132531 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.253163603 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.247208267 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.267730466 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.250638422 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.254602678 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.243354472 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.242851255 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.244568953 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.94429145 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.269124897 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.244744061 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.245129766 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.484080906 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.347660905 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.249900398 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.245179813 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.250236196 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.249484809 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.251076126 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365450316 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.837437812 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.245412143 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.267842982 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.249312721 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.254526477 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.250988678 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.85302609 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.258144985 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.250662399 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.25116037 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246186339 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.245971856 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.285486136 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246929564 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.271402545 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.245781097 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.924072997 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.252118963 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254639037 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.767167874 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.247705985 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.267987098 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.476968733 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.247479417 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246134421 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.245989106 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.247235072 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909763242 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.259043454 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.238403379 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.290364006 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.962695246 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.469311581 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.271659243 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.27823332 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.468510195 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.23346528 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246232504 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.255932524 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.255207416 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.269216369 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.939836626 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.264466276 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.254006374 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.505288368 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.45687284 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246987855 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.23564994 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.715284027 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.269027723 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.269403547 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.24901566 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.446833782 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.805562346 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.266397367 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.249015385 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.269074378 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.248795836 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946020352 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.258588531 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.260518825 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.250255966 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.514721856 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.999817988 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.255242595 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.315377319 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.253832954 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.24993862 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.251160848 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.257676765 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.249964441 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.44239453 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.28282727 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.26220443 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.250855988 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.249502702 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.25669159 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256954871 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.255833013 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.472028468 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.251134622 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.531218086 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.25070974 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.250038335 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.250992934 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.47308142 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.262808868 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.262854997 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.511758403 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254242222 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.252863537 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.260452435 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.269053752 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.352487679 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.271837662 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.255973113 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.506264553 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.256626736 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.256877085 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.250928362 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.258456605 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.258869272 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.25849134 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.2517506 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.827336786 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.233893221 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.256070087 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.139909557 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.267256926 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.320007723 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.260665517 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.452003883 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.257949596 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256277006 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.281302576 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.256454064 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.482372476 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.261417074 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.251727915 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.337879289 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.709523799 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.828992022 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.274371927 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.252978714 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.253356037 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.251990813 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253469329 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254059685 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.253644876 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.453972173 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.272620474 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.254908723 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.82015262 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.260873679 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.253757077 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.266559886 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.265093775 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.26145974 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.255314411 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.253025538 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.273386433 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.270309933 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.264842353 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.397320135 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.269764818 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.254005696 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.772826045 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.262087986 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.255165692 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.255290979 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.287382401 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.254189596 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.043273747 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.532606197 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.252628033 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.49868417 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.261172996 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.292331072 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.254110165 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268437852 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.271051166 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.277020084 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.284557081 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.265062451 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.255586864 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.261334478 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.823639573 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.953785816 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.771329287 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.262848839 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.270017465 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.255936463 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.967847983 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.277735682 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.257315255 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.483079577 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.970825015 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.273773691 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.72247369 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.278067489 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.005541422 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.502210382 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.492121839 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.257258214 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.276995473 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.504322547 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.474765198 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.290832614 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.267034303 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.258815867 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.244621346 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.794851005 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.28193252 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.345142222 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.954594379 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.275306854 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.280348302 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.329988935 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.261758051 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.665557873 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.280634997 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.257743504 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.270768871 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.26137809 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.057398556 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.278776481 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.25813578 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.856078875 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.273927133 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.719556967 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.280946497 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.460246819 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.274460419 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.262830131 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.259403299 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.267705211 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.516136848 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.500994853 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.265777397 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.265730123 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.771109691 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.134262294 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.265980845 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.260045531 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95552478 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.265446201 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.533488294 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.278779684 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.260038598 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268785981 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.261128582 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.260321399 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.259125628 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.263289617 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.23473272 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.724824806 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.266101565 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.276936671 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.280049279 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.260914645 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.513831965 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.276422977 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.820736637 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.495442104 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.263754018 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.304573595 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.267452662 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.262638968 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.254851988 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.260715315 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.261316793 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319936572 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.486477708 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.261485143 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.254897137 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.277167344 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.477868899 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.261788413 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.266921161 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499268859 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.268511032 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.273903128 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990532245 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.305615061 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.271270638 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.26890683 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.277646273 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.306642479 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.330738093 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.465580271 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.279028003 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.27341916 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.647996575 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.290977657 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.269781563 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.278994794 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.36013039 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.263770563 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.269971885 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.043639117 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.824562439 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.963939667 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.833535609 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.511725448 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.27106164 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.270482507 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.264788053 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425218103 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.264380634 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.538405885 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.263851739 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.262290169 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.291238634 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.265909555 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.270845561 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.493956954 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.539802415 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.264778508 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.277128186 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.269941864 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.264878707 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.274083304 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.473874337 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.730786461 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.800740166 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268055652 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.27043715 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.996249717 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.563215591 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.266097626 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.265509538 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.265726505 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.275803952 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.288743188 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.279115657 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279730334 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415282646 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.507779336 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915887026 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.297532313 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.296897552 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.784488383 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268948129 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.52595974 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.280349433 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.476134365 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.836565811 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.94483696 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.537365399 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.336704825 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.469615614 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.273316807 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430249436 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.278626245 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.271616545 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.267177341 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.266771003 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.267307603 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.276983859 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.833305003 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.539010046 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.273553895 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.278467892 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.30335769 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.281024129 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.493746344 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946211824 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.498946413 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.279739069 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.274144544 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.269353059 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.836590699 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.516930859 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.275705065 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.27373549 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499693649 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.275447635 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.292562912 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.958439487 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.269266548 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.789284018 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.238174863 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.289743186 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.269733844 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.945112827 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.84114908 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.278800491 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.737854273 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.271047768 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.271004086 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.566947457 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.276361825 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.272811248 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.54776104 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.274906611 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.28433874 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.47993327 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.836852457 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.015058924 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.283374179 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.292204367 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.294540331 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.270114327 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34495071 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.292838571 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.272605966 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.670757831 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.29482424 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.271850716 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.284555088 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.282097727 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.277025343 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.276253728 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.27149903 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.278839919 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.267643491 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.27132605 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.290856723 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397058212 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.81747521 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.296583862 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.948410692 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.596064211 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.526130736 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.272280513 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.263900865 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.278261757 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.273788771 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.27277185 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.272855548 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.274358754 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.803955994 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.289110243 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.287811643 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.277967856 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.273607878 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.482315184 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.285714296 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.484243518 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.280749483 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.289725679 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.260451042 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.272983677 seconds)
  done (took 918.937131753 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.304155606 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.276935511 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.289595647 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.284653579 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.276069143 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.382746749 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.339714263 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.27430206 seconds)
  done (took 19.608538577 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.279182925 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.278295807 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.277818751 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.278458294 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.272980519 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.727285679 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.291790075 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.279291584 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.289584376 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.273439333 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.285616587 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.262846607 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.280126208 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.272432154 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.27368123 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.285037721 seconds)
  done (took 31.088544258 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.166900777 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.38090621 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.031935335 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.280463406 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.295311692 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.287782007 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.461473042 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.285658799 seconds)
  done (took 25.371646703 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.279824611 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.281397053 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.28033866 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.28096174 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.281261521 seconds)
  done (took 7.585249548 seconds)
done (took 1166.120943246 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.279763947 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.281719965 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.280844432 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.280589524 seconds)
  done (took 6.304577211 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.264784607 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.263651567 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.264456876 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.284618886 seconds)
  done (took 9.259345536 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.933932905 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.889553578 seconds)
  done (took 5.005786775 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.745879215 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.748170352 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.750284357 seconds)
  done (took 6.426678279 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.556543189 seconds)
  done (took 2.738630378 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.15469301 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.279297896 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.934477802 seconds)
  done (took 7.551977435 seconds)
done (took 38.46782982 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.272926207 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.517730211 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.428184739 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.275901532 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.432567372 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.428208478 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.014271619 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.27307855 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.291017093 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.282765919 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.277697868 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.433007558 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.993530981 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.518562343 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.995054264 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.518422726 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.475496199 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.287480331 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.273406499 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.288873774 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.013577684 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.281572357 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.27498617 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.283373464 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.47810244 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.41895517 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.274986281 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.537383128 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.282432562 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.275224622 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.417719948 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.277897321 seconds)
  done (took 79.279053363 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.272804856 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.274309805 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.285676742 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.275793249 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.2855388 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.283466155 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.275737849 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.274097275 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.274042716 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.27546009 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.291816248 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.275132341 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.289834305 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.283259182 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.276328001 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.286684726 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.275188645 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.298871645 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.274456682 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.292731076 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.27578281 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.27755471 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.275050217 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.277496218 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.287845437 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.275229411 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.295674667 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.275194675 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.276752759 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.275019756 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.282688498 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.296578838 seconds)
  done (took 74.178227216 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.280378076 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.275905345 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.294994376 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.281557195 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.288968642 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.280572927 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.278975516 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.276347057 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.276975439 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.282626344 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.303745197 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.285630667 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.278464758 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.275952208 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.29489562 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.277490335 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.284020196 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.291360754 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.277548554 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.290870485 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.27962291 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.277425014 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.294020374 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.277575545 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.284054847 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.278508125 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.27799545 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.296159279 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.282214981 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.278328858 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.283445889 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.279980119 seconds)
  done (took 74.255173497 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.558474502 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.289656183 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.292626179 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.283341945 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.292549184 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.287794671 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.284470107 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.566742223 seconds)
  done (took 14.043517465 seconds)
done (took 242.939290067 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.282533481 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.786649105 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.326015018 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.282771824 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.312127053 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.310256334 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.499727845 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.325615512 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.501580229 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.302936281 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.303287618 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.29751292 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.054333905 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.435057714 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.112304005 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.2188963 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.130186473 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.284323452 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.834550866 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.55796587 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.308780469 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.294048479 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.113103178 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.15757993 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.271548115 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.367925809 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.380484493 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.506358801 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.439960581 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.362434288 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.777081724 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.289302092 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.29061794 seconds)
  done (took 60.907459914 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.286547444 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.390722421 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.28981935 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.291139108 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.390942727 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.292011308 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.287191222 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.291735436 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.292583193 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.291631901 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.291937644 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.292464472 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.293969803 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.319331587 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.394844348 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.285569707 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.286252912 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.388285381 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.286401447 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.28573772 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.31766328 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.293420437 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.294441376 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.320182179 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.292741776 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.292113127 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.38829251 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.293773823 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.295515225 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.391167957 seconds)
  done (took 40.600530572 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.292405197 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.854316764 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.013453114 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.295180521 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.288278579 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.292718207 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.56015794 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.299198293 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.292861164 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.293624692 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.772328012 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.300213548 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.32238265 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.040540572 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.291086321 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.294394462 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.294989567 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.289633596 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.863546802 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.30439879 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.580205684 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.300223902 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.5620127 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.306043938 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.31079218 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.291224524 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.294670372 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.105450033 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.315004551 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.767792006 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.03160985 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.56145573 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.050898212 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.045628565 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.032596703 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.302473148 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.295614089 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.773991173 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.297787399 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.290549622 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.562494448 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.297421416 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.02951518 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.983440329 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.310060371 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.295461119 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.119349338 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.794021389 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.521548858 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.30462036 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.049003673 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.301176662 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.298712429 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.294859471 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.522508304 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.299426522 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.292918512 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.139112876 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.316933299 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.565974588 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.303404858 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.293119803 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.862325309 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.298687525 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.861442723 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.30072528 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.301110598 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.312450431 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.031221242 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.300991081 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.002262327 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.311193881 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.297827602 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.772102319 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.865983352 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.18958793 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.30148908 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.868143237 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.082432808 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.583193677 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.304025969 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.086323659 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.592007692 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.302161675 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.300577261 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.300836976 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.300095983 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.377023909 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.562317392 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.930425414 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.003094378 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.167703702 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.59189116 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.307315187 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.295401479 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.149635956 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.321446894 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.299511701 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.028505979 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.012090395 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.312855646 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.303727308 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.009396966 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.313563492 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.571020593 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.307645911 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.040202692 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.302546415 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.378570838 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.300424677 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.303465894 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.317921794 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.570160102 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.305972255 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.300971635 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.980459155 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.805092874 seconds)
  done (took 183.063459669 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.291811458 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.306566099 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.292808341 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.307644767 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.290559402 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.299314602 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.290850789 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.292516272 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.296798622 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.290838568 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.291709514 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.298708255 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.29841669 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.29140639 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.292292968 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.292804974 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.291899097 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.298378409 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.291502333 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.292151462 seconds)
  done (took 43.098530041 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.303025657 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.830515006 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.801333906 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.306546984 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.300754645 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.299019087 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.352725044 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.307125678 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.301746539 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.586230899 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.466663557 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.325030457 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.302197916 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.302371416 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.801829639 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.298830657 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.587904809 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.842986744 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.30925969 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.838173475 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.29905921 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.304411554 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.299349914 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.83819539 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.598631611 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.576399832 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.360801161 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.843064994 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.309639249 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.30334721 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.840087596 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.309892163 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.300735982 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.839230624 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.325676707 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.317977418 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.303500311 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.35593616 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.360102087 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.59365584 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.850400137 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.583262852 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.321335411 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.488961953 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.310744828 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.294605497 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.846296547 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.327260298 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.293740253 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.306357632 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.310043136 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.812620893 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.323131595 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.81354636 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.32764126 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.307163566 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.843403733 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.819681841 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.830406513 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.469443345 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.321769514 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.572238464 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.31108709 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.849222231 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.327455239 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.306688536 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.30495797 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.466154434 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.865362385 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.577866295 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.597574229 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.597337297 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.312307867 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.364125263 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.323957982 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.59360204 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.367571287 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.727783118 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.599337482 seconds)
  done (took 118.814056388 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.56644654 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.416205041 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.695372241 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.908849465 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.306813908 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.439259028 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.409689668 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.553961924 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.313147263 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.387995112 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.937968615 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.419748259 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.070616463 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.392713634 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.404940588 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.444828545 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.685746807 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.273981331 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.036684642 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.914985646 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.309728174 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.411356016 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.870203771 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.510490259 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.301059548 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.89361505 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.259492392 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.956561643 seconds)
  done (took 51.29705135 seconds)
done (took 498.96861895 seconds)
SAVING RESULT...
DONE!
