cset: moving following pidspec: 26731
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.416138021 seconds)
loading group "string"... done (took 0.522482038 seconds)
loading group "linalg"... done (took 9.412172658 seconds)
loading group "parallel"... done (took 0.172473567 seconds)
loading group "find"... done (took 2.963681549 seconds)
loading group "tuple"... done (took 2.218651371 seconds)
loading group "dates"... done (took 1.399682592 seconds)
loading group "micro"... done (took 0.44823722 seconds)
loading group "io"... done (took 0.531455138 seconds)
loading group "scalar"... done (took 58.265447189 seconds)
loading group "sparse"... done (took 13.936491197 seconds)
loading group "broadcast"... done (took 1.341121645 seconds)
loading group "union"... done (took 10.571298243 seconds)
loading group "simd"... done (took 3.562790591 seconds)
loading group "random"... done (took 13.237569194 seconds)
loading group "problem"... done (took 2.19285089 seconds)
loading group "array"... done (took 25.613578565 seconds)
loading group "misc"... done (took 1.157540141 seconds)
loading group "sort"... done (took 3.722064946 seconds)
loading group "collection"... done (took 22.055276527 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.622823919 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.13101987 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.211098677 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.290257618 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.234015289 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.16887223 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.15973019 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.236528496 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.564147527 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.205752625 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.138714313 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.441734314 seconds)
done (took 6.16261134 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.253858724 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.244850085 seconds)
    (2/2) benchmarking "String"...
    done (took 0.166214617 seconds)
  done (took 1.112823657 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076050462 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.157198502 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.108891667 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.094854848 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.093233226 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.110816674 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.092536552 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.109550283 seconds)
  done (took 1.473864555 seconds)
done (took 3.620445895 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.502371407 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.860670913 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.501527091 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.144252861 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.315131208 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.295447544 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.270884684 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.201105332 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.094201757 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.088305652 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.174601378 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.395856484 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.389533845 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.962302004 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.089142731 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.110141348 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.115679698 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.761111297 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.078403064 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.122469235 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.503536205 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.194048416 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.113734614 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.105869846 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.185980336 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.13202128 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.159594405 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.10172812 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.658399934 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.131004992 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.180133496 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.098363803 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.157814976 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.185696536 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.210321167 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.094615095 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.677691042 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.201786592 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098738213 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.101016096 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.673456404 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.124888787 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.186846654 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.103613447 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.08848431 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.178637288 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.101243802 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.093438641 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093303177 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.087591289 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.164627849 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.463666576 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.107972872 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.174584421 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.092217432 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.676026471 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.095453864 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.271501513 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.125699912 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.09784098 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.091252669 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.088225365 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.154044305 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.093361585 seconds)
  done (took 19.933206068 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.146422742 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.166267361 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.07798343 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.156319123 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.123835963 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.079354397 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.102198097 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.078697858 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.126588947 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.178048688 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.139363754 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.154309672 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.093176521 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.090119348 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.130752439 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.248717558 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.107318121 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.121823433 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.089063592 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.089474394 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.138718767 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.096105047 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108211464 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092785944 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169129504 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.202146127 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110026611 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124265128 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.091581702 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.095383386 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14228076 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142924567 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.092422994 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.089267885 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.18748038 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.105405853 seconds)
  done (took 5.210574965 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.220798352 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.104210726 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.228375908 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.198978542 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.135884848 seconds)
    (6/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.13064212 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.185796964 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.156347076 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.276280018 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.20913785 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.16323866 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127475972 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.09666074 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09582269 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.080186242 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081066325 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.094010227 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.495411525 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.148781752 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.193726988 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.167000063 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112755249 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083023407 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.362603232 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102012452 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.085940145 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.112373185 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.064533976 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.202281399 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095703921 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.138904134 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.082599963 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.122672515 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131961506 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.192978283 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.125698094 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.139385196 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095266509 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.103601541 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.204716439 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.118993942 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079040716 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.133468425 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116280841 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.131021744 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.10684672 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.110730032 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.223354984 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.104185186 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.11230986 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.06657062 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.194008824 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.124495833 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.083490725 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.290783116 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.127604136 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101588921 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.108344201 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.790905384 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.130582035 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.080712179 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.077835119 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.113264294 seconds)
    (64/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.159156272 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.079925949 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.430992908 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106997655 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.192225582 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.099298637 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.140242837 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113059657 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.119325773 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085972853 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085211332 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.126564445 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.08553366 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078217898 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.103219423 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.078510117 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.106354514 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.114647433 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.08121471 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100449066 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.07957671 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.146299906 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.112475159 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.107708996 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.123258453 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.091112075 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.087151732 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129191481 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081266412 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.105385907 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.150332864 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.116802499 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.113037716 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115278009 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141738147 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.087873868 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.234996996 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.098215648 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124612402 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.09927025 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112763385 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.116483072 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08170259 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083848095 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.096176649 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081034013 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146373286 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.101257535 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081818106 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.087130054 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.11030301 seconds)
  done (took 28.447122687 seconds)
done (took 54.294861952 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.434603561 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083013495 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.08162778 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.100370865 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.081902135 seconds)
  done (took 1.563739249 seconds)
done (took 2.323396432 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.329753184 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.197603207 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.102507157 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.192096101 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086478629 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.200053408 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.186022428 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.096424471 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.213152944 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.082858099 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.189822192 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083324086 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.104355229 seconds)
  done (took 2.844456959 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.105840053 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111233586 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.120197337 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.106333741 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08660574 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104508072 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.120184762 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.113908767 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103101692 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.11442091 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08640881 seconds)
  done (took 1.926125174 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.102494778 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.108206704 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.099609037 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.117311439 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08732377 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102428318 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116362988 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109633124 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101286895 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.113995609 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087085707 seconds)
  done (took 1.903525236 seconds)
done (took 7.428266436 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.101443994 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.497814189 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.14525769 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.208956498 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.353442346 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.236147162 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.567729401 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.174286951 seconds)
  done (took 14.185877645 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.165503613 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.110330775 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.091716257 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.089476587 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.093136187 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.109142223 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.090530209 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.093180847 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.112277478 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.093630519 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.093074905 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.105717563 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.090448912 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.09060495 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.092125008 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.111888551 seconds)
  done (took 2.447997355 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.143574802 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.14042808 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.096766657 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.098754073 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.112176103 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.099020064 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.100632881 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.11473295 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.094733483 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.093706638 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.117650546 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.098124471 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.095721369 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.109772738 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.097787198 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.116900248 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.110226445 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.099119942 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.115748657 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.113997143 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.098638511 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095928438 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.112701768 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.098318222 seconds)
  done (took 3.415886131 seconds)
done (took 20.808566564 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.148821494 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099841114 seconds)
  done (took 1.00914605 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.139636229 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.157446672 seconds)
  done (took 1.063007893 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.111151207 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.088876966 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.134014112 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.102302967 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.090195426 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.106000797 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.11577621 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.107525264 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.092211451 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.090229419 seconds)
  done (took 1.810014278 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.094535053 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094309567 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.121216462 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.134319614 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.098852946 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.109537522 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.094697257 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.092931331 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.113256646 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.090518725 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.09525922 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.123621929 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.094965471 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.12437535 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.094549179 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.095575335 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.114705216 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.093100961 seconds)
  done (took 2.652991106 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.089444655 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.091474249 seconds)
  done (took 0.954185188 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.21067192 seconds)
    (2/7) benchmarking "second"...
    done (took 0.090045822 seconds)
    (3/7) benchmarking "month"...
    done (took 0.091678373 seconds)
    (4/7) benchmarking "year"...
    done (took 0.108329652 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.089403384 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.089730007 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.105494014 seconds)
  done (took 1.558287908 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.488525749 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.26210736 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.355504631 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.107952786 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.147136237 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.349839657 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.150706608 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.10442314 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.122606776 seconds)
  done (took 2.897309812 seconds)
done (took 12.714282483 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.090021143 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.221911833 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.606199263 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.112157661 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.089427389 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.158880471 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.288165582 seconds)
done (took 2.341679649 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.340328103 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.14252162 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.082226667 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.092858332 seconds)
  done (took 1.429498725 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082183599 seconds)
    (2/2) benchmarking "read"...
    done (took 0.098001875 seconds)
  done (took 0.958362095 seconds)
done (took 3.168618145 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088504283 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.120609003 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.106110565 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.088901617 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.087039374 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.087309108 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.105507768 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.087786859 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.088880601 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.086142496 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.10767134 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.087078381 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.086584896 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.103667921 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087009687 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086619777 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086155059 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103437301 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.086687683 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087050403 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102597781 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087744043 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.087386572 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.087461793 seconds)
  done (took 3.044117553 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.105587041 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.090737346 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.108376582 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.093061014 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.092317245 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.109046566 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.09284982 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.08956334 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.109824675 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.090391443 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092311009 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.091292382 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.106405325 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.093008506 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08891415 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.108835481 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.093349075 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090016566 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106777361 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.091822052 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.092415334 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106390758 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.093189932 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092085929 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.108971265 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093105929 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.089919837 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.106969142 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092640874 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.092746012 seconds)
  done (took 3.693882194 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.097887523 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.085692061 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.087575594 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.114262472 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.085160485 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.08915415 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.100752879 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.086430043 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.089273516 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.087096166 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.10719197 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.088072671 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.086615972 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.106094402 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.090151038 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.090783932 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.113457129 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.086907467 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.085662978 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.088617323 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.10910156 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.085085622 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.088180594 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.103976607 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.088485864 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.085625723 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.088044621 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.105151868 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.090588615 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.088326107 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.105729929 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.092598357 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.087796692 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.097697246 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.108605785 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.089425772 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.09337299 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.101944986 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.089602751 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.085290483 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.084727072 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.104659875 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.085247075 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.09451381 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.105251815 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.090374895 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.086375814 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.089320594 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.106070142 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.092005784 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.085246259 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.101877758 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.090277773 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.089594754 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.108628556 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.087028085 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.089094125 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.085106753 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.106116024 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.088451046 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.085516359 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.101550239 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.093914412 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.089922102 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.119304229 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.096933059 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.085450747 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.089497031 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.107292972 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.094465066 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.091073472 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.115791104 seconds)
  done (took 7.57690736 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.101979172 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.097728155 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.089406259 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.108351079 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089697723 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.088850932 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.112274077 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089669014 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090712752 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.112104673 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091193464 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.090044758 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106183107 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.090847044 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090714961 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.089526777 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112937094 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08964805 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.089435027 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.107817982 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090055149 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.094023825 seconds)
  done (took 2.907947164 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.235159308 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095978154 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.139330991 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.119806963 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108125695 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.118356148 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.093772132 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.095458278 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109966556 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100541122 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103458592 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110538604 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108199815 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098344713 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.115734494 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.100195452 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111040006 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.10082794 seconds)
  done (took 2.855370486 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.103183112 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.091895917 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.127339745 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.091441819 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.092214527 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.093629398 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.113638741 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.11003234 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.108109974 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.09379703 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.09751513 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090964392 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.109433721 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09175165 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091278696 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.108315666 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.09302925 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091849521 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114650455 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097869447 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096429658 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.115527846 seconds)
  done (took 3.016804682 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105125885 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.092414318 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.126693968 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.094460217 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.091754657 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.089940348 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.115410396 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.092071587 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.096369161 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.108459422 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091938966 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.089847642 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.122042501 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091612803 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.09722615 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109074303 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.091103568 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090920782 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107047753 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.092070259 seconds)
  done (took 2.786549287 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.167367948 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123913825 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.107683773 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116211272 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124125614 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108270012 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113347503 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.125630876 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107259006 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.135271661 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107739745 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106114684 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.131541758 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113587467 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12389615 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117915095 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114520697 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.131115226 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10798316 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106508081 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.136602554 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107108711 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.13168001 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106622025 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.106394051 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.124742725 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106180532 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.128358392 seconds)
  done (took 4.133172091 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090500956 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090410028 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.088921567 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.106705399 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.089586378 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.090159336 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.088735414 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.107317871 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08963101 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08872134 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.106655022 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.089624972 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.088800776 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.088830451 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.106496156 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.089894258 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090280292 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.106995643 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090192239 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089062053 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.089656041 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108125896 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.091631354 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.09000916 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107168705 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.090259711 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089035619 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089139374 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108119079 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091202206 seconds)
  done (took 3.626041474 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.101921946 seconds)
    (2/2) benchmarking "in"...
    done (took 0.100802299 seconds)
  done (took 1.001488243 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.097672733 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104826524 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.08993845 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109392856 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096801623 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.090126428 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.116765399 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097354662 seconds)
  done (took 1.602820335 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.139946061 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.160777766 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.095038989 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.102159001 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.160130173 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.150833244 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132973577 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.09494446 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.106521968 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084211881 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.152952356 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082944284 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091573097 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087155395 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.110468691 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096880366 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.091858799 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.117950388 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.096645512 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.091777462 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113004273 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097326451 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092877564 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.118873987 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086577654 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093044924 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.11206942 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.102556639 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086602233 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110967528 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089748394 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.089748892 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.112038049 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.095105932 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.092012917 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.159285149 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098713307 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104583665 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092660421 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.095538485 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.140689505 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.092307698 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.0931073 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.10651178 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093929309 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.095055753 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.111767454 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.091112367 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.084630257 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085669675 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.108646536 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086912278 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.09157777 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108419381 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.092189595 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097475413 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.109515639 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.088657688 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087570437 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.104691655 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090012369 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087253734 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.110547293 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.094979358 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092368725 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.108785914 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091468684 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.09130232 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.10991212 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.093367267 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.091448919 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123801633 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093672173 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.09518652 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.11358522 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.092677921 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08890331 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.096146817 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108892725 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.093275296 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.095126421 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.138090423 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092994968 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.0858262 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.104514006 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.098886636 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.093384945 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.113095173 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.084533275 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101058143 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.111133381 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.092864948 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.084034371 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.106979006 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087589233 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.09434629 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.083686062 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110027869 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.091113282 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.095238348 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.114466105 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091666696 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.091711206 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.113781097 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.096921044 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.090031735 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.154419319 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088144457 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.106077042 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.093589048 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.096921415 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084548602 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.109942881 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.090398349 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089591971 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.105369592 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.097005995 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.090949853 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.111222087 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.095589564 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094052329 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.110593942 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.09533 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.090958236 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.087038681 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.113628437 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099778034 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091594633 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.111903542 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.093042715 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.091123 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.108854773 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.09497046 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088875234 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.114538393 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090296966 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.090891858 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.110126457 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.097129976 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092470709 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.103787442 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.091632487 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.093857209 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.109583826 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.095873685 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.093104858 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087198084 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.102714313 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.092646125 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.086939503 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.112016552 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100500723 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.087195471 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.113296273 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088336993 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098438029 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.107300448 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.097329915 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.095007273 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.115773074 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.097031686 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084865381 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105664126 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.095413945 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.093663234 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.087765946 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.113119241 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.092362562 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.097735049 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.103040264 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.096789518 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084201845 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.106413863 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.098374481 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.093811772 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.094583691 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.10556689 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.132822081 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.121479836 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.096647808 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090935815 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.090193048 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.113990353 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.092463747 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.094004876 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.117237354 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.09702318 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.089707782 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.109984209 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.097582681 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.088804877 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.113101181 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091609285 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094091047 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.102554134 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.093727449 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.084985917 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.095283678 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.112865081 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.096353837 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.095936649 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.112080325 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092448276 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099807228 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.106466046 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.10492876 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084669494 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.114333466 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.10349457 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.099032393 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.115432448 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094024417 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091191271 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.09217204 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.119017899 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095414012 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.092212574 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.113323409 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.085980762 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.08610082 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.115823187 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.094378158 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.089603511 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.109375915 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095551718 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095532452 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.108740194 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.085749719 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.09816946 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.123275228 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.088222328 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093819443 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.089509559 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.10929121 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099717419 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.085145207 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.107295582 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094676878 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.096511472 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.111923669 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.093536881 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.095740527 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.116896671 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.095746375 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.09509277 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108267126 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102108912 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.090730768 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.091228635 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.108290272 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.095002811 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.086580221 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.112414005 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.094239186 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.08896734 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.107322136 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097943512 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098315699 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.116122066 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091940275 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.096913428 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.116125298 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.099047933 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090308225 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.097095212 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.107516259 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.085626494 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088374798 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.105396955 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.094591176 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.089863811 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.116555902 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.09272925 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091210021 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.114206649 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095889313 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.091064337 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.116218525 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104881277 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.086834723 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.104934477 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091046303 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092871863 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.108640351 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.090710728 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.094138183 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112843904 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.097650101 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095586713 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.089589106 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.112517512 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.099705931 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.089046539 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.118730259 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.099153219 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.098475338 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.107673917 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.098737528 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.089426514 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116703859 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.088155636 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.0922282 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111135505 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094105122 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.090015646 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.110136811 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.090694524 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.087123144 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.089503868 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.118220949 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.092995796 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.096082852 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.113041052 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.092107006 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.089249178 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10791016 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.099597512 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.091664708 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.117979574 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.094420769 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.086505754 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.105637438 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.098951026 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094088831 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.098596478 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.108415404 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.096458178 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.098869707 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.115346565 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.093787418 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.10173217 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.120001968 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.100494035 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099041494 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.105293781 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.09196308 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097684751 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.112245169 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.097847461 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.09490732 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.087035171 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115496684 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.098784074 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.094480978 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.112639502 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.087019561 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.094067496 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.11780611 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.097399148 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.097357898 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.09354265 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.114351665 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.089694707 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.095751601 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.117905597 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.094028657 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098478658 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111721131 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.096366132 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.090041446 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.117397593 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.095719144 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.08772052 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.104472043 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.091373767 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.099265329 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.087078079 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.117075676 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.097942676 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.089508102 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.110773209 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.097624107 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.090412648 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114624226 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097835854 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.091066156 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.121042794 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.095457272 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.091944396 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.096995779 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.118011149 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.087449562 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.091460181 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111626551 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10037986 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.092375448 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.117187841 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094191562 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.097650652 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.115619238 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.100347168 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.098844117 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.098576593 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.107096032 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.101778095 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095611005 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.115039334 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.091973391 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091435134 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.108337239 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.093698346 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.098846873 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.109963385 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102342341 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.099033048 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.111036156 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.093417841 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.09917539 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112175714 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100961332 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.090231697 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094786818 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.107330932 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.096139226 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.092101158 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.119344323 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.090572934 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.087411468 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.117719945 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.099089966 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097773975 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.116406144 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.100792874 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.088450807 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.107161901 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.096864842 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.092483015 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102522753 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.116011485 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.092097031 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092235894 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.117360974 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.095630629 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.099271772 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.107296568 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.091831211 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.094365795 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.115046005 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.092979798 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.088662783 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.116121307 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.093686954 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095625664 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.111730006 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.089976346 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.093947158 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.100222218 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.112707283 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.090644347 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.090828916 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.119864795 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.094434406 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.091054899 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.107842268 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101235354 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.096711431 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.119728088 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.091051897 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.095164018 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.111009033 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097043302 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.101974471 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.111105134 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09568736 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.091977191 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.117045125 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100908664 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.087187889 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.090522768 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.122997331 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099914245 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.095141354 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.115990646 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.094642072 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.099785451 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.120241161 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097438919 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.088111993 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.107516937 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.094438712 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.08921397 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.094961319 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118991969 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094097219 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.09198647 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.118394635 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099860991 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.096201089 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.115309123 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.089041202 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100057082 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.110803193 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.098508438 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.088295519 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.087694135 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.116867885 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100179833 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092584068 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.114550358 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.096080437 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.09650326 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.108769938 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.092234412 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.096849068 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.117648089 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.100971235 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093644961 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.112364547 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.097657579 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104663219 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.094495922 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.11436871 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103079418 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.099702169 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115579771 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.094631045 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096864474 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.121539185 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.096915418 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.099789744 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.111677389 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.095231018 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.100599614 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.120845197 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105303524 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092136616 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.108116187 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.099787318 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.091847454 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.108515843 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.099756225 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100993896 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.10035702 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.114676188 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.092491385 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103605539 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.121522591 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095650636 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.091142507 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.112217757 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.099945943 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091495809 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.118344431 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.092761461 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.10181824 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.120964363 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101069309 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.102270103 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.108657718 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.10164945 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.097119347 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.120730135 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.097329752 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.089382493 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.087634967 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.117654965 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.102268333 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.099952068 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.117581741 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.099137245 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.098761804 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.115180684 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097228383 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.093382618 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.100561239 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.119761253 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.098005885 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.096155946 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.114134178 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097502635 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.095900755 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.121394209 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104058837 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.095217126 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.124733747 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.101824575 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.093386401 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.111809852 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.097505777 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098002935 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.094788702 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.119326553 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.092475298 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.088396264 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.121552427 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.101837065 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095005847 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.121678039 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102549048 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.09397359 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.117840346 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103268933 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.100800875 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.095684463 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.116308888 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.097834286 seconds)
  done (took 60.936785415 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.145721633 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102746847 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.11629654 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.097435677 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11392371 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118740225 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097139917 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098318161 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.119390636 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108249844 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.09708671 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116879583 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112690662 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.1182522 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.134963593 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10748806 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115924901 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099799175 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097709497 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097970727 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.132274159 seconds)
  done (took 3.201338155 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.114382882 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.110682241 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.12895574 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.112438913 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103523217 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.128533178 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108774315 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.127816637 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.113306966 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104406334 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.131225978 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108144096 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.124386239 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.106844621 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105462389 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.127319178 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113319126 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103299827 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.130334103 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10974694 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.126364161 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.110214826 seconds)
  done (took 3.402052138 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.127359642 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101318412 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.095026713 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.116284723 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.100872294 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.097282982 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.119414352 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.09820961 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.106565406 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.092518895 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.109541553 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.094747893 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.094318527 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.117915888 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.09268674 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.097164171 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.124651788 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.100488145 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.102688603 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.096511839 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.109262756 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.098562389 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.09818947 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.108394426 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.103079154 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.102100771 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.096347242 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.120068053 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.088635461 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.099852875 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.117270541 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.092434365 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.08857082 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.087528833 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.108500907 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.101906141 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.099576321 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.117038611 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.098627769 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.088985061 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.097426152 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.122070135 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.089551349 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.097460283 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.117298312 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.092949557 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.101295878 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.115962337 seconds)
  done (took 5.800167884 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.127238928 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.163198185 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.101022547 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.136458316 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.135191414 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.107349818 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.099528752 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.373922557 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.099883329 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.123458291 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.113487526 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.110305049 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.125554747 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.105063499 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.099554037 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.125911252 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103872227 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100232116 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.12649831 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101768736 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.105330255 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.12190568 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.110366138 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.131576132 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.104458854 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100583378 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.121463216 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.106034966 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.110066702 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.127026015 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.105190352 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.103367298 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.132555751 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.103001318 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.099598482 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.123925351 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.113464404 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.121493322 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.103016629 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100830433 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.12158824 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.104037806 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.102840076 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.132597481 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10338475 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.1026369 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.121938137 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.099658268 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.110588592 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.12203857 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.108982198 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.110014862 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.124432329 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.103238664 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.102399485 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.133972209 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.10397569 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.099203374 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.124157471 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.110224553 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.117583335 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.105183534 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.111098451 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.120557614 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.107312348 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.111738713 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.124043334 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10379849 seconds)
  done (took 8.955254063 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.132387516 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.10591315 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.134040945 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113367511 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.103827576 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.126495187 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105655444 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.105009052 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.125951319 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110415986 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12486771 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.19747218 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.123489802 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.110805955 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.104328812 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.125402612 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.105575594 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104578029 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.12821015 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10543459 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.103466576 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.133601225 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.104503742 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.132310648 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.11757041 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.101243356 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.126305662 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.106798144 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111990418 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.127473384 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.117027455 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.125146008 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.105765771 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112346779 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.13801468 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.105780737 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.099557337 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126779996 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.105970324 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.124627479 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.103307096 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114268872 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.125981642 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.104348465 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106218596 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.126567953 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115658031 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.116866478 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.131541696 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110859861 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.125496025 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113813072 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10434441 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.125762762 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.115432501 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.13796856 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114696507 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113257623 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125908117 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113587907 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.133489827 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.121176399 seconds)
  done (took 8.18366655 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099907324 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098341236 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097257935 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.118661848 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.099310697 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098261496 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.097376685 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.119244514 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099628156 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098386856 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119274301 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099784938 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099819069 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098127146 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.119928013 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099125805 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099200187 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.117817257 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101570317 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099988941 seconds)
  done (took 2.949186418 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.108720829 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.115085651 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.121744547 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.10731416 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.100729741 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.126774608 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.101575627 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101859589 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100845694 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.123305743 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109218475 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.129076625 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102746348 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106565672 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.129385647 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106916983 seconds)
  done (took 2.660344867 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.120282995 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.11662939 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.187249044 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.102619263 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.122486253 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.109134911 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.10176808 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.124266221 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.100940259 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.107694807 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.104006668 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.126416401 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.102590214 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.101463447 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.12359763 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.105692348 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.099793849 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.126038016 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103138828 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.187911709 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.105757131 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103669466 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.122778619 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.105351637 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102526368 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.127700119 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.1075473 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101038086 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.101952433 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.124019055 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.106000314 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.10782645 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.12295138 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.106283068 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.101336199 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.125291801 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.102465988 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.102254143 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.124877597 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.102505403 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.103326326 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.123237746 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.103543557 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.103572951 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.099477165 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.124668453 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100736075 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.106084558 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.125289331 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.104335921 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.100950984 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.13071338 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107195131 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.10949484 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.129231993 seconds)
  done (took 7.121545446 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.11242825 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102313286 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.133357338 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.100223334 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.102516617 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.102388538 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.123686354 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.104578936 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101179792 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.12088107 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104592752 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.103474745 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.125101785 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10255681 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.102113791 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.12409726 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.10047497 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.103526746 seconds)
  done (took 2.841076878 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.107947343 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.101189735 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.104496418 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.122958927 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.101902248 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101380323 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.12146595 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.102769799 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099953011 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.100460216 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.123731705 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.101288369 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099327567 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.123068581 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104105199 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100802566 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.121925344 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101357882 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.102761393 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100062458 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.122629208 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.1014491 seconds)
  done (took 3.24388684 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.113287977 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.184659098 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.10828579 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.191618758 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.096993987 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.095632775 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.12973625 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.099404144 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.112313786 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.119597772 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.097408764 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.096620524 seconds)
  done (took 2.322492126 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128764286 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138035062 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12399023 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102619709 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109036117 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127386536 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106412978 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104561198 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135549272 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117824479 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126058496 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114955964 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112459721 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136613597 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109592174 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130592588 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106722063 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106165234 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122711262 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122376051 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105356743 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134871669 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106554285 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104342055 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127764193 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113867249 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134544424 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11871138 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105256461 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136354259 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109743871 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126696906 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11589093 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116351718 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123317803 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113275635 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105445419 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141563594 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110917754 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136221258 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104005862 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108625537 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134995743 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113567886 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134455147 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106861222 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110574918 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127419157 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107146569 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146696185 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111043083 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114060001 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13125229 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114021018 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134334984 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129527917 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117261965 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136238366 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109876517 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139251022 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115890517 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130603968 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115958918 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117586267 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132941883 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113817254 seconds)
  done (took 8.808008589 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143821744 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102432022 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128498843 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119639817 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137398179 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107878058 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106769104 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127889408 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107686168 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103191034 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171325164 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106618272 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134668845 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114942352 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105795724 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128046299 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108197551 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113689034 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125531887 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127392373 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128549874 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116248088 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114350484 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136984081 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117761263 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13233478 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107202719 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105838871 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128765638 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107632395 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11174229 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128440534 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116358691 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104053375 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137503258 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106559579 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127207698 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112687496 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106670985 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132903692 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115050334 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142981262 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108191057 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107540507 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140463871 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108625115 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107502592 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125507822 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108288586 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104232241 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140246817 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118730976 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1410859 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116188283 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106957697 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129400979 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108070265 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106188889 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129898202 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112329715 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135308517 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108654841 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128876684 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129336256 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108009968 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136535185 seconds)
  done (took 8.811227974 seconds)
done (took 166.261887207 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.147953902 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.186487426 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.143958306 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.177529419 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.093200101 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.127425931 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.147014758 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.146387424 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.09102232 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.114821425 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.093657264 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.094234422 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.183719589 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.093936757 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.092402169 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.116885705 seconds)
  done (took 2.93031199 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.191962749 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.30736954 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107053315 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.119413707 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099577547 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.09694321 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.119003421 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.100140014 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.09757014 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.127461987 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.099011767 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.093977872 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.128220935 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095478508 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.097464029 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.119695343 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.10762802 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.096963322 seconds)
  done (took 3.091914889 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.120891604 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.141203947 seconds)
  done (took 1.156013974 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.127980132 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.212732773 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.277062509 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.171108084 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.118033288 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.139334993 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.148538476 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.134115727 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.187437793 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.133752588 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.110463791 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.095428024 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.14634011 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.103618843 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.138350548 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.097512843 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.124513733 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.135514015 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.112655054 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.099678052 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.144364154 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.102752677 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.10325647 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.135811039 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.177939914 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.134343216 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.102600413 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.100989791 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.123548856 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.113442866 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.129391023 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.116942625 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.109352433 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.177589653 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.122910587 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.154487328 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.127417447 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.099916369 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.11219316 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.119834673 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.102819108 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.102251957 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.135672329 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097848761 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.100439415 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.128275824 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.10370579 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.101949585 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.129541771 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.105407896 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.130289109 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.107778885 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.173200773 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.10640627 seconds)
  done (took 7.841454837 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.867062308 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.139205212 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097733879 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.016908074 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.150119741 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112052259 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.88780522 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.122870653 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.256466219 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.892298996 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114023916 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.134085323 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.239523968 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.281893336 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.265923768 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.35824222 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.734041537 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.111386388 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152307861 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.138945057 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.131915154 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125069131 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.142345437 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.498338191 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.12281065 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.10026133 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.106708411 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.134770586 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.176850698 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.100660934 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.10246801 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.197173768 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.293136448 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.212784032 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098948959 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.121230966 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099527314 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.185995998 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.275442857 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.221669253 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.171277206 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11972661 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.09893578 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.107913351 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.141364337 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096171352 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.181004682 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.191936426 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.190062718 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105189038 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.112652771 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.132903924 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.107587097 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.179832906 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.096120004 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.358157805 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.387107403 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099671724 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106848519 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.137002018 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269238209 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.099861336 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.235990511 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.149944008 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215084637 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.098387136 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.841766231 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.185791171 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.09814984 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.13067467 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106957582 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127633588 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.10852142 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.187572143 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.480557231 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133570063 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104989502 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099305992 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.233596522 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.122051848 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100687025 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.179448243 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101362497 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.108160021 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.136559102 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.112292376 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.19012841 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.27140149 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.113248333 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.13108757 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.105612057 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.112457523 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.124044676 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.211059346 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.253885131 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.154707087 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.231725131 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.130750886 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.160037282 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.18474204 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128531388 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.166506818 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.129374167 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.117759492 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129047279 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.228799555 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.134656366 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.126772562 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.106454449 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.109005606 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.15911773 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103857854 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.131240889 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.165786838 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.559686607 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.18502208 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.096241671 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127173684 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110913987 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.179523272 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107731819 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26434977 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131178901 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.165215215 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.13016417 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.09732655 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.108585483 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.181059668 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132368197 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.110744719 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107462472 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132140347 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.278899794 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.225089279 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11421465 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.250823716 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.199398853 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.107592186 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.195510351 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108802806 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189857895 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108591062 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.131113751 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101729173 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.831114478 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.137048575 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.108540797 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.10404619 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.208180068 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099537893 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.124145665 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.100243786 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098523356 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.815639219 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.125474853 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099228314 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103186005 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.129179771 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.109757205 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108686545 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.128443139 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.156159587 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.269932711 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113438776 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12892491 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.101317151 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.178451973 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.101905717 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.100903907 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.122915021 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.102250367 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.109246893 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.126135837 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103948466 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.191527345 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.15364397 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.254821613 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.640217778 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.101534088 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.099442305 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.266241888 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101483709 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.327267388 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108852317 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.259682832 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163809451 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.12132924 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.365535639 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.186539567 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.185902417 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.125630145 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.168873501 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.119906803 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.11017044 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.180814832 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.1002717 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107642504 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.177540474 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.138100473 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.113990788 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.276614272 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.123689464 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.228655673 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.12126822 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.165517536 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.125303972 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108497173 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.327201461 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.123903891 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.118568458 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.180408377 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105179171 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.124835943 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.674294071 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.102284338 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.112907068 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.130708299 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.238161196 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.183101402 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.110361313 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.109662424 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.13656039 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.180021488 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.205765781 seconds)
  done (took 47.899370895 seconds)
done (took 63.80439256 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.266578239 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.176781609 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.28171323 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.175296642 seconds)
  done (took 1.890116855 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.241054606 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.155051427 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.198062157 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.120980352 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.203724287 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.119784632 seconds)
  done (took 1.959456861 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.175309412 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.167196664 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.144158397 seconds)
  done (took 1.407438805 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.197458714 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.220222163 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.322472939 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.256066769 seconds)
  done (took 2.003142278 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.262178512 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.114877702 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.122495667 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.20565903 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.22187619 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.202695369 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.121123308 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.171748428 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.127142443 seconds)
  done (took 2.507920325 seconds)
done (took 10.691732083 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.168962664 seconds)
    (2/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.372503173 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.310555927 seconds)
    (4/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.181188203 seconds)
    (5/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.347432683 seconds)
    (6/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.369919978 seconds)
    (7/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.316688031 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.193929843 seconds)
    (9/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.10836236 seconds)
    (10/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.365937586 seconds)
    (11/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.209605074 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.109265725 seconds)
    (13/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.249158802 seconds)
    (14/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.195990025 seconds)
    (15/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.268792103 seconds)
    (16/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.253297617 seconds)
    (17/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.327239571 seconds)
    (18/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.273424021 seconds)
    (19/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.107197317 seconds)
    (20/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.162824205 seconds)
    (21/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.251691572 seconds)
    (22/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.106214334 seconds)
    (23/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.195771394 seconds)
    (24/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.125527871 seconds)
    (25/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.150754687 seconds)
    (26/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.110567139 seconds)
    (27/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.165715877 seconds)
    (28/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.15131487 seconds)
    (29/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.077799197 seconds)
    (30/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.08236839 seconds)
    (31/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.271436959 seconds)
    (32/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.274580238 seconds)
    (33/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.189595805 seconds)
    (34/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.16893532 seconds)
    (35/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.119714237 seconds)
    (36/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.131917179 seconds)
    (37/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.169103746 seconds)
    (38/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.182478872 seconds)
    (39/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.213486624 seconds)
    (40/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.100965449 seconds)
    (41/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.104545856 seconds)
    (42/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.109430705 seconds)
    (43/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.076878618 seconds)
    (44/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.15102976 seconds)
    (45/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.084194597 seconds)
    (46/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.114712996 seconds)
    (47/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.125950726 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.101869269 seconds)
    (49/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.10440066 seconds)
    (50/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.135412666 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.18707526 seconds)
    (52/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.249954651 seconds)
    (53/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.114184063 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.143888716 seconds)
    (55/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.145288372 seconds)
    (56/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.168425333 seconds)
    (57/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.179185033 seconds)
    (58/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.127476712 seconds)
    (59/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.140994314 seconds)
    (60/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.150829145 seconds)
    (61/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.166931601 seconds)
    (62/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.124574302 seconds)
    (63/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.078130408 seconds)
    (64/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.104571114 seconds)
    (65/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.358506167 seconds)
    (66/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.194093052 seconds)
    (67/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.142217867 seconds)
    (68/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.216252057 seconds)
    (69/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.104743672 seconds)
    (70/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.08361824 seconds)
    (71/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.13842232 seconds)
    (72/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.212290859 seconds)
    (73/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.084127483 seconds)
    (74/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.082640961 seconds)
    (75/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.082754021 seconds)
    (76/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.152146562 seconds)
    (77/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.185072003 seconds)
    (78/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.103939898 seconds)
    (79/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.121383939 seconds)
    (80/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.101504567 seconds)
    (81/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.083873905 seconds)
    (82/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.108889419 seconds)
    (83/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.078261663 seconds)
    (84/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.101155245 seconds)
    (85/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.079403971 seconds)
    (86/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.191730421 seconds)
    (87/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.124409301 seconds)
    (88/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.145387604 seconds)
    (89/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.14421304 seconds)
    (90/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.078057238 seconds)
    (91/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.108127866 seconds)
    (92/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.084738638 seconds)
    (93/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.11010478 seconds)
    (94/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.078152123 seconds)
    (95/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.10504283 seconds)
    (96/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.153532606 seconds)
    (97/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.102315228 seconds)
    (98/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.178367659 seconds)
    (99/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.122091649 seconds)
    (100/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.108964568 seconds)
    (101/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.102386489 seconds)
    (102/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.126082335 seconds)
    (103/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.127271616 seconds)
    (104/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.126433933 seconds)
    (105/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.077033245 seconds)
    (106/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.129057633 seconds)
    (107/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.077777055 seconds)
    (108/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.077025275 seconds)
    (109/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.076841717 seconds)
    (110/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.082789362 seconds)
    (111/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.110012616 seconds)
    (112/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.111937004 seconds)
    (113/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.109162125 seconds)
    (114/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.131434283 seconds)
    (115/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.085459722 seconds)
    (116/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.12604288 seconds)
    (117/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.10629326 seconds)
    (118/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.124797132 seconds)
    (119/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.142349501 seconds)
    (120/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.141206415 seconds)
    (121/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.10362955 seconds)
    (122/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.086041613 seconds)
    (123/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.153754544 seconds)
    (124/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.152727151 seconds)
    (125/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.108159574 seconds)
    (126/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.078209368 seconds)
    (127/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.084348818 seconds)
    (128/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.083598147 seconds)
    (129/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.104038057 seconds)
    (130/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.106006118 seconds)
    (131/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.077742231 seconds)
    (132/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.120231104 seconds)
    (133/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.145904165 seconds)
    (134/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.081039814 seconds)
    (135/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.077427027 seconds)
    (136/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.124795076 seconds)
    (137/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.081572575 seconds)
    (138/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.078064778 seconds)
    (139/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.130360066 seconds)
    (140/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.079546114 seconds)
    (141/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.132533733 seconds)
    (142/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.109678067 seconds)
    (143/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.109909513 seconds)
    (144/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.164436326 seconds)
    (145/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.1386017 seconds)
    (146/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.07742864 seconds)
    (147/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.07638991 seconds)
    (148/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.132765349 seconds)
    (149/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.078370209 seconds)
    (150/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.085001951 seconds)
    (151/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.082701187 seconds)
    (152/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.108403851 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.102261779 seconds)
    (154/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.098599127 seconds)
    (155/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.106368612 seconds)
    (156/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.126546286 seconds)
    (157/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.085417481 seconds)
    (158/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.076649882 seconds)
    (159/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.08331449 seconds)
    (160/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.125747412 seconds)
    (161/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.101405032 seconds)
    (162/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.080178427 seconds)
    (163/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.121730584 seconds)
    (164/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.081998753 seconds)
    (165/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.080544535 seconds)
    (166/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.098574969 seconds)
    (167/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.08077922 seconds)
    (168/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.132713541 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.101226813 seconds)
    (170/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.10749269 seconds)
    (171/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.122572287 seconds)
    (172/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.111873133 seconds)
    (173/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.122311282 seconds)
    (174/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.102883685 seconds)
    (175/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.085453316 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.102508639 seconds)
    (177/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.110856027 seconds)
    (178/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.103382328 seconds)
    (179/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.109074114 seconds)
    (180/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.077802442 seconds)
    (181/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.084292506 seconds)
    (182/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.08005694 seconds)
    (183/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.108124968 seconds)
    (184/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.079531839 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.120731157 seconds)
    (186/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.080501832 seconds)
    (187/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.102381717 seconds)
    (188/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.102322148 seconds)
    (189/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.10114025 seconds)
    (190/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.121845062 seconds)
    (191/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.100407093 seconds)
    (192/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.107774489 seconds)
  done (took 26.675928858 seconds)
done (took 27.603433741 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.17608668 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.102681565 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.13319626 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.109844719 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.198068938 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.116455566 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.123651615 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.134706163 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.119169239 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.108272915 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.122735064 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.121748557 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.108215001 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.202603696 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.110785881 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.125283855 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.101782086 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.118623786 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.147611154 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.125887946 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.199201054 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103854017 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.118456123 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.099159455 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.200837305 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10142852 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.133202217 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.110450285 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.1207133 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.134372907 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.110335362 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.09972458 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.150575545 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.125044416 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099932198 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.133571356 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101742912 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.085641874 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.108770758 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.136578519 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.122532333 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111424598 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.134130751 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.103102585 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.110672536 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.135264108 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100771715 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.113315841 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.123865134 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.111421717 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103454493 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.150862741 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110254218 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.099353998 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.122576022 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.103899699 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.120723838 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.099879658 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.147319494 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.102519167 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.101529907 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.12571004 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.111961398 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100289635 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.133405419 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.102513379 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.113256035 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.135493481 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109005631 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.104019466 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100034067 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.133344872 seconds)
done (took 9.739388867 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.108454139 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.15684925 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.19976619 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.209729954 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.133428783 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.144450911 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.127358803 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.132928306 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.148429033 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.126532419 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.164747259 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.13440687 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.211678608 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.117342082 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.142506289 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.115111905 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.119510452 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.140582075 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.187894788 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.150910168 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.128958851 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.116516211 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.161337984 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.124505515 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.133932886 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.139833342 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.108320857 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.138462955 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.108934276 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.116039401 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.150545787 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.109268607 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.131444276 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.131980322 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.123230389 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.143714766 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.11964145 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.113733866 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.131891006 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.107579894 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.114402053 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.152492418 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.10836874 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.142710697 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.115696233 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.117636794 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.143524773 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.12056514 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.111439889 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.138608306 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.112077352 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.133475014 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.142177863 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.118668807 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.117006637 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.142616371 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.118860604 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.117055395 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.134042667 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.117273887 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.106682631 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.134793358 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.111958537 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.155126821 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.109659246 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.118164991 seconds)
  done (took 9.721869849 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.124683462 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.135568649 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.141511548 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.116446439 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110719302 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.123423453 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.100438767 seconds)
  done (took 1.822450914 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.101856067 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.18378902 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.209541564 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.208050756 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.17925656 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.219787434 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.150322007 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.101192903 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.136655722 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.136965187 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.183433548 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.238142112 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.110182124 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.142593877 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.211614613 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.100874104 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.213113034 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.102514704 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.115848118 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.20993026 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11901297 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.156536048 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.115378735 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.101571102 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.205346181 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.102227811 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.262526613 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.118047258 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.13630178 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.11527539 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11548784 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.207161759 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.207164295 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.116586298 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.10759718 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.209128598 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.204492519 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116104107 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.222626248 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.105981053 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.207089877 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.115206561 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115276862 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.142506231 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117109564 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.19540657 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.120564003 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.11547787 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.142180027 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.187686022 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.13787505 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.18183134 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.137691215 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.116251751 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.111725438 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.143621806 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.12327083 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.11514848 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.216187168 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11769561 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.210815484 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.210724433 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.180644613 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.210973928 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.149561074 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.184996819 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.202467834 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.114770286 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.109941623 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.144510224 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.18468528 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.140377259 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.113622495 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.198956819 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119833728 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.212207135 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.209012864 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113508628 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.114914238 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.130587454 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.115157886 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.101302704 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.201665558 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115107193 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113618028 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.147480381 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114868015 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.114755038 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.134364538 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.125722321 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.140501867 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.114965844 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.119804366 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.141002979 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.118660122 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.214818984 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.112846387 seconds)
  done (took 15.63758106 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.104649188 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.102312759 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.106438228 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.129018819 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.103466644 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.103572772 seconds)
  done (took 1.635253469 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.139370478 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.115306416 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.149853986 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.118577938 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.160575144 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.215580892 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.216912553 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.110813398 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.156972533 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126142186 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.214367456 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.192066987 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.218896807 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.138056931 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.219785282 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.117114582 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.221887329 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.114172075 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.150990407 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114621931 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.115490394 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.144947255 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115353672 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.206981643 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.1159592 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.142479057 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.111686227 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.12447476 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.14900419 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.112536036 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.118995104 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.143536688 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.110172255 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.110472098 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.220421805 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.108144053 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.139898505 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119234244 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.11907848 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.144867262 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.194043759 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.140900524 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.123253287 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.11872564 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.138783786 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.10918866 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.145362236 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.110951995 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.220126292 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120056902 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119318696 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.164197536 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.11852882 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.118978984 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.136586946 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.111135167 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.119313942 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.221278398 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.118988805 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.135932891 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117989498 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.11623744 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.137385994 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.121081888 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.14388478 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120442393 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.109050255 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.142441829 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115595852 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.1174093 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.144311671 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.117954189 seconds)
  done (took 11.163275242 seconds)
done (took 40.943000816 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.66766835 seconds)
  done (took 2.652491381 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.880101828 seconds)
  done (took 1.864268463 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.038670853 seconds)
  done (took 19.052510497 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.419812474 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.465444636 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.154086468 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.146033692 seconds)
  done (took 3.168126423 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.825749921 seconds)
  done (took 1.836229896 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.283823688 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.260668336 seconds)
  done (took 1.537068551 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.713993529 seconds)
  done (took 1.717140758 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.510765628 seconds)
  done (took 2.500640965 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.283237984 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.240903103 seconds)
  done (took 1.527976653 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.609163598 seconds)
  done (took 1.612206818 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.225288088 seconds)
  done (took 21.230479355 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.25322317 seconds)
  done (took 1.264762629 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.286740546 seconds)
  done (took 1.298669643 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.51959915 seconds)
  done (took 4.532792691 seconds)
done (took 66.793475899 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.113912854 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.115850396 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.115026773 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.138787381 seconds)
  done (took 1.482342045 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.121970508 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.117220034 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.144562613 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.116845152 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.121642308 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.115742881 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.141326652 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.118441515 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.116086768 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.14441648 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.117670302 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.114962779 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.145404074 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.116397265 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.1129205 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.14392618 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.119622606 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.117683938 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.143352102 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.118413976 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.117112732 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.144696885 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.120796248 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.118505945 seconds)
  done (took 4.020120421 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.113940098 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.106686794 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.108818809 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.131714632 seconds)
  done (took 1.475461217 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.124423422 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.128268115 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.151559276 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.124210988 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.127088189 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.152250501 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.116370831 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.113276045 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.141952001 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.12525483 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.131432841 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.155160289 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.128000054 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.116335035 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.152331787 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.110640298 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117330871 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.153359978 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.122070622 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.149243839 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.118343841 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.122594993 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.144815718 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.12607102 seconds)
  done (took 4.162930558 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.191905023 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.129639116 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.17400742 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.159668146 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.177764907 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.114783044 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.144770928 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.150284986 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.122910224 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.14450427 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.120698852 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.160494281 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.148615876 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.119808904 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.11658992 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.147712758 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.12849721 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.146927569 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.164222993 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.121319247 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.148449704 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.129615655 seconds)
  done (took 4.180328511 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.121420756 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.107747878 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.126929662 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.108232784 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.118419242 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.134569736 seconds)
  done (took 1.735759298 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.106036342 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.101819168 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.101562976 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.126523093 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.105055449 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.100970375 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.100226887 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.128256709 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.102000012 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.100949632 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.127460037 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.101085584 seconds)
  done (took 2.313706212 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.324753557 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.106100634 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.13144505 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.107497027 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.109832183 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.104815316 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.14937285 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.104588279 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.26314625 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.105680052 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.13078608 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.1908276 seconds)
  done (took 2.848724034 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198082201 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144087672 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252876343 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.365970685 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182831545 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15619165 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.294692342 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187402574 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.174073746 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160317802 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206458284 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157150448 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149063065 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208163593 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136291915 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.183741069 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15883368 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230432394 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166023153 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205937982 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179438598 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19682611 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186392865 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172990554 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138764534 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186156024 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.11737394 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124991093 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188766978 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187777294 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170533134 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172930652 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139091041 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212803951 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250549542 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169606405 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269684322 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157550839 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.169379498 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.209884841 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255576843 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137531855 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212848223 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174897908 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127278665 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206229034 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149862385 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.207307078 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.131912253 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168175099 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178298402 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201189609 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.199712426 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135253235 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.306503634 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132741464 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.165509216 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16319175 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211352774 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221881483 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17482082 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.146303764 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174909294 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213931494 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235173585 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.139044098 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.187877504 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122556216 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187852095 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19960594 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202900205 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183191225 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.232379251 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129904741 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19284891 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167404228 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176976288 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201410526 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197585886 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.116595775 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177085115 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131546884 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153282206 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.190431613 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118382087 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239030287 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155386417 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.343980378 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179171394 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180074222 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157995696 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184509188 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158470638 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172429016 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.101276679 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13860604 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.18690706 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179488087 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127638563 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152665179 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164724971 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.123883219 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17553567 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.121273201 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188299989 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.133349881 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157414516 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193081833 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.129136341 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.2009071 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170632173 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.161959887 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190623037 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189873054 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15514705 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131719592 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241598536 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163857134 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.161023607 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169703655 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.219409887 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.175227087 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132421704 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188196448 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190010117 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16814729 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195672809 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16261191 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130864941 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.16407112 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16785787 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18508298 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.15115777 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152550807 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.162476568 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214161982 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.125000408 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164524794 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175771348 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158987252 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122520517 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159873389 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133275935 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.138480711 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.173171252 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.135205465 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176878612 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16260658 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188437577 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153271561 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15999839 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169375118 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156985415 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.165931701 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172958955 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.118258678 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.197100407 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192885923 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154685264 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177061161 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.185432197 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206997911 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169512376 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154950569 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180336666 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150917096 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.119248847 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156898268 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.198338633 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186908697 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.183862134 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206716056 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.189303527 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.159397284 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174307295 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163509525 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.20807884 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180886254 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.141490816 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195833597 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164927661 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.144949996 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.121752043 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.125846105 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161008867 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128957944 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135199242 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200931565 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187378411 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177367941 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190715511 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133882321 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.21502447 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.12314287 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184051736 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.19751258 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136866636 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.210233756 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187119611 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203325099 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137774702 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187853969 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.118335467 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151233454 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.132659177 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158055455 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163068323 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133517083 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166166366 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187341772 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197115164 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145562234 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218851447 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188343937 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.225624497 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.118276187 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.160532981 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195460712 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188984015 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.181862271 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13288796 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.186400516 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188528548 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166795328 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216696653 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164653266 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20336625 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191621526 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.189340757 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127712054 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173110964 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158825766 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164596765 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160776235 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172870175 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128203475 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175645405 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.137631855 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137551303 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207265119 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167970935 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174579491 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.184465809 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167933333 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152506277 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140771236 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200355823 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142026578 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.103712356 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193877342 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219526098 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148591733 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181584691 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169950012 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156569624 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.314749131 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21217378 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199933917 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133067606 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134184757 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196688034 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183916477 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160997921 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209534179 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14000859 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23296924 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166029434 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.169545783 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127998099 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173613767 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147720704 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.166065854 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149581632 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.187213505 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140429933 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210360025 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133777077 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195523861 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172819318 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.174116037 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.154353274 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164058095 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221712218 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191661285 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197282408 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.161906432 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.190516124 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17947856 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149718991 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123830751 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.129487773 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210793153 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126091661 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202402298 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.193286041 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182467441 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198946903 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186887966 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139554539 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.124282335 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192408707 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146378369 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211967558 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159598249 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.136740206 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212667816 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.127229168 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127945138 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186351115 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292744007 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146916796 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197526804 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.105628244 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.289289212 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12804291 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129061775 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188898514 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165835259 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.159482853 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.180393452 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197310037 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137516365 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188363522 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133397885 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204468246 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183447977 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191720593 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198709859 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.142420882 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188761489 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156993063 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199898306 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143754989 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.173792837 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156027801 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219558597 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.176317883 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.158551477 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166530123 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194364764 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166904667 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200435898 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135930196 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207578303 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124813245 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19258408 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136028855 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151285399 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158507277 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.195621439 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128440849 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201122624 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193480854 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129308421 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125395577 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17246859 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162511423 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166594856 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.128113029 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211126956 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.1271759 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206747858 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204707866 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155969837 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163453683 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172078198 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128572218 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162404974 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142875893 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128263862 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.198604174 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177903319 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.157566834 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174028817 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19010919 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159504902 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18537832 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141061947 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.354924277 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.127054095 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216563228 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147683203 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223546965 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1470211 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202301654 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166545462 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176354913 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160079636 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17412033 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.221021252 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19183411 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.191165853 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130748267 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140617587 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164455941 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.13225915 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179194985 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165864838 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166295575 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.134549789 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.161584942 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170661454 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.143561339 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16937346 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19713876 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176920476 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213243654 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186419447 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164065185 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171765782 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201342636 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126181528 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.191858001 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167123711 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17248705 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147789064 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.160891406 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.13591832 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238576559 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.123150984 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183764256 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170998353 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1938033 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170175639 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.161932644 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173613948 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167094149 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172270073 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151779019 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.152548262 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195766456 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133215307 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.124410935 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197546758 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15473442 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.192508218 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139243708 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.201074855 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19239707 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.151482386 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13246382 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292918003 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15812909 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221489183 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.134992069 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16458661 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14391197 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184601109 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.163156518 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195568482 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.129711134 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12761182 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.171369578 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.15770123 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.166822372 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166133208 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19720021 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157816868 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213113794 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.133633952 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.284506288 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139248287 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195812819 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.11584596 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.125887198 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167061688 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13237695 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166425221 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181884606 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238277545 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.190562997 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.145693675 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161281228 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126730119 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127874543 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192022622 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149087507 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19319685 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145087025 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.102389757 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167350812 seconds)
  done (took 84.966428606 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.159789573 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.150902587 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.168557621 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.222391607 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.197133915 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.290186355 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.229421591 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.246293846 seconds)
  done (took 2.767380762 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.119860061 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.158107998 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.142674956 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.141793677 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.10808088 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.440289877 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.129840056 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.146526982 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.16058424 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.149572895 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.133325906 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.528359821 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.115885089 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.142305172 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.120131241 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.133185399 seconds)
  done (took 3.968233509 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.64103372 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 1.044140374 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.97656562 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.289450157 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.258878062 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.19827258 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.743057818 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.194077638 seconds)
  done (took 12.449278507 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.153504766 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.145253943 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.414682227 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.248147873 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.201572317 seconds)
  done (took 2.271817225 seconds)
done (took 129.64349984 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.121661656 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.121282547 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.120796474 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.151403688 seconds)
  done (took 1.61236971 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.174981394 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.090680594 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.09210752 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.116832402 seconds)
  done (took 1.583677969 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.408544553 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.089259848 seconds)
  done (took 1.632837096 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.156687286 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.134107235 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.165284408 seconds)
  done (took 1.577522912 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.138156554 seconds)
  done (took 1.248210243 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.123195975 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.124934516 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.22714888 seconds)
  done (took 1.589961947 seconds)
done (took 10.359700993 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117457813 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.925584163 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.429682718 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.130141676 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.722307584 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.424072654 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.418658942 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.172607882 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.171575742 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.135026391 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.129217231 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.686012302 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.428626157 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.874917423 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.390182952 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.904094126 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.693558469 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.10935173 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.14229837 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.10933875 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.401350189 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.135426544 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.109482897 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.109253948 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.718462738 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.417880502 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.107177895 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.9160114 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.107917224 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.110832787 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.424401838 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.108408419 seconds)
  done (took 20.883872994 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115513318 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.163409707 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.143715895 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110521036 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111262615 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.137472509 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.121179232 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.121435606 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202342907 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.107145995 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.158504845 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.108899338 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.11330117 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.136810558 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.135279077 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.10826961 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.138307358 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.111975185 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116890213 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.137334671 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.130913447 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.107111126 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.137394938 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.111982667 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.108907767 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.156910969 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110534552 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121728111 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.136304299 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.113461617 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.112515499 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.136091372 seconds)
  done (took 5.207292886 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.155885406 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173494248 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.144918217 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.145511753 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.184788525 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.111182854 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.222353536 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146880703 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202057627 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.112763139 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.129652917 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.136049548 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.149291719 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.108968449 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.162195236 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.108753694 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.110886701 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.13920398 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117397977 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.109470328 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.158769408 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.107191912 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.108814129 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.13934376 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.108688858 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.131229921 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.138674006 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120860019 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.134320615 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.113777876 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.114548662 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.108027234 seconds)
  done (took 5.473176148 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.122949004 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.123721331 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.130662217 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.160231668 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.119456637 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.121629266 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.150519556 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.118157484 seconds)
  done (took 2.177005313 seconds)
done (took 34.857852297 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.135585756 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.129955242 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.131005635 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.154184038 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.185963373 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.14734115 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.127807341 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.117007241 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.152491252 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.131617035 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.107819839 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.145663208 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.130342605 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.121902747 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.217858427 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.125809321 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.222253868 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.188094918 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.148218207 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.125785867 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.118687064 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.222826154 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.122686335 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.147575567 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.191487457 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.112422961 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.211934678 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.120425562 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.151945786 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.112801897 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.220130537 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.122643768 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.117776731 seconds)
  done (took 6.036095821 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.203810013 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.118347718 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.146995243 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.116919413 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.118463167 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.145742221 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.207820887 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.146113061 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.117650969 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.117428414 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.115332272 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.220334109 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.123589513 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.142964194 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.120262563 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.108244202 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.237440282 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.120204983 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.107695968 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.120769862 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.114029796 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.116543822 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.251343829 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.113370794 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.115454823 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.146588158 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.120426437 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.121332802 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.148341014 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.120281543 seconds)
  done (took 5.35636703 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.123781134 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.129418134 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.133906874 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.214246176 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.147014743 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.157650839 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.138167736 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.131333742 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.16907912 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.111910715 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.125942104 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.176933422 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127754506 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.120515309 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.145423512 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.130840599 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134262115 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.142419271 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.120536609 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.128612389 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.161339841 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.129431776 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.134180634 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.148611313 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.110382915 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.118968225 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.14973699 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.126213243 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.119806212 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.154794644 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.114480784 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.115357906 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.113280601 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.177316548 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.11470426 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.153374944 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.13775232 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.123586949 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.152721372 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.145746796 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.115181384 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.142693548 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.138612303 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.16510103 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.141988038 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.125729696 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.122596116 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.154837085 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.11124943 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129413955 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.18246727 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.113005419 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.133742118 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.138454398 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.111309964 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.119716313 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.11208159 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.144237324 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.126173422 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.11393974 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.165738575 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.118597143 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.121682145 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.143990723 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.123192164 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.109950216 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.13923267 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.118127386 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.137425713 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.147710161 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.14881615 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.111774762 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123075124 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.154676971 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.123483789 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.124136248 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.141666642 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.123536181 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12133375 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.148111395 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.12605559 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.114485996 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.143004005 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.129635474 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.133358115 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.155871978 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.124432711 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.124887921 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.144924474 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.115261118 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.128961552 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.139767605 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.118471996 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.125503092 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.111577502 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.144743929 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.125891893 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.122541601 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.139661301 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138314653 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.115079562 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.140709357 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.137637861 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.114477711 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.145933612 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.123155212 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.152971574 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.139841535 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.123582835 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.125873331 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.139615002 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.121376639 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.116512145 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.110768746 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.160106055 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128038057 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.118386099 seconds)
  done (took 16.759985961 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.316250245 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.271302342 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.211913674 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.242092773 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.125021414 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.238150003 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.300165015 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.304236231 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.110703031 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.182047281 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.163111393 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.270945487 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.142773026 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.142384268 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.303951967 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.358196353 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.17094043 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.150291368 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.17860163 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.126920433 seconds)
  done (took 5.457263437 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.132934693 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.14721436 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.164376248 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.141759241 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.122328549 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.157992908 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.113138853 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134698114 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.152158437 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.123269659 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.114081701 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.15725914 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125643392 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.128567349 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.156241671 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.145461025 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.119536169 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.147865076 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.136433219 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.116412736 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.130303746 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.138932487 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.120727385 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.16486098 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.132039826 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.12314266 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.140424145 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.119061318 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.11843349 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.150677195 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.11798443 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.129048827 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.148813592 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.107986255 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.123292312 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.126199655 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.147957879 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.115303398 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.117929591 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.145798061 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.127632461 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.125303796 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.149747516 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.098336346 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.130971434 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.108242536 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.156452994 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.125434629 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.105161156 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.161851681 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.125007604 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.12623289 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.118727811 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.164897715 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.119494694 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.129557412 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.153885121 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.126981887 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.117310212 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.140049863 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.110728495 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.115237757 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.15015305 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.127663556 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.123805562 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.162352562 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.130028497 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.111470534 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.146236354 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.11791787 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.116066437 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.155445574 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.134585489 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.121310721 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.148533284 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.126265914 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.120117028 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.092927351 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.151734907 seconds)
  done (took 11.585149342 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.138485677 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.12511302 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.159606487 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.149915894 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.128023908 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.117913829 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.155093822 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.132850443 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.129576341 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.163190305 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.131673041 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.125277554 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.165058565 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.123610874 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.121877281 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.158528193 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.12885911 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.178275238 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.133314789 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.139763528 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.16006199 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.119222795 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.125479956 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.122460996 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.173462866 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.123506293 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.168704794 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.129002521 seconds)
  done (took 5.084526424 seconds)
done (took 51.410197802 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.302221606 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.478832718 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.255154426 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.253267337 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.284276507 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.261752691 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.255402708 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.272030153 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.724539389 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.227909075 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.252943997 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.263343653 seconds)
done (took 28.987948172 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.333884249 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.807751195 seconds)
    (2/2) benchmarking "String"...
    done (took 1.541995037 seconds)
  done (took 4.495323547 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.243665071 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.245276046 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.493061453 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.24426135 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.260396177 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.247523384 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.24390515 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.254491225 seconds)
  done (took 16.134533023 seconds)
done (took 26.3550248 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.302531956 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.41780171 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.479815967 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.254801002 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.255799202 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.243159421 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.248839271 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.267399204 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.260029467 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.261091421 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.651901073 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.504691685 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.247280059 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.601764741 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.252831566 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.275794537 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.246731523 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.462604464 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.250331108 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.27874234 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.225268146 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.229990704 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.254724467 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.245351054 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.251780637 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.263504152 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.273451944 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.253768343 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.419171119 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.275301041 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.278369302 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.249842899 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.275038339 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.249055859 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.256259336 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.253068523 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.435921903 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.256579455 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.233707152 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.269272341 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.437002742 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.251224606 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.260512895 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.25100716 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.266686357 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.297360602 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.250500887 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.362226521 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.268140683 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.251770703 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.305624289 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.623419357 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.251320624 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.249246977 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.261100652 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.474906325 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.26628848 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.307059989 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.272379405 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.249166749 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.262236377 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.252072549 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.250174715 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.252569741 seconds)
  done (took 146.53622691 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.248973395 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.250190704 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.249612461 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.251643696 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.254083224 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.250118478 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.248146523 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.248500978 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.249069868 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.276297387 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.254808282 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.249282847 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.253481106 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.204163227 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.260790927 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.271946504 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.253338045 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.267176334 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.260392283 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.250760604 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.256204042 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.252415892 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.268036283 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.249583437 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.292454842 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.327825501 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.27703006 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.281573858 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.263946301 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.250538222 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.290249371 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.258680938 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.86644294 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.12392176 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.254059144 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.269484631 seconds)
  done (took 81.986992342 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.252149307 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.251237293 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.249976856 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.28225798 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.251976591 seconds)
    (6/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.250343915 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.825888516 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.828407106 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.231251548 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.294233016 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.594988113 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.475087379 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.251455412 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.342890879 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.252314434 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.263252915 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.254141672 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.269205461 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.279981449 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.252972346 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.251756497 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.828647285 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.267906695 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.46169028 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.432692984 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.268541713 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.28545771 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.644244904 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.252827058 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.285691277 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.583528606 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.302271797 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.252734255 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.586528445 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.347748339 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.36391413 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.254819267 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.286290348 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.251475603 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.53521025 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.253293789 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.254147075 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.257161815 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.889751274 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.258071505 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.831540323 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.25825855 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.205111304 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.253302404 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.254140683 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.204329533 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.942134354 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.257482867 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.253312934 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.256032886 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.253984082 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.254254174 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.287259964 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.164336425 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.352129763 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.255835009 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.257664094 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.288042978 seconds)
    (64/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.254379452 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.255257459 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.300250837 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.256489958 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.578720557 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.315338689 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.355441312 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.833006031 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.259003421 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.34974885 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.372573648 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.255446477 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.25562289 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.255718998 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.254502155 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.36753006 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.255131486 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.940553772 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.254587207 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.432185497 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.272550609 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.603536538 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.357275462 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.25538001 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.584502898 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.260050946 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.255542268 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.950923885 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.350223772 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.257226798 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.255559136 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.257039811 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.940591026 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.834647358 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.497035721 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.261616169 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.773280178 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.26062625 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.120855842 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.819861885 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.905280746 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.262231582 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.366568915 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.433751765 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.275364843 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.257903306 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.606258985 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.261676049 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.311089581 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.257864452 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.659647747 seconds)
  done (took 378.762729862 seconds)
done (took 608.434094812 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.162022739 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.105804311 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.250234187 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.117280043 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.099899598 seconds)
  done (took 11.892181147 seconds)
done (took 13.051590394 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.456840403 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.457025127 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.32016621 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.460339126 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.290911905 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.474404933 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.436813179 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.281215752 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.374989978 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.347585472 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.375014928 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.316213282 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.293633477 seconds)
  done (took 19.043038261 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.535031487 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.268501538 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.326873757 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.513478843 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.303875908 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.541655606 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.590148783 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.271529442 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.432067365 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.304799626 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.281920515 seconds)
  done (took 18.529353919 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.53675956 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.269383128 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.327972765 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.523718412 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.306382808 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.547234516 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.573323912 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.270624588 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.411509929 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.284534823 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.281944836 seconds)
  done (took 18.491767002 seconds)
done (took 57.224671471 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.29974642 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.360618937 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.294413833 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.280615255 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.279032724 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.280411409 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.282611075 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.2790041 seconds)
  done (took 11.516674594 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.279159153 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.276497326 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.277284244 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.275600412 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.276889555 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.278205915 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.276254557 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.278475552 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.277364622 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.278086292 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.278508935 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.278138542 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.278835029 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.27811551 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.278435997 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.280586022 seconds)
  done (took 21.606671223 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.280516824 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.277460405 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.278082045 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.276932152 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.278010372 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.278935508 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.278185372 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.277406578 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.278807015 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.276654774 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.28023855 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.277703411 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.277828832 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.280926795 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.278803313 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.280407099 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.277444832 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.27895069 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.283884962 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.278045204 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.278733612 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.27964048 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.279087945 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.279910908 seconds)
  done (took 31.853940703 seconds)
done (took 66.138772268 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.263356847 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.277885798 seconds)
  done (took 5.70461211 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.339691157 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.340073434 seconds)
  done (took 3.843656945 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.281482499 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.282262372 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.281745142 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.281104782 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.280341955 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.280998129 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.279810391 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.280986972 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.279684524 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.279840352 seconds)
  done (took 13.971925997 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.281357404 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.281808398 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.279470797 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.280932514 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.280633794 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.280813396 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.282630767 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.279927918 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.282164164 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.28188999 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.28314131 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.282530583 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.28188996 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.282296234 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.281714061 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.281728387 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.279943113 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.281198832 seconds)
  done (took 24.229487854 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.295749119 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.299968609 seconds)
  done (took 3.759483081 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.408688797 seconds)
    (2/7) benchmarking "second"...
    done (took 1.324120479 seconds)
    (3/7) benchmarking "month"...
    done (took 1.387081904 seconds)
    (4/7) benchmarking "year"...
    done (took 1.37980999 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.325016572 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.30290145 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.322988321 seconds)
  done (took 10.613899199 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.282036385 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.485574986 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.621512176 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.881807436 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.281575017 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.286805214 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.205924524 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.286904164 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.288749448 seconds)
  done (took 14.785184664 seconds)
done (took 78.072570685 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.277941133 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.337364277 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.282259161 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.282683302 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.622761922 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.287531008 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.272469361 seconds)
done (took 16.530396086 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.257607452 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.251003634 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.249033547 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.282023029 seconds)
  done (took 10.205414842 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.268623694 seconds)
    (2/2) benchmarking "read"...
    done (took 1.597025783 seconds)
  done (took 5.031295686 seconds)
done (took 16.404598627 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.285006532 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.2840397 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.284685834 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.283255948 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.28423949 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.28548856 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.285100097 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.284217107 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.28561522 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.286009192 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.284373836 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.284494206 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.284589657 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.284638589 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.285444034 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.285427025 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.283651649 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.284260653 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.285810212 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.286121136 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.284770535 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.286519187 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.284732051 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.287114483 seconds)
  done (took 32.006321106 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.284722376 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.288571186 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.284976749 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.285617851 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.285135895 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.284267364 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.286268705 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.285520161 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.285553307 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.284726392 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.285978277 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.285943704 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.287047402 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.284302236 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.285617464 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.285214888 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.286523667 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.286048594 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.28625178 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.28483367 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.285699899 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.286124896 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.284820651 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.284919019 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.286769967 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.286957639 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.285089285 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.286681794 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.287068536 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.286414529 seconds)
  done (took 39.741059324 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.288253388 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.287219371 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.287227635 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.2864087 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.28693279 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.28799584 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.285859231 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.289384169 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.286188129 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.287307266 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.287435911 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.288446448 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.286356631 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.286521235 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.287501676 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.288144981 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.287361086 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.288322956 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.286634455 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.287697174 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.286779947 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.287573577 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.288058748 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.287563174 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.288861618 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.288115899 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.28738058 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.287621643 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.288660597 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.287910548 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.288790113 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.288286147 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.289451961 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.288872677 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.288635845 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.288292768 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.289885941 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.289413358 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.289446876 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.290533632 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.287666685 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.28841498 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.288641333 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.290070503 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.290093545 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.28900483 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.289711329 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.290126643 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.288435495 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.291263416 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.287501223 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.288575854 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.288210516 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.288350069 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.288080664 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.28938179 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.288453743 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.289787626 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.28922976 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.289924231 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.291322093 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.290054143 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.290461128 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.290104805 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.290533121 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.290685162 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.289939842 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.291093493 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.290898851 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.291001602 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.289574291 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.289560658 seconds)
  done (took 93.954389269 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.290140236 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.291060325 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.289376492 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.289525284 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.29003186 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.289262592 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.290511449 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.290640838 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.289783185 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.290490649 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.291632285 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.290420164 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.290724376 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.291210028 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.292155482 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.291082069 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.290792179 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.290498243 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.291533889 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.291858151 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.291162974 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.291576402 seconds)
  done (took 29.568011389 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.290943022 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.294109494 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.292085616 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.293074249 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.293662107 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.292829259 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.292375244 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.292938445 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.292015389 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.292113631 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.293168111 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.293140449 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.296372164 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.29251718 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.293522737 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.294493258 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.293401137 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.294436883 seconds)
  done (took 24.450473981 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.291934051 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.293096342 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.292523253 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.293414245 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.293349401 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.294140338 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.291401984 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.294047863 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.293753927 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.29351424 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.29232681 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.293016901 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.293435559 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.293590954 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.292388738 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.293682016 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.293840238 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293924634 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.293721085 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.294237992 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.293411741 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.294762758 seconds)
  done (took 29.628994936 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.295083811 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.293535417 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.294165746 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.295830366 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.29506262 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.293547167 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.294292497 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.294516742 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.295656516 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.295159824 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.294469136 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.296193589 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.297017111 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.294361147 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.294582675 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.295375388 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.294772153 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.294824861 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.294359261 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.294617172 seconds)
  done (took 27.072801084 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.294582398 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.293753627 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.294857003 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.296384983 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.294436343 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.295844087 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.295165728 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.296448519 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.301484495 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.29557451 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.297018315 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.296096262 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.296484146 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.29742344 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.295976017 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.296807653 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.297284823 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.295702327 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.296332868 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.296509996 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.297724804 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.297091214 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.299772406 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.295937176 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.296590382 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.297738037 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.298888011 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.295986705 seconds)
  done (took 37.481766474 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.298085685 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.295751111 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.296289581 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.297891308 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.296461262 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.296996053 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.297282216 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.298565302 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.298251995 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.296493909 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.297701397 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.297934869 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.297511296 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.29755575 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.298087815 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.298308223 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.297468049 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.297240646 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.29750637 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2987073 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.299498633 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.298782287 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.299345044 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.296869694 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.298605246 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.29902396 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.299553632 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.298010038 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.298566298 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.299664969 seconds)
  done (took 40.116077479 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.317311798 seconds)
    (2/2) benchmarking "in"...
    done (took 1.315751228 seconds)
  done (took 3.812273386 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.299186354 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.299386415 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.29777224 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.297796815 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.298826274 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.298900557 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.300648836 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.299925859 seconds)
  done (took 11.57090657 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.291595592 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.302671657 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.301568439 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.300281906 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.300802309 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.292054897 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.299131881 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.305523574 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.294605784 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.292747173 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.294366569 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.293751759 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.296484025 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.293078207 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.294991906 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.297294362 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.303601158 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.300845417 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.301276261 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.301048798 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.300954259 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.295746249 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.298271061 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.305005481 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.294152456 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.30129088 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.301849192 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.305673628 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.295113402 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.299788428 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.297781128 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.30482534 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.302768925 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.302304539 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.302041939 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.304765752 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.303673198 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.301687806 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.30313927 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.305980182 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.302827288 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.303014072 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.299650477 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.30111453 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.300330286 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.307375424 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.303940501 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.303138265 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.295106689 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.297607682 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.306057429 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.294457621 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.304637473 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.300002238 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.301004595 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.306384997 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.311949979 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.296633916 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.297218134 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.304275337 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.310615321 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.305153092 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.301692495 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.307865838 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.301606729 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.303220381 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.305916887 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.310757615 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.304617611 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.305052824 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.304579452 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.31284509 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.308946382 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.309465176 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.305343547 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.304577103 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.297146254 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.307850827 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.306105696 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.307850803 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.31101654 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.305888781 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.301837417 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.303146195 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.300488257 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.308218219 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.306969624 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.304279577 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.297779523 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.307480002 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.313735633 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.305322191 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.296917545 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.300650163 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.302428458 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.306629566 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.297138699 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.301608808 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.309934374 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.306485309 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.305647356 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.298515735 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.303029847 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.311274237 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.305710652 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.307787786 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.312753938 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.300903704 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.310374311 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.313458638 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.305580087 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.299712045 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.303455372 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.309948099 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.299596409 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.30318672 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.311757726 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.303737043 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.310603917 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.307218089 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.303904377 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.311641992 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.312973997 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.308209595 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.30175321 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.311323534 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.305712532 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.304648393 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.31440288 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.307825836 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.307798042 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.304530089 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.315431255 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.302681582 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.311265615 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.301486256 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.312302078 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.309089444 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.30789858 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.304308296 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.307463813 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.30648743 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.307924125 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.311286354 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.313772367 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.306723761 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.315348891 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.307574421 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.307054275 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.310614289 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.315542852 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.310081787 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.30270289 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.31283628 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.301479812 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.313325094 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.301886046 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.313351616 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.309297682 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.308703699 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.309167162 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.301389293 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.305223472 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.315630597 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.307876319 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.310014415 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.313069392 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.310855006 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.310885883 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.303026587 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.312761605 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.302176652 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.304908544 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.312765648 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.310362858 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.31048138 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.30838504 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.318587039 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.31103531 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.312081842 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.304070247 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.308794554 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.316779465 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.31308691 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.31782563 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.311396244 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.312808614 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.306361735 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.306747942 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.31393318 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.304590856 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.315083885 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.317760424 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.319055687 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.308930303 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.312998071 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.304283463 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.312814888 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.311184329 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.31918471 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.313156104 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.312700701 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.305386189 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.316047472 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.307747883 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.315257177 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.305407055 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.314861481 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.313899273 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.314013491 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.312991276 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.306713721 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.309001856 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.315524926 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.313248652 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.315014323 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.306338596 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.314933645 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.305809348 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.307966104 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.315732386 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.313564546 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.314118688 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.319888866 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.309070163 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.315766461 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.312619852 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.307427456 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.315457298 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.311499897 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.315306304 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.319388461 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.316628373 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.31035102 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.318535032 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.317116966 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.307748602 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.314248676 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.3233614 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.315752145 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.308450236 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.31747537 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.315038102 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.314405108 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.315020442 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.309051458 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.318294601 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.316551728 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.326286414 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.308212207 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.318017561 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.308707168 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.320471748 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.311459624 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.31666884 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.314669229 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.319267306 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.323209435 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.314448109 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.311038672 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.31999454 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.315507586 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.317767207 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.308690329 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.320676104 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.317750673 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.317475009 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.314280857 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.31318448 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.318690079 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.308166586 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.318692232 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.309790772 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.325528478 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.332749742 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.318055223 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.31955894 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.319620053 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.318454348 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.318206831 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.311131203 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.312609766 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.313841729 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.312962761 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.310469698 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.319975935 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.31286155 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.322568155 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.315811876 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.317481752 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.319335417 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.319599058 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.310817712 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.320037431 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.316725391 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.317207113 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.309504471 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.3187682 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.312077176 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.319495668 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.32030851 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.31308273 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.324166425 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.32333461 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.31632233 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.315643753 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.313650238 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.312007429 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.315308973 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.323409427 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.313074119 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.32215483 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.312024278 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.317073189 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.314167597 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.323590648 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.329439191 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.312916308 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.32238556 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.319537868 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.310882717 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.313861403 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.320108838 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.323650704 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.331788486 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.312877663 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.322006519 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.319607296 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.318948918 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.321517767 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.320052582 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.320406731 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.319503494 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.324688156 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.325098988 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.316284935 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.322261177 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.330419201 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.319939684 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.320970036 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.312938546 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.322391055 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.330513485 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.315950981 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.319657755 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.317955251 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.325102479 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.322504956 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.322263005 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.32089387 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.321564814 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.325505308 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.325950913 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.323743431 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.321939506 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.324944982 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.333251802 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.32599101 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.333598043 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.316950838 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.326863982 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.32309226 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.319002814 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.31849304 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.319376712 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.32508281 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.314425407 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.324637839 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.32246381 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.318540288 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.322526151 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.329311069 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.315526382 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.323438373 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.330335595 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.314816213 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.324482069 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.323375581 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.313890625 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.324937619 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.323094271 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.315690931 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.317191201 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.318257519 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.326951213 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.317541115 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.326907577 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.31812339 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.327418944 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.323401451 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.324469864 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.323687963 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.324562358 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.318097382 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.325281712 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.324090076 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.332582314 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.319332806 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.323507723 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.320283559 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.330355572 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.334247106 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.319969409 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.329378977 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.324961127 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.319052722 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.322419949 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.32874483 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.319037118 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.329419085 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.317703185 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.321009773 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.320112269 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.326031073 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.329271805 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.32926842 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.318069439 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.321176002 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.326202926 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.326373711 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.325616158 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.322178678 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.332034795 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.319623462 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.319174257 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.328480233 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.319552549 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.331445062 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.318756289 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.323366659 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.323801123 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.329969974 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.326554204 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.325833754 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.318968958 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.321724357 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.333523113 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.330291638 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.322110022 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.322532278 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.32852157 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.321997122 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.324627251 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.323405343 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.321922755 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.323428836 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.330181144 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.321982397 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.320858982 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.322734112 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.329043125 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.332196334 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.330701837 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.320686257 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.335179735 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.337478368 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.333522215 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.320434975 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.323896611 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.322667873 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.329050025 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.328551611 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.320520361 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.334755831 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.335065324 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.331895805 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.3269353 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.329852743 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.320860855 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.331501545 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.329826167 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.32512955 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.335959674 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.324567521 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.333597068 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.329705546 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.327936958 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.321633556 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.323712702 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.324371343 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.323958376 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.330434333 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.330663247 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.332737994 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.327298593 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.335944912 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.331210067 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.331762364 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.329634781 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.322370228 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.331460936 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.323244465 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.331755947 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.331540624 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.324089331 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.333605064 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.330020038 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.322561289 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.325904197 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.333982522 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.32888832 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.3241565 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.328345387 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.334708955 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.340243147 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.330911829 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.323483972 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.328963774 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.334492042 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.330353095 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.332138242 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.325125699 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.339994399 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.344385675 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.324504755 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.328401933 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.335823554 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.34127232 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.332565299 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.332579644 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.328136158 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.331467243 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.335746854 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.331492761 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.336274124 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.338590094 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.328734661 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.337460407 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.326731697 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.328395189 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.33411998 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.342741237 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.333167271 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.32819393 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.340745592 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.343869499 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.329782743 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.344922476 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.340335269 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.332955185 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.337993163 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.326577436 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.335071909 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.329932829 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.337319184 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.332964923 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.335315373 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.33382764 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.325825154 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.335784099 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.342093518 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.343261426 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.33482702 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.326858476 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.331149046 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.335550014 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.333993442 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.334709014 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.33492697 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.333793499 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.333813008 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.330028189 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.343901102 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.348162829 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.340135532 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.333403229 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.334309954 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.336147169 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.338573742 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.331564427 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.338599329 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.334209954 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.335394628 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.333294957 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.343778492 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.336915203 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.329992116 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.331024931 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.330684569 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.3383026 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.343429786 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.354938917 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.339769884 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.339115135 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.338386711 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.338782869 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.330642201 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.340784184 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.3373734 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.330653809 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.332804994 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.338891729 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.338196612 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.3364347 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.329108767 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.340967696 seconds)
  done (took 786.760630723 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.337322565 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.336152364 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.335565698 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.336746821 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.337030838 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.336864035 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.336155114 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.337979226 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.338092396 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.337501224 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.33546864 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.337358875 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.337575379 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.336748902 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.337448705 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.336970983 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.336960662 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.33698061 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.336195805 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.338710894 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.337302692 seconds)
  done (took 29.289242957 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.33798044 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.337219922 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.338592377 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.337792129 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.336752218 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.337275994 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.337652188 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.338389182 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.339917466 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.338943208 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.338199251 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.339720752 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.33852011 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.339518684 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.337620394 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.338734402 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.339130495 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.3400776 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.338783508 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.340973432 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.33962597 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.339933724 seconds)
  done (took 30.665906023 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.33967487 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.339529523 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.333175851 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.342963494 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.339608932 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.339735416 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.339544636 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.340176934 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.339399227 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.333860549 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.333827794 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.334185396 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.335429262 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.343295407 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.336868825 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.345925112 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.340046018 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.341164596 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.341241265 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.341563751 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.342297041 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.353302445 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.340595961 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.3317397 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.342288117 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.339455546 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.341381399 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.340531292 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.3337404 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.342369406 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.340533553 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.333791676 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.343306523 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.342929209 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.334730774 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.342984136 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.341624336 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.342302001 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.341429686 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.338165781 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.349318176 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.341608235 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.345497408 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.355197912 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.340819913 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.334806955 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.345233895 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.342424404 seconds)
  done (took 65.561926179 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.341999834 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.342469134 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.342330309 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.341680964 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.342732142 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.343206159 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.34253329 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.342990588 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.342886284 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.344012861 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.344431491 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.342758993 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.34247913 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.343493331 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.344176015 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.343457573 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.343227082 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.344493995 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.343989309 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.344004711 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.344458644 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.343608805 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.343634883 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.344334429 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.344172222 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.34413207 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.342980003 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.345655342 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.342062964 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.342093678 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.341330274 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.342964124 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.343358107 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.342666618 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.341587542 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.343524075 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.343469648 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.342039326 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.342687303 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.340922917 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.342348954 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.34406397 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.343536973 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.343561053 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.342506362 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.345296782 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.343307639 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.342199813 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.343140261 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.342837057 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.34370529 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.342796796 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.34307082 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.343007888 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.343301102 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.343648307 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.343142283 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.34505368 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.344122703 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.342860468 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.341451918 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.342838299 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.343802588 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.342600301 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.343463701 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.343502432 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.343797646 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.341897567 seconds)
  done (took 92.55472665 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.34324677 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.343098089 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.342336478 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.344023457 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.341303939 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.343395684 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.343408994 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.342769801 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.342956342 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.343361898 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.343838817 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.344585525 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.342898105 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.342599253 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.34461381 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.343859523 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.344197358 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.342865272 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.34390243 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.34237864 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.341305455 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.342231459 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.344168352 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.34386458 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.343867477 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.345234296 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.344695212 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.343819651 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.344139144 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.345305972 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.344978075 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.343525056 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.345404834 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.345033305 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.343409185 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.344465675 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.343127574 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.345869013 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.344400374 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.344999815 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.344607419 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.34429442 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.346057076 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.343340431 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.343132993 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.344530682 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.346588414 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.34439333 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.344955034 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.344389009 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.344339815 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.344035894 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.344703084 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.342609625 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.345066081 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.345247744 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.343398807 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.344238315 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.344192846 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.34427818 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.344429926 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.345871612 seconds)
  done (took 84.544581324 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.344653073 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.343840209 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.343479025 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.343813667 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.344215288 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.345085945 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.345304862 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.345238063 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.343061011 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.343022346 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.34587964 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.34297523 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.346018686 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.344985995 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.344837245 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.345930306 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.342506255 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.343868316 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.342484894 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.344909632 seconds)
  done (took 28.102336289 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.343328167 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.345091716 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.3447914 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.344087677 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.343708869 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.343334091 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.343489554 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.343520217 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.344415495 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.344540055 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.34478841 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.343047096 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.344162463 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.342481074 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.343039914 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.344461924 seconds)
  done (took 22.718621851 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.343587293 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.343866043 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.344244958 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.344762402 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.346480074 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.345721446 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.344070367 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.34489514 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.345661613 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.34625383 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.344544959 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.345215288 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.344680175 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.344999955 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.345689631 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.345318368 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.344804348 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.345425823 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.347443796 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.34588479 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.347580628 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.347009062 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.346800014 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.345824417 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.34521784 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.345521544 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.347377035 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.345295922 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.345765423 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.346048833 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.346493798 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.347344804 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.344715214 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.346535524 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.345883465 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.345861805 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.345423597 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.34577461 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.347306389 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.345395281 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.347528319 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.347051717 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.346579386 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.34594101 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.34768144 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.347697278 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.346024961 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.348610351 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.347466639 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.346531027 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.347667969 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.347902538 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.347526671 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.347750434 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.346047508 seconds)
  done (took 75.252257445 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.347355981 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.345841581 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.348065764 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.347981094 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.348404489 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.349040078 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.348328286 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.349888298 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.346871446 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.348867093 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.349007443 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.349529615 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.347803555 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.348420731 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.348453854 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.348837878 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.348620634 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.349230488 seconds)
  done (took 25.488599334 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.349762901 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.348713455 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.350590224 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.348699171 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.350312551 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.349505321 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.348870898 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.34789292 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.349115852 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.34940733 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.349206603 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.350060493 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.350298876 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.349594326 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.350423291 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.349680849 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.34962009 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.348487042 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.35084988 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.350058219 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.350036687 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.350614466 seconds)
  done (took 30.912676828 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.33982629 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.340780567 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.340149503 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.354720086 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.349504393 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.340199301 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.341644656 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.340222857 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.358457915 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.365388489 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.360542365 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.348539021 seconds)
  done (took 17.400541646 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.35122402 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.351776082 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.350716713 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.352117317 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.35099252 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.350409524 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.351319399 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.353806796 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.351421305 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.352157696 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.351227086 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.351981308 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.351530318 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.352122359 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.351761649 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.35388706 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.352179887 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.351600078 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.352051064 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.353357169 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.352802786 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.352724703 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.353305155 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.351696574 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.352447564 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.353099529 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.352626952 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.352580233 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.352249111 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.353429033 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.356053402 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.353001891 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.35181473 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.354528689 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.353591168 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.354270856 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.353609516 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.354944552 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.353983167 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.353719163 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.353962715 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.35290875 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.354450682 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.354907611 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.354103627 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.354098043 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.354098939 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.354709479 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.353279271 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.354887552 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.354214894 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.353284094 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.354232393 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.353786898 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.355368244 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.356507132 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.354428999 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.354140346 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.353850578 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.35438124 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.353753651 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.355229983 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.352960065 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.354986171 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.353919909 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.353922645 seconds)
  done (took 90.538538843 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.356069142 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.35347518 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.354260538 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.354126943 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.354451076 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.354683962 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.354430202 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.35390854 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.352549453 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.352348878 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.354603801 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.354389575 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.353786746 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.35332407 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.353576414 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.353882208 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.353433687 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.354296648 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.354305048 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.355149658 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.354442018 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.354581738 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.35518844 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.354317605 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.355506922 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.355305681 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.354843304 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.35439462 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.354359337 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.355769106 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.353490308 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.353654539 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.354463124 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.354355373 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.354555257 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.354720225 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.355073511 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.354002064 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.355293584 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.354852837 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.355164499 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.355671572 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.356313065 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.355426824 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.355310532 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.35608944 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.355100682 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.357066483 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.356030386 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.357033534 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.356226211 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.357576293 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.356091911 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.355696825 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.355819206 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.354693576 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.354559728 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.356967099 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.356819099 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.356022807 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.356180576 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.356419522 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.357202182 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.356546851 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.356603279 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.35544024 seconds)
  done (took 90.659060004 seconds)
done (took 1841.020491231 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.512757536 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.470293804 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.346933808 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.353535929 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.345429947 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.344624613 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.35876286 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.346122928 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.346844507 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.345479216 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.345510707 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.541395143 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.377894389 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.345673808 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.345690344 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.443009536 seconds)
  done (took 27.395684929 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.373959235 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.354497485 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.462695294 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.353145702 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.373992232 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.536014567 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.411015993 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.35120404 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.518170298 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.372210305 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.35162271 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.37178649 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.349504721 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.351548587 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.367707494 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.536346222 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.60365958 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.353735396 seconds)
  done (took 29.617030931 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.793156216 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.362083885 seconds)
  done (took 5.380092322 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.369130771 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.350538684 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.353150515 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.349118541 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.340791092 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.35699878 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.348838227 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.361351578 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.345234397 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.47154542 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.352381655 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.363640357 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.349858333 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.35101335 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.358315764 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.394414289 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.514014572 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.361180255 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.358719632 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.359620272 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.350237814 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.450912389 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.391664274 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.362357997 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.473947204 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.349351292 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.355476328 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.359468621 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.470913473 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.361396635 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.351602585 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.352568323 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.351728693 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.342862209 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.902098313 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.353133176 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.376213257 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.360956062 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.358222458 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.50312159 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.353923085 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.358999456 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.343815608 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.896353616 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.462993136 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.473898435 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.345202341 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.35789559 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.352884898 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.421043724 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.353524231 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.354769556 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.411621013 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.205783641 seconds)
  done (took 86.50898907 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.401521313 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.34381626 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.527777322 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.367791597 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.347237178 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.348802534 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.349424899 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.630131737 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.370291115 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.34735529 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.666357877 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.967414648 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.353828832 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.412961582 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.37855323 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.396314441 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.346977386 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.360504025 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.347071953 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.345319642 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.915181625 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.350947458 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.345855254 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.43709728 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.387997269 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.884800679 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.36439566 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.349607375 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.351050563 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.345849382 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.936817868 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.357493083 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.394050304 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.348342042 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.641571293 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.744820124 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.707957358 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.358418838 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.382098243 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.349075737 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.374334978 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.878618805 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.725352184 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.352845587 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.35129017 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.878503401 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.35139266 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.35335351 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.357255609 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.615662011 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.352680867 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.34928187 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.363007526 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.352596256 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.34687973 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.392482592 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.40300467 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.89039904 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.353730452 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.347388548 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.360137915 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.348543591 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.355028474 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.353305498 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.350546543 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.725222404 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.60260628 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.355371035 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.72168943 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.929958851 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.351238574 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.016971266 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.36288603 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.370145484 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.394173105 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.347074778 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.35317833 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.880745459 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.352581558 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.349597289 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.69300969 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.352175081 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.658826133 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.367053676 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.348612244 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.921077289 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.363930496 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.393834838 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.348567706 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.347844811 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.365101695 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.350939265 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.640967348 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.395862399 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.348707821 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.348362002 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.347323173 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.351272588 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.365520724 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.357017978 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.998360068 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.36465905 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.348869692 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.371167894 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.348439524 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.349913595 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.352336881 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.35135661 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.62921615 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.352943081 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.354894504 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.352614328 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.351042811 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.359654001 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.442787665 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.357135992 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.657785098 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.352959811 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.350083581 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.350119109 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.351214762 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.36637487 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.349416478 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.370900446 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.322441441 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.652679159 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.366401189 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.364179901 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.347574056 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.350471132 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.374957829 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.34977658 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.405360432 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.351176591 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.118937 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.385539233 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.359920567 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.348343522 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.359102686 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.348147487 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.373773806 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.351526302 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.65225074 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.63872008 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.598628758 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.352015321 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.349801199 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.145197901 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.360818076 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.533825356 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.36906363 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.350654906 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.631044065 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.57191058 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.351116436 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.349749998 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.350702682 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.628331026 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.351419709 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.678888843 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.944642922 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.354227935 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.354232637 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.110090035 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.1644205 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.353270319 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.347900058 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.648191326 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.367061673 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.348031728 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.349832799 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.349352344 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.347927862 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.354639545 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.35115718 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.349585895 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.34807965 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.652721007 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.543509148 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.364656265 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.349377994 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.870835653 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.374615889 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.349325055 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.355210116 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.349693212 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.348636329 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.397899789 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.354646261 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.349721102 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.348232007 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.353819681 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.893777171 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.351038646 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.368815861 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.542420383 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.066356132 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.354403049 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.350046554 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.350766622 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.409104143 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.905000284 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.392263576 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.646013256 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.365913108 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.389112162 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.349001106 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.363478984 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.901537619 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.354333179 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.348492179 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.07415959 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.352612823 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.828114219 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.348437332 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.348831123 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.998058121 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.35107849 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.350318153 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.351151311 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.347963929 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.666062847 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.351792365 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.401002573 seconds)
  done (took 502.642675082 seconds)
done (took 652.771602672 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.347344358 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.347626 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.354262113 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.352868008 seconds)
  done (took 10.630714885 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.366220243 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.355612132 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.365355524 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.356459769 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.368230888 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.35590687 seconds)
  done (took 9.398567782 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.349568022 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.349172295 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.352566246 seconds)
  done (took 8.281235051 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.55382597 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.379522014 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.689032754 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.364921889 seconds)
  done (took 9.219312882 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.366418595 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.365097418 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.364775707 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.368926869 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.369058131 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.36882928 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.368148145 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.366987877 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.367516778 seconds)
  done (took 13.535764119 seconds)
done (took 52.298251936 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.503754435 seconds)
    (2/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.46812657 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.509666647 seconds)
    (4/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.421208714 seconds)
    (5/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.445672942 seconds)
    (6/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.333851272 seconds)
    (7/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.528155473 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.424367989 seconds)
    (9/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.393916035 seconds)
    (10/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.328917681 seconds)
    (11/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.512855375 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.386094189 seconds)
    (13/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.461616938 seconds)
    (14/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.332251608 seconds)
    (15/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.62027393 seconds)
    (16/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.451485411 seconds)
    (17/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.330108148 seconds)
    (18/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.34759248 seconds)
    (19/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.415024601 seconds)
    (20/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.430772309 seconds)
    (21/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.58633954 seconds)
    (22/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.38640618 seconds)
    (23/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.329115158 seconds)
    (24/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.35753306 seconds)
    (25/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.371636385 seconds)
    (26/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.427718659 seconds)
    (27/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.327719731 seconds)
    (28/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.437482627 seconds)
    (29/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.477093326 seconds)
    (30/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.558554995 seconds)
    (31/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.660887403 seconds)
    (32/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.460472798 seconds)
    (33/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.580192211 seconds)
    (34/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.33685747 seconds)
    (35/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.336380212 seconds)
    (36/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.444960822 seconds)
    (37/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.328664893 seconds)
    (38/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.41867884 seconds)
    (39/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.329579184 seconds)
    (40/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.345431264 seconds)
    (41/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.470555611 seconds)
    (42/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.426620257 seconds)
    (43/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.330971685 seconds)
    (44/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.42321703 seconds)
    (45/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.330598835 seconds)
    (46/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.366152442 seconds)
    (47/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.384395127 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.517263032 seconds)
    (49/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.437018484 seconds)
    (50/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.456994357 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.586878147 seconds)
    (52/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.689955853 seconds)
    (53/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.362544046 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.48651994 seconds)
    (55/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.382944695 seconds)
    (56/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.510347375 seconds)
    (57/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.334657391 seconds)
    (58/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.465392205 seconds)
    (59/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.516112099 seconds)
    (60/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.590274603 seconds)
    (61/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.336370597 seconds)
    (62/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.460977317 seconds)
    (63/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.356584742 seconds)
    (64/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.537553239 seconds)
    (65/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.650811144 seconds)
    (66/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.697776929 seconds)
    (67/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.562206626 seconds)
    (68/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.487180848 seconds)
    (69/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.459334091 seconds)
    (70/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.513759082 seconds)
    (71/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.451619885 seconds)
    (72/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.539831916 seconds)
    (73/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.658784324 seconds)
    (74/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.5992104 seconds)
    (75/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.474119121 seconds)
    (76/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.437963849 seconds)
    (77/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.65946336 seconds)
    (78/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.441118176 seconds)
    (79/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.446480418 seconds)
    (80/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.361385299 seconds)
    (81/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.593307125 seconds)
    (82/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.580879764 seconds)
    (83/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.546209479 seconds)
    (84/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.380449039 seconds)
    (85/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.333298219 seconds)
    (86/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.360372371 seconds)
    (87/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.515746594 seconds)
    (88/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.560521004 seconds)
    (89/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.448983702 seconds)
    (90/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.385412405 seconds)
    (91/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.390678664 seconds)
    (92/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.332876387 seconds)
    (93/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.335269998 seconds)
    (94/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.339420292 seconds)
    (95/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.473390895 seconds)
    (96/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.442551584 seconds)
    (97/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.507104808 seconds)
    (98/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.345535106 seconds)
    (99/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.473711769 seconds)
    (100/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.390595298 seconds)
    (101/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.372493504 seconds)
    (102/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.6037275 seconds)
    (103/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.433438611 seconds)
    (104/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.43012709 seconds)
    (105/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.333073992 seconds)
    (106/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.471999479 seconds)
    (107/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.337998735 seconds)
    (108/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.33372674 seconds)
    (109/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.345274758 seconds)
    (110/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.599332138 seconds)
    (111/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.343270687 seconds)
    (112/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.439295759 seconds)
    (113/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.395028189 seconds)
    (114/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.395697176 seconds)
    (115/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.35522669 seconds)
    (116/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.52073161 seconds)
    (117/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.394616792 seconds)
    (118/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.469529553 seconds)
    (119/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.46951915 seconds)
    (120/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.474116546 seconds)
    (121/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.590435439 seconds)
    (122/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.347804712 seconds)
    (123/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.636679985 seconds)
    (124/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.52012289 seconds)
    (125/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.400199794 seconds)
    (126/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.386956322 seconds)
    (127/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.776938227 seconds)
    (128/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.534472573 seconds)
    (129/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.596267992 seconds)
    (130/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.483170341 seconds)
    (131/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.339390267 seconds)
    (132/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.495411429 seconds)
    (133/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.449155704 seconds)
    (134/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.427035936 seconds)
    (135/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.427863579 seconds)
    (136/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.480496754 seconds)
    (137/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.353658192 seconds)
    (138/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.422356624 seconds)
    (139/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.514159883 seconds)
    (140/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.577876373 seconds)
    (141/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.389834074 seconds)
    (142/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.424841222 seconds)
    (143/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.460331544 seconds)
    (144/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.561200269 seconds)
    (145/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.342739449 seconds)
    (146/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.457245492 seconds)
    (147/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.337855876 seconds)
    (148/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.399186028 seconds)
    (149/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.417216276 seconds)
    (150/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.337057136 seconds)
    (151/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.678820394 seconds)
    (152/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.548019934 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.598128074 seconds)
    (154/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.43703686 seconds)
    (155/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.396104069 seconds)
    (156/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.37240708 seconds)
    (157/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.773863299 seconds)
    (158/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.342253037 seconds)
    (159/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.342582415 seconds)
    (160/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.383472173 seconds)
    (161/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.463134486 seconds)
    (162/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.589549316 seconds)
    (163/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.42074705 seconds)
    (164/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.595768198 seconds)
    (165/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.516136541 seconds)
    (166/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.474122396 seconds)
    (167/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.518937996 seconds)
    (168/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.390097982 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.455361229 seconds)
    (170/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.400770229 seconds)
    (171/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.468260262 seconds)
    (172/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.441792029 seconds)
    (173/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.47213121 seconds)
    (174/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.464798227 seconds)
    (175/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.58625548 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.505053253 seconds)
    (177/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.503844407 seconds)
    (178/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.569109061 seconds)
    (179/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.404207248 seconds)
    (180/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.433147423 seconds)
    (181/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.506567522 seconds)
    (182/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.482473554 seconds)
    (183/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.520705498 seconds)
    (184/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.391603079 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.563274593 seconds)
    (186/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.519768396 seconds)
    (187/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.3442538 seconds)
    (188/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.456134339 seconds)
    (189/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.511947358 seconds)
    (190/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.428659406 seconds)
    (191/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.537745662 seconds)
    (192/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.399888488 seconds)
  done (took 328.945537145 seconds)
done (took 330.179363167 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.390920519 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.465447346 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.371271476 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.368433171 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.370038445 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.354677322 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.391394883 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.371224535 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.384561418 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.386013553 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.355836875 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.378680431 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.38518574 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.380495539 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.404452638 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.37137497 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.371467628 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.379073333 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.384163193 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.387554541 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.373062402 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.372615977 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.398847878 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.372136665 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.379464406 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.37980921 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.377248793 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.363812546 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.377201007 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.386053576 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.363183908 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.377734453 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.389239025 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.381594384 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.37306815 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.381842312 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.373198928 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.467067396 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.392857475 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.382804325 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.378507111 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.387760414 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.375924178 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.378055028 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.384370004 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.397955606 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.380468842 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.386797439 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.362809176 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.341428734 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.393183206 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.382672107 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.379814629 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.339400121 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.373848108 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.387606301 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.382051018 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.392053701 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.377794743 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.373029053 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.405969904 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.392342489 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.38458328 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.379641906 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.377806168 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.386323034 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.381371046 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.388233644 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.378818097 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.374917458 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.373915178 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.379517563 seconds)
done (took 108.717754281 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.495619138 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.369875419 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.528614036 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.37997884 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.53808622 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.497868146 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.379550541 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.380856062 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.379221544 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.173215725 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.378563494 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.380711441 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.37163172 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.379530999 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.496429278 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.382115563 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.380129888 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.07284165 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.380997332 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.509582875 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.371559694 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.3810893 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.380191834 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.17493436 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.369904816 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.363897376 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.509937138 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.381110024 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.076098044 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.36678199 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.367900917 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.074043604 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.510493832 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.40030142 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.391713773 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.390815295 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.53986308 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.383898191 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.499563927 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.499196593 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.531525214 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.41944552 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.364970503 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.369800033 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.38353507 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.381741208 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.381176475 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.410210365 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.370567275 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.381934089 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.075928809 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.391348422 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.381332148 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.383240286 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.381736716 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.411192026 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.382961379 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.383366624 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.509541078 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.385514475 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.499453099 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.177494519 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.1750196 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.381922152 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.369739458 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.384833044 seconds)
  done (took 111.203100466 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.44213773 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.459002631 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.481517414 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.374100973 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.425831409 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.481030595 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.374097491 seconds)
  done (took 11.283528548 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.381061618 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.383621926 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.424940885 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.423012701 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.383126895 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.549735921 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.384563837 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.388873024 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.385800407 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.427811072 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.385928798 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.38596798 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.393104311 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.375751871 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.423068028 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.386844441 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.495770892 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.377874169 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.384104823 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.528600801 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.384242256 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.393826159 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.427795265 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.388119999 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.387251771 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.383507873 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.159712414 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.384805886 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.385590514 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.386286485 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.385570748 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.444425097 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.386310028 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.374892714 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.3844341 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.489537984 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.384537327 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.386051006 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.386037434 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.378588471 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.385506042 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.386925443 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.386162514 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.385742084 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.38655495 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.401811985 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.386900553 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.386755745 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.386012118 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.386794728 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.427641264 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.386731587 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.386366167 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.384993628 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.433030585 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.396754217 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.386321675 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.387598006 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.3880121 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.386468519 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.529531326 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.425839473 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.388315425 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.425924293 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.387415994 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.388039057 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.387298067 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.387520153 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.469282872 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.388115596 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.425848146 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.387913228 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.560450092 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.402912365 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.389780236 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.38261738 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.382872132 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.388783009 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.3750379 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.38569685 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.389708458 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.381418045 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.386013943 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.390381041 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.38807097 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.538014761 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.486694197 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.389178331 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.396751111 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.388123526 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.389887152 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.432725843 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.387960793 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.390754559 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.432200191 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.500654149 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.432820466 seconds)
  done (took 142.403905861 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.392732072 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.394121624 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.384922862 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.408516463 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.383615398 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.38324741 seconds)
  done (took 9.599300628 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.382736508 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.391756838 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.391160804 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.391116145 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.392938838 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.391822158 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.389138274 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.383405359 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.393137387 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.391652309 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.392202764 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.391795794 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.394307767 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.392902284 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.3917056 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.392159007 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.391232205 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.391567326 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.390205007 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.392343082 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.380388621 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.390904509 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.392713138 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.385298419 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.394398456 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.392550716 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.404481906 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.392819351 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.391889858 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.387355982 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.397540581 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.394212019 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.38467767 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.388277566 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.394549749 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.386349443 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.393880634 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.393256739 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.39265439 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.394090911 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.395070252 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.394545305 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.393991805 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.393930274 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.385443437 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.386883224 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.397877861 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.407236341 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.39470482 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.395628161 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.395556725 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.393552304 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.395279409 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.394694377 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.387274711 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.387777791 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.398429713 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.393634717 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.394877186 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.387975472 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.397190477 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.396276537 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.387754242 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.397600783 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.395495853 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.396206616 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.387613723 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.397098255 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.395199214 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.394514617 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.397062287 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.396622108 seconds)
  done (took 102.519362856 seconds)
done (took 378.253221329 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.83416529 seconds)
  done (took 4.090195602 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.646449706 seconds)
  done (took 3.903766669 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.574371826 seconds)
  done (took 22.095811573 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.454630009 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.459698482 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.403918354 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.3687885 seconds)
  done (took 10.940687131 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.630604005 seconds)
  done (took 3.877715394 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.388077006 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.376839049 seconds)
  done (took 6.013102599 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.532858703 seconds)
  done (took 3.771434789 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.650747603 seconds)
  done (took 3.891317971 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.36973972 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.367135948 seconds)
  done (took 5.977821889 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.327989816 seconds)
  done (took 3.560712858 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.927247576 seconds)
  done (took 21.154222865 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.360546734 seconds)
  done (took 3.581197833 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.364524908 seconds)
  done (took 3.582303157 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.685119272 seconds)
  done (took 5.904460621 seconds)
done (took 103.603029623 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.330367076 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.33378784 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.326158489 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.324753256 seconds)
  done (took 10.53298752 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.404598976 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.405998078 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.415087943 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.40162179 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.401250333 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.406489947 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.368194548 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.367396772 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.398462068 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.394214342 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.409391348 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.400123466 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.407767387 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.368546764 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.395380078 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.410585996 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.397875828 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.416103807 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.368655752 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.399696608 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.344573803 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.403213464 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.394375735 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.342894204 seconds)
  done (took 34.63836948 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.853623718 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.40496263 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.487885382 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.385302326 seconds)
  done (took 7.347414096 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.443636148 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.445980175 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.461271404 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.498410479 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.546362445 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.457278962 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.367004851 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.359100775 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.344019247 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.439843318 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.526924954 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.443389061 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.655579801 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.338094102 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.655606952 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.335213608 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.333672361 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.440911437 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.487315267 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.519455991 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.334784733 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.436424764 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.440780887 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.436748104 seconds)
  done (took 35.965855458 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.341416989 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.350729484 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.335637661 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.349502316 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.333864781 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.335370954 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.336642732 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.342175083 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.333834559 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.335041882 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.337147418 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.350010491 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.335912852 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.335595815 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.342977335 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.336359833 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.337135257 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.343547844 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.345144541 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.336395965 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.337099551 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.343129651 seconds)
  done (took 30.684221994 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.320671284 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.319424904 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.671674761 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.575834913 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.318577773 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.319879593 seconds)
  done (took 13.736748501 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.389828708 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.526670041 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.334331708 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.650956515 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.735149742 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.32825207 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.329038075 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.556453347 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.833121665 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.819245817 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.384328837 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.392851541 seconds)
  done (took 19.489914272 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.330372042 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.326879862 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.333963391 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.348856669 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.446891139 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.38924153 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.391729139 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.320879885 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.383416095 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.391834674 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.392364608 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.382726353 seconds)
  done (took 21.651582948 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.411284966 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.330716413 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.344982106 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391595809 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334698907 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.332567469 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.405777669 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.030552601 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.342889219 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.60684648 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33143872 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.42521171 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.58613856 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338344088 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.341678878 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.283347537 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.569504985 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.790532615 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340819881 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337487447 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371631427 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.338061407 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.353149182 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.533305001 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.342909222 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.339386362 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.599933926 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.339781432 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.605206506 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.577437825 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.578209656 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.342383144 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.615926544 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963671422 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449544324 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.531175775 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343847984 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.340269006 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.31751841 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.347302954 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.345080004 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.340335526 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.575832673 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342252848 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.339554334 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.339820234 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.054503305 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.352449471 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.341287316 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.336802104 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.576811136 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420043851 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.341543198 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.335775652 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391475921 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338346089 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.339361307 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.452008581 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976169498 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339242432 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336468047 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.336251842 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.34434301 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336421555 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950344047 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.338074979 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.335288251 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.337087152 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329926005 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.329851117 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.352875789 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33035848 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.352221732 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331101387 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.072215236 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.332864206 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338860306 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.837747411 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337407496 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.336886573 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.557839864 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331973758 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330501095 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.331129909 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.331180736 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.02949314 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340602424 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.301032113 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.396427004 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.029193966 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.52998167 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355843654 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361160716 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.55346989 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.301518565 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333295956 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.338823889 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335110175 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35349702 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.034758223 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336912861 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.338471606 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.581330855 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.5449807 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343708906 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.299258274 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.788353525 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340445576 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.363754294 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.343983285 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.53151559 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.924091673 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.580258056 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334690533 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373995987 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.333718989 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.086372823 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338638329 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.345362757 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.332621325 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.607091409 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.121724056 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336235253 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.40763071 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.345093919 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.333878659 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.335172202 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337401092 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.335049879 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.50583439 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.34967744 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.580886921 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.337707768 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333180455 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.33747985 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340078444 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.340132693 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.557327292 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336704069 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.615224524 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336254995 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336397388 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334916819 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.555218656 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.348339684 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.343353775 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.676576745 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345178607 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.349178616 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.581187277 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369827527 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.447642264 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368625012 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.346039826 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.590887823 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.34241338 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.343687221 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.336662963 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.338512987 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338496724 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.345078864 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337762957 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.928050808 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317540154 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.344305273 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.337989599 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.354416759 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.412119317 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.345896769 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.531418102 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.341757708 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336798518 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.345854811 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.341079618 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.56506438 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.577776848 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.350304228 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.514568421 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.787031482 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.93108558 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.354565346 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.339525762 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.339009195 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.33881693 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339577278 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339574888 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.34046987 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.532530011 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.590013949 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.333811118 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.931372095 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341153449 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.337703026 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.362522357 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.578439129 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.350135772 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339325425 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.340285115 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343633591 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.345123389 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.584411311 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.561157885 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.355427525 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.340573717 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.85933121 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.346300514 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.342533764 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.339532806 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369006511 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.338116426 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.15205156 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.681986402 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.329562081 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.582200554 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.343385165 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.358588199 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.341312236 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347031167 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343200656 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.365203869 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349245505 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.537892059 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.345200102 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344269637 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980899569 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.092355918 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877549896 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.344048484 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.360942281 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.362331703 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.045030835 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347219953 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.34313055 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.582111991 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.041976193 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346045411 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.795310832 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.356097744 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.071068274 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.58324423 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.571435874 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.342115658 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.375995217 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.586959397 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.56331255 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371127234 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.345953904 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348641412 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.312951093 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.863279447 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.345369417 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.529321102 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.047844479 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3574786 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.350381785 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.393065095 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.353799044 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.719792236 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.350706515 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342645621 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.349031307 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.349346733 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.163902099 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.350284513 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.343602693 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964791132 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.352201006 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.805512769 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34893169 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.54108553 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.588423611 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.56587573 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.353189328 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.34996163 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.590047588 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.584355179 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353852075 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.349813884 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886619138 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.206218454 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.353552562 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345715355 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.099077658 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346367817 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.629992591 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.354945014 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.351111728 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353723049 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.347039839 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346804502 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.34628244 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.354047246 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323475857 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.800458993 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.360014376 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350295702 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369833153 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353151559 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.59456946 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.362943067 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.938135096 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.578939667 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354686091 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386671721 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.353745722 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347196197 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.324233868 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.349319284 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.3468407 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359357295 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.574715083 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.347300591 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.317641113 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.339716278 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.564874345 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.346734961 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.348704321 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.559872499 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.35446405 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.361141994 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.098277444 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385565221 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.347559153 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355759874 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.34046185 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.392344023 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422056461 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.543759045 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.594652788 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.594770683 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.72825765 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353238392 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.371747911 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.365314252 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429830573 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347519939 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.355307523 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.348137329 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.937112126 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.094676623 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.95232233 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.597621345 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.356877781 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36004759 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349979837 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.590628553 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.349198344 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.625732281 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34958272 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.361235847 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377003324 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363840357 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364372401 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.566020559 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.626953421 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350718929 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352615138 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354022918 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.35151184 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.596280123 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.571069631 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.808705253 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.861332942 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353553037 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.359551461 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.066041341 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.633017631 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353399103 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.351584302 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352008811 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.352157412 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.378502868 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.364106334 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357829966 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.58272962 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.589813959 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990138314 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.59845506 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.540669798 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.266413474 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364037182 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.606149438 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.194200625 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.545802158 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.955973451 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.049749632 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.611964814 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428448738 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.548085454 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.359739097 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.58943885 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.364908834 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.352802214 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355147397 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355047817 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.352598305 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.593754389 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.957428487 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.613818202 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.359839364 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.354166822 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388902882 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.549664351 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.582708263 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.059615443 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.579065731 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.599169606 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.367697157 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.354327996 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.955349147 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.605042181 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361259541 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.359138251 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.56099875 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.359981895 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.389877622 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.241987428 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.354298254 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.867167253 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.568681121 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376069431 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358658934 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.052539092 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.96082908 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.36173636 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.820212951 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.358301518 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358618501 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.636346873 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.362763389 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.358400254 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.641939632 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.362567644 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.355979573 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.56167933 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.955045193 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.08660207 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.363635313 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381458855 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.364244817 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357074729 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430213965 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361513231 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365701694 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.733929385 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.363096057 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357546296 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.373452307 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.3651956 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363431196 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.363221075 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35794027 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.366351511 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.355342007 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.333581079 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.365209619 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.483616933 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.900429424 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363293838 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.973089899 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.693485029 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.606389458 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.363662701 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.333706811 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.364626394 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360359188 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358662997 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359586685 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.35833002 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.877551477 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.366350673 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.609200239 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.367711259 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.572025896 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.57186478 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.362238879 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.563442408 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368298875 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.385730697 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.328361256 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360017303 seconds)
  done (took 965.386502393 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.34882125 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.368052587 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.361454831 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.410840569 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.356369093 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.35707926 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.358440071 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.411460174 seconds)
  done (took 20.206682779 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.357495052 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.360207851 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.355701057 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.364601148 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.360033347 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.878932824 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.356617579 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.360362726 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.373616426 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.356515916 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.352996225 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.006711601 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.367404668 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.352870501 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.360079102 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.361950292 seconds)
  done (took 32.16245557 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.989450171 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.674575789 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.776272255 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.359177319 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.361216325 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.359399774 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.463208403 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.365606709 seconds)
  done (took 25.586167835 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.364653512 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.366151012 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.366188672 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.366312051 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.367141279 seconds)
  done (took 8.067602392 seconds)
done (took 1226.676196292 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.367764188 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.366818199 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.368423815 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.36829469 seconds)
  done (took 6.707807089 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.332293324 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.33212747 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.332380657 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.353156262 seconds)
  done (took 9.588121962 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.017818913 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.857348854 seconds)
  done (took 5.112559219 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.904567154 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.902948521 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.900516309 seconds)
  done (took 6.944757171 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.6491931 seconds)
  done (took 2.885732277 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.342138235 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.358802008 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.090313915 seconds)
  done (took 8.029725154 seconds)
done (took 40.506670954 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.353209222 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.11268724 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.507400652 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.353385214 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.515154789 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.509398015 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.598648835 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.353907111 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.365818353 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.362797946 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.353392694 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.514347277 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.591349051 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.113467558 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.591424386 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.11267555 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.514324996 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.360468294 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.353097103 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.354946716 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.604953762 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.355056667 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.365584995 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.35362866 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.514070589 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.49821355 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.366059476 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.114687254 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.355260397 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.354693747 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.499046446 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.354337563 seconds)
  done (took 81.867068928 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.354476481 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.355020074 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.363454044 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.363949684 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.357222567 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.367357362 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.356904961 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.355466563 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.3571125 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.384858119 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.364069566 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.358833361 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.359038093 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.363387258 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.356920877 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.363942809 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.362892946 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.365992435 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.3561144 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.371404345 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.356800281 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.356097839 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.37382468 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.355910437 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.36222081 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.372416554 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.357579191 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.357053238 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.35549155 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.357313464 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.363472202 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.377105301 seconds)
  done (took 76.82455793 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.356581943 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.372173873 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.372167266 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.361670974 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.358483189 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.362774447 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.358930641 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.372526211 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.373750934 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.36629766 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.360769666 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.357892942 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.36137602 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.356269223 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.360784549 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.358173585 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.372521054 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.362973465 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.364817475 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.357506238 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.372235593 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.372153754 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.357475684 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.358175099 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.362038475 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.366299075 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.357747407 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.360348274 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.360275625 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.359286084 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.372158335 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.358266476 seconds)
  done (took 76.867643528 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.600663645 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.375579758 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.377628693 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.368695175 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.378182074 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.373772481 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.369853616 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.606255353 seconds)
  done (took 14.694173553 seconds)
done (took 251.492889895 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.368241406 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.83953282 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.401958143 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.368807063 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.392629164 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.39776989 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.579455123 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.396818652 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.586332408 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.397841468 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.386442235 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.370156081 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.130409648 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.518350477 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.171028574 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.285317263 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.206513586 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.366400847 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.910407612 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.64781598 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.396605365 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.361153784 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.169405378 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.220342902 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.345843639 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.467836609 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.460481069 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.588638771 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.527621599 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.443812299 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.850967373 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.377535132 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.391398471 seconds)
  done (took 63.568750352 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.367269697 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.37999229 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.378872997 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.377918087 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.378303423 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.379051696 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.368580626 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.378474262 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.379464805 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.378832749 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.379084794 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.379502364 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.380092942 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.379281152 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.380007104 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.352722112 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.370039671 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.379379572 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.369891021 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.356069244 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.380634453 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.379874582 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.379265107 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.379780062 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.380012732 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.379544907 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.380502089 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.379851241 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.381096799 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.380455589 seconds)
  done (took 42.540362994 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.380672335 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.906073 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.080081797 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.384483505 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.372417003 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.376660658 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.64461808 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.387283484 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.375006536 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.374201969 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.825742995 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.389310096 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.403999686 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.08815821 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.381335392 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.382328064 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.38146381 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.372552431 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.921179537 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.381669708 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.641799898 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.38409685 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.643255111 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.382775467 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.376105357 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.373235209 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.377768114 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.177727296 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.392742339 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.829491766 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.10829603 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.645670014 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.106842212 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.139184174 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.095916377 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.390469086 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.382499251 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.835197778 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.377146633 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.374944921 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.642228109 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.375408506 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.093301484 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.059358048 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.391063515 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.382871557 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.201884196 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.829573638 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.602620363 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.38544402 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.120318188 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.384490286 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.38601631 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.377064498 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.601356358 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.382043154 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.375232228 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.192728559 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.380487792 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.64389029 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.386205401 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.376163884 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.911987973 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.376379663 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.911498833 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.376976287 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.384009678 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.377113462 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.100383801 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.378922238 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.076879315 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.393071338 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.384806521 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.830409076 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.923664841 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.255865626 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.378532638 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.915145497 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.144044243 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.661523181 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.380215566 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.155639338 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.661836066 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.380267449 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.38924681 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.389574674 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.385064209 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.448815094 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.64405639 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.988081953 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.061801929 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.20294086 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.64913185 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.385545796 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.377849243 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.193947938 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.388084332 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.387043843 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.090700672 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.068181655 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.396452458 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.388187638 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.054126247 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.40289893 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.64960547 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.383753746 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.129294676 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.385805893 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.450796101 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.387940112 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.386381609 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.383247023 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.650641048 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.386882779 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.388042782 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.053642517 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.861190403 seconds)
  done (took 191.81342265 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.373415507 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.372961882 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.373039217 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.374304022 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.373313108 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.380591396 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.372720227 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.373130098 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.378244572 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.372292484 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.373158421 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.382463915 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.379707028 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.373679621 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.372717017 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.377983298 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.373408312 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.375268187 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.37982114 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.374375336 seconds)
  done (took 44.761365036 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.389678902 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.910344209 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.881048656 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.395464525 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.390382881 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.381328627 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.432354855 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.391176133 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.390786952 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.662825101 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.54471326 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.391979547 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.390453784 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.388399328 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.876672113 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.369173973 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.666269898 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.917100575 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.396906099 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.913019791 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.369908896 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.39057321 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.381315429 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.914073574 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.681245938 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.654891161 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.443812161 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.914411774 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.399102786 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.391579755 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.912484451 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.399688197 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.385017039 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.90040511 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.398346446 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.406322928 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.390570044 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.438511158 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.439254973 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.66464804 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.920000885 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.667309685 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.403713309 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.549290218 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.398018506 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.364034016 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.924865367 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.398294557 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.364759508 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.394102799 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.398190673 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.890013897 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.390224609 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.890341855 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.398376438 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.392913921 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.916945326 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.893903929 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.885130783 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.550378788 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.384435226 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.650937277 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.399624862 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.927166283 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.399803911 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.394478925 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.392588447 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.54718351 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.91667816 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.658759127 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.67332411 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.667425802 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.396473758 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.451077293 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.395517666 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.667502991 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.450013418 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.778305432 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.676351141 seconds)
  done (took 125.032963065 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.653531581 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.49954739 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.743292406 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.948331539 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.878321533 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.527465203 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.497187132 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.625186486 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.40541784 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.502214229 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.002485465 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.475688357 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.110222683 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.454653615 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.03387574 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.508958957 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.774677458 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.330999035 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.996841256 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.991320273 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.404211303 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.491460498 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.906641617 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.589024302 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.386641838 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.966392116 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.303954471 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.890405757 seconds)
  done (took 53.159034473 seconds)
done (took 522.119657639 seconds)
SAVING RESULT...
DONE!
