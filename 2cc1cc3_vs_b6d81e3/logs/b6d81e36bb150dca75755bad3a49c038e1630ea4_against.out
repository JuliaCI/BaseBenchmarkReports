cset: moving following pidspec: 31302
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.409688579 seconds)
loading group "string"... done (took 0.497815084 seconds)
loading group "linalg"... done (took 8.426473888 seconds)
loading group "parallel"... done (took 0.170018824 seconds)
loading group "find"... done (took 2.984508583 seconds)
loading group "tuple"... done (took 1.922349274 seconds)
loading group "dates"... done (took 1.465167696 seconds)
loading group "micro"... done (took 0.193224665 seconds)
loading group "io"... done (took 0.526152633 seconds)
loading group "scalar"... done (took 49.248616829 seconds)
loading group "sparse"... done (took 13.443728563 seconds)
loading group "broadcast"... done (took 1.264028254 seconds)
loading group "union"... done (took 9.081783904 seconds)
loading group "simd"... done (took 2.983397078 seconds)
loading group "random"... done (took 11.188350402 seconds)
loading group "problem"... done (took 2.189189251 seconds)
loading group "array"... done (took 24.673636979 seconds)
loading group "misc"... done (took 1.099699093 seconds)
loading group "sort"... done (took 3.681305883 seconds)
loading group "collection"... done (took 19.094528991 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.608272136 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.127377202 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.202439597 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.281473569 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.232863328 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.164364322 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.142150354 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.232214662 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.479573822 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.20416783 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.138757579 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.418759739 seconds)
done (took 5.957382317 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.251225075 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.24267968 seconds)
    (2/2) benchmarking "String"...
    done (took 0.166534695 seconds)
  done (took 1.080323713 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077665287 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.15866127 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.109145305 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.096673243 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094231329 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.10982348 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094005807 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.110317256 seconds)
  done (took 1.447681987 seconds)
done (took 3.532004711 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.500781975 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.865764374 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.486079125 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.1453549 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.314917915 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.294749451 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.270200425 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.201576158 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.093359013 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.089194915 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.174163128 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.423825359 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.383067974 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.991728016 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.090831801 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.093941067 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.13097107 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.798659422 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.0800404 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.122540572 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.495466835 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.190692232 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.115034192 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.105973976 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.187369981 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.133706235 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.162364679 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.102088043 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.701897257 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.133787389 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.178919043 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.09892642 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.160471918 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.18607351 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.210540344 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.095101524 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.687622313 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.2009312 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100593506 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.102117176 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.721107177 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.120235424 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.187836037 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.104503627 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.090316562 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.180882941 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.10397807 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.09455225 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.095437509 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.087656561 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.16649131 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.453146124 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.10456419 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.169273145 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.094776166 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.723151942 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098587135 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.282089936 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.127882687 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.099266377 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.09243831 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.089393042 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.165634404 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.096003031 seconds)
  done (took 20.159396877 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.147889533 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.165289514 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.078922107 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.157407241 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.123206691 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.081830548 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.101810036 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.080357646 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.126591441 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.180660348 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.138771771 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.152551753 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.092736188 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.09193061 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.145864244 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.23183122 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.107835664 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.122374852 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.090174606 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.090643531 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.140920642 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.097725949 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108055636 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094159446 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.171694348 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.203477443 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.10981501 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123952061 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.090001836 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.097220276 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143742458 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145480058 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.092387732 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.090687367 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.189919118 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.110743123 seconds)
  done (took 5.210039154 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.219788558 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.106511963 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.227988591 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.198699988 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.133811844 seconds)
    (6/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.132936689 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.156611225 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.272713939 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.304526493 seconds)
    (10/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.185665871 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.164648755 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128296484 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.098224327 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094551241 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082485938 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.079340365 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.473118893 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.151950693 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.192831987 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.162611378 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099525836 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.101408628 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.365883428 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101411399 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.086490117 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.112057775 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.064474072 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.201517514 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095569775 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.132604466 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.084399842 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.12239032 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132904264 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.194423047 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127180234 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.140051597 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095934239 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.103790881 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.223631475 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.105238948 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.078979907 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.133014574 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118444938 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.130614629 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.108085017 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.111130159 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.223455822 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.103283987 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.114160812 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.033937898 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.196845832 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.124669607 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.085146838 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.292207248 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.128673409 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101973575 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.109588182 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.77454882 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.132279123 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082860537 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080141815 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.113238969 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.079542552 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.434557156 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.125380585 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.099644117 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085205374 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.158638891 seconds)
    (69/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.084060675 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109498059 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104385687 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087627236 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102597116 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.10954455 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.086923555 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.096738432 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.087574372 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.08037063 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.107743107 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.114089636 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102202528 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080371691 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.155423675 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.147771456 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.100598266 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.125001115 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109631946 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.105942582 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.086703252 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127540086 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.086718533 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081484304 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.10552026 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.147635243 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.116769143 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.113778206 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115778263 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143156732 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.09056493 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.223072456 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.09685869 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125414572 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.10012034 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114219105 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.11705846 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081468685 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084639183 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.09620945 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082365345 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.147055804 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.103032125 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082934023 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.088854764 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.111775399 seconds)
  done (took 28.400331249 seconds)
done (took 54.441102832 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.438140359 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.082860317 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.081618129 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.0999395 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.082029461 seconds)
  done (took 1.532544423 seconds)
done (took 2.25639443 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.320209097 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.189992604 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.103762134 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.187273025 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.091101383 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.193476625 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.180918806 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.09526143 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.205796679 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.084878898 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.184563779 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084343686 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.104236596 seconds)
  done (took 2.774612219 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.102198034 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.108968219 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.10200457 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.117186201 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082597915 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099954973 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116516292 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109792803 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100037585 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.111189306 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084461772 seconds)
  done (took 1.859320785 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.098522495 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104247894 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.09706447 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114880349 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084152583 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097231447 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.113395034 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10740875 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097605695 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.110446876 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08537518 seconds)
  done (took 1.837385441 seconds)
done (took 7.191528605 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.086427399 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.380837993 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.148783136 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.210082966 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.349112684 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.256358771 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.546099478 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.170471181 seconds)
  done (took 14.017768093 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.165714887 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.107526489 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.093670786 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.093677545 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.09485827 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.112892751 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.092571065 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.094905822 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.109289299 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.096028219 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.092437744 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.106416618 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.095942988 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.093687559 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.107294389 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.095603936 seconds)
  done (took 2.436326773 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.143410752 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.140785187 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.098944915 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.099380071 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.113196676 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.101273333 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.102775074 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.114381873 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.095187327 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.095733141 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.119917454 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.100026446 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.098149611 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.109303672 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.100551625 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.119495316 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.110215141 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.099621166 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.116995299 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.115588171 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.101185694 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097724173 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.114061997 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.100250714 seconds)
  done (took 3.420174073 seconds)
done (took 20.601361397 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.148683859 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.101346965 seconds)
  done (took 0.978884325 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.139127331 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.156080274 seconds)
  done (took 1.02886107 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.111623638 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.091760059 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.135805437 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.102738658 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.091515047 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.106449382 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.116308555 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.106822366 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.091826879 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.093329584 seconds)
  done (took 1.786148619 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.095251856 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096292467 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.121861211 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.136682063 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.114557474 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094125335 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.098392643 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.110613958 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.09877042 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.091887557 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.09617193 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.125726394 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.095717382 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.12507405 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.09720011 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.096233611 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.115052701 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.095116859 seconds)
  done (took 2.642605336 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.093087486 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.09377949 seconds)
  done (took 0.924566819 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.094268728 seconds)
    (2/7) benchmarking "second"...
    done (took 0.091133528 seconds)
    (3/7) benchmarking "month"...
    done (took 0.092196324 seconds)
    (4/7) benchmarking "year"...
    done (took 0.109457866 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.092318246 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.090240243 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.106065186 seconds)
  done (took 1.413468768 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.486635786 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.378495304 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.355242234 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.110253319 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.148072741 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.349459431 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.150421713 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.10484846 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.121972116 seconds)
  done (took 2.978459836 seconds)
done (took 12.489753016 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.092264634 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.222784007 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.602283499 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.113466796 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.09121081 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.157791426 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.28463558 seconds)
done (took 2.304733199 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.337535739 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.142634329 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.080299429 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.090279731 seconds)
  done (took 1.38910576 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082455908 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099715401 seconds)
  done (took 0.926096366 seconds)
done (took 3.059629194 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090124332 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.122205915 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.106586998 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.089065499 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.090250071 seconds)
    (6/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.088627392 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.105464663 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.088813708 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.089708402 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.106402705 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.090030094 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.088709631 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088981 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104214761 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089185363 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08775527 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.103161177 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089976485 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.089048923 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088661739 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.104135031 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.089424632 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.088379806 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.103606724 seconds)
  done (took 3.060128904 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.107829088 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.092133645 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.108672935 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.094780116 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.093236706 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.109566278 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.094098557 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.090301246 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.10913106 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.092166601 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093164115 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.109329647 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.091513896 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.094770889 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105842114 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.095056119 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.094239964 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10635064 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091523554 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.093826054 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.10952962 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091825948 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.094472063 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109767892 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.094737009 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093366441 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.090977297 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.107668311 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094557602 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.09380522 seconds)
  done (took 3.690822968 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.098276243 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.08722685 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.089204996 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.11563733 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.087716959 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.089152617 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.102122804 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.088025096 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.090717178 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.088374836 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.107818673 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.089472633 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.087362522 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.107496979 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.092429773 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.093357849 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.114125194 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.087379068 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.086366605 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.091217826 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.110604822 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.087613535 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.089256068 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.106454025 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.089724707 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.08711248 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.106067934 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.090536538 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.090792249 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.089561991 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.109009485 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.093520922 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.089597134 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.115804503 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.092971372 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.090049633 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.111663047 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.087485208 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.09103967 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.086476248 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.102610094 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.090065045 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.087654047 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.11166142 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.090690421 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.090469973 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.087080117 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.106367411 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.090661582 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.093007692 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.103028948 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.087673168 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.092261725 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.106097631 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.093741934 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.087396386 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.090848172 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.103733503 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.091947857 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.089648152 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.10254943 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.088362536 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.095681088 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.089708034 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.122796666 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.095905749 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.087513604 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.109158584 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.092206952 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.095279144 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.108071886 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.101376965 seconds)
  done (took 7.644016405 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.102181297 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100122748 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.091118171 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.107197366 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091417716 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091245763 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.112046107 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092975409 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091343434 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.113953335 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092386034 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.09183007 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107787055 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092733799 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092027188 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.091153184 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.114012761 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091815637 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.09201452 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.107487038 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092484791 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.095100037 seconds)
  done (took 2.907532483 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.235085993 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097725398 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.14030387 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.12067235 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110104302 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.1212834 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.09638621 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096338912 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110679752 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102776828 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099950902 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113405586 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.11146381 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.119146638 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101348252 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.100602576 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111900135 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.102249781 seconds)
  done (took 2.845447866 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.10417567 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.091913701 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.128058887 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09288981 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.093653293 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.111842912 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099467664 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111937588 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.108677479 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093664314 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.100461379 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109567044 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.093885767 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093847537 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092256246 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109824008 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.092997826 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092998145 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115823097 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098114121 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.113203849 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100188684 seconds)
  done (took 3.003543323 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105062793 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.092882188 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.12642503 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.095087624 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.092378584 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.108241075 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.099005655 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.093074083 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.115079181 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.093276241 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092218916 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.091676505 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.124071407 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09289818 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.097862366 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.110231472 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.094560164 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093974039 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109436227 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.092790285 seconds)
  done (took 2.776174918 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.170339293 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123037722 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.10860593 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11667446 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124197899 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.109432765 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115312355 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.125997119 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107739631 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.133789885 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.1094174 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109182523 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.133199802 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113307397 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124158289 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118072426 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116527009 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.133001471 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10892777 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123423091 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.120889588 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109809336 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.132036019 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108156297 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.123827717 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109737747 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109278558 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.129140591 seconds)
  done (took 4.124781108 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091516588 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091700815 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.091655991 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.108316494 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.091684816 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.091057866 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.108590505 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.091951639 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091673823 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091719606 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.108037129 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.092427476 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091833594 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.106675406 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.092503862 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.0927249 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091302897 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.107074684 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092199408 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091423692 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.107644355 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092571845 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.092691432 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091431212 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107428024 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.092177824 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091589537 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.106287813 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092167225 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09261841 seconds)
  done (took 3.640720898 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.104678171 seconds)
    (2/2) benchmarking "in"...
    done (took 0.102988739 seconds)
  done (took 0.968902971 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.10004129 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106819395 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.091976606 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10876841 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.100048789 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.091702286 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.116470226 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100473642 seconds)
  done (took 1.579171194 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.141943081 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.159432977 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.100326028 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.103750314 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.160478323 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.149507241 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133126706 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.097441132 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.106930302 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.086203594 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.154741165 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.085300268 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.092857288 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106134543 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.093211347 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.098465574 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.108314165 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.103332864 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.099203999 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.10946763 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097395392 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098379669 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.110843543 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.103444913 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.087082854 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.11210009 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.09723432 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.103664556 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106522335 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.095219997 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.091750053 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.108218506 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.095329626 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.096341087 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.092039055 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.162129683 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099554762 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106424852 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092972913 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.095684752 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.141872812 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.092253276 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.093661911 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.107678694 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096312489 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.095865474 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.113315981 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.092948439 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.084515187 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.104978292 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094021778 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08848657 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.109724564 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094203815 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.094401483 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116875043 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.09591471 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.089822259 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.10534414 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.090047094 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091696282 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.105568644 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096494283 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.096550173 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110216243 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.09401934 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092987083 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.109306608 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.095793438 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.09431756 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.108918917 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110064304 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093317548 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.11329839 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.098458305 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.094986769 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107253848 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098752647 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093220477 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.10878098 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.098898601 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.122295479 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111438164 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089955404 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.089892289 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.116216391 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.096484941 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.096869718 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085939737 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119858184 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.095636724 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.093485462 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.103162867 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.09210057 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088161149 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.114161645 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.087142232 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094612547 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.109877096 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.097890099 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099843316 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108709892 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.096078701 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099503222 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.115192846 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.093516944 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.138387359 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10921356 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.089446565 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.095403304 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.116440556 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.08885208 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.09344612 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.110449504 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094129313 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.088831949 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.114950548 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.094850715 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.094589088 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.114842177 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096587861 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.094811417 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.112811797 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.093680058 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.090336057 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.096827767 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.117293178 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.095547279 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.095087164 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.111957392 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095219976 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.093190851 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.114711863 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.091959244 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099186137 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107569778 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.094826933 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.094376845 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.115449823 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.095546629 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.08879932 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.109270926 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.096080416 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.093084105 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.11473763 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.096031757 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.08940287 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.10343921 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.097296248 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.089663917 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.11233321 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102589586 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.090000628 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.112301351 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.091142887 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102303902 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.10818216 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.099209661 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097489492 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.099043618 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.116337017 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.087562966 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091100965 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.114511858 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.096115909 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.090074388 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.115806803 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.095554215 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.100752165 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.106047916 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.097993101 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.08573991 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.107777786 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.100226816 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.095870074 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.096245064 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.108155452 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.133187824 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.124920588 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100731633 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.093439804 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.110636783 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.09883985 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.093687615 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.097101835 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.117539443 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.098828374 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091389072 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.109716394 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099824133 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.089743431 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.116249834 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093350483 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094075271 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.103838 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.096190149 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.085774594 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.116185372 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.099172337 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.098456469 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.11585145 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096285811 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09270601 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.11986255 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.091110531 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.098357981 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.085878041 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.1167677 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.103884946 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.100367954 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.116939812 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.097035898 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091869438 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.112582404 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102614721 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096087203 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.111415742 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096493111 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.086945426 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.10599812 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.100729688 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.096681633 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.107386874 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094497877 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105807164 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.114702099 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.093739156 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.087586367 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.097734053 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116190659 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.090873044 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094161623 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.108666046 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.093523376 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119405117 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.08859733 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.090962674 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096238024 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.116427677 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.095724733 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.092987293 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.114324145 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100816234 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.097096795 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.113981768 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093094442 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101726729 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.110566009 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.096093181 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.090778274 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.107007577 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.106226894 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.097680451 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.093722494 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.109875727 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.092028734 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097524723 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.118384396 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.101264669 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092301668 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.115901239 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.10154709 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.099695753 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110549017 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.101117983 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.089347249 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.105043929 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.092539445 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.08735806 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.114184625 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.091861938 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.100215919 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.092615423 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111569751 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.099482779 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09599932 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.110982922 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.100663809 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.122847455 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.089853049 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.087802274 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110582563 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095980003 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.091816972 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.108613265 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096781465 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096745728 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.09817946 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.116105373 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.091734918 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.094367364 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.118123223 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.093051274 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.100227387 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.11742129 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.101963796 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.089559978 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.118915371 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.093526059 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099115712 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.107231484 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.096181165 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093089589 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.1120089 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.093255098 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.093237826 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.107622804 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.089072362 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.091500738 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.11783944 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.095088029 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.099119018 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.111707126 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.093461413 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.092058373 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089905678 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.118440312 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.094847673 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.100334579 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.112859631 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.088724134 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.088103884 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.116378808 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096412959 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.099929447 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.10807549 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.099214674 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101235198 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.115865551 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.09652616 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.104344109 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103328861 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.11990852 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.101599514 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.087819879 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.112125718 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100108814 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.094660035 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.115527027 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.097464626 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.088691623 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.116516357 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.10145231 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.095450098 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.111888925 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.089713546 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.094767461 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.118100997 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.099027157 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.100369766 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.095825351 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116056308 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.090976633 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098155815 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.118180112 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.096702652 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101165988 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112517849 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.099588987 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.092209226 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.11808619 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.097203363 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.090593812 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.105984224 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.093419007 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.099470486 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.106319039 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.100212864 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.099637937 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.091762964 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.112212936 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.099604584 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.091422459 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.115713301 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099946661 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.09202447 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.121652788 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.096386321 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.092879931 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.116792345 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.101006627 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.088808824 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.111392567 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095396032 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102018349 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.111855277 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.100460807 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094881553 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.117636013 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.098488549 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.100049751 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.099531488 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.118084568 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.089764339 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.101389248 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.118328051 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.097538476 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.091597455 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.111858222 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.091386557 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.094167302 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.119385054 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.094253395 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10334841 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.118412108 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.095071057 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.093627115 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.117952742 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095568887 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101364482 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.091803128 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.115686652 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.089809237 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.097146965 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.113689849 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.102132683 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.091336469 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.108598845 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101365417 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.099689506 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.117702456 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.100055098 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.101594239 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.108145227 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.09090359 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.097278553 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.109690968 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10705716 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097522712 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.110887451 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.096208838 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.09765167 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.095335055 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.12062307 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.091111647 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.092050686 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.115139459 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097302171 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.092158143 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.108153089 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.100079126 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.09426837 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.115536622 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.095100614 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.089605141 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.112909998 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.103228478 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.093865569 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.109337477 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.094087543 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101237156 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.111813269 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.093673285 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.089644391 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119522259 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.098785283 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101766104 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.109984863 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.097291594 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.092734432 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.115340414 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.104834345 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.094265194 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112006076 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.095577954 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100185524 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118887486 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.089896977 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.093704353 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10367163 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.118320464 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.097613228 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.097259067 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.112892461 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103139465 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101288987 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.116292842 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.090315148 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.089463052 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.112728487 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.091031211 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.099427858 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118090385 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.095875952 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.093380212 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.117318577 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100300218 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097363198 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.098362562 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.108323825 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103046684 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.092017248 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.116791301 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.091611763 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.089540496 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.11623896 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102264664 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094489902 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.114229762 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.098182091 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098656191 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.090162657 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.112133439 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.10056687 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099031459 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.120273068 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096615841 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.093516416 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.117280551 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107892106 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.097230678 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.112758621 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105146946 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.102586709 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115988895 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.096675401 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098593453 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.120947436 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.099861661 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.101231713 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.111293282 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.096594244 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.102691958 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.120429274 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.107267227 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094346295 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.108935615 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.100690926 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.093869529 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.108439429 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.101093695 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10291678 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.120438552 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.096919512 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.093549021 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104063042 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.121040326 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096465512 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.112523254 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.095185469 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100792648 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092483068 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.118049281 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.093489563 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.102815018 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.12132978 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102636302 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.104025311 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.109000353 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102423205 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.097452794 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.12234386 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.098401405 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.089517493 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.108457206 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.099410058 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.103117177 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.101706474 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.118295255 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.099932161 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.099751082 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.117077457 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097392896 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.093623653 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.12249317 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.101981691 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.096696419 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.115909909 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.096503743 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096642407 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.114732488 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.103121621 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.102974188 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.114452828 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107308632 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.10433011 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.113086735 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.095455924 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.097507948 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098480871 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.115936083 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100887481 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.093150493 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.110767126 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101978818 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.102786486 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115019746 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104802187 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102587636 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.115077587 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.10029494 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103411722 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.119044166 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099080664 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.097779272 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.098814917 seconds)
  done (took 61.832228102 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.145150451 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104014202 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.117466586 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099280358 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116501746 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118727825 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098699409 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099048491 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.118748807 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108953116 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.097229747 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117055932 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115042507 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137741111 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116214151 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108150505 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116563809 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101232477 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09801889 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118278333 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114490342 seconds)
  done (took 3.178935928 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.116331623 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.111283722 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.128918567 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.113178149 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104714059 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.131366533 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110585432 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.128556944 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.113285535 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106838854 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.131582044 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109584525 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.126950464 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.108085502 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106658625 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.126685543 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112776079 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.124879652 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.11194574 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109556335 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.127364264 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.110946483 seconds)
  done (took 3.385905102 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.129480668 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101890634 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.095553944 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.116937869 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.102557106 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.098000911 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.120918931 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.101840029 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.106507337 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.114510377 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.090523419 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.09407238 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.115558813 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.100770127 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.093454128 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.097244466 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.126663349 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.10256183 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.102990448 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.117883636 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.091381193 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.099105975 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.118771263 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.091583019 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.103455087 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.101753082 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.118530633 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102798997 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.089934807 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.120826061 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.099250388 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.092212755 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089809825 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.108581383 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.090265397 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.101620752 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.120370198 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.099814089 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.099680931 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.108630035 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.100746362 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.102880021 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.089243367 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.118820905 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.10034617 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.093427154 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.12042471 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.100002357 seconds)
  done (took 5.819500356 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.128047131 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.162338095 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.103118765 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.135463457 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.134018395 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.10839814 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.122862075 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.136389235 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.100467728 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.124454404 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.114044509 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.132737003 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105502524 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.106002763 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.12459253 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104243596 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104542002 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.353719153 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.108737398 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102177224 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.126263515 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.106111477 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.11130655 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.131191329 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.105402049 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102177524 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.121827598 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107346204 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.129828656 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109581759 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107558658 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.12525405 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.113380234 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.10409824 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.121875571 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.104589447 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.113171643 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.123456803 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.104851701 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.099615178 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.12354714 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.107009552 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.102602937 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.134207609 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.1037346 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.123834528 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.105571464 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100865519 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.131230813 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.105191445 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.108332298 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.132171279 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.105340815 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.103389459 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.125122839 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.11235792 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.12639811 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102915085 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.105400453 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.129640687 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101547575 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10480205 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.13209246 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104312622 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.107982892 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.133110101 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.104380798 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10353055 seconds)
  done (took 8.997312113 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.133252852 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.105421644 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.134087349 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115414196 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105817847 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.125978552 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107305823 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.126386867 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.108081135 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110991083 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125152165 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.198833195 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.122742812 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.111688306 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.105441205 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.126460772 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106516002 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125315998 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.107100633 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106373388 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.125373675 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.114726269 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105818116 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.132671593 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116862234 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.122440528 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107690242 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.105397317 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.134245426 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.106944727 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.116433036 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.126360429 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.106033071 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.133821673 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.118139865 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.105620354 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.121285327 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107481905 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.106022447 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.126686277 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.103644468 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112993363 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.127378823 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.103607686 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105350179 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.127296195 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114297497 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.136928939 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.111424667 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110867898 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.127335518 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114213891 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127274356 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108272889 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.114253987 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.141781061 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115249814 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.134478807 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107444637 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.11372157 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.136697828 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.120596206 seconds)
  done (took 8.189475254 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102027762 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099471448 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098893466 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.118925888 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.100372593 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098605555 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.117670074 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.100670362 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099343756 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098842673 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120358858 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099768395 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098260372 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117420625 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.101081601 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099938478 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098540668 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.119127264 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100994174 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099105794 seconds)
  done (took 2.919354716 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.110110464 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.115387182 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.121100981 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109252367 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.101968418 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.127196513 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.102991883 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102241134 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.122400636 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102541463 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109627411 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.128949507 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102750518 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107092418 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.129709423 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.10804955 seconds)
  done (took 2.632380875 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.12098039 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116948688 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.187055081 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.103186771 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.121888947 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.109137362 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.1016456 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.124214495 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.102569726 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.10752679 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.105568391 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.127533689 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103044354 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.102446296 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.123805101 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.104643015 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100027219 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.126583886 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103246116 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.185726722 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.106245235 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103557644 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.123144718 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.106623442 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102920875 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.127351796 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107742972 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101705618 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.124445022 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.103482071 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104088928 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.130207198 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101695353 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.106559562 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.123851572 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.104446513 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.102336473 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.101888808 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.125838282 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103591747 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.104944746 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.12371796 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.102871738 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104226017 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.120980295 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.104829266 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100340877 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.128390499 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104492433 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103458524 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.122900259 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.110929715 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106898863 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.130810774 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.109695967 seconds)
  done (took 7.102490127 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.114479991 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103473037 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.133425797 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101334635 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.102915523 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.103678704 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.125174181 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.10462124 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103948985 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.121494949 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104350816 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.103044528 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.124346222 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105164077 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103637073 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.12368064 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.101912495 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.103168481 seconds)
  done (took 2.82038434 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.107104721 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102108708 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.10566021 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.123743483 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.102323962 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101599737 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.121423208 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.10207056 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10128103 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.123952356 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103759614 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.102974715 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100850612 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.123033646 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102727421 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101994392 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.122653072 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102342813 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.101928555 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.121177209 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104348978 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102324499 seconds)
  done (took 3.218996537 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.113658065 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.182653699 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.109218578 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.193064729 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.099384569 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.098030445 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.128954485 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.100838107 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.114682051 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.120325277 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.099577261 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.097387641 seconds)
  done (took 2.297362462 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130551103 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138946688 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.123971681 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103620303 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110998626 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12892382 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108102929 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107430343 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136297286 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118650111 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12669002 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116669416 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114747067 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136563559 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11055779 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132271485 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108077402 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106818442 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123567084 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122808594 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107008503 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135599791 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105876681 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126325374 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108646984 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11528263 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13546288 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11867713 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126841095 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116816807 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110880261 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127370964 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116970406 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138465811 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104874462 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114954302 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12816504 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122206171 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111687313 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137358565 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103009138 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132310773 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116203103 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112124565 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135420829 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107160071 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133171322 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10894248 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106281619 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.148417408 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112304465 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135140132 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112622496 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114884965 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136031197 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128845977 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138972295 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116699186 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132163053 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119975731 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114540439 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132800848 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114273193 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139323934 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111881114 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13509811 seconds)
  done (took 8.860751055 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.145431922 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105001304 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129183106 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120068856 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135989175 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109715701 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108134685 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127754436 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108605152 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104642587 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171245828 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109020054 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136294002 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11775822 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107259813 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128953726 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108384122 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115195592 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126544705 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130270932 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128501882 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117777256 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136314029 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116911968 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119178529 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132421805 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10788718 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107524868 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129916551 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108467879 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134795111 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109473857 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115320035 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.125562176 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117173356 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107598456 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12839252 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114586615 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107990791 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133733786 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116285579 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.143719043 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108666058 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107450766 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140909723 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109517266 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129679856 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106452463 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108257761 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125147389 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121076583 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138809072 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121665203 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115940215 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129606734 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108562198 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108236054 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129363332 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110432051 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133527716 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117112279 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108664298 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14936161 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108582055 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127944854 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11811636 seconds)
  done (took 8.834639083 seconds)
done (took 167.074021301 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.149236771 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.18474219 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.145423226 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.178356445 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.094964616 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.128942688 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.146534925 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.147419325 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.093337512 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.115428496 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.094931988 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.096849733 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.183834303 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.095185001 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.093931867 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.116832308 seconds)
  done (took 2.910880688 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.192686516 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.305268711 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108451608 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.119927037 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102254665 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.098650876 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.119947939 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.102071143 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.099367979 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.127939852 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.100021006 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096062234 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.126147497 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096791046 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.09868002 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.120159114 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.108102721 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098905439 seconds)
  done (took 3.071760632 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.119324721 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.14073547 seconds)
  done (took 1.115525636 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.130420089 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.212131826 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.280087903 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.167935672 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.120155044 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.140311979 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.148571403 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132662371 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.188283318 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.134030256 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.111598533 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.119101499 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.125520722 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.104514567 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.136232668 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.098276529 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.126530338 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.136603782 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.113559427 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.101441288 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.143710215 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.103113929 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.12491443 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.115394302 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.178243694 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.134333791 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.102977655 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.124267991 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.102938135 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.113733802 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.1282851 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.117358753 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.133064579 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.159406482 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.123987526 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.155073022 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.12881687 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.100246918 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.13432336 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.101525476 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.103582548 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.124272824 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.116438861 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097332807 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.124255556 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.107702891 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.103666969 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.124384942 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.107915091 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.12840967 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.109506444 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.106310934 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.174325714 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.107442592 seconds)
  done (took 7.843098696 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.863358095 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.140394682 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099955009 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.018239566 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.150393669 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112819648 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.888202767 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.124477076 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.254957825 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.89264356 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114737369 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.135115692 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.239742146 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.281301743 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.266109628 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.358252923 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.734247776 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.13414548 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.131533614 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.161049901 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.111057568 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12494983 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.142322825 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.520121381 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.102871029 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.0994731 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.129357046 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.114528709 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.17838787 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.101553113 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.103366912 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.19749766 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.292736492 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.208815291 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.100581227 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.122090916 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100283888 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.185076558 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.27376932 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.220228837 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.193159745 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098536219 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.099284598 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.130649289 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120969153 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097091509 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.181254 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.192473432 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.193062272 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104323138 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.1353824 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.113713938 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.128141163 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.157971824 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120084344 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.361053174 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.363486463 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099494425 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132037149 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.117446249 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268082809 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122696741 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.23922222 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12862463 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217491375 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.121885215 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.848110671 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.162732461 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.122536736 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.108608884 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.129311512 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.10921463 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.108439945 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.191618117 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.500665487 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.11570779 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104564317 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121267699 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.234214217 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.101609243 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099310618 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.181595588 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.100868059 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131230916 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.114426826 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.133871636 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.187355074 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.250488177 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.135115556 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.110461166 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.105897218 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.13686433 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.101146656 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.234222188 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.228832207 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.176779262 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.231726599 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.110906717 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.182480542 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.186166151 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108837845 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.188820924 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.108067564 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.138433534 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110037845 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.226653584 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.157143415 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.105431216 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.12713674 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.112594047 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.157973848 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.106629861 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.110963608 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.188599456 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.558319254 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.183407441 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.098970809 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105478148 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132603795 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.158802286 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.131403505 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266206313 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110805049 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.186030491 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.107469984 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.12054147 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.110897988 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.183286804 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11036619 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132068582 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.11013166 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.130590078 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.25988957 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.222899017 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.13805329 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.251626129 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.19785677 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.111014925 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.191783631 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.110491641 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189900773 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112458046 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.130941661 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10397132 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.834870304 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.137052133 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.11166959 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.106968143 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.208270356 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100612325 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.124605491 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.10233936 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098449508 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.819103819 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.103741982 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121461953 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103894015 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.108169383 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.131942855 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109471845 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.128237119 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.158094331 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.266450558 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.115293076 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.127779787 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103120358 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.178970485 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.104248725 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.101852651 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.121551928 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103241637 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.109944708 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.126597353 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104747056 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.192445227 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.154816601 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.254050917 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.63958623 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.102587617 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102170615 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.264944441 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102996071 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.326978773 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10898659 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.257715722 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163850807 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.121166583 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.364081581 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.188363663 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.187298903 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.1272728 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.168207806 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.121615285 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.110793993 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.181419822 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.101531224 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130389596 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.155726507 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.139241967 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.114651464 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.280186611 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.124027659 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.251494235 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.100736294 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.1884714 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.104907183 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109349017 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.348704854 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103064099 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.119694401 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.181158595 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105515147 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.125701636 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.674634007 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.104743322 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.111745709 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.131846083 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.2358586 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.185217813 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.110453206 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.133251599 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.115600077 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.181149116 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.231021516 seconds)
  done (took 48.058227243 seconds)
done (took 63.854793522 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.265993716 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.181161905 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.303438514 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.153671542 seconds)
  done (took 1.854631687 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.240843721 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.15513169 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.198778154 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.119285869 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.205085473 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.11986506 seconds)
  done (took 1.923808647 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.175657144 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.16798282 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.144958505 seconds)
  done (took 1.371365979 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.199465053 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.213468711 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.322335011 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.254758009 seconds)
  done (took 1.960723713 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.260667996 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.116981538 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.123892392 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.206400948 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.219687469 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.205380373 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.122688043 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.172332751 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.128832964 seconds)
  done (took 2.477420117 seconds)
done (took 10.468749998 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.355323168 seconds)
    (2/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.149859001 seconds)
    (3/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.2457465 seconds)
    (4/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.214655129 seconds)
    (5/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.276491191 seconds)
    (6/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.171347071 seconds)
    (7/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.189600489 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.193103498 seconds)
    (9/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.221717507 seconds)
    (10/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.367072129 seconds)
    (11/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.244352271 seconds)
    (12/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.360994885 seconds)
    (13/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.134648908 seconds)
    (14/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.341539222 seconds)
    (15/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.128428805 seconds)
    (16/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.104762466 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.143198159 seconds)
    (18/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.213227082 seconds)
    (19/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.309321639 seconds)
    (20/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.208556036 seconds)
    (21/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.102239475 seconds)
    (22/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.293586387 seconds)
    (23/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.102525101 seconds)
    (24/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.18330494 seconds)
    (25/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.112802204 seconds)
    (26/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.106829079 seconds)
    (27/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.118370274 seconds)
    (28/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.271058964 seconds)
    (29/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.080799704 seconds)
    (30/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.132613515 seconds)
    (31/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.290209257 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.143500252 seconds)
    (33/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.127916034 seconds)
    (34/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.270689537 seconds)
    (35/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.127520878 seconds)
    (36/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.081621683 seconds)
    (37/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.242613796 seconds)
    (38/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.148767537 seconds)
    (39/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.164023351 seconds)
    (40/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.246840585 seconds)
    (41/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.16168828 seconds)
    (42/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.076218422 seconds)
    (43/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.284899076 seconds)
    (44/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.102705028 seconds)
    (45/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.122574973 seconds)
    (46/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.141030349 seconds)
    (47/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.077223298 seconds)
    (48/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.109798323 seconds)
    (49/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.253370985 seconds)
    (50/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.110708802 seconds)
    (51/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.202321745 seconds)
    (52/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.169359203 seconds)
    (53/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.108021044 seconds)
    (54/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.20777276 seconds)
    (55/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.135742731 seconds)
    (56/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.105264338 seconds)
    (57/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.129923093 seconds)
    (58/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.153641754 seconds)
    (59/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.20800104 seconds)
    (60/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.07654463 seconds)
    (61/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.182094503 seconds)
    (62/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.192470368 seconds)
    (63/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.076700695 seconds)
    (64/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.108287844 seconds)
    (65/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.099930046 seconds)
    (66/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.077571074 seconds)
    (67/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.109191047 seconds)
    (68/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.102007206 seconds)
    (69/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.150363609 seconds)
    (70/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.104126914 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.117469925 seconds)
    (72/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.133628371 seconds)
    (73/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.176583885 seconds)
    (74/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.162232126 seconds)
    (75/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.084154653 seconds)
    (76/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.1257265 seconds)
    (77/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.120467265 seconds)
    (78/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.13091456 seconds)
    (79/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.16073897 seconds)
    (80/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.149432535 seconds)
    (81/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.086265689 seconds)
    (82/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.193827831 seconds)
    (83/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.146458495 seconds)
    (84/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.084860589 seconds)
    (85/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.158149132 seconds)
    (86/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.076460582 seconds)
    (87/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.108230169 seconds)
    (88/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.083206972 seconds)
    (89/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.142119949 seconds)
    (90/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.083682013 seconds)
    (91/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.145204728 seconds)
    (92/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.10753941 seconds)
    (93/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.11040903 seconds)
    (94/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.147057376 seconds)
    (95/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.173023823 seconds)
    (96/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.099986228 seconds)
    (97/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.102321618 seconds)
    (98/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.107539139 seconds)
    (99/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.08027122 seconds)
    (100/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.081637198 seconds)
    (101/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.13494887 seconds)
    (102/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.101215582 seconds)
    (103/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.109984936 seconds)
    (104/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.075911535 seconds)
    (105/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.099182243 seconds)
    (106/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.131458654 seconds)
    (107/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.12689843 seconds)
    (108/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.142358243 seconds)
    (109/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.081181418 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.10309776 seconds)
    (111/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.076556861 seconds)
    (112/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.106888107 seconds)
    (113/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.136148485 seconds)
    (114/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.103647598 seconds)
    (115/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.076076712 seconds)
    (116/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.103827579 seconds)
    (117/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.143639644 seconds)
    (118/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.111534853 seconds)
    (119/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.142997927 seconds)
    (120/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.08481087 seconds)
    (121/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.109252473 seconds)
    (122/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.108165908 seconds)
    (123/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.107571973 seconds)
    (124/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.108148444 seconds)
    (125/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.102135667 seconds)
    (126/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.099702669 seconds)
    (127/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.077867746 seconds)
    (128/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.104844295 seconds)
    (129/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.076591764 seconds)
    (130/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.079307169 seconds)
    (131/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.098395763 seconds)
    (132/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.07819821 seconds)
    (133/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.085443032 seconds)
    (134/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.083681588 seconds)
    (135/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.083646669 seconds)
    (136/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.124552819 seconds)
    (137/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.104695353 seconds)
    (138/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.10605262 seconds)
    (139/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.123780166 seconds)
    (140/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.110890651 seconds)
    (141/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.078213774 seconds)
    (142/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.123086953 seconds)
    (143/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.150461293 seconds)
    (144/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.084498012 seconds)
    (145/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.076836556 seconds)
    (146/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.076804003 seconds)
    (147/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.146087251 seconds)
    (148/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.135722396 seconds)
    (149/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.111349782 seconds)
    (150/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.132141565 seconds)
    (151/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.080441487 seconds)
    (152/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.101745427 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.103050243 seconds)
    (154/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.10696271 seconds)
    (155/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.081548964 seconds)
    (156/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.080795358 seconds)
    (157/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.103544172 seconds)
    (158/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.104105044 seconds)
    (159/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.083604612 seconds)
    (160/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.08092254 seconds)
    (161/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.102826212 seconds)
    (162/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.101388027 seconds)
    (163/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.085674072 seconds)
    (164/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.078765519 seconds)
    (165/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.099517423 seconds)
    (166/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.125179175 seconds)
    (167/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.08043261 seconds)
    (168/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.080194021 seconds)
    (169/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.09962241 seconds)
    (170/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.131707197 seconds)
    (171/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.113925914 seconds)
    (172/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.123274941 seconds)
    (173/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.082364785 seconds)
    (174/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.132975154 seconds)
    (175/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.104802934 seconds)
    (176/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.100363807 seconds)
    (177/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.10211722 seconds)
    (178/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.084922115 seconds)
    (179/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.079364941 seconds)
    (180/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.10354022 seconds)
    (181/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.07924394 seconds)
    (182/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.13440794 seconds)
    (183/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.125558655 seconds)
    (184/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.121273483 seconds)
    (185/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.136690993 seconds)
    (186/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.103646794 seconds)
    (187/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.078500982 seconds)
    (188/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.077527309 seconds)
    (189/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.104118569 seconds)
    (190/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.080917242 seconds)
    (191/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.084317046 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.103213506 seconds)
  done (took 26.309509899 seconds)
done (took 27.196823466 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.203986868 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.124317165 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.110779946 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.110234173 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.199052853 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.117970261 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.148590728 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.112809631 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.119739413 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.133223318 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.101977349 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.121425453 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.132339633 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.179077987 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.135373471 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.104998463 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.10171914 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.119742037 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.148762373 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.125844656 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.201432534 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104910826 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.119668782 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.125287029 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.177574045 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.12747219 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.110896202 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.110598521 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.14658739 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.110751908 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.110622807 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.124940785 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.126807574 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.124047703 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.123820664 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.112473452 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101110392 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.083663522 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.134335111 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112736669 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.121848792 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.135208245 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111245988 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.102717611 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.134916249 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.110534459 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100907704 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.137308894 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.101539375 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.111056052 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.127837911 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.126554895 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.109686543 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.123603602 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.101388119 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.102768427 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.143282509 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103900564 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.12324116 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.123808971 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.105529891 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101669605 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.112140662 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.126364307 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.111397679 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.101218623 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.134408437 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.117389951 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110306787 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.129311434 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104059125 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.110044048 seconds)
done (took 9.780909348 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.108176595 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.146576945 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.198776074 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.211035027 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.130680042 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.141078762 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.119286204 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.126423601 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.138953373 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.122609894 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.138904966 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.159449516 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.181532584 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.144168007 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.119299202 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.137458216 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.115757269 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.11115103 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.207967331 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.126777365 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.15275025 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.120570455 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.128700694 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.145457956 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.106627609 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.161253459 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.111538894 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.114921688 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.128263568 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.116250775 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.126367788 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.129412667 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.111760796 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.125579583 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.148058717 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.118049825 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.117683561 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.139509792 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.108191219 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.106657316 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.138343814 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.12233888 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.128265119 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.120177212 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.114329097 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.145070806 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.115684458 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.119534986 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.129422874 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115902423 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.107682808 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.155084441 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.120161002 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122867483 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.142456895 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.119524928 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.119665554 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.143194228 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.111408124 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.118863099 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.135002069 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.108318617 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.108769261 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.151971126 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.111273828 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.119580783 seconds)
  done (took 9.562973823 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.12774871 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.136552781 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.140204084 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.11821045 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111863355 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.124080728 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.102461185 seconds)
  done (took 1.793898787 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.103236441 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.186858094 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.208459034 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.208690406 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.204450693 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.193627622 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.149425754 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.102624266 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.136179398 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.137947387 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.185325035 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.237536214 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.1126332 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.143299096 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.211655316 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.102230357 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.213251334 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.103598585 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117297207 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.21156876 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118207772 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.158114122 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.115953353 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.10182478 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.205799711 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.103315344 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.260873548 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.145209018 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113175385 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.115825674 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.139277986 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.182923223 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.208252659 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.116837874 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.133907652 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.184528294 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.204957799 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115553556 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.220888991 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.106615129 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.206488983 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.118335635 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.142324103 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.117492965 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.116437141 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.196310815 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.119656454 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.143140632 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.116267261 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.213244493 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.114007904 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.208344961 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.114537014 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.116754889 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.138845202 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118692429 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123909334 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.142959581 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.188032321 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.146112456 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.206187843 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.185884498 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.207099652 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.208233508 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128117698 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.208684357 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.178667044 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.13928001 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114038968 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118165358 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.211326512 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.117132187 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.139922036 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.173239002 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.146382125 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.186259115 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.210758925 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114310618 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.142058097 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.107244508 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.114771791 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.127783317 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.176148062 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.141400932 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117079378 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.121012172 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.142402294 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.118274787 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.107668755 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.153434613 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.116200605 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.137765046 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.123520672 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.117090593 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.142884371 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.18990394 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.13912633 seconds)
  done (took 15.690810559 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.107770231 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.104797811 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.109077958 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.12924669 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.10467593 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.105375233 seconds)
  done (took 1.607770437 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.141052401 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.11822053 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.150771402 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119280181 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.185213732 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.190660367 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.218557022 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.112063285 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.159838387 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126642002 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.214977499 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.192282662 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.216040926 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.119544164 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.218813057 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.143249991 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.196258449 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.139078102 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127744988 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114361681 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.142124461 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122074341 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115079982 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.208539321 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117632733 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.144598357 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.112630449 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.125648635 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.150879502 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.112771862 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.12089933 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.144993581 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.111058764 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.136723411 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.216931987 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.135923711 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11460582 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120629268 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.144652492 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.120505988 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.218352604 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115659212 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.123703846 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.146035057 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.113776643 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.110711175 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.148312801 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.111008117 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.220864353 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120957823 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.144949767 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.12034704 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118742797 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.147184921 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.113279026 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.111932772 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.145421397 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.196039409 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.14681026 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.111211328 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118285387 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.145341935 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.113037332 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.147091707 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.120205147 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120689532 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.13553723 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.120164056 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114956893 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.143376269 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.121621632 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.118845673 seconds)
  done (took 11.181431398 seconds)
done (took 40.761292391 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.496148587 seconds)
  done (took 2.439713418 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.879578631 seconds)
  done (took 1.824448649 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.136091075 seconds)
  done (took 18.115349976 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.42039946 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.459041456 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.118949324 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.147049274 seconds)
  done (took 3.088746196 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.810884032 seconds)
  done (took 1.778944216 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.279698384 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.256547669 seconds)
  done (took 1.489223045 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.700198013 seconds)
  done (took 1.66040854 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.497257541 seconds)
  done (took 2.447866374 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.28391075 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.239906898 seconds)
  done (took 1.489540909 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.607742396 seconds)
  done (took 1.572979278 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.062789268 seconds)
  done (took 20.033646718 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.259777728 seconds)
  done (took 1.231930252 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.287706089 seconds)
  done (took 1.261330282 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.374941664 seconds)
  done (took 4.348217014 seconds)
done (took 63.739406427 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.12177979 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.117033695 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.139398818 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.116261898 seconds)
  done (took 1.454433812 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.128677052 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.117997087 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.146187075 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.117538428 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.123694634 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.141455441 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.117538593 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.118774908 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.11680179 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.14491511 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.118653004 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.116109005 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.144265637 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.116999718 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.115275062 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.143974363 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.120716297 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.117228224 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.142411751 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.119151184 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118496326 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.144271035 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.121969108 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.120782982 seconds)
  done (took 4.007786573 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.118425278 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.107905937 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.109852131 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.131676727 seconds)
  done (took 1.441515756 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.131030521 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.130510661 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.151545714 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126367786 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.129325499 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.152944784 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118187181 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114597369 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.14254667 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126461585 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.132251813 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.155779756 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.128643904 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.143923791 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.128399163 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.112190505 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.141541493 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.1309679 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124593973 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.14928719 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.118988589 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.123758124 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.1457881 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.127148589 seconds)
  done (took 4.16271339 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.194796194 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.128578776 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.173921766 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161944137 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.175895816 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.116609507 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.143698032 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.149653765 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.124748348 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.143964851 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.121295976 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.162467227 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.1485658 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.119891935 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.117986306 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.1497097 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.130469328 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.146740688 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.165036629 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.122184139 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.149046767 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.129718945 seconds)
  done (took 4.153521842 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.12567693 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.109672928 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.12862888 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.110054279 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.122513323 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.135653346 seconds)
  done (took 1.714569622 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.112069467 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.102172862 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.102719428 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.126608793 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.106819371 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.102936587 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.124682461 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.104228736 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.103729264 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.10235184 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.126750672 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.102836142 seconds)
  done (took 2.29304971 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.334801299 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.108378401 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.134241882 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.11096689 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.113326902 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.105451004 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.145253085 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.107723879 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.268233149 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.104188001 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.130737697 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.195775 seconds)
  done (took 2.842818627 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205796408 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145094246 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254028086 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.365585278 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184149948 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160253433 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.290623645 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188420308 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.175773973 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16100812 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208055867 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16052445 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17617874 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182759605 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16456 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.156778064 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185629212 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206979421 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166898206 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23362549 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157433569 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197867131 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188058302 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173368605 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138480905 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188388527 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.118876751 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151459452 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166716348 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18867049 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170684774 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175516931 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139495162 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213440057 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252349918 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1987426 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268920045 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132559636 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.190568468 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.18947985 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255591896 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165831258 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212989293 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151807598 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127879256 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206247138 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175292177 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.18343508 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.156872041 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145836113 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207206785 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176812641 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.199425707 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13496603 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.304546959 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15846417 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.143705142 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188175139 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186756247 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224641037 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19932842 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.122953802 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197973079 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189220605 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237348328 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.165350907 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.162621989 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150598897 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163556395 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.229984585 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204948106 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158310778 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.231094734 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154322453 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171041325 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192651617 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152523089 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229704193 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195605502 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.120147379 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14763937 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160010466 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125736843 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.210006586 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121693366 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240298654 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131048572 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.339152191 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208094739 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154596043 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184732752 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156728233 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188784418 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145295059 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.125146295 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141931289 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.185930507 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15604214 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152649147 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155113996 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137840906 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.151683244 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148979812 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.147840303 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168862076 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.156766464 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164181959 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192580367 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.131133467 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202698252 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147994262 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.186598428 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166950096 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216657367 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129219414 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158929801 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242853404 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167929046 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.160237592 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174067576 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.219694847 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.148009588 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160222588 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162231393 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217813387 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140233869 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223584866 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161791562 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134510602 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.160986129 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172151858 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184685121 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.15374764 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15104919 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.165424416 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215268214 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.125867976 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162268124 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180412921 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157936178 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124310882 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135114961 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160390932 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.139699838 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.171791292 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.137981716 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175690765 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165223853 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187444147 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156039403 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15912413 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172022814 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155811504 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.16782555 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172012766 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.119336541 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.198001165 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195396754 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153959879 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178443441 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.186894039 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207240693 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170724142 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155878708 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183065059 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151646311 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.120192541 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158645053 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.197182065 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186986669 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.186539506 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206839626 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.190654731 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.161299573 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175343817 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191776204 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.18351668 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180911283 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.141727764 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197658437 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166463485 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.145735181 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.123923199 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.126777438 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16172473 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130055668 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135190892 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202831529 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190615906 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204626475 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164938623 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160816509 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190715867 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.149959095 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159788012 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.198397875 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137206941 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.212415045 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187969075 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202680209 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164240722 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162159334 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.119011918 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151506274 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.132435049 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18719615 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136048653 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157895785 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141790401 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.216423431 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170544897 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172401266 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21704741 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163021049 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.225585297 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.119595391 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.184205048 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168236224 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192353062 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.182859731 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155929008 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.159757761 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.218478685 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140497287 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216402523 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166439749 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204102139 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220442753 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.162547818 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156724426 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148358819 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18596367 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137546583 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188941609 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145506799 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129116208 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177337008 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.136236262 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165581465 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209306055 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142860109 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203573177 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.156833237 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197103733 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124105749 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166974777 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175529368 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170602969 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.104430658 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193467182 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19481592 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175178044 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153225242 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198481096 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12957929 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.340159108 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186010598 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202360419 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160444855 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13855883 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194910188 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16097525 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188963255 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184036812 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166700794 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204512268 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.194431517 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.14102477 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158207194 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145601201 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176679551 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.137649275 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.177192549 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.160271637 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.168779912 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20917314 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136241582 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166535107 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200313408 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.14114091 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.17470544 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137165719 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248985565 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191548321 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170393463 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.189878539 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.162195798 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209542382 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121658243 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153063889 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.132729166 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209432379 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129836584 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201171884 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.170388968 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210744456 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200292873 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160833592 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16632408 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.127229637 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190945337 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147627276 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211988268 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134909784 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.164133204 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187163298 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.15266305 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13035641 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186293334 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269271291 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17107062 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170041776 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.132230846 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.268553993 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153089825 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132753798 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187140326 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16714711 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.15819854 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.180405309 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198341981 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141518514 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161196887 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160703933 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203754052 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18635803 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19243204 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198397472 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.146399953 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188371451 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159381885 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200457964 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144491871 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.172950885 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159223417 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219204277 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.176903314 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.15738193 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16538715 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195445751 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167941419 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199350707 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162732939 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182746755 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125395036 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191011522 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136546144 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150888831 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160686422 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.193099184 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129197851 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201364253 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194091038 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129817578 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126042104 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173619484 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163521342 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166461504 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.129095666 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210781408 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.129446299 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206868851 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230617073 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129705297 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163609343 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172394681 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128446636 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16286833 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141779769 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128712205 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.198064484 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179915202 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.156294277 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173012852 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190284923 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187160275 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15540738 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167227532 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.328601439 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.126992845 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21528234 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147911446 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22233104 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17663153 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174819264 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194686244 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147777242 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189933007 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1454631 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.245858775 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163180798 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.192818185 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130936011 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169505113 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137876606 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.160871269 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152647981 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192906749 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141510039 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.135376594 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.193666611 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143328926 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.172517751 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141488915 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226152113 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149906869 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211186816 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.214193459 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136962131 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200962411 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173375205 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156249616 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.162866163 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197206938 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142202503 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178373474 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.132905888 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.164366453 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211837975 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.150253153 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159488543 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198619396 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17000725 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19728015 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.135470399 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203042501 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141229995 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200829768 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126423568 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.179365833 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171708678 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158846044 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.126868808 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170065724 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184796145 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.188822712 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142004945 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.17423959 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219764941 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.12224258 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158440586 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267919836 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186692706 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219677871 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.136313602 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135878847 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170564315 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157203255 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.189515193 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168470384 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.157548943 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129297804 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.170530421 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.154512868 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.140780615 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192021641 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19472423 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1601147 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209857798 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.131829605 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.276582783 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144250367 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169011711 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.116144273 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.128449125 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165911106 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134284142 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139810526 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209244144 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2392985 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.161310198 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.1738778 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134069967 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.152388586 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129870912 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187445487 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150684832 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191131681 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147047412 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.102349976 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166570322 seconds)
  done (took 85.320151441 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.167277202 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.150630924 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.166282668 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.218977535 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.193755896 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.286981692 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.226834603 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.243583191 seconds)
  done (took 2.715039012 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.125478468 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.156902015 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.142148065 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.14197495 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.109340899 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.438108097 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.156084596 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.119119242 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.159971693 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.148972229 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.133327611 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.526351406 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.116548222 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.141265001 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.120366494 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.132473096 seconds)
  done (took 3.920286676 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.477395915 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.520994919 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.644313631 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.285218281 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.253957821 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.201390024 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.703832301 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.19647882 seconds)
  done (took 11.343207764 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.160471784 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.146329668 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.411174882 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.731649407 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.201387228 seconds)
  done (took 2.71982476 seconds)
done (took 129.054201481 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.128964905 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.122390776 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.121770751 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.149032839 seconds)
  done (took 1.577024452 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.180941171 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.08958031 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.091205997 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.115003077 seconds)
  done (took 1.543944153 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.419611662 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.089194695 seconds)
  done (took 1.603304217 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.162423825 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.135314668 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.163917714 seconds)
  done (took 1.541125785 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.146208642 seconds)
  done (took 1.213575416 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.130926004 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.124240099 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.225754031 seconds)
  done (took 1.552238377 seconds)
done (took 10.102500029 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.125185532 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.921108724 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.428698156 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.131841875 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.710580547 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.424697355 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.398871261 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.172745672 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.172892208 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.134623046 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.129552249 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.68804573 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.407953406 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.873029295 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.366907541 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.899622055 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.692352239 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.110313147 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.141983472 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111248022 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.401133393 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109283719 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111173211 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.110027083 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.714430913 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.418052604 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.10771692 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.910411569 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.107879661 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.137029441 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.399688775 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.109872506 seconds)
  done (took 20.740166636 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.12441992 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.16470435 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.14414062 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110588907 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112016405 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.135990537 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.121484032 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.121539934 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.200150327 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.10860114 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.157683458 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.108412923 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.114083127 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.136440065 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.13424593 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.108078919 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.13864518 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.11171351 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116351715 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.137292813 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.130689201 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.108543793 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.137323281 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.111435212 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.108717569 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.15682681 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.109383333 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121749276 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.135666372 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.113489454 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.113830897 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.135828741 seconds)
  done (took 5.171159201 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.164831871 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174962719 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.144544089 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.146497306 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.184343685 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.111824039 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.2209611 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147412446 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.201627123 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.112668549 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.130671633 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.135860326 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.150024415 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.110039978 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.16117684 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.109643412 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.111645816 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.138920226 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117444041 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.135920002 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.132182081 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.10803238 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.135636549 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113037501 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.109621193 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.157347401 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110984136 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122058996 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.13559432 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.113762101 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.114691453 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.135560405 seconds)
  done (took 5.478452473 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.130697209 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.124593122 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.131893114 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.159958154 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.118705152 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.122269485 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.150794249 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.11983682 seconds)
  done (took 2.134900045 seconds)
done (took 34.596617366 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.140690337 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.126735954 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.127520081 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.150179202 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.186551704 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.143041415 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.125359905 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.113904846 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.148185261 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.13000635 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.109341411 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.115585865 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.155451397 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.1183902 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.21499592 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.122927405 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.22089769 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.189287177 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.144192072 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.123768598 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.115662482 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.222518357 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.1193605 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.142768234 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.191204245 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.111990924 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.209669351 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.119183619 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.145843783 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.112576218 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.215507287 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.120992488 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.115229325 seconds)
  done (took 5.917449887 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.212592715 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.119920333 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.146564145 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.11796811 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.119610827 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.145264056 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.209041767 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.145977708 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.118997477 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.119597507 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.118241976 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.217945074 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.123388512 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.142321274 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.122125329 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.10830691 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.235828924 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.119504701 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.110188247 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.117979846 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.115146971 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.117327518 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.247955114 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.113777793 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.144743231 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.120144984 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.121378439 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.121990235 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.147631244 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.120875624 seconds)
  done (took 5.333153163 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.133155637 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.131440362 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.161354599 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.185346597 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.147209332 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.157018221 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.138049775 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.133700554 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.168464854 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.113888157 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.127371297 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.175928074 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128820441 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.121915064 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.144285922 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.130687655 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134677071 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.140131786 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.121281703 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.128865363 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.160810006 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.131131676 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.135117471 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.14773847 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.112249132 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12051727 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.150877698 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.127255839 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.121624219 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.154908664 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.114069035 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.115915052 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.142227319 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.14869589 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.114702488 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.155484683 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.13879764 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.125044055 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.153900012 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.144534191 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.142521481 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.115545268 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.13820191 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.19259524 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.116158881 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.125654134 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.15106208 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.129214641 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.111828065 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130821289 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.183090148 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.113545844 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.159901278 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.114161572 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.110786567 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.120407104 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.14036619 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.116679376 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.128007379 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.142480996 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.139073199 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.119538826 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.152370412 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.114982921 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.122938884 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.138925923 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.112724226 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.117036747 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.165028709 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.121423677 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.148210998 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.139975724 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.1252208 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.124840301 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.149526058 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126087244 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.112948586 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.1235881 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.15158464 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.118752403 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.124579419 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.14282753 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.116225373 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.129345036 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.161854587 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.127861781 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.124488981 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.153567461 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.116548205 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.114040162 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.158403888 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.114365684 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.117136416 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.15399585 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.114757497 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.11693465 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.152113126 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.125787691 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.110134204 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.163478822 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.118687399 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.113015449 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.137756228 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.146701739 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.118951081 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.12249761 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.183348499 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.113563648 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.123805469 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.157263598 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.113867708 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.120559258 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.145338891 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.112248463 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.131237317 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.157643789 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.121170801 seconds)
  done (took 16.821954762 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.322311084 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.272213381 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.210524989 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.24103092 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.126906612 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.235570944 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.296316646 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.300739129 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.112860131 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.181025679 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.164142569 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.269199106 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.142515436 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.142939652 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.304130612 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.354620081 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.171572766 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.151461584 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.177146381 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.127527089 seconds)
  done (took 5.412072855 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.143159654 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.14855012 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.163423808 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.141736241 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.122897724 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.157522157 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.113464248 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136104619 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.152600881 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.124236537 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.114634853 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.156638761 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126624132 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.129339528 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.157227522 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.144512639 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.119792108 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.147382971 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.13639734 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.117914571 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.129297824 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.139470207 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.149089277 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.137054735 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.132453494 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.150247883 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.11411346 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.118331514 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.119465333 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.150431882 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.119240252 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.159025903 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.122699317 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.106255645 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.125211334 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.156733063 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.120122445 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.115703332 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.145749971 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.119014723 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.127153364 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.154552878 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.124157772 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096736709 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.132079471 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.134526547 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.128967115 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.125544979 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.105068956 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.160351088 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.126696995 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.127049726 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.148347065 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.136543388 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.119418276 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.158214308 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.125412803 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.126720262 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.146721909 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.11310612 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.110689128 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.144897436 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.122984359 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.127312599 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.152902958 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.134778031 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.129601846 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.141572325 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.119224371 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.117417138 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.144448648 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.128977885 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.134157193 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.150932599 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.122922847 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.125024592 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.148206858 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.094091717 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.123833368 seconds)
  done (took 11.590660479 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.14736141 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.122080717 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.157302421 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.150685505 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.124791384 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.145673753 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.123411819 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.133435225 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.125779318 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.159749198 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.127720641 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.127421897 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.162987851 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.124665662 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.12112621 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.156673593 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.125850572 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.176996377 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.134071914 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.14090597 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.153203086 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.119321333 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.126110285 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.152028221 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.144341486 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.124456062 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.167990521 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.126170319 seconds)
  done (took 5.019834716 seconds)
done (took 51.17925735 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.236445375 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.429587437 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.214088653 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.21407036 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.210077145 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.213164951 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.231186439 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.213096002 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.606473395 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.183003956 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.217211803 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.215782667 seconds)
done (took 28.28960705 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.246888565 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.751106751 seconds)
    (2/2) benchmarking "String"...
    done (took 1.500375336 seconds)
  done (took 4.353603451 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.20494453 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.204762662 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.45835009 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.205932581 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.216957118 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.204752774 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.20928115 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.205941091 seconds)
  done (took 15.807525541 seconds)
done (took 25.715590347 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.243376459 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.382396587 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.440317859 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.202145024 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.220738241 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.20609232 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.209237428 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.215400414 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.216703686 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.205848019 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.59423309 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.463227346 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.201666493 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.569032462 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.203053217 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.237033355 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.197742162 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.433992267 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.215708028 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.231113452 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.177840488 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.193543193 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.231084746 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.202558227 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.203935959 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.201934733 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.231385799 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.199206043 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.390814179 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.229734667 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.227181057 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.203891324 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.237716276 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.201905885 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.209867599 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.214430235 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.378825973 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.202766464 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.187506853 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.218633054 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.395940105 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.207294013 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.198920074 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.20250773 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.214589561 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.232046935 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.186253991 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.319015246 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.227532333 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.207900859 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.248757176 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.569497809 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.206281428 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.217060568 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.201152741 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.421477719 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.204795043 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.231840715 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.227117568 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.219799037 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.199797802 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.199974254 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.253661871 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.208753593 seconds)
  done (took 143.536878628 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.207633789 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.205751534 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.208530063 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.223879277 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.20248357 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.205512437 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.20586744 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.206147452 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.207745438 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.233259535 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.204997521 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.205746591 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.20577212 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.230128692 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.21441508 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.228123883 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.208235177 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.202175242 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.223061903 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.204160551 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.234249774 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.201173621 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.207381134 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.20782397 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.225095534 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.262390189 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.215072058 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.202622413 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.210258498 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.207577945 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.226860614 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.208346091 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.73137807 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.072945641 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.2164502 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.230186123 seconds)
  done (took 80.197732516 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.204900779 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.206929366 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.207184888 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.233884266 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.204751753 seconds)
    (6/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.208299971 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.703003174 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.161378196 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.776675372 seconds)
    (10/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.700254488 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.321723543 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.359390749 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.202474009 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.297968621 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.21550604 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.202492175 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.224349309 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.230697698 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.205139494 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.206237683 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.699016237 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.220571829 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.352584436 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.365739022 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.213592412 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.234306386 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.592367278 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.204861963 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.235105108 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.525120973 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.244253244 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.20246295 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.460815436 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.945867688 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.312193938 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.207482475 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.232725767 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.206077946 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.48114409 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.205668836 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.209941303 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.208723748 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.758022088 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.205263833 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.688978749 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.20377101 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.061910075 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.20196546 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.20968498 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.041955912 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.694459369 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.203837946 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.205904806 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.209989308 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.206312895 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.205133204 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.234660737 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.031658812 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.290114599 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.207762601 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.212108587 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.231203563 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.205906688 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.363625701 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.206210098 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.34584737 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.263991406 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.420325918 seconds)
    (69/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.205153243 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.677949226 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.204973794 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.294171256 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.316817703 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.200806858 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.203974965 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.205898324 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.206295745 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.310475306 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.204803063 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.81551625 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.359033112 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.214057516 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.204519932 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.250217598 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.296966385 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.205553075 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.439176924 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.204847236 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.205856023 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.820474584 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.198254145 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.294485394 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.202774987 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.205927854 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.206870618 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.815334779 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.669265875 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.332820284 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.20643989 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.639871823 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.206636331 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 4.989530252 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.661148382 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.74606214 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.204473647 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.310741895 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.358721622 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.214704425 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.205479207 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.223704636 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.204049576 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.263367198 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.205779959 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.602839742 seconds)
  done (took 370.068699228 seconds)
done (took 594.904459313 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.074542761 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.020036316 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.15499316 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.029701333 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.013320401 seconds)
  done (took 11.39260327 seconds)
done (took 12.493811587 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.375334004 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.377633862 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.257746994 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.380070989 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.237339286 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.391319299 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.356500088 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.22375419 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.30962339 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.273678586 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.307722681 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.251105419 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.23566237 seconds)
  done (took 18.07872975 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.476876429 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.218182608 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.272633166 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.455635368 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.251820608 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.466634425 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.502524139 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.217717702 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.387717646 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.229475002 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.230554096 seconds)
  done (took 17.810973498 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.486402475 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.21794201 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.275598226 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.451724237 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.254211807 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.474659716 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.510917802 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.219368049 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.371101477 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.233481196 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.229666208 seconds)
  done (took 17.827936549 seconds)
done (took 54.818629981 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.242761662 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.297572725 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.239219077 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.228006969 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.225392932 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.226741791 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.230344903 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.227248046 seconds)
  done (took 11.02004375 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.226697738 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.226215094 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.224136796 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.225739944 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.225935533 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.225806239 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.227715822 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.225567169 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.225053188 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.228964939 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.226137336 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.225419517 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.226443552 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.224843019 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.223356429 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.225448185 seconds)
  done (took 20.716532298 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.228657927 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.225711853 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.223738351 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.225315774 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.226157228 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.226754852 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.228996728 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.225931175 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.225994555 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.227317786 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.226919012 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.225586105 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.225682643 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.226673092 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.227274088 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.229157457 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.22974136 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.226466056 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.231824674 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.226275518 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.226913981 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.22646136 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.227936296 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.227109026 seconds)
  done (took 30.555251399 seconds)
done (took 63.395506174 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.21207744 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.22933818 seconds)
  done (took 5.546527481 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.285245957 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.285707793 seconds)
  done (took 3.67827904 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.228520055 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.22721975 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.228614582 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.229448007 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.227545416 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.22702554 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.228632659 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.226140795 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.228843667 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.22923134 seconds)
  done (took 13.386767147 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.229177666 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.227884046 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.22694059 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.230190225 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.22781465 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.228395682 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.230522011 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.228284018 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.2297601 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.228027203 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.22745668 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.227234622 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.231371453 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.229666237 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.228980557 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.227369859 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.229414991 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.230008159 seconds)
  done (took 23.225476275 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.242491497 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.247592312 seconds)
  done (took 3.594010621 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.355965917 seconds)
    (2/7) benchmarking "second"...
    done (took 1.271655883 seconds)
    (3/7) benchmarking "month"...
    done (took 1.333632377 seconds)
    (4/7) benchmarking "year"...
    done (took 1.326743912 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.272180857 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.250063668 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.26881629 seconds)
  done (took 10.18525625 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.230682426 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.426904734 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.540646025 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.813426193 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.230816756 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.233039234 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.135288884 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.235209812 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.235171226 seconds)
  done (took 14.190097117 seconds)
done (took 74.909354126 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.214105027 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.241306931 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.236014586 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.228902191 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.525809453 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.232377701 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.216071632 seconds)
done (took 16.003260006 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.194497517 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.194014841 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.202274449 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.17869098 seconds)
  done (took 9.877851813 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.146416299 seconds)
    (2/2) benchmarking "read"...
    done (took 1.539427608 seconds)
  done (took 4.79278966 seconds)
done (took 15.778215352 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.23022329 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.232270185 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.231441569 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.231861715 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.231262192 seconds)
    (6/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.233832825 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.231452459 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.231584225 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.233593157 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.232446841 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.233840568 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.231056464 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229035912 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.231256657 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232352411 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232490412 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.234017463 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232018068 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.232715649 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.232710314 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.2314528 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.232422788 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.234659751 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.231975084 seconds)
  done (took 30.678533644 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.23375006 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.232538703 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.232277483 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.231859289 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.231509412 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.233386868 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.233365445 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.232816254 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.233386323 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.232506641 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.232927615 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.233684887 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.233492594 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.232189472 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235144168 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.234280939 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.234324254 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.235314157 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.234387374 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.234266565 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.236689956 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232527277 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.234660694 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.23476904 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.233738647 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.234032094 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.233093866 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.235528593 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.233945493 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.232478793 seconds)
  done (took 38.118798786 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.237890027 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.237023004 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.236512361 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.23633518 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.237056137 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.232191594 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.236274012 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.236450388 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.234589346 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.234487241 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.232759431 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.235105246 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.234836649 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.233088684 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.235398059 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.235514051 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.236195622 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.235645396 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.234755054 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.235283846 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.234571084 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.233026825 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.232767926 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.233366398 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.234727194 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.236343866 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.236846891 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.235812331 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.235999088 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.234006542 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.235026759 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.237345523 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.235981093 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.237219791 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.235813697 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.236729222 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.236535341 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.236389755 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.236972646 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.236086753 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.235419455 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.240697663 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.235196585 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.236500459 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.237396752 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.236361225 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.237424696 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.238191714 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.235385955 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.23591542 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.238897677 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.237224498 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.2355868 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.237406431 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.236463337 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.236445833 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.236000033 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.236840834 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.242033627 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.237966699 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.237273745 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.237700847 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.238368841 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.239392475 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.238305584 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.237982382 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.237113693 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.239675995 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.23826042 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.239114335 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.238633491 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.23667864 seconds)
  done (took 90.134890622 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.23903646 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.236859909 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.237470428 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.23886036 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.235755377 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.237746674 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.24019202 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.239449303 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.239894603 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.239562568 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.237680307 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.239597014 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.239676537 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.238039992 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.237720126 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.239978234 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.238342322 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.239875353 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.238736132 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.240812198 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.239536418 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.238796437 seconds)
  done (took 28.367410544 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.240623377 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.241032824 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.242029503 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.241229577 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.240844839 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.240188228 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.238699451 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.242011387 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.241190575 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.239008402 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.23857049 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240145508 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.240244579 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.239364905 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.23855974 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.243411291 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.243060055 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.242690633 seconds)
  done (took 23.451171 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.241124626 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.239412607 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.24040262 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.239234501 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.242876568 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.242268609 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.240535372 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.245160534 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.233054519 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.235985328 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.233985886 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234441541 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.23520126 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.234232638 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.237007219 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.239096634 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.225398097 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221698528 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.221164265 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.221474285 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.222434054 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.221839334 seconds)
  done (took 28.263418531 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.222498078 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.220173719 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.215485708 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.214762058 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.214610744 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.215164958 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.216043401 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.21553577 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.216258997 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.21482868 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.213071154 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.213080679 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.214646871 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.214768576 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.214322248 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.213249869 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.215233015 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.215336055 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.210010051 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.210974091 seconds)
  done (took 25.40932253 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.209987332 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.210905215 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.209718703 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.212913882 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.210507833 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.207212108 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.203618886 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.205198761 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.20414654 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.205443748 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.207068219 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.204953273 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.207979043 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.206325681 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.203162388 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.203757435 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.202696134 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.20338641 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.202565303 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.202614196 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.203164662 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.204475174 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.202307379 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.20082202 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.200403175 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.201028867 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.200969176 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.201949564 seconds)
  done (took 34.840307139 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.201951639 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.20140457 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.19930622 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.200091492 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.202910485 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.200610867 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.20042369 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.202443725 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.201678981 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.201192847 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.199020454 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.200354772 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.198843816 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.199404156 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.200391032 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.200451686 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.200169443 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.201634871 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.195933472 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.196489641 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.194666124 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.195996574 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.194800438 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.196317603 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.197032164 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.19629454 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.193253995 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.192197585 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.192708843 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.190819364 seconds)
  done (took 37.039945694 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.21044343 seconds)
    (2/2) benchmarking "in"...
    done (took 1.210080565 seconds)
  done (took 3.503528779 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.194183985 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.191660315 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.192083365 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.191256655 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.191625584 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.19269114 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.191231026 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.192658873 seconds)
  done (took 10.620126818 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.18396967 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.191926216 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.191563326 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.191997875 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.193246395 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.183912248 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.192766791 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.197630675 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.184552653 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.185146956 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.185836591 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.185873127 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.188357952 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.187027808 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.18645149 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.188253501 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.19597711 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.193747169 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.192944063 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.192594915 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.192922536 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.186544822 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.188750962 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.195883139 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.18524203 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.191898656 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.189451981 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.192515846 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.181457542 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.18717484 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.184507284 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.191284212 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.189678908 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.190730223 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.185556018 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.186140577 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.18817272 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.18623996 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.188816125 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.192050001 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.187266888 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.187125418 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.180610958 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.182311744 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.181790372 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.188096949 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.184796843 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.184495572 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.176238166 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.181078648 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.188211711 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.175953053 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.184985934 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.180773669 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.181742674 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.187293211 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.192627859 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.178973607 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.178823141 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.186898786 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.192681809 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.186849055 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.183091145 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.190073683 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.18202156 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.184026378 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.188674253 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.192258831 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.185923433 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.185210194 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.18584327 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.193584649 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.189182011 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.190380409 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.186107267 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.185193543 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.178496709 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.190973086 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.18572403 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.191177514 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.191473025 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.185998623 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.181791025 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.18308834 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.182414734 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.190577671 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.186514178 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.186700577 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.177350333 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.187224322 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.195244294 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.185427934 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.177431811 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.181358439 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.183212573 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.187138324 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.177381389 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.183013053 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.187743672 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.186107833 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.18697387 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.179857711 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.185507409 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.191570407 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.187896289 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.18773797 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.194411451 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.179655842 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.189628593 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.194481541 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.185657014 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.179407167 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.181973271 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.189621807 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.179077788 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.18416736 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.19186101 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.181551833 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.192464742 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.186960122 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.182977373 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.189646575 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.194130816 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.189291623 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.180967941 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.192739153 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.187797542 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.185634477 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.193344073 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.187237902 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.187714225 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.184201642 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.193813398 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.181371154 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.19196791 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.182523041 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.1922076 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.188538748 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.187657894 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.182401163 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.18818521 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.186583294 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.187791045 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.189944575 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.195001096 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.185272598 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.196610656 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.188004991 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.186068215 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.188423064 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.194607329 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.189505544 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.182684482 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.192606341 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.180871929 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.190761229 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.181319236 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.192318997 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.189420758 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.188841926 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.189259536 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.180160682 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.184390793 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.193558467 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.187943787 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.189080628 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.193657766 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.190105225 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.191529346 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.18229508 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.192008034 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.181946087 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.185391956 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.194024046 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.191225093 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.191723334 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.186910509 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.196930718 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.190610194 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.190392513 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.184465538 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.188069272 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.196337101 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.1929269 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.199654698 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.191793642 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.189932491 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.184563418 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.186900352 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.193217174 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.184120972 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.193949002 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.196639864 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.197115857 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.186850793 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.193583692 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.183116797 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.195148054 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.190228596 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.198175054 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.190328544 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.19262883 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.184187688 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.194352307 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.187315681 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.195520632 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.183969725 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.195986139 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.193244284 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.191607965 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.192423981 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.184521513 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.18787476 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.194823934 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.190712632 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.19160763 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.183295699 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.194386294 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.186295185 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.181387754 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.190687799 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.18649112 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.187680766 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.193947928 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.183902426 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.190383444 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.187156527 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.182912692 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.185002701 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.182614615 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.184127125 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.189222964 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.186369256 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.179936225 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.189948099 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.188379357 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.176922673 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.182631731 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.189838923 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.183076372 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.176264064 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.185761062 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.183140158 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.18319248 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.183874104 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.175196301 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.18520987 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.184860624 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.190391322 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.175531152 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.185445932 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.178872627 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.186835847 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.17885613 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.184396567 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.183096758 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.186705302 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.192119181 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.183549035 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.178189321 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.187517768 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.184224784 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.184029498 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.176505318 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.187471975 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.184696597 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.185145309 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.18135166 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.18297155 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.185943276 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.177139893 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.186769939 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.178008978 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.192707188 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.19890522 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.186174362 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.188143988 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.188477967 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.187682256 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.187011193 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.177327652 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.179340194 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.18166735 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.180244112 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.17804248 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.187988816 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.179149849 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.187762793 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.182884919 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.185144754 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.187928642 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.185565251 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.178808036 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.188975688 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.186042615 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.185895028 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.176758461 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.187050341 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.179859916 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.186807333 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.185516196 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.181356624 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.190783916 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.190982829 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.183834631 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.182209024 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.183167412 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.178532396 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.183556034 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.191903938 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.178851004 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.189376924 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.17913715 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.184019381 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.181815021 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.190228502 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.195738235 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.179791534 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.189263464 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.186218791 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.178440003 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.181698423 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.188686236 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.189938236 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.198223222 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.17957717 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.189181846 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.187394899 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.187559996 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.188376703 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.188184898 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.188694663 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.187359706 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.19313159 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.190689891 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.184848491 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.190159194 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.195646968 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.18771732 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.188313923 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.179429616 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.190527071 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.197964257 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.182234458 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.186430206 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.185575729 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.192037057 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.189675656 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.189406321 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.188770682 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.188224604 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.192702956 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.193487676 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.191420078 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.189507813 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.192916299 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.200092436 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.193256025 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.200125127 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.185019679 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.195792639 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.189414803 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.184006424 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.1847814 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.185684565 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.193842365 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.181360469 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.193940882 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.192186964 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.185977284 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.189804213 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.199327842 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.183658232 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.18905675 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.197971622 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.18381295 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.193330405 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.189456614 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.182030272 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.193309442 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.191479923 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.181080045 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.185430575 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.185667141 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.192796831 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.18506306 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.195103942 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.184156955 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.195849997 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.191078591 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.190228873 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.192022307 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.191365281 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.184531718 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.193761538 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.191553486 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.201428641 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.185841801 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.190948323 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.187347526 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.197050973 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.202667801 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.185925142 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.197786863 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.193929155 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.186682066 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.189923942 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.197200518 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.185564869 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.195568005 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.184321065 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.187374188 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.186162037 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.192490456 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.195180901 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.196229782 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.184685027 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.187032823 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.19447002 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.194182161 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.192501232 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.188891067 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.199289492 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.186316285 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.186838518 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.195327089 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.187891562 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.198499231 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.18626851 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.189939875 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.189825762 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.196375095 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.194603639 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.194673752 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.185460753 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.188208753 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.20064391 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.197685831 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.191870782 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.188860533 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.19837278 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.189106711 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.192008045 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.190609516 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.188827136 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.189240746 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.19706934 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.18979242 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.190683157 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.189141397 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.197342028 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.19748585 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.197550773 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.188592333 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.202163719 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.203107232 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.203383535 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.187798181 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.190574214 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.192001018 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.197788315 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.196145106 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.189162135 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.202121457 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.202079668 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.200615452 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.194448293 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.196424516 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.187792954 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.199751011 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.196725088 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.191380443 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.202402592 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.19133751 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.204014936 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.195781181 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.195713244 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.188574715 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.190434829 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.190284061 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.190522308 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.198727489 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.194761293 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.199964769 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.194106775 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.202380708 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.197639527 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.195897744 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.197171345 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.189255711 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.198407187 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.189415773 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.198170213 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.199731502 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.191366079 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.19943282 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.19750413 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.19047457 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.193143153 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.201474364 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.196474099 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.191526116 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.196183461 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.202537616 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.208520495 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.197921638 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.190942776 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.194746455 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.202409034 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.197712315 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.198645578 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.191388616 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.207353168 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.213411467 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.192842759 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.196328379 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.202315818 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.209064256 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.200234147 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.198107624 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.195451604 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.197413073 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.20348948 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.200258986 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.201575544 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.205277841 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.196152954 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.201871106 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.193605503 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.196312874 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.200646151 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.210873234 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.201393179 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.195204569 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.206552756 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.210946285 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.198296528 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.212225269 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.206855454 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.201116368 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.205195066 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.194264917 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.202480359 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.19789606 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.205206708 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.20086328 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.201579033 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.201344148 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.193904082 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.203056664 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.208184179 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.212587482 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.200641639 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.193050437 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.196910883 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.203381372 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.203120849 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.203237639 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.201442683 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.202759155 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.201609301 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.195239109 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.212242333 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.21399081 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.207678466 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.202824041 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.20218208 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.201474262 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.205961992 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.198760087 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.20555945 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.201988232 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.204905094 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.200687929 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.211557599 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.202952756 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.197689977 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.198371951 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.199862704 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.206335238 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.210121716 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.22121936 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.207019338 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.20588193 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.20434741 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.204169424 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.196896468 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.207234787 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.203341696 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.19743046 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.199600761 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.205680145 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.205085685 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.203999549 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.197714025 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.208727898 seconds)
  done (took 710.86340242 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.20469795 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.204756277 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.205508248 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.203719575 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.203863896 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.204505036 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.20380905 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.205157474 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.20373292 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.20537795 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.204684079 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.204413386 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.204616745 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.204207587 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.206327311 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.20488331 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.205540052 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.205476098 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.205442003 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.204383038 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.205063864 seconds)
  done (took 26.392241578 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.206174835 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.205420726 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.206093675 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.205320163 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.206093042 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.204863667 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.205193592 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.205851336 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.20430225 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.205332968 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.207177015 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.206672414 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.20482509 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.206300494 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.205185627 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.207919564 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.207573616 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.206211812 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.207347217 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.207388157 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.206999515 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.206863375 seconds)
  done (took 27.627916549 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.206801926 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.20704827 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.199688917 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.209134425 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.207379258 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.206724231 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.207354583 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.207007017 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.206625794 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.200374739 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.198967543 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.200823872 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.20215259 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.210280153 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.203221845 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.212511836 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.207873812 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.209181349 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.208986023 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.208576849 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.210311902 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.219700693 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.208345309 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.199576267 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.210819824 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.20898706 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.208245179 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.208405131 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.200624857 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.211633976 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.208786734 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.201992934 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.212189162 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.211030735 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.203196961 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.211248974 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.209550084 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.208444766 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.209035829 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.207344384 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.217434464 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.209933055 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.212793651 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.222643449 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.209132326 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.204420411 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.213964198 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.210460011 seconds)
  done (took 59.085449384 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.210165326 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.210538239 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.20995915 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.211090886 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.211738845 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.212044881 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.211129944 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.209822611 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.21101788 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.211974028 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.211380784 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.211256679 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.211194997 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.210274482 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.21192704 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.210067382 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.210406343 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.210079959 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.212382921 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.211426168 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.211275615 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.210755011 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.210895938 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.211527747 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.212264435 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.212492673 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.212021774 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.211488898 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.211654919 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.211603398 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.210954347 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.211992318 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.211945196 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.21102631 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.212445312 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.211540664 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.212063231 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.213288633 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.212587781 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.21293644 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.211764944 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.212147006 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.211911181 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.213371368 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.212383177 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.212571652 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.212382147 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.213722218 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.213443602 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.21329539 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.212851168 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.212630584 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.213052536 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.212192911 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.214241613 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.214302438 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.213491017 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.213223743 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.213269032 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.214021263 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.212209656 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.213534561 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.213408516 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.213976591 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.213946055 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.214102419 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.214450948 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.215271408 seconds)
  done (took 83.526536611 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.214792842 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.212913809 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.215489752 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.215409737 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.214539424 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.215538783 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.213651874 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.215326158 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.215134821 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.214896867 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.215192845 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.215876617 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.215382424 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.214140572 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.215523772 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.217099575 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.215577216 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.215720582 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.215849486 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.215528848 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.216449899 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.217049626 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.21598166 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.217354 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.215889598 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.215887402 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.216329713 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.216606325 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.216451851 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.217150439 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.216785762 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.217991241 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.216877701 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.218723394 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.216673342 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.215987339 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.216015654 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.217320351 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.217286487 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.217122156 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.218036001 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.217629021 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.217601831 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.217891717 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.217781473 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.217528948 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.218332149 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.217970619 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.218457718 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.217804192 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.217299502 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.218878473 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.218540673 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.218211241 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.21930173 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.217336005 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.219959715 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.218942245 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.218897923 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.217957875 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.218001361 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.218027027 seconds)
  done (took 76.542952721 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.218867415 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.217573795 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.218546366 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.219930932 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.2181975 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.217928482 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.21703044 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.218989011 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.217885837 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.219216615 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220006749 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.219542887 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.219973413 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219001309 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.220374285 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219540828 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.22026805 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.219417489 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.218208537 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.21955398 seconds)
  done (took 25.48440218 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.219885017 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.219878052 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.219173019 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.219202651 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.218470848 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.219777358 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.219895069 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219539862 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22025594 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219463121 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.221099175 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.220423684 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219846916 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.221666572 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.220881774 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.221052925 seconds)
  done (took 20.625515103 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.221151239 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.220423391 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.219986253 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.220841102 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.221775523 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.220676191 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.220654647 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.220276838 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.222657971 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.222197031 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.221765809 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.221656631 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.221864541 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.223375093 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.220746484 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.221983591 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.220975788 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.220485186 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.220771311 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.223328599 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.22198785 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.223101796 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.221995106 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.221239573 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.222006022 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.222784909 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.221191326 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.223071699 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.221746384 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.223266643 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.222849324 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.223701485 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.222353521 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.223263004 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.224055984 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.222724231 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.222917625 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.223023497 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.224249005 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.223290622 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.224200082 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.223605739 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.223365079 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.22288651 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.224296586 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.223438756 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.223972114 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.225106064 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.222995221 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.2238497 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.222956618 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.223183515 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.22280213 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.223715281 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.225147177 seconds)
  done (took 68.343642686 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.222859255 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.223047984 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.223105395 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.224219783 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.223989584 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.223963183 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.223689386 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.226139979 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.224248326 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.224009947 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.222949775 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.225375678 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.22411099 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.225159148 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.225089866 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.224707635 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.225015329 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.22509612 seconds)
  done (took 23.145463738 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.224638049 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.226905165 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.224943412 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.225959595 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.225560847 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.226156216 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.22631867 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.225607191 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225176974 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.226515945 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.226990712 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.225843025 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224630823 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.226240525 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.226034865 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225181384 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.226769182 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.226550705 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.226643451 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.226293102 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.225688742 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.225688946 seconds)
  done (took 28.080947951 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.216921945 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.21710788 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.217563811 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.229614613 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.225851945 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.217317026 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.216956389 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.216419502 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.233991643 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.241759941 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.235470716 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.226183683 seconds)
  done (took 15.805461577 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22774457 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.229613943 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.227390105 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.227134911 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.226206139 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.227849004 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22746523 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.227766544 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.227556506 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.228398345 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.227548293 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.227582379 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.228544242 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.229257254 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.227672448 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.227934519 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.227738059 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.228394289 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.228232362 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.228198817 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227243513 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.228553075 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.227966965 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.228402302 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.227970731 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.229165482 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.229811261 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228293433 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.228248425 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.228762496 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228435734 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.230118596 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.229327458 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.228676423 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229015105 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229753313 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.229814334 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.230383561 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.229209955 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.230236538 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.230009051 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.230348615 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.230087266 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.229487578 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.230628792 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.231199242 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.22779002 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.229809928 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.228475753 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.232558951 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.230594133 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.229711151 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.231195818 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.231504166 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.230915029 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.231137594 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.230796541 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.230300191 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.230893861 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.230962138 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.230578364 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.23128076 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.232207539 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.231873654 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.230443735 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.230637466 seconds)
  done (took 82.24784699 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.231275783 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.232772002 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.231528758 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.231240406 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.231179044 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.231710536 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.232184295 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.233333768 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.231165329 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.231536206 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.23172883 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.232019723 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.232228304 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.230964578 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.231223371 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.232333667 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.231588307 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.231140798 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.232177089 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.232634537 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.232092548 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.232308407 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.234484159 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.233107888 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.23373877 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.23338884 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.232166168 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.232945217 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.232832856 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.233129065 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.23438317 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.233689192 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.233304684 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.234712411 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.234150061 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.233191123 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.232944538 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.233057291 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.233293133 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.234042571 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.232633251 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.233642538 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.233207855 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.233624066 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.233639022 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.23334122 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.233833658 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.233144855 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.233513533 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.233052326 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.235903338 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.235171017 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.234901067 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.234816237 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.235110036 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.236141925 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.234839948 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.23512674 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.235395301 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.235151431 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.23668049 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.235143625 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.235023922 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.236472235 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.235245578 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.23528017 seconds)
  done (took 82.520022261 seconds)
done (took 1681.827432385 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.391284498 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.34513777 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.226128185 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.233326498 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.225275209 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.22496434 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.238275075 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.225264974 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.226998732 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.225274419 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.223358804 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.418448408 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.260237033 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.226395186 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.225344842 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.324004518 seconds)
  done (took 25.358880322 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.249536771 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.241896378 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.340220131 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.244165049 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.260588713 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.409159476 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.297059674 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.244886418 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.389294538 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.25936978 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.229823663 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.258490435 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.239855638 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.230883094 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.255342932 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.407327585 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.472368933 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.237922033 seconds)
  done (took 27.387651225 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.636212888 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.234032635 seconds)
  done (took 4.997167295 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.256672141 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.239646955 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.241092539 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.237953007 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.230365666 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.232839639 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.239916311 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.23151527 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.237470558 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.35547498 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.246896734 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.253072609 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.254005542 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.241213519 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.247587751 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.282596779 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.407292252 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.249966935 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.245664505 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.247051512 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.239064971 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.331077512 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.281817555 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.24987872 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.352118723 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.248899326 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.248784855 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.247930371 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.355840737 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.249497134 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.239836941 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.241135307 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.241610307 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.208227066 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.769658813 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.240726241 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.26366875 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.248860447 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.248936847 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.388622079 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.244809347 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.247290319 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.234418664 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.756661472 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.370297947 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.353300629 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.255349344 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.246946776 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.242849466 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.302859348 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.242025965 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.243963767 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.298881908 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.005562381 seconds)
  done (took 80.249593144 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.281406355 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.23586855 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.416715595 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.256796523 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.234836089 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.235613087 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.23680328 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.49099363 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.264670157 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.237571074 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.544269002 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.821820849 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.24417973 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.301528808 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.272213271 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.291726854 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.243452712 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.240370319 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.236111046 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.235957773 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.784258009 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.244199418 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.238236986 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.327436327 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.275845729 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.746663824 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.236952286 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.242941815 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.236841696 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.236655892 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.79976514 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.247498866 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.285099157 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.242993 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.512984416 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.600783943 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.557067504 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.241061552 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.279666708 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.241745497 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.266436591 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.737649676 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.581135822 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.238584376 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.241358908 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.741595694 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.238190798 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.243573407 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.246829694 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.506527954 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.240335168 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.239767168 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.244401757 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.243857174 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.239110735 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.289474004 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.295390052 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.747966161 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.237132758 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.238125177 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.246954622 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.2421163 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.244857555 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.245302064 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.240906251 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.583868909 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.506905062 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.245550657 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.58145984 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.790857371 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.248151634 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.87731112 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.244243186 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.264715292 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.286058666 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.240592951 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.256617901 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.748609265 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.25184603 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.242487869 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.562863977 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.246099119 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.539814593 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.261171375 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.242035845 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.799820455 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.247669945 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.282075721 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.240966473 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.248804535 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.241260972 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.24269935 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.521340962 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.30138806 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.24227091 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.240370645 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.271856291 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.241057909 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.260111915 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.241732435 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.869385666 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.25203174 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.241458442 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.26141786 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.241984551 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.256175175 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.243522821 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.244177741 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.520887162 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.247631224 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.255968538 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.244302895 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.240487947 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.255374895 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.336254696 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.245039838 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.52477967 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.247062577 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.244738957 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.243769309 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.244826587 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.263072649 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.244465022 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.265136332 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.200579304 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.545339778 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.258106804 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.257557248 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.242554112 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.243930021 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.263295083 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.249733689 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.298409541 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.243783208 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.993660857 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.253418409 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.258757901 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.244230633 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.252148834 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.256850386 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.251690597 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.246608585 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.536682828 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.524642431 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.498170728 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.24866091 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.244402441 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.022409476 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.248655794 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.426661216 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.260209961 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.24596788 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.5241258 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.479370198 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.24764488 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.245370743 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.244047027 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.523375901 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.250771858 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.560013578 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.829982401 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.24810563 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.249347218 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.991105566 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.061929454 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.251119402 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.245588217 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.5414228 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.266077897 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.245218162 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.245996116 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.246518933 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.246219634 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.253107566 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.256352321 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.24851573 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.247981394 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.537361299 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.440472808 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.260646145 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.258885427 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.755686636 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.26727085 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.247658147 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.255218722 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.250664248 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.247423099 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.298365541 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.249812996 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.250255352 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.248192081 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.258757687 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.779449861 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.247570832 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.252070142 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.44112425 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.953520196 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.252603041 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.248162048 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.247574687 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.309995924 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.786615442 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.261476947 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.532248634 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.258763534 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.287411853 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.248841554 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.257007572 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.787194759 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.252361004 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.249439834 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.966254616 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.249421873 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.730166954 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.249310395 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.250231048 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.89274324 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.250428283 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.252029202 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.250397751 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.250606075 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.564898651 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.253301157 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.289511979 seconds)
  done (took 477.892965782 seconds)
done (took 617.005393093 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.249292218 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.259995652 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.254672934 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.255703869 seconds)
  done (took 10.16227632 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.268124076 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.255467054 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.264985257 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.254209279 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.268530569 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.255938247 seconds)
  done (took 8.711977663 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.249110407 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.255988332 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.254991632 seconds)
  done (took 7.904708099 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.443281866 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.270892882 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.584744594 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.25718244 seconds)
  done (took 8.701440306 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.267226556 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.266139318 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.26629322 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.268248896 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.269371387 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.268349089 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.268018488 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.269837296 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.268890923 seconds)
  done (took 12.555349917 seconds)
done (took 49.178008813 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.228012022 seconds)
    (2/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.297250114 seconds)
    (3/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.320356613 seconds)
    (4/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.40752709 seconds)
    (5/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.488490624 seconds)
    (6/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.589077486 seconds)
    (7/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.233958797 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.326044555 seconds)
    (9/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.405719458 seconds)
    (10/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.404997057 seconds)
    (11/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.285143314 seconds)
    (12/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.237552952 seconds)
    (13/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.289778065 seconds)
    (14/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.253602503 seconds)
    (15/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.476167704 seconds)
    (16/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.370502064 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.362965963 seconds)
    (18/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.229148195 seconds)
    (19/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.440885541 seconds)
    (20/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.460150006 seconds)
    (21/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.416173757 seconds)
    (22/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.47485336 seconds)
    (23/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.36164785 seconds)
    (24/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.411349248 seconds)
    (25/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.254973987 seconds)
    (26/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.427970557 seconds)
    (27/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.25932554 seconds)
    (28/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.333740643 seconds)
    (29/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.453485518 seconds)
    (30/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.302575938 seconds)
    (31/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.230250268 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.354518604 seconds)
    (33/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.348013384 seconds)
    (34/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.657919636 seconds)
    (35/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.340017571 seconds)
    (36/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.375766207 seconds)
    (37/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.28226563 seconds)
    (38/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.231253745 seconds)
    (39/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.399226734 seconds)
    (40/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.472476473 seconds)
    (41/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.455742495 seconds)
    (42/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.354248899 seconds)
    (43/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.45798487 seconds)
    (44/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.371836143 seconds)
    (45/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.340296902 seconds)
    (46/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.273936367 seconds)
    (47/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.231704105 seconds)
    (48/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.3311152 seconds)
    (49/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.378769443 seconds)
    (50/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.329590102 seconds)
    (51/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.231749784 seconds)
    (52/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.233515428 seconds)
    (53/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.293081968 seconds)
    (54/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.322695729 seconds)
    (55/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.332522267 seconds)
    (56/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.652794594 seconds)
    (57/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.328753103 seconds)
    (58/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.527650896 seconds)
    (59/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.442626874 seconds)
    (60/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.236390558 seconds)
    (61/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.471363387 seconds)
    (62/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.415444693 seconds)
    (63/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.445485421 seconds)
    (64/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.28636058 seconds)
    (65/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.244803099 seconds)
    (66/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.336276578 seconds)
    (67/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.290309723 seconds)
    (68/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.255932793 seconds)
    (69/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.42562082 seconds)
    (70/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.265869039 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.373681126 seconds)
    (72/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.295560647 seconds)
    (73/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.408833254 seconds)
    (74/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.4203204 seconds)
    (75/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.244641873 seconds)
    (76/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.488559769 seconds)
    (77/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.266038637 seconds)
    (78/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.316462109 seconds)
    (79/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.500602887 seconds)
    (80/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.333750586 seconds)
    (81/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.233539718 seconds)
    (82/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.235940515 seconds)
    (83/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.348618137 seconds)
    (84/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.234311329 seconds)
    (85/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.261216854 seconds)
    (86/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.327528814 seconds)
    (87/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.402516109 seconds)
    (88/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.371730719 seconds)
    (89/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.498120117 seconds)
    (90/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.545481948 seconds)
    (91/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.355369574 seconds)
    (92/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.36072608 seconds)
    (93/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.343441863 seconds)
    (94/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.344267985 seconds)
    (95/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.234084632 seconds)
    (96/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.440218292 seconds)
    (97/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.239953544 seconds)
    (98/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.337790528 seconds)
    (99/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.591460693 seconds)
    (100/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.46818043 seconds)
    (101/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.340813151 seconds)
    (102/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.371319692 seconds)
    (103/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.297305458 seconds)
    (104/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.236626604 seconds)
    (105/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.235523177 seconds)
    (106/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.250678988 seconds)
    (107/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.340975728 seconds)
    (108/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.400627984 seconds)
    (109/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.363234839 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.377280056 seconds)
    (111/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.236789926 seconds)
    (112/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.421974784 seconds)
    (113/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.41711951 seconds)
    (114/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.256908597 seconds)
    (115/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.251990032 seconds)
    (116/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.365941691 seconds)
    (117/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.244942967 seconds)
    (118/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.300784196 seconds)
    (119/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.502724484 seconds)
    (120/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.559884563 seconds)
    (121/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.299843305 seconds)
    (122/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.299242326 seconds)
    (123/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.241642882 seconds)
    (124/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.36735386 seconds)
    (125/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.365254698 seconds)
    (126/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.384516789 seconds)
    (127/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.238139405 seconds)
    (128/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.50210367 seconds)
    (129/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.242614259 seconds)
    (130/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.48939951 seconds)
    (131/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.245283995 seconds)
    (132/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.295610217 seconds)
    (133/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.253891372 seconds)
    (134/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.477350632 seconds)
    (135/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.272066015 seconds)
    (136/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.365333912 seconds)
    (137/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.262033717 seconds)
    (138/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.374101498 seconds)
    (139/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.376724459 seconds)
    (140/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.299613007 seconds)
    (141/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.352602729 seconds)
    (142/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.353815763 seconds)
    (143/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.392618844 seconds)
    (144/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.557625957 seconds)
    (145/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.24518395 seconds)
    (146/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.255709508 seconds)
    (147/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.420907756 seconds)
    (148/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.29205612 seconds)
    (149/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.328230744 seconds)
    (150/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.295426229 seconds)
    (151/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.491219778 seconds)
    (152/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.33616883 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.499158306 seconds)
    (154/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.565137156 seconds)
    (155/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.494465289 seconds)
    (156/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.244932729 seconds)
    (157/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.442310879 seconds)
    (158/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.365440854 seconds)
    (159/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.382167567 seconds)
    (160/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.417539587 seconds)
    (161/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.41727457 seconds)
    (162/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.323149359 seconds)
    (163/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.557217881 seconds)
    (164/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.246073465 seconds)
    (165/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.351027317 seconds)
    (166/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.289873018 seconds)
    (167/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.324654922 seconds)
    (168/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.354596384 seconds)
    (169/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.380108653 seconds)
    (170/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.303399519 seconds)
    (171/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.338371793 seconds)
    (172/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.373780958 seconds)
    (173/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.376421749 seconds)
    (174/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.303997858 seconds)
    (175/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.380546132 seconds)
    (176/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.349389908 seconds)
    (177/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.421403841 seconds)
    (178/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.419968834 seconds)
    (179/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.255349983 seconds)
    (180/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.281198061 seconds)
    (181/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.494971328 seconds)
    (182/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.302234879 seconds)
    (183/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.384776278 seconds)
    (184/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.469573773 seconds)
    (185/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.407573705 seconds)
    (186/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.415977842 seconds)
    (187/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.240136588 seconds)
    (188/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.322522359 seconds)
    (189/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.471456843 seconds)
    (190/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.350621473 seconds)
    (191/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.444173016 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.363113755 seconds)
  done (took 309.911530076 seconds)
done (took 311.056895118 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.292853368 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.35786828 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.272343144 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.273005268 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.273734086 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.269181991 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.299649945 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.272333799 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.28844338 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.288315165 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.267194131 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.289069707 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.289435945 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.284385919 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.307422445 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.275860037 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.272932768 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.285210482 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.288592529 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.290890321 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.275286162 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.274428993 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.302367323 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.274181118 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.282155588 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.283312257 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.281429967 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.270253716 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.283013784 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.291404984 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.27897197 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.285936207 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.29159349 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.28618686 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.276066798 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.284918774 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.275107908 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.361070735 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.296321767 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.286039302 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.283686457 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.292484828 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.281845157 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.280789282 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.287918049 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.303006469 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.283752427 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.291177749 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.267948164 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.282136559 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.30254085 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.288144748 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.284079126 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.263988655 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.274300814 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.298539111 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.287234223 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.295367342 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.283204667 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.277446496 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.309729395 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.29563451 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.287986959 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.285165723 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.285618459 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.292027511 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.28640947 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.293538159 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.285202316 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.278127464 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.278765108 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.285776374 seconds)
done (took 101.810870756 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.401247883 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.276201684 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.433531585 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.284461541 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.445122106 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.400798077 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.284676065 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.28693505 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.284937491 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.079048455 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.285619307 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.286313999 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.275237047 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.286226198 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.397782862 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.286325383 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.286085487 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.979051469 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.28777561 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.414159257 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.27778785 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.287408488 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.286574185 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.081705374 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.275976023 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.271647828 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.413417804 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.286220927 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.979726676 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.270387008 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.274118835 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.980479077 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.414517066 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.307204751 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.297600388 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.295929125 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.441659974 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.290008667 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.402757232 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.403451734 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.436962349 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.325187599 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.271545136 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.278160421 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.289302544 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.28876156 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.286952261 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.315621148 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.275596036 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.286493206 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.979996254 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.297622563 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.297516333 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.288861252 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.287529808 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.308946386 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.288522288 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.288880003 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.416683493 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.289215963 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.40435708 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.084844738 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.083333428 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.288860483 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.276878567 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.289773614 seconds)
  done (took 104.889155768 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.349986856 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.354381116 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.388089621 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.281251717 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.330616145 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.389111803 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.281472063 seconds)
  done (took 10.538254006 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.287287764 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.2897751 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.328692464 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.329148958 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.29109505 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.454888867 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.290016544 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.291853084 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.289495039 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.331885195 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.292385939 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.289840185 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.299177982 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.281471487 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.326914601 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.293522985 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.400079659 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.282779007 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.29026205 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.43433181 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.290749312 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.300361417 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.332599108 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.295611019 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.292388733 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.289839022 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.065422911 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.292514606 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.292484706 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.292916382 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.292999243 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.349743937 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.291366397 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.281838671 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.293060118 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.395415872 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.291575353 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.290590719 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.291385074 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.283911158 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.292312531 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.291249576 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.291946626 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.292347598 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.292908789 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.307128775 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.292388402 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.292713326 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.292275529 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.293644342 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.33338116 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.292615358 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.292536378 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.292854147 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.336975407 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.301828195 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.29140701 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.292880128 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.29270601 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.292244734 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.435759925 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.330997416 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.293313988 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.331028154 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.293170719 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.294935547 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.292700135 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.294337826 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.375092699 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.293599177 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.331881411 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.293665614 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.467418753 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.30936959 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.296345861 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.288372799 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.289588126 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.295820613 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.281438903 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.292099268 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.295657251 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.288146939 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.290741141 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.29509262 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.295503377 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.444058188 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.393390937 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.294843489 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.301460504 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.294097036 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.295777079 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.337531637 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.29532762 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.29476391 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.335959384 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.404342113 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.339284104 seconds)
  done (took 133.184282637 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.299223228 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.298377145 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.291720078 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.313436574 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.287722935 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.287732713 seconds)
  done (took 8.947856499 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.290476304 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.29932023 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.2961587 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.296102025 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.296365773 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.298314142 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.297287108 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.289101969 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.299710482 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.297069117 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.29801547 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.298618375 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.300206992 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.297414516 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.297558529 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.297720746 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.298645676 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.297885007 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.296828344 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.29771308 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.284707222 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.297698429 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.298031757 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.2909089 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.302959094 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.298562256 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.312027839 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.297514081 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.299406059 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.296830646 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.302224426 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.299024634 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.290223654 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.294416292 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.302488656 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.292696642 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.300931446 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.30064487 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.298154257 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.30013177 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.299497789 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.300774494 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.300780676 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.300042137 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.291507944 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.294994423 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.303106091 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.315767359 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.299766767 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.300760106 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.300626604 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.299273236 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.301986679 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.301082946 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.292883142 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.297007281 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.305025609 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.300606346 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.300707329 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.293125046 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.303251166 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.301448913 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.293346491 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.303772507 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.30063061 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.300559786 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.292483513 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.304199796 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.301657058 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.300740625 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.301690739 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.300813366 seconds)
  done (took 95.676247205 seconds)
done (took 354.395786741 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.540753791 seconds)
  done (took 3.716064475 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.551732174 seconds)
  done (took 3.727359055 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.729730094 seconds)
  done (took 22.150106906 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.294031529 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.303022599 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.313977382 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.289742736 seconds)
  done (took 10.375635047 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.543026262 seconds)
  done (took 3.718111404 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.296404429 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.297291457 seconds)
  done (took 5.771510331 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.441442772 seconds)
  done (took 3.61844756 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.498635941 seconds)
  done (took 3.676854313 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.305849742 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.31827467 seconds)
  done (took 5.808528367 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.264789354 seconds)
  done (took 3.441341222 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.263004761 seconds)
  done (took 20.44095169 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.308906421 seconds)
  done (took 3.487881024 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.329275981 seconds)
  done (took 3.507016409 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.691252867 seconds)
  done (took 5.868518561 seconds)
done (took 100.483345967 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.288296541 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.290545388 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.289890812 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.287490994 seconds)
  done (took 10.333645224 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.367733901 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.367853609 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.375899636 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.361788433 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.36214385 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.370327639 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.329688577 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.331530118 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.359731581 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.355676037 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.37357994 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.362417402 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.371373869 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.330550786 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.35555085 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.370761546 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.361170865 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.376181226 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.330231303 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.360755529 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.304922587 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.363750841 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.358855512 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.305898243 seconds)
  done (took 33.687035505 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.813172684 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.366470942 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.449263907 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.347397396 seconds)
  done (took 7.155478879 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.408816618 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.411107819 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.428264048 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.470964031 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.512705275 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.423471496 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.331103141 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.329529563 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.314590502 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.410078187 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.495644184 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.409163846 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.62550039 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.305726948 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.625116054 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.305545796 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.306882787 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.410720591 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.45949848 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.489949283 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.307295412 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.410018397 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.414745415 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.410575157 seconds)
  done (took 35.19612368 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.315716298 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.325455137 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.306854313 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.323583878 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.30904657 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.308873841 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.310824824 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.314676279 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.308569361 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.308104316 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.308549811 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.322005439 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.308051453 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.308665704 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.314864342 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.310220194 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.310914014 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.314673916 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.317475169 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.309248097 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.308768959 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.316131487 seconds)
  done (took 30.06176911 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.293199724 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.291643398 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.643235449 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.547878561 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.293770113 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.294886115 seconds)
  done (took 13.545730082 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.364687679 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.503928945 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.305668786 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.628064323 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.71944395 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.307527793 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.302395004 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.533747192 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.816841247 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.806646295 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.35961433 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.366916763 seconds)
  done (took 19.197908391 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.303763836 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.30125542 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.307514621 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.316475376 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.351276035 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.308228972 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.306462075 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.294060163 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.358462825 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.356709123 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.305993825 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.352826803 seconds)
  done (took 21.045450261 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.384879206 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.305770902 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.314235254 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306893539 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311235324 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.30503738 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.306098611 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.986365489 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.310819541 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.580477956 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316800396 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.393369421 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.551941486 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31510237 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.311964069 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.243304244 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.536444199 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.767001128 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308349548 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312012086 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344625721 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.306061543 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.312433189 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.509430435 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.308691348 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.307668865 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.570456426 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.306973141 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.572586298 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.551670254 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.551678631 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.315300776 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.585214661 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937504497 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.413873848 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.502568766 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.299787213 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.309337923 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.295469407 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.31494679 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.325406207 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.313925173 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.541339491 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315938464 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.307326412 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.319976959 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.998803046 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.316246607 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.30770206 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.310206724 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.545800922 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.398363654 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.314118934 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.309936715 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354393829 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.314632353 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.315048397 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429152864 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946983594 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307805693 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316672046 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.316917961 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.306444911 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31314127 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949107599 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.321289663 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.314746706 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.314981881 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308163687 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.321216932 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.336726346 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309917395 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.329519701 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309109764 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.041414613 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.319426999 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333459904 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.820339209 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320846707 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.316297262 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.535175842 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310624406 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310213393 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.309950948 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.310743612 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.005030148 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.323810335 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.278296544 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.354927506 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.988666453 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.509213387 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.332486062 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339945307 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.532001935 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.27868397 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3134811 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.32347515 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320734664 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.332166488 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.996595931 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313962876 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.317357281 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.558782354 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.522838629 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.314686363 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.25906976 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.768401718 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324849862 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.338383425 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.3137993 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.514801768 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.90392818 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.565150907 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320318279 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.353084101 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.312995508 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068465194 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32827872 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.322756387 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.312942158 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.605437859 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.095612163 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319516059 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.386962312 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.316334007 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.313656614 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.327970706 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32180845 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.314344951 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.485327662 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.328623009 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.555240648 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.32323496 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.314682792 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.32649313 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320374714 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.323894742 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.535349304 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322103951 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.594960585 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313985659 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315205125 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315339026 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.532997191 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.322807708 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.327647592 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.654463312 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325351333 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.326495139 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.559250159 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357405485 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.42843524 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346952051 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.32234036 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.570203712 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.322139212 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.321400605 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.329819471 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.325165658 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321968952 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.324647404 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315396558 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.929990357 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.300291312 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.321984086 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.316959318 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.333026099 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.390551949 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.323830788 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.512846764 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.320784342 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327565567 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.328523678 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.316898958 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.543753917 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.557467998 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.326065566 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.499151958 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.765470949 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.909396844 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.339790857 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.316694802 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.31649101 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.316472736 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319292592 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3178101 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.318273885 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.515284271 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.564030928 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.322447601 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.921663453 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326324525 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.326672177 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.331655529 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.553913778 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.333138714 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318196795 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.329364416 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324868681 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.326988671 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.563250695 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546922904 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.335622791 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.319015605 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.838457956 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.326252724 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.321732348 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.320765024 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.345645751 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.327244237 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.140598125 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.659830681 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.311354019 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.564442339 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.327930432 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.344357268 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.319543646 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330676799 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32683684 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.347096798 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.334732037 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.518389088 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.322571859 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32812245 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959166893 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.065300264 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864053787 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.338365053 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.325621462 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.342815427 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.008645586 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320441607 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.321095535 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.558628414 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.007670707 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321694621 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.773148707 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.328250028 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.055971879 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.568571243 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.554515987 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.325925997 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.327784574 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.569737064 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.540046921 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349214044 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.32433114 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328749664 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.291219222 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.847415121 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.322991273 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.507451749 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.011152258 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322564844 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.330069868 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.372929566 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.329526132 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.706059489 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.323889326 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323505414 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.324719841 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.33026311 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.148131555 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.329408067 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.32394996 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943082884 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.336078529 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.784199692 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32407831 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.523102439 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.562717074 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.543876886 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.342191156 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.33259607 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.574651726 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.566243698 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331937238 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.334595128 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868203996 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.188605947 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.331954526 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326653575 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.082885485 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334967971 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.595845992 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.334216288 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.336977012 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334650946 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.326835334 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326133222 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.325813923 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.331270464 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.300278524 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.787249249 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.320745385 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332039144 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.334654261 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332249579 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.571153828 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.342901522 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.922959474 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.558179 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.322540822 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360368085 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.330948623 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336103225 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.300501739 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.325097044 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.32760163 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36729102 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.55063898 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.327061063 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.300448081 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.394027761 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.541604762 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.327454817 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.326262152 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.558886398 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.327685654 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.330475707 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.104643386 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36489492 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.326314064 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350940936 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.323654646 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.384736278 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.401354422 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.525567509 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.56900038 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.575176224 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.713939423 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331110989 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.334590095 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.34566586 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.407994965 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327748436 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.34260558 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.334287149 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.924473147 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.08771721 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.941690006 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.57597737 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.338184347 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338713881 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329927468 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.569657112 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.328977162 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.605256697 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329338215 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.3430993 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351669358 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342505855 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343810103 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.546369712 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.604731973 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.32962983 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338021211 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335641491 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.329275892 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.575677965 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.549012485 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.795085278 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.848069435 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33226127 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.331621743 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.028318828 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.608497019 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332121084 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.331293599 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330069674 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.331556715 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.348513175 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.338632776 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331933363 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.560262587 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.57099862 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973552684 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.570884112 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.516665537 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.330978929 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331058727 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.58432201 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.162132403 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.532399906 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.938128918 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.03542609 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.590642902 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.405699932 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.53172177 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.332705727 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.568628732 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.342783871 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.339072105 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.334208592 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333030027 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.331356041 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.572690189 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.945743525 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.590714366 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.338985327 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.346067168 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371043006 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.533191261 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.553225601 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.040943221 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.560965256 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.580158003 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.346321095 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.335089597 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.944932461 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.584068222 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3424701 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.341905945 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.543179498 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.334981329 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.370172763 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.199804854 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.333708015 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.853321348 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.545318073 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354755686 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342591803 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.040493039 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.948368779 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.353235228 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.807190361 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.336722727 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349121845 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.618563691 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.341314079 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.340403626 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.622299207 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.34107475 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.341308768 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.544016881 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.937212384 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.081626522 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.35777571 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35802322 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.360564154 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337824874 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337101909 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342202166 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.337354327 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.715382253 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.339665242 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335466728 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.350940259 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.350359209 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349405973 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.342476133 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337682533 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.34660256 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.304582226 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.328113908 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.35069233 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.459534517 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.870816594 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341429284 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.951548065 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.673580384 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.583599157 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.345584316 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.311650614 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.343442832 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338559809 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338538684 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338327486 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.334996892 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.859660954 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.346615615 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.586084767 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.350939661 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.549048313 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.548400167 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.338808563 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.54883596 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345968178 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.364555531 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.305190884 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338653503 seconds)
  done (took 955.097653932 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.369716557 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.346787706 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.346620073 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.387928069 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.333570559 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.332500029 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.332936436 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.393547764 seconds)
  done (took 20.057175612 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.341797508 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.344211411 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.340501286 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.34379007 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.332838958 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.864581986 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.337509597 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.339658021 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.352086083 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.33232336 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.341368797 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.988652217 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.346090909 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.339770656 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.351398478 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.345195602 seconds)
  done (took 31.856320035 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.035402258 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.34505203 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.844198638 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.357154094 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.358645894 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.337744019 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.460148838 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.338498607 seconds)
  done (took 25.292765419 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.345010348 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.3441492 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.345304919 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.346127324 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.346336148 seconds)
  done (took 7.94173611 seconds)
done (took 1211.647768999 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.346913128 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.348680492 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.346644151 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.347481733 seconds)
  done (took 6.604290507 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.310868826 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.310855538 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.311170219 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.326845029 seconds)
  done (took 9.474378059 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.991174968 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.846688967 seconds)
  done (took 5.052694744 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.886977543 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.887956967 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.884882427 seconds)
  done (took 6.877032629 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.626568539 seconds)
  done (took 2.84412855 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.3226165 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.338575444 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.07025903 seconds)
  done (took 7.949401635 seconds)
done (took 40.017135587 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.34443685 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.097728961 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.488487656 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.344309881 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.494676168 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.488243835 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.583641266 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.339260563 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.341735143 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.346059768 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.345786661 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.495100245 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.571634874 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.095238373 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.571595663 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.096161645 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.495999688 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.333845722 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.338676982 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.334099676 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.585659555 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.343743828 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.338818179 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.33784623 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.50122788 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.479578375 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.336193967 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.096865985 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.33686114 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.334183851 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.484095917 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.334351203 seconds)
  done (took 81.275083993 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.339963005 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.335230548 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.346567905 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.347041097 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.335892872 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.358208037 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.336902939 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.335826604 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.346549267 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.342236194 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.348140956 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.335045819 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.350780329 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.346452751 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.33621033 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.347429697 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.337900913 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.350609569 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.336191085 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.353682887 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.338828846 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.337259774 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.338444454 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.337231285 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.336797758 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.337737326 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.354736354 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.337406065 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.335837352 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.336013303 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.336551074 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.351370874 seconds)
  done (took 76.164434585 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.336345083 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.337329689 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.354373091 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.336523418 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.336927198 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.339693139 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.340797938 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.352647692 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.352415863 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.342679357 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.362645596 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.338263086 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.341495404 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.339257071 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.337749129 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.339587271 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.343520757 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.343456634 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.342216247 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.338265448 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.339455852 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.35479543 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.338797258 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.337686377 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.346492765 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.34494916 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.352282937 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.340019607 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.338021464 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.354735828 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.350499631 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.340644756 seconds)
  done (took 76.216330953 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.577101588 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.355643529 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.357881474 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.34784827 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.358062766 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.353962087 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.349303659 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.585826014 seconds)
  done (took 14.509297874 seconds)
done (took 249.384635883 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.348156979 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.845121207 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.382350216 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.34930991 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.381081144 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.376201609 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.561314255 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.381765226 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.56660521 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.371867728 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.370161791 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.358952371 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.125772174 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.500808486 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.152937825 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.261897002 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.192909356 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.346104995 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.890211559 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.627716295 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.381595215 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.343036388 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.151261979 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.213250995 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.324124115 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.424154746 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.44664816 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.578784438 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.512502704 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.423378486 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.839058715 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.358572194 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.352518498 seconds)
  done (took 62.964788794 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.34758089 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.357944262 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.357113276 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.358262199 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.35756002 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.357695034 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.348651195 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.359013882 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.35837358 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.357952445 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.358990234 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.358479014 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.35823717 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.358063451 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.358612414 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.330434565 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.347575148 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.359141798 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.347137828 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.330294144 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.358997186 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.358428391 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.360044872 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.359564014 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.358035825 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.359618298 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.359699091 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.359318956 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.358940271 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.359500538 seconds)
  done (took 41.884343344 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.360565064 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.898582729 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.068924315 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.363928035 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.35038965 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.355674436 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.627939187 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.368620358 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.354413283 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.355450563 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.813842407 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.368723814 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.382721145 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.076890724 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.359245421 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.361149512 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.360040875 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.352072969 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.901757189 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.366547571 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.628255341 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.368093008 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.628402651 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.366308212 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.355300725 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.353561868 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.359725396 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.161306279 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.376679757 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.817953394 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.087303709 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.628386895 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.094695879 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.115362956 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.098610459 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.368568023 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.362651171 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.824019007 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.355518129 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.354001523 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.626831341 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.359141462 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.083314003 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.045095799 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.376101964 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.362655348 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.190097811 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.818876672 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.591879451 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.364710518 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.113678304 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.364628525 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.364988183 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.35603769 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.587093239 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.362596133 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.353652892 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.191183491 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.365290985 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.629082503 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.370889558 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.355177854 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.901328879 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.361982467 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.900541633 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.362459274 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.364106589 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.357354677 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.083801437 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.365138831 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.053898266 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.371660237 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.365004149 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.821524485 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.899899576 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.249900172 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.364012782 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.903651486 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.126178626 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.644931158 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.364168784 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.136223158 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.646768093 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.359368156 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.367998656 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.367353572 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.365993817 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.429735648 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.628981684 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.968733266 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.052361294 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.190624307 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.633069072 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.368202839 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.35852853 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.190446022 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.365876865 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.367105726 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.080686501 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.063434022 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.377683073 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.365788381 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.043122801 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.379613451 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.635432137 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.368648935 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.122663569 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.364994783 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.477433628 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.367568548 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.365205381 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.363831003 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.635910406 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.367979016 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.368738575 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.035311557 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.860951652 seconds)
  done (took 189.919803264 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.354561167 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.353198084 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.353453085 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.353736522 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.353905622 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.360662478 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.351637073 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.352450664 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.359376219 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.351496317 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.35468231 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.361816146 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.359366521 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.353614271 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.364719938 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.354573215 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.353005907 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.372113084 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.354573213 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.35425216 seconds)
  done (took 44.36226532 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.369555868 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.901483327 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.870954182 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.377436088 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.369989528 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.361646242 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.413977065 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.372271352 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.369704628 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.649340002 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.529617199 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.376325599 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.370794728 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.371614102 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.865843251 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.346753927 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.646913827 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.90340851 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.377532364 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.898142444 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.343300777 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.369048585 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.359988375 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.897799119 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.661906386 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.635070656 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.420209671 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.896838157 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.37190974 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.371512883 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.903074896 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.37603189 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.362431284 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.881304618 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.371004146 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.384196021 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.372410766 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.417121219 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.419645749 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.652454502 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.90517827 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.646494637 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.388193302 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.518790526 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.373976363 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.341117507 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.913651838 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.379563811 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.343060245 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.373743968 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.377725784 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.879011123 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.371094806 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.881265121 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.378830831 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.373083512 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.905054585 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.888011421 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.877689848 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.529715006 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.369896539 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.637423415 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.380409598 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.918599535 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.380293543 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.373839499 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.373323615 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.529032858 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.915770149 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.644907598 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.660496374 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.661260339 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.380301266 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.430764958 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.373772498 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.65680214 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.434860191 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.742859827 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.663047459 seconds)
  done (took 123.6204703 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.622504755 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.479499451 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.737184726 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.926270046 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.859581111 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.507433583 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.482556049 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.603483142 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.378015725 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.482425493 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.002698968 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.460030703 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.216725426 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.43666915 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.47725643 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.48287429 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.754593987 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.315667416 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.992659798 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.984009762 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.378283486 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.469559439 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.89725364 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.565636898 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.37858456 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.947997075 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.304752255 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.878959699 seconds)
  done (took 52.262055987 seconds)
done (took 516.236492439 seconds)
SAVING RESULT...
DONE!
