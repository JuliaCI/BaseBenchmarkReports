cset: moving following pidspec: 642
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.965327501 seconds)
loading group "string"... done (took 0.567235226 seconds)
loading group "linalg"... done (took 9.325598644 seconds)
loading group "parallel"... done (took 0.17597923 seconds)
loading group "find"... done (took 1.40370727 seconds)
loading group "tuple"... done (took 2.226670235 seconds)
loading group "dates"... done (took 1.409605717 seconds)
loading group "micro"... done (took 0.236346081 seconds)
loading group "io"... done (took 0.649865251 seconds)
loading group "scalar"... done (took 43.921746385 seconds)
loading group "sparse"... done (took 13.839903148 seconds)
loading group "broadcast"... done (took 1.220417217 seconds)
loading group "union"... done (took 15.689130503 seconds)
loading group "simd"... done (took 5.264223012 seconds)
loading group "random"... done (took 10.815750371 seconds)
loading group "problem"... done (took 2.346389116 seconds)
loading group "array"... done (took 27.348147077 seconds)
loading group "misc"... done (took 1.274513958 seconds)
loading group "sort"... done (took 4.008348393 seconds)
loading group "collection"... done (took 24.353077758 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.751001105 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.156269522 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.175092164 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.222190313 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.237363954 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.160985749 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.187484697 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.62716596 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.118824089 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.261710351 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.168969514 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.68901904 seconds)
done (took 6.510346251 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.267117604 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.090751777 seconds)
    (2/2) benchmarking "String"...
    done (took 0.154326992 seconds)
  done (took 0.916994196 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.0912096 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.221987836 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.121268329 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.137194877 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.137597992 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.119892333 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.137372211 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.137078182 seconds)
  done (took 1.687037933 seconds)
done (took 3.642735124 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.958832593 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.882581599 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.545442369 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.1522291 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.193620601 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.169957332 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.389174777 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.177735699 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.12831525 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.137267546 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.212378914 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.366907639 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.590096786 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.069328312 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.119746675 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.145475391 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.100113393 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.722215821 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.099029649 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.128039523 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.657089036 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.134308209 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.13496668 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.142166957 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.223720936 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.138272192 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.206956112 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.134076969 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.682524709 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.12084378 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.207557417 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.11784762 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.185596666 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.300612216 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.098196746 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.123974524 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.694827528 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.21283959 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.134052546 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.111841299 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.694608326 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.099096443 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.229255501 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.130889131 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.139808561 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.209286093 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.122968156 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.114272835 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.122348292 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.108399107 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.182753198 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.514384244 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.123311673 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.164243936 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.111929702 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.720230359 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.116359519 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.1722417 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.142224826 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.124069248 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.116649773 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.118121732 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.19216222 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.123315544 seconds)
  done (took 21.670302671 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.147980917 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.169829583 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.109804275 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.163765566 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.174392235 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.096593928 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.11794928 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.093522035 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.153347686 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.220601333 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.167746901 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.173490167 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.091326555 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.112313794 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.12242387 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.276705135 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.145058356 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.129383445 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.114921907 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.11068459 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.16401098 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.115473616 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.130758176 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.132845192 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.192410245 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.221229997 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.125838459 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.13930965 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.109497436 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.123212194 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.159476925 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.186749281 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.09328367 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.110765249 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.217318202 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122727025 seconds)
  done (took 5.925431341 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.243568544 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.119009523 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.265990387 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.233762967 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.186203902 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.215553831 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.142419129 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.316774428 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.268778705 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.205943594 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.147049616 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.116502007 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109429338 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.099991443 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.093305734 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 2.31549143 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.209746204 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.193563237 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.153858383 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108720596 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.114663284 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.410198069 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10453002 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.115190941 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.121595136 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.088057693 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.221284804 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.123255814 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.605502516 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.138468169 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.113333555 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.153318279 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.223821138 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.13865356 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.155355615 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.172853449 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.106697662 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.121376719 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.268997606 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.135017319 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.092952621 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.147650539 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.149588448 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.139587708 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.120803153 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.139721873 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.277425674 seconds)
    (48/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.155610698 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.099125945 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.147166497 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.330673735 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.224250576 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.117464228 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.116417983 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.422229877 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.117979442 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.129736315 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.117172386 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.348319641 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.166634501 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.115825032 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.094637267 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.124844595 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.095612254 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.418752334 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.134582732 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.933956942 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.098497701 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.20488281 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.120401008 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.132041238 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103336641 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.118244883 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.125202822 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.114936404 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.094949301 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.114266266 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.095218862 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.102869252 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.118013782 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.135002756 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10252572 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.112934376 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.099211887 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.180071149 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.130381024 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.138195709 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.141234631 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.104919694 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.096761338 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.147465311 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.115007408 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.103404281 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.176195244 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.126789487 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.118664758 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120903302 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.158904386 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.098841737 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.220389866 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.116170055 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.128180489 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.119676225 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.145654545 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.14703649 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09649186 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.119732644 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.093760871 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.115622824 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164651793 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.117447158 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.09600126 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.119771138 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.116145019 seconds)
  done (took 27.57123433 seconds)
done (took 55.839029749 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.458872101 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.141999146 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.142213172 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.141783593 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.141558693 seconds)
  done (took 1.783733559 seconds)
done (took 2.507945518 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.430138389 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.257810309 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.123747896 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.246621312 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.109927041 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.256353342 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.216386539 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.124918425 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.27637419 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.103104559 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.241268253 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.104102839 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.126677474 seconds)
  done (took 3.376215751 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.115143014 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.141548468 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.098254707 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111028801 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.108034045 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110434731 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.12814224 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.134182319 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.128236814 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.10302649 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.110441144 seconds)
  done (took 2.006832572 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.110892936 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115782729 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.113918602 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.108239504 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.107767862 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.107539731 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.125301052 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.120309161 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.126671448 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.103284332 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.106709606 seconds)
  done (took 1.967370359 seconds)
done (took 8.061957467 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.245493941 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 9.248736824 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.123042503 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.197478625 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.40623895 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.231473778 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.663687592 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.139078033 seconds)
  done (took 13.221388349 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.133019603 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.134360111 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.094654735 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.116712608 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.100510023 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.116986748 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.097297161 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.114253803 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.09992377 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.11311815 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.100512171 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.116189251 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.099955528 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.096407717 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.11265683 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.095741206 seconds)
  done (took 2.532771742 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.1396489 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.13935046 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.123871046 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.113129063 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.121026076 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.102604357 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.125409678 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.105857313 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.118705091 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.118811634 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.113815944 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.129807292 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.11089854 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.117587238 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.105898555 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.131114163 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.100983564 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.123280808 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.107334208 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.124157578 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.129877414 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.104342418 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.127898415 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.11289612 seconds)
  done (took 3.693476336 seconds)
done (took 20.169450875 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.209829804 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.10375133 seconds)
  done (took 1.03628721 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.123343818 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.138987584 seconds)
  done (took 0.993922481 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.13207153 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.113137669 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.162731045 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.118335789 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.113903541 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.096219391 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.154587348 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.115368248 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.096479299 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.114217991 seconds)
  done (took 1.94732603 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.104375732 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.102875429 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.124884813 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.1394719 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.111557775 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.116800278 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.103300318 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.119058252 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.103579909 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.112612022 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.106346455 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.139164578 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.123141961 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.12613162 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.121050243 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.121490477 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.111301561 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.120316467 seconds)
  done (took 2.837390577 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.098627966 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.09875346 seconds)
  done (took 0.927224797 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.10240509 seconds)
    (2/7) benchmarking "second"...
    done (took 0.111367026 seconds)
    (3/7) benchmarking "month"...
    done (took 0.100050208 seconds)
    (4/7) benchmarking "year"...
    done (took 0.115966753 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.095495153 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.111469465 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.095057584 seconds)
  done (took 1.463011182 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.61119358 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.276846885 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.406678238 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.142440488 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.182672103 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.445502795 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.182799383 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.137089974 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.137915241 seconds)
  done (took 3.302859928 seconds)
done (took 13.238579145 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.110434282 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.158785325 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.624099743 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.134145777 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.093794232 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.176319251 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.336214626 seconds)
done (took 2.366415833 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.409348113 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.140739307 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.099855786 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.094342278 seconds)
  done (took 1.4771811 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.097287448 seconds)
    (2/2) benchmarking "read"...
    done (took 0.10581443 seconds)
  done (took 0.940943175 seconds)
done (took 3.155691724 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.216009742 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.149321683 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.093769214 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.109307299 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.090922211 seconds)
    (6/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.093029749 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.112452706 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.090571827 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.108598944 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.093794716 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.092959051 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.11042705 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.093324499 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109870597 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.090796087 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089775508 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107346502 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093468781 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.107465648 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090811709 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090609656 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110762718 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.090467176 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.108878063 seconds)
  done (took 3.320848517 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.122194019 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.112604774 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.101817255 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.119335987 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.099832694 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.119476886 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.101295652 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.112334597 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.101622354 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.114650281 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099871697 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.116888559 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.097140581 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.117705882 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09720916 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.116604315 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.118420172 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096188483 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097596105 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.116817152 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.118818028 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096082649 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.117285214 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10265504 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.116431 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100007356 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.115392856 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.09526439 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.119277502 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.100517344 seconds)
  done (took 4.00032729 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.107369833 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.091066787 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.10953095 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.10612555 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.1087428 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.095413422 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.110259313 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.092230797 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.092400641 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.109658227 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.094116189 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.109847979 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.092513964 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.111119138 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.09352715 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.099617418 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.137073418 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.091267093 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.10896377 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.091816277 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.116887233 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.09122588 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.111354405 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.091256313 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.091181939 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.108970115 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.092172533 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.108674481 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.09248847 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.090289612 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.115799832 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.10037724 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.108555455 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.109444723 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.117266042 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.090983454 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.120584279 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.091324522 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.109756099 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.091651319 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.090940027 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.10898549 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.090977192 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.124689323 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.095826469 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.092797728 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.109692974 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.093590795 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.111656064 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.095870858 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.109410237 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.09227025 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.094650102 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.111933096 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.099077006 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.108030347 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.093365873 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.109182742 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.09331491 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.090709409 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.108459336 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.091103427 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.118961707 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.093377857 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.144269861 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.105908331 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.109459664 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.094225345 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.113243454 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.103762367 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.112518158 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.11743174 seconds)
  done (took 8.178432479 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.101361601 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.123130088 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.095016533 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094383181 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.108782728 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.092068544 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.119541407 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092382516 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112556747 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.113292041 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11022331 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094573648 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112351973 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096949318 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11070845 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.094933828 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.12227184 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090519982 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.092246824 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.116068836 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092923701 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.118126885 seconds)
  done (took 3.052979118 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.291100993 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.122167207 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.178066954 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.115903124 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.14033207 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.133255814 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102011475 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.121392221 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102424402 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.126008328 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107457494 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120531052 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.140984954 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107267156 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.126107263 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108459906 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.119338744 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.126278194 seconds)
  done (took 3.135864055 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.11420416 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.113711644 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.124838549 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.113676257 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.096852995 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.117210368 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104787947 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.133395994 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.098639602 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.114644787 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.109561092 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116329537 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.098982246 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113925836 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098805263 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.113859221 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.099051161 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113955645 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109322989 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.122739918 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.104083565 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.126655843 seconds)
  done (took 3.207769757 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.119203059 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.115335226 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.123255812 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.120894147 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094435498 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.112154182 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106096534 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.113421307 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.107341608 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.115529639 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09583421 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.112028731 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.106432176 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.114037516 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.10598666 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.113410287 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098197437 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113381094 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098319601 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.108411264 seconds)
  done (took 2.945699909 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.150590246 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.134342548 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.115967661 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.149893733 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.134255331 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.11697542 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.148843764 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.116272625 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134619042 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.136436748 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.134605605 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.134526841 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.130602606 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.144180614 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116596383 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.149152895 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.148668153 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.130021034 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.134959605 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116945793 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.154595083 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.133910541 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.130651422 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.13508568 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.11632195 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.134822989 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116199558 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.144129374 seconds)
  done (took 4.496746629 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098017946 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095432857 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.110151588 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.091830371 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.110256218 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.093130299 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.092005482 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.110678973 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.095571606 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109903766 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.095925825 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.094673836 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.11313386 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.094646708 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113609014 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.095174354 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094915648 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.110272598 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092119943 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110185708 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.095691448 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112439993 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.095365352 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.09251077 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110125237 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.094944579 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.110285615 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.092728988 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094697337 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.109972367 seconds)
  done (took 3.789321376 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.110421424 seconds)
    (2/2) benchmarking "in"...
    done (took 0.122253001 seconds)
  done (took 0.988884629 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.097123568 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.133696556 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.092338845 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.09879657 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.122909494 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.095881567 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.127768999 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.121433235 seconds)
  done (took 1.648023146 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.128772225 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.137022887 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.1030446 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.130753426 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.117756894 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.136131774 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.205278749 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.103302406 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.12333659 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.097643814 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.137547561 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.097019174 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.125680205 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105280738 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.125369127 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.117833503 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.112223452 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.107657929 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.122525275 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.099005718 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10272119 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.139942022 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.130548614 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.107646096 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.118137488 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.113352449 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.13587939 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.111178173 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.122522567 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.115203709 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.124301829 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.089039249 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.120101856 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.102790261 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.111824744 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.117260588 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.139816258 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104442072 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.126636863 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10308461 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.12766617 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.091540851 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.13076455 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106094979 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.131309675 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.102433607 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.120650519 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.09174547 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.115744935 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.101962939 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.091399853 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.120395609 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.090450584 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.128555103 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.110610308 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.144958661 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.099339056 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.121410985 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.102228556 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.120056689 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.106314205 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.121522843 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112206646 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.117906521 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110788658 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.127396892 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10802233 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.110297383 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.089737724 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.113147923 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.110000743 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.146703164 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.115459535 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.121423044 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102838427 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.112563235 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104517195 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.122115293 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108686293 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.13231342 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.101544433 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.124450851 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110008009 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.121450893 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.101838902 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.124888135 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098654396 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.118347602 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.098080622 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.147769067 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.099499981 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.113479382 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.099169786 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.132301861 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.103129873 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.11881508 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.098322882 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.126883433 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.089729624 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.101719681 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.122341688 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105308988 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.136568309 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.12179591 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104533593 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.128608955 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.110693675 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.122042171 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.102513618 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.093227669 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.121762189 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.098371526 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.12608375 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.090647136 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.123340934 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.104491035 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.121487025 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.115813394 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.117176002 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.102107072 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.130109838 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.114784224 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.117891763 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.093015924 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.121132187 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.102593328 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.126692244 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.115919683 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.118235951 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.09262365 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.109919606 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.110469481 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.118878205 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.108332507 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.121538689 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105407903 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.089827455 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.113612542 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.10330038 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.134926884 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.101689938 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.125246284 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.112391568 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.125980696 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.099207151 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.130820972 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.100964903 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.116147098 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.112478675 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.122832954 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.091936389 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.127386389 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.102704075 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.117362326 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.103234495 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.127189328 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.104205879 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.121508705 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100299306 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.121991775 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.1043479 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.115866486 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105605488 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.09876086 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.136397083 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.120652395 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.092485601 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.093093233 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.124290675 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.099380567 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.119442212 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.098487943 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.122073234 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.104282459 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.113675766 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.110001678 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.119793851 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.118699956 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.130742827 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104187985 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.126223967 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.112858467 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.11965346 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.106138402 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.119316313 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103981816 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.120782884 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.111540035 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.123983934 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103964527 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.102978115 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.111985102 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105612102 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.1290764 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.098041018 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.113392441 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.097837919 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.120602226 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.115698491 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.12024357 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.103596105 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.117073883 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107688599 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.12674802 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.10311672 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.119878122 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.098565262 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.102430589 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.128158555 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.105047038 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.122729724 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.114217201 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.124753854 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.091968867 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.128092543 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099351768 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.128720847 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.093143004 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.118489535 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.099191625 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.122918344 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.103546615 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.119680193 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.090871457 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110951782 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.13213121 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.12362948 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.09939676 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.102161304 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.137518322 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.101230872 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.12798725 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.102654028 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.129325083 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.146385301 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.098872769 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.122019975 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.118895812 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.12125024 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.091293989 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.126113854 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.100318579 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.096969088 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.118934646 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.099718667 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.124003626 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106711761 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.126048721 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.090521128 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.121163929 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.099934502 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.098075498 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.111923629 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.113915148 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.124980863 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.104390806 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.138224368 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.123419132 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.104496899 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.123951824 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.102879199 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.103571393 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.123929959 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105146306 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.123161593 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.101047423 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.117227438 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.106147311 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.115865109 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.095292857 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.120512272 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.103342295 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.12322183 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107176098 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.119706745 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.114179652 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.122872205 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.104777824 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.165333975 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.099970194 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.11825849 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106305133 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.126630192 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.102916486 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.122994235 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.09308056 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.129544619 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.102871179 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.131305382 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.103327042 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.112030017 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.10450615 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.121497236 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106187944 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.102890756 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.123407339 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.101579725 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.12083897 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.103572527 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.137266943 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.099132556 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.134102025 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107338879 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.12730076 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.103299877 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.124968184 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.102334711 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.117383245 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.106030623 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.123196694 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.105341584 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.121079476 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.107167832 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.124291851 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.10259728 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.119783264 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.104651326 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.124356107 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.106168621 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.10992979 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.098936643 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.099170606 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.122450786 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111224534 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.12333566 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.1008902 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.119580967 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10418093 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.120114241 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.094469824 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.127338625 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107843005 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.122577324 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118673957 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.117196176 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.105219735 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.14027809 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.09098397 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.118145629 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.096638776 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.099557197 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.132435302 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.104028376 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.132768839 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.104964551 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.118445067 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.094679096 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.12434657 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.100584619 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.111075635 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.096691829 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.128553427 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.101043451 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.119445343 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.104318081 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.106630739 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.125250858 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.130147974 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.102274578 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.1054092 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.123831239 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.094749402 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.118286264 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.099235493 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.123058441 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.104447212 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.118281709 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.095455874 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.120126652 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.106360295 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.105137541 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.12231152 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.101989973 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.131164383 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10281725 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.124063478 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.109931638 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.112049573 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.104547049 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.122066113 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.10294558 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.118728008 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.106684281 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.125295075 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107425063 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.131935267 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.10480807 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.126858139 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104090373 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.114783507 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.103939383 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.103155486 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.123386539 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.099806222 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.125040524 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113607392 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.115727649 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.106705786 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.125773988 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.100794559 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.126381557 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.104570446 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.126538561 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109103394 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.123040707 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.105641631 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.12822614 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.10380532 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.124463437 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106251644 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.12063964 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11130733 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.117506344 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.116349317 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.125669904 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.105358991 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.121120099 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.100660956 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103757039 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.121541415 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102461697 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.133287602 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.104672619 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.118639077 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.099038088 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.115558969 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.106344695 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.128559814 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112217697 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.124285777 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106964299 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.112611331 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.096308297 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.124448939 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.101106071 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.103207913 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.1281664 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.11109286 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.124486074 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.100382554 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.120853834 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.11425007 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.130633776 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.109951063 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.120724926 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.109558856 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.125418452 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.105351273 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.121956195 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.103754336 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.125240868 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.109039054 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.122171307 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.100066144 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.137386 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.112944689 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.125221463 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.103513754 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.128238169 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.104024529 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.113126588 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.105875472 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.123110046 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110364297 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.124234898 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10368701 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.141143455 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.098510263 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.122506103 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110777294 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.121557907 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.11587367 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.11295199 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.106299656 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.124331283 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105923465 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.111884467 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.099950188 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.099657703 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.12499098 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.098926035 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.1134479 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121099425 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.13209691 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.106861462 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.121708365 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101312671 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.113813874 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.094994534 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.11924269 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107192176 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.122505073 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.120341856 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.118979514 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.100731375 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.093505916 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.123325664 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106306555 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.12815547 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.095826731 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.113338188 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.100740818 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.127191592 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.117266709 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.120988094 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.10415992 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.125932622 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.106405548 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.115777778 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110568906 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.094135122 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.127201766 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.141253593 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.106268972 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.127458203 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.112005118 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.133297943 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.105868852 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.113208963 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.106449436 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.126566758 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.106549744 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.105082198 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.127155093 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.151013366 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107581913 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.118267705 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.103205898 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.10646771 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.120399641 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.117437771 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.126254896 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.105130456 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.128361803 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.101847029 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.127564864 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.114244786 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.130151785 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.107130084 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.12874418 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.102067397 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.1247577 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.101166674 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.122242091 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.107044119 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.125682592 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104232209 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.12772155 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.101072078 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.14255728 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.117345395 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.127081065 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.095698997 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.119605478 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.101010839 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.093702301 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.126049432 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.097297085 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.121102818 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.101218691 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.121565523 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.110204324 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.127492526 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.106949794 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.125584051 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.105079471 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.11161549 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.110860851 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.10521854 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.128803663 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.094279769 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.123604482 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.105438707 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.133289307 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109807608 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.12286863 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.106064058 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.123566598 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.109618888 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.114274905 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.108363103 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.122270428 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.103142603 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.119075956 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104935872 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.125123802 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108806895 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105100238 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.127859904 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.124454855 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.110576095 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106341589 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.117731586 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.095612215 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.129806411 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.098053681 seconds)
  done (took 68.626265619 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.191099264 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102590323 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094134593 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.114402053 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.151040369 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.096631899 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113566433 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.096712625 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.095511884 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.136359771 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.112870201 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.095736685 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.144700702 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.156381941 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12950171 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.135948707 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094045608 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.116249691 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.094433018 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116177849 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.143081872 seconds)
  done (took 3.341326146 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.131394997 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.137635408 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.136303152 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.124077291 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.12928869 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.117604657 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.136314913 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.136829416 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.142008222 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111277118 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.142035479 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.136301612 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.112096503 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.130116222 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110917967 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.134460935 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.142670525 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109538374 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.138236451 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.13580649 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114366663 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.136913895 seconds)
  done (took 3.651141611 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.113378917 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102637342 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.131227931 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.096611048 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.122572903 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.097267158 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.129315258 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.099833488 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.130129876 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.105204495 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.121183334 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.105206448 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.109946481 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.117538618 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.101877797 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.118880285 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.112421099 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.122961951 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.106665366 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.116367919 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.149968945 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.117050732 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.097892796 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.121515146 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.113691625 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.125832837 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.104640147 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.122708759 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.102572346 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103384318 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.119795147 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.109197469 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.13219694 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.101977219 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.121583956 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.104174362 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.123277039 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.097387441 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.099177813 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.13142692 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.097450686 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.125326566 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.115694805 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.120580792 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.099308648 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.127757736 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.104453758 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.116298071 seconds)
  done (took 6.274731989 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.136561636 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.168883796 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.124602168 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.166196593 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.143095711 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.11649969 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.1253574 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.165637579 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.097594957 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.119397993 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.124767966 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.142188468 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.121075553 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.108488416 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.127658243 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.101723661 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.122812996 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.099353904 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.131234171 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102680828 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.131666461 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.127516779 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.122678306 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.140079533 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.128766518 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100342865 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.119094647 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108745754 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.138143268 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.111867389 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.128415378 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.12864309 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.123632006 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.127546113 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10230787 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.123779286 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.145527264 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.101844601 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.124361967 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.097796657 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.123235019 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108761491 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.128049341 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.144829476 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.106117357 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.126371287 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.101925825 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.115588223 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.119694097 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.124305813 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.11634696 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.142880662 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.125708459 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.102705919 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.128368857 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.142814248 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.101815795 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.118255855 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.106921549 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.140338668 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.097416471 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.129190032 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.142557251 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104814491 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.135161883 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.12133725 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.128232073 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.128293544 seconds)
  done (took 9.364333197 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127565879 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.149852146 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125566657 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.148148702 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.132190383 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.112563476 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.132100881 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.11166573 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.133077961 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.14004554 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112762981 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.195134232 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.122225152 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.120496973 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.132372172 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.112639042 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.132565195 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111643646 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.13411374 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.13238189 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.113481663 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.146634712 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.112733864 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.146831309 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.151531585 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.102912267 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.134600538 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.132307303 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127345395 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.131632784 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.15262101 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.113740148 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.132763077 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.146624736 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.131419087 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.132078071 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.099323355 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131866376 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.113485351 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.132838537 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.102577077 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.148280967 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.132222821 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.10350105 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.132931623 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.111807569 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.147385235 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.151341235 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.139659925 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.121883234 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.132313415 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.146878362 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112635722 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.131851806 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.126414838 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.157920032 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.147205537 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.147232782 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113299318 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.147421616 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.14650976 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.157470347 seconds)
  done (took 8.979652278 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105033878 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09935592 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.117911529 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.097461741 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.119972978 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097940451 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.099517266 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.120776968 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100551289 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.119343234 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100063625 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096346017 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.117478429 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100025736 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.1167459 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098224446 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096518896 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.119258699 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101923531 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.117740108 seconds)
  done (took 2.962435947 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.115522711 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.147353208 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.10203144 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.132087008 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.104637056 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.132606609 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.103183531 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.124544037 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103386406 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.124822026 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.118171885 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.13780756 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.120598707 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.112437441 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.137373942 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112314376 seconds)
  done (took 2.748754421 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.132091775 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.141307571 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.151656712 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.10694023 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.097004488 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.133922126 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.099802739 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.119342618 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.095941108 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.132709555 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.108277959 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.133802978 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.100900812 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.119813065 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.102681366 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.128496795 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.096850409 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.127234074 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.101636941 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.15138543 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.107713356 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.125588749 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.102131962 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.125923019 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104431088 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.129170651 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.110010042 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.119248037 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.100701401 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.123197263 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.105124463 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.133557858 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.097443382 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.128926438 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.100571654 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.119831699 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.101923176 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.122835359 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109465146 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.120787771 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.10145547 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.1243647 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.102265025 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.122574795 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.097254959 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.101612604 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.117767637 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.108791395 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.125282082 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.104702053 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.121840853 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.109912941 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.130644332 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115204802 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.134196843 seconds)
  done (took 7.214327748 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.123019854 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.125735962 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.109961326 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.117969241 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.106229276 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.129745143 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.106810135 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.103158334 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.125603549 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097581758 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.124830764 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.105022367 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.124319838 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105759038 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.124488219 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105369759 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.11581815 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.104072736 seconds)
  done (took 2.884604851 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.112339017 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.100381649 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.131050649 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.100398337 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.121699147 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103558243 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.117362117 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.099345169 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11913493 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.101964184 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.121064466 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.105081682 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098437277 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.124135805 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100755866 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.122515365 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.104348575 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.118931973 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.102548668 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.11673631 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10500838 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098191796 seconds)
  done (took 3.254787051 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.130531491 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.164476938 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.121667973 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.17606134 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.130026493 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.108254736 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.141750326 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.110638627 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.150798284 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.10745385 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.127554578 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.109217857 seconds)
  done (took 2.409569265 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.138082552 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.171035746 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100051202 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12569546 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11870797 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131171139 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109666141 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132014979 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14458265 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.149049013 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110847628 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145035603 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124218914 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.145886378 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139200212 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117705975 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132139219 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129179664 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103207812 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.157356624 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10946368 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.146428321 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12967906 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109702645 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130829492 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.144077914 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125209938 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.15132156 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129992964 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125338965 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140181697 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10925883 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14600089 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.150961711 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104741377 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145528445 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129767779 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.157238421 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119628075 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.145491937 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104837573 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140935153 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144773075 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119387503 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.145729744 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129900903 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119774262 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130703002 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110512743 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.169146465 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140417889 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.14452421 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119537123 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145833179 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144808221 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.168971011 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13003211 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.146694222 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140062429 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.151152926 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123976745 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14064083 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.14529562 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129099959 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140488486 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.145626424 seconds)
  done (took 9.684923421 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.160034766 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.122478433 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110613179 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.152291621 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.146097721 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110252016 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131927346 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130723287 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111573979 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123822028 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.191492564 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111937346 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144986917 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.14489064 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111265695 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131010555 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111295999 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.146833695 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103798986 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.169141614 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131773388 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144833829 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124774313 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.145920389 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.151103563 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139738525 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111811007 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130900993 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111288788 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131631898 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119389594 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131905418 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.144696508 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102112407 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.146144658 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110256048 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132285992 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140055857 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111115494 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14071909 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.145182781 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139146097 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132428081 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109999351 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.15275714 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13147967 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110096299 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12542202 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110439301 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126175369 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.151681931 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13055443 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.153153897 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.145494864 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130386808 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111466309 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131184949 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111970065 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131408863 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119519428 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14573825 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13144125 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171331102 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111370655 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131865109 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124956842 seconds)
  done (took 9.521030448 seconds)
done (took 180.419979668 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.129982029 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.167792261 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.118739764 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.188510505 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.102565237 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.159909398 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138838793 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.140682278 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.102465855 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.101070959 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.125171656 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.106645561 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.191371715 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.102293806 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.123801105 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107626629 seconds)
  done (took 2.941765288 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.225599324 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.336269112 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.130480353 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.132125131 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.111697223 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.128971667 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.110425479 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.131383327 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.105141339 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.144486777 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.107503447 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.128661132 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.123415768 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.128879752 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.104820296 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.128877829 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.123246561 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.128279593 seconds)
  done (took 3.373988605 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.14859127 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.170037235 seconds)
  done (took 1.158950661 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.153399494 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.22832595 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.356699949 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.17585674 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.161461431 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.160268811 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.197478995 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.128074456 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.233521989 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.157971115 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.158042974 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.111917427 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.16686343 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.140619478 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.118797542 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.131993341 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.145635037 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.136235188 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.113934858 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.136308247 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.140782718 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.136030202 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.139950692 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.116222695 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.22241128 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.157227792 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.113889142 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.136055378 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.11479207 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.134589819 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.142432049 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.138823455 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.156628582 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.220430233 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.141152841 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.216136496 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.145502876 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.112019968 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.134632514 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.111606811 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.140317867 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.138148794 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.133864532 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.132735156 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.114409315 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.146305739 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.11479211 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.135760367 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.124498643 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.14849059 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.146246606 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.123180428 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.236990319 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.126630601 seconds)
  done (took 9.045470106 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.97140399 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.18219584 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.109252192 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.132172929 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.146863139 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.151985017 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.206168551 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.134671454 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.316450984 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.953028299 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.153292693 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122682547 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.310868235 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.300678141 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.228936374 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.418373157 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.817349243 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.149149709 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.141533074 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.191874888 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.143054538 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.170017365 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.136723163 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.492641845 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.134074875 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108185975 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.140505756 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.144762089 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.210893107 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.1082823 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.135500337 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.235684435 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.317077001 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.269496288 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.111611475 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.129332361 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107001656 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.216489085 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.338326785 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.285520229 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.212415987 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104310322 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.128651189 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125407179 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.160001582 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.102698238 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.237645758 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.223546027 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.223997668 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.135340222 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121438855 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.143166614 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.14524963 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.211739572 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.104301477 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.414166728 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.418294936 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.10610838 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143412795 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.152244551 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.309542701 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.129458931 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.300198314 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.144388484 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.279719855 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.105673353 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.854629273 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.215882994 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.128988624 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119204608 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.141816432 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11503685 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.147277869 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.207352449 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.464403613 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.14983866 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114736545 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.128614271 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.264714847 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.128146705 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107315498 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.21252816 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.134410785 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120272167 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.151579135 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.147285098 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.221089393 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.299410355 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.148949489 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121171037 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.137810221 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.146111945 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.112650423 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.264511681 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.297724719 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.208540901 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.262951507 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.149557152 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.214012181 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.236366326 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122812123 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.221226522 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.142754358 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.15126686 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125185885 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.291714042 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.180205556 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.106507463 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.137716119 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.140659574 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.181806619 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.112162961 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.14554067 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.21819785 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.536451174 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.215901968 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.126451516 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.111010158 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14333525 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.213371782 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.140244636 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.308243821 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.145368165 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.218679468 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.141173083 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.104653302 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.143158039 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.216223435 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.147279744 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123031855 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.148754823 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.117967203 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.322848254 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.265317315 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.149585567 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.304385556 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.194716252 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.142970154 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.224395468 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.144575743 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.219285755 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.142482086 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123860556 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135149417 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.845949757 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.126969858 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.142902482 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114823417 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.22889775 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.130495121 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.109082157 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.12930675 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104717896 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.878423356 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.111359067 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.12634657 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.10965885 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.141475834 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120761445 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.141916565 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114896885 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.212484258 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.31085087 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.146616629 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.141030792 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.108259287 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.211657931 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.134056531 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.108798258 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.129108974 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.108960601 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.143375284 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115412728 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.130877198 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.225343535 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.210316695 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.298340801 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.617202615 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.130549341 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.107521133 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.311453521 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107076786 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.383059861 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143033502 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.302783517 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.220048333 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.104680811 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.416853463 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.220291021 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.230797535 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.132658023 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.22436941 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.104230255 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.142703291 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.213794822 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.129830329 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120400082 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.210141889 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.154102631 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.150152853 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.207783564 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.131644215 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.279965526 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.12660868 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.22108294 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.113146185 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.147500424 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.387396867 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.107964555 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.157427015 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.213866916 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.137099049 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.109779321 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.077834425 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.131702941 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122903707 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.14435703 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.303811178 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.217798272 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.144103664 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120710733 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.147524071 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.213297339 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.26021177 seconds)
  done (took 53.156279172 seconds)
done (took 70.517855882 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.409352626 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.344172439 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.378137644 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.257910796 seconds)
  done (took 2.349510202 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.230303647 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.194512745 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.15664517 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.130015527 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.190678123 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.108192352 seconds)
  done (took 1.880263977 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.659186495 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.573172203 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.440175733 seconds)
  done (took 2.545825175 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.307063896 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.331141452 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.381126825 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.578184877 seconds)
  done (took 2.591985602 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.255285631 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.128449333 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.144700917 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.163255982 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.189402959 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.280041921 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.173491977 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.205888197 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.136584503 seconds)
  done (took 2.606775554 seconds)
done (took 12.847154548 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.171236186 seconds)
    (2/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.294515786 seconds)
    (3/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.338002085 seconds)
    (4/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.159492932 seconds)
    (5/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.223397803 seconds)
    (6/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.155908033 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.130017203 seconds)
    (8/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.173503564 seconds)
    (9/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.124774827 seconds)
    (10/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.270926519 seconds)
    (11/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.272989412 seconds)
    (12/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.140426297 seconds)
    (13/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.223101198 seconds)
    (14/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.304189327 seconds)
    (15/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.313018032 seconds)
    (16/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.244661415 seconds)
    (17/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.302020641 seconds)
    (18/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.175186771 seconds)
    (19/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.170981271 seconds)
    (20/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.153068546 seconds)
    (21/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.135860783 seconds)
    (22/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.249671353 seconds)
    (23/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.19845104 seconds)
    (24/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.138637655 seconds)
    (25/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.140406621 seconds)
    (26/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.099056643 seconds)
    (27/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.15371742 seconds)
    (28/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.118344464 seconds)
    (29/286) benchmarking ("sort", Int64, true)...
    done (took 0.263627098 seconds)
    (30/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.181541401 seconds)
    (31/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.121968077 seconds)
    (32/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.136401521 seconds)
    (33/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.111948028 seconds)
    (34/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.129985304 seconds)
    (35/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.114692937 seconds)
    (36/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.201516586 seconds)
    (37/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.089897861 seconds)
    (38/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.235639322 seconds)
    (39/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.250019774 seconds)
    (40/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.228739364 seconds)
    (41/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.150171336 seconds)
    (42/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.254717085 seconds)
    (43/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.202032316 seconds)
    (44/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.144833286 seconds)
    (45/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.114149468 seconds)
    (46/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.286866698 seconds)
    (47/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.171586653 seconds)
    (48/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.226739241 seconds)
    (49/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.168544429 seconds)
    (50/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.116169142 seconds)
    (51/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.14846495 seconds)
    (52/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.119404303 seconds)
    (53/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.172540742 seconds)
    (54/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.11014434 seconds)
    (55/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.139168211 seconds)
    (56/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.105508988 seconds)
    (57/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.217341633 seconds)
    (58/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.199608647 seconds)
    (59/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.253484612 seconds)
    (60/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.163863529 seconds)
    (61/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.102388593 seconds)
    (62/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.178970851 seconds)
    (63/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.165129788 seconds)
    (64/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.18153136 seconds)
    (65/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.114072233 seconds)
    (66/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.194449685 seconds)
    (67/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.115918782 seconds)
    (68/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.189161668 seconds)
    (69/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.177433281 seconds)
    (70/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.127980593 seconds)
    (71/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.141211797 seconds)
    (72/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.180848627 seconds)
    (73/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.089752942 seconds)
    (74/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.226131765 seconds)
    (75/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.090048297 seconds)
    (76/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.114660962 seconds)
    (77/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.127011481 seconds)
    (78/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.16179957 seconds)
    (79/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.148685227 seconds)
    (80/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.149787911 seconds)
    (81/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.173571048 seconds)
    (82/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.091298193 seconds)
    (83/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.137402143 seconds)
    (84/286) benchmarking ("sort", Int64, false)...
    done (took 0.105795448 seconds)
    (85/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.240585854 seconds)
    (86/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.23491497 seconds)
    (87/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.224563186 seconds)
    (88/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.123709728 seconds)
    (89/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.119850782 seconds)
    (90/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.19786831 seconds)
    (91/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.139097877 seconds)
    (92/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.090725351 seconds)
    (93/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.115263989 seconds)
    (94/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.117605922 seconds)
    (95/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.13405085 seconds)
    (96/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.090088115 seconds)
    (97/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.261872389 seconds)
    (98/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.139236678 seconds)
    (99/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.271198001 seconds)
    (100/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.113858348 seconds)
    (101/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.134569841 seconds)
    (102/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.115098428 seconds)
    (103/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.262645023 seconds)
    (104/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.136790713 seconds)
    (105/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.093864974 seconds)
    (106/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.146315478 seconds)
    (107/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.117741994 seconds)
    (108/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.180334611 seconds)
    (109/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.091528891 seconds)
    (110/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.173334466 seconds)
    (111/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.123951993 seconds)
    (112/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.114730564 seconds)
    (113/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.125323302 seconds)
    (114/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.115330029 seconds)
    (115/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.121520799 seconds)
    (116/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.140506329 seconds)
    (117/286) benchmarking ("sort", Int8, true)...
    done (took 0.26288421 seconds)
    (118/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.093208672 seconds)
    (119/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.152130609 seconds)
    (120/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.126942223 seconds)
    (121/286) benchmarking ("sort", Float32, false)...
    done (took 0.20646974 seconds)
    (122/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.154283678 seconds)
    (123/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.118877216 seconds)
    (124/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.159697916 seconds)
    (125/286) benchmarking ("sort", Bool, false)...
    done (took 0.23160211 seconds)
    (126/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.092402976 seconds)
    (127/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.144443101 seconds)
    (128/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.148837408 seconds)
    (129/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.173080068 seconds)
    (130/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.160872971 seconds)
    (131/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.114899816 seconds)
    (132/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.146704953 seconds)
    (133/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.117003431 seconds)
    (134/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.141351559 seconds)
    (135/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.135022335 seconds)
    (136/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.146194228 seconds)
    (137/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.098765296 seconds)
    (138/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.139164148 seconds)
    (139/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.11161843 seconds)
    (140/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.123065482 seconds)
    (141/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.192761348 seconds)
    (142/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.148782571 seconds)
    (143/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.107907382 seconds)
    (144/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.139838341 seconds)
    (145/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.119282944 seconds)
    (146/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.178020586 seconds)
    (147/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.125077398 seconds)
    (148/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.261043661 seconds)
    (149/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.145914115 seconds)
    (150/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.092911201 seconds)
    (151/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.140637184 seconds)
    (152/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.213759525 seconds)
    (153/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.092434145 seconds)
    (154/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.144618893 seconds)
    (155/286) benchmarking ("sort", BigInt, false)...
    done (took 0.282307767 seconds)
    (156/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.126416313 seconds)
    (157/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.2167602 seconds)
    (158/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.203459657 seconds)
    (159/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.159244635 seconds)
    (160/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.116437087 seconds)
    (161/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.139144341 seconds)
    (162/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.20367379 seconds)
    (163/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.131640535 seconds)
    (164/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.14000356 seconds)
    (165/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.142573566 seconds)
    (166/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.125196408 seconds)
    (167/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.216921204 seconds)
    (168/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.115607949 seconds)
    (169/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.140111222 seconds)
    (170/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.116289488 seconds)
    (171/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.117360982 seconds)
    (172/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.096322717 seconds)
    (173/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.260074702 seconds)
    (174/286) benchmarking ("sort", Int8, false)...
    done (took 0.26627714 seconds)
    (175/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.093864339 seconds)
    (176/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.216546641 seconds)
    (177/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.099561339 seconds)
    (178/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.218853704 seconds)
    (179/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.115826851 seconds)
    (180/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.116619191 seconds)
    (181/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.091533877 seconds)
    (182/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.147551186 seconds)
    (183/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.127314096 seconds)
    (184/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.137549927 seconds)
    (185/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.092243995 seconds)
    (186/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.119945729 seconds)
    (187/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.099018637 seconds)
    (188/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.114299667 seconds)
    (189/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.225437616 seconds)
    (190/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.11430624 seconds)
    (191/286) benchmarking ("sort", Bool, true)...
    done (took 0.265735877 seconds)
    (192/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.113485586 seconds)
    (193/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.114445531 seconds)
    (194/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.138132988 seconds)
    (195/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.145372771 seconds)
    (196/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.112312238 seconds)
    (197/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.145877576 seconds)
    (198/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.094800129 seconds)
    (199/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.133381587 seconds)
    (200/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.12593466 seconds)
    (201/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.137185142 seconds)
    (202/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.150877594 seconds)
    (203/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.140602976 seconds)
    (204/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.11648481 seconds)
    (205/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.115621072 seconds)
    (206/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.126709179 seconds)
    (207/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.14857448 seconds)
    (208/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.108242045 seconds)
    (209/286) benchmarking ("sort", Float64, true)...
    done (took 0.272185499 seconds)
    (210/286) benchmarking ("sort", BigInt, true)...
    done (took 0.292424424 seconds)
    (211/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.116252891 seconds)
    (212/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.092218945 seconds)
    (213/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.144305507 seconds)
    (214/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.092860711 seconds)
    (215/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.091549258 seconds)
    (216/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.144256468 seconds)
    (217/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.110929787 seconds)
    (218/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.140667492 seconds)
    (219/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.097582598 seconds)
    (220/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.144758621 seconds)
    (221/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.09083826 seconds)
    (222/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.135635841 seconds)
    (223/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.107055407 seconds)
    (224/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.130385392 seconds)
    (225/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.117114203 seconds)
    (226/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.126940358 seconds)
    (227/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.11822688 seconds)
    (228/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.093668326 seconds)
    (229/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.121883147 seconds)
    (230/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.118219183 seconds)
    (231/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.140953984 seconds)
    (232/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.144311661 seconds)
    (233/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.135439053 seconds)
    (234/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.123929308 seconds)
    (235/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.115918698 seconds)
    (236/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.116712279 seconds)
    (237/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.129846538 seconds)
    (238/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.130259599 seconds)
    (239/286) benchmarking ("sort", Float32, true)...
    done (took 0.271332586 seconds)
    (240/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.115948958 seconds)
    (241/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.093132975 seconds)
    (242/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.114715643 seconds)
    (243/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.137574615 seconds)
    (244/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.098184406 seconds)
    (245/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.137755167 seconds)
    (246/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.120510262 seconds)
    (247/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.114322156 seconds)
    (248/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.109388235 seconds)
    (249/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.131623923 seconds)
    (250/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.092603393 seconds)
    (251/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.112224745 seconds)
    (252/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.117140674 seconds)
    (253/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.092171654 seconds)
    (254/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.135905831 seconds)
    (255/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.134561686 seconds)
    (256/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.139807506 seconds)
    (257/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.126419449 seconds)
    (258/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.117438343 seconds)
    (259/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.116146379 seconds)
    (260/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.117137434 seconds)
    (261/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.145194337 seconds)
    (262/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.141333912 seconds)
    (263/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.114721961 seconds)
    (264/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.115629396 seconds)
    (265/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.115124156 seconds)
    (266/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.137118212 seconds)
    (267/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.125058469 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.142126365 seconds)
    (269/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.09500021 seconds)
    (270/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.114661805 seconds)
    (271/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.109231399 seconds)
    (272/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.109186236 seconds)
    (273/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.14165462 seconds)
    (274/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.148739769 seconds)
    (275/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.116599754 seconds)
    (276/286) benchmarking ("sort", Float64, false)...
    done (took 0.205507897 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.113366165 seconds)
    (278/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.135503335 seconds)
    (279/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.099813689 seconds)
    (280/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.131351305 seconds)
    (281/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.116620734 seconds)
    (282/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.138761963 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.112441915 seconds)
    (284/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.093017209 seconds)
    (285/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.137976427 seconds)
    (286/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.095206588 seconds)
  done (took 44.136071064 seconds)
done (took 45.016578467 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.1291874 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.180076511 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.121241098 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.167703365 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.124672764 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.151977358 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.142535851 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.123409523 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.147844541 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.127566814 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.151269015 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.102616124 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.144889312 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.12191127 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.146255702 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.143057131 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.148514651 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.117675797 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.136458799 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.113391696 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.136273513 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.114311278 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.138732782 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.103120657 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.143448808 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.119765343 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.140703916 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.122091012 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.13778529 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.109735775 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.13445375 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.116146264 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.133066146 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123396696 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.137113054 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.113758618 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.145431693 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.11883388 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.115734682 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.138670028 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.11582892 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.139539918 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.114931545 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.141344948 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.113243359 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.136912537 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.112543137 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.149801605 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.167145481 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.110946301 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.115725187 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.145361736 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.125809214 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.141238154 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.111312546 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.136828022 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.114788095 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.168377549 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.111236965 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.136665348 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.116086732 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.14140623 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.11263562 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.136752276 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.113445421 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.143834197 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.120964229 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.137052781 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.119888009 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.138388208 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.106622147 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.154849893 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.111829607 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.132190326 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.119614768 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.142976763 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.106734378 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.113118834 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.139694145 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.114836332 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.137542463 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.108321953 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.13977652 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.113999738 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.132238585 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.103125174 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.133965668 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.114599419 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.13700188 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.11322515 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.13802966 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.115175827 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.115486148 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.144987284 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.136646677 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.115951484 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.138205633 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.115683227 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.140090123 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.111881345 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.105867391 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.133781252 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.1171148 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.132762905 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.113485525 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.149263546 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.110317417 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.138606173 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.113736612 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.137612162 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.128766534 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.14360818 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.114470595 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.135127603 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.109533235 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.142286285 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.111551427 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.134305772 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.110935449 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.138274024 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.114597279 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.138186661 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.110069407 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.140575451 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125111469 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.106709667 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.136732424 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.10844188 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.138695529 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.115659609 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.139808192 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.109238436 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.135367664 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.105565765 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.132370791 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.109786965 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.141824731 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.109653861 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.11167084 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.139250559 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.112685312 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.138633029 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.113587318 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.140024272 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.111066033 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.126208402 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112567792 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.132371833 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.116796328 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.138498969 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.114927996 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.130490873 seconds)
done (took 20.332282082 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.128775198 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.224042244 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.176220003 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.1582052 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.191634875 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.167305832 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.152635358 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.159576565 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.149032418 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.179839494 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.155475896 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.166334376 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.180944084 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.126764929 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.168162947 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.144931777 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.122717728 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.165499749 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.188326923 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.148579309 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.176580534 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.150619611 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.150634083 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.178172789 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.119211675 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.188259122 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.153521883 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.121740431 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.151642244 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.13057933 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.167910984 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.154019983 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.128329959 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.162757699 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.127574568 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.143141597 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.167807797 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.115228983 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.148234183 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.123964709 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.162242371 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.134045575 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.143606018 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.161453562 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.122309052 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.152246886 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.12101568 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.145129152 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.122269822 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.13925644 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.130594504 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.173800223 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.14604237 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.127874368 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.151703462 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.121172625 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.151957731 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.151155426 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.127856293 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.152213605 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.123714732 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.152304386 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.130736603 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.171283795 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.147187594 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.12721668 seconds)
  done (took 10.829024216 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.147547693 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.183764596 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.128016687 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.153723812 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.153093539 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.10723594 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.130526478 seconds)
  done (took 1.94295228 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.113810291 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.17054053 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.151541702 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.176065414 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.139741294 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.181373939 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.157089011 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.108540676 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.164553037 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.124436154 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.167591207 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.204075323 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.110428104 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.151110469 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.154155355 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.134686927 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.180128847 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.109484492 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.144202671 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.150768014 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.142067135 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.136674319 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.155623794 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.109680671 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.162105328 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.111597895 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.221552149 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.153620375 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.108187858 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.143522611 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118284414 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.230002102 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.161322495 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.123073868 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.131231519 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.171238351 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.135529399 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.143377229 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.141703259 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.142697974 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.135668603 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.145568788 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.119956312 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.144553093 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.12035066 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.151268395 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.12734592 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.14872357 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.117493084 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.169045562 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.151124741 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.13671029 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.137208788 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.115779422 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.149862813 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118606722 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.152915655 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.118198135 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.168453712 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.120745927 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.16841772 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.169630146 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.136643608 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.169702966 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.133400278 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.162030046 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.161178337 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.118781504 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.145939039 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.121671312 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.170095355 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.116452568 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.151085495 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.127109262 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.148722298 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.141614838 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.166169022 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116111303 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.150334847 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.115899069 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.140507808 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.110166612 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.153999472 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115249423 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.139409501 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.135740322 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.152723996 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.14441432 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.116996449 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.167772173 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.118407765 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.152898614 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.128325833 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.14186637 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.133959817 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.173998007 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.152513103 seconds)
  done (took 14.893991959 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.119226094 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.111428767 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.144099121 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.112739516 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.136169387 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.112240426 seconds)
  done (took 1.68599829 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.155304127 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.141213161 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.13100503 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.145010002 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.187770477 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.138323855 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.162337304 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.12512654 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.160983492 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.129924838 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.163883688 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.16428566 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.147829208 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.145753082 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.137121176 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.147169858 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.137554941 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.140780686 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.129333568 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.13955629 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.130752151 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.147184071 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.114231938 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.163455125 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.143188751 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.122781734 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.144090536 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.131034499 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.154522492 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.125184045 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.146169134 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119257085 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.146224764 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.124540281 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.164172539 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.14615199 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113342832 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.145367071 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.121734262 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.143455887 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.139320825 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.139928883 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.13019105 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.14607047 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.125199496 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.146229414 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.121582102 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.144577672 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.1370726 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.146012466 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.121025473 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.146824117 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119121223 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.146466938 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.121558388 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.151757037 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.144846013 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.138351867 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.145653158 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.122237377 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.142233207 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.120126079 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.150809474 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.11931824 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.144322738 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121106505 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.146841588 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.114649133 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.140108364 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.120775544 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.146421003 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.117233638 seconds)
  done (took 10.948789598 seconds)
done (took 41.228225406 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.729562647 seconds)
  done (took 1.674868028 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.981054476 seconds)
  done (took 1.928831894 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.856923054 seconds)
  done (took 18.840151943 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.67187177 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.815593597 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.258715091 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.196695362 seconds)
  done (took 3.891114117 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.029403882 seconds)
  done (took 1.998448573 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.371832385 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.285797632 seconds)
  done (took 1.609941637 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.889084063 seconds)
  done (took 1.85538057 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.754241895 seconds)
  done (took 2.711393219 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.451095045 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.228607319 seconds)
  done (took 1.650601393 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.671298109 seconds)
  done (took 1.633707362 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.002026614 seconds)
  done (took 15.969198279 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.296357928 seconds)
  done (took 1.276242089 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.352501317 seconds)
  done (took 1.32014063 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.806107147 seconds)
  done (took 4.773063843 seconds)
done (took 62.092649174 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.127982952 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.12618064 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.153109585 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.12297443 seconds)
  done (took 1.492161998 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.137304485 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.147943251 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.128522878 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.147304937 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.132867439 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.14939281 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.119766136 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.155404693 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121958738 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.150715684 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.123457127 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.147858815 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.124859625 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.14541816 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.118268424 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.151325524 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.127137999 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.149049446 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.122102271 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.150387891 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119873585 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.150467583 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.151706661 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.12245616 seconds)
  done (took 4.271147904 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.127678036 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.116761916 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.143926951 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.115702048 seconds)
  done (took 1.481615228 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.13551422 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.166367423 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.14044216 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.155044889 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.140772057 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.165349495 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.115431391 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.142233066 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.118499203 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.156777479 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.117811826 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.169237604 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.165274447 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.111322231 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.157290978 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.109132625 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.139790986 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.141135688 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.154684473 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.130794938 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.141241062 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.128643414 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.150145346 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.134198539 seconds)
  done (took 4.36572528 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.22653826 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.160064375 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.171638428 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.125621589 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.207813937 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.173459372 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.115003157 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.174963201 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.116632454 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.16952866 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.120344543 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.208033608 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.169556506 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.120864216 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.144663405 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.154122149 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.14171764 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.173557012 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.118384232 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.158694431 seconds)
  done (took 4.133056021 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.131828342 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.115727282 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.136362407 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116295707 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.151194582 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.118579052 seconds)
  done (took 1.750284961 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.115473887 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.108780795 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.136127362 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.108253385 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.139683026 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.109196351 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.107336612 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.135330539 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.108046341 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.13456509 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.108503799 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.107100616 seconds)
  done (took 2.400792147 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.513958106 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.115147366 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.155619018 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.116763272 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.167749388 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.13908289 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.134061155 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.139788839 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.210030955 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.12829181 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.159897209 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.206736972 seconds)
  done (took 3.170697067 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.27921389 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121471651 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.348219174 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.491691119 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19601698 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.212397706 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.375617654 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.209797019 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.242473411 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169905647 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251452116 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196284077 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188452437 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223684595 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148688382 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.21961174 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224979436 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.268386858 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186015754 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269528343 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216876769 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.213180863 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.235841143 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189005092 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171872566 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207609568 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.116933329 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155470294 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227965086 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219463146 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240836038 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193752214 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146638986 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.298324944 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.298199463 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244470048 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.467163938 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167399339 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.227722147 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.235141042 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.311976781 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176028519 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.26910414 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19455906 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133972082 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26271385 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175303329 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.232438366 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.162738041 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176006377 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260318719 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22599937 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.24053006 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172817997 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.417824558 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158966495 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.177687459 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238034628 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261254306 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.250557419 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215142254 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.148575812 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.273485936 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25989378 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237440329 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.151632037 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.218929614 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154630081 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227438441 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.255491139 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236419508 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214510144 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.312802824 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140092442 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214812039 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.216840973 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191871988 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230398297 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203411753 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.119065965 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186657687 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17042589 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129092295 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.219799296 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120385824 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.303118476 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143510614 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.324522214 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.310855866 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.201430765 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182515908 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21402155 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21962683 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17991121 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.144219113 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156957068 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.204468563 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195612456 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165603313 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197585564 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155837597 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.15400087 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189008974 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.120624788 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202470603 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.163282561 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21416786 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182075984 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.159716148 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.209725882 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185237639 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.175788348 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222298702 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268335127 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13610201 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162708089 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255287736 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199427858 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.13964379 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.225945733 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.244294028 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.211066478 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172538172 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227159226 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260501155 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177714313 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249789955 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18133044 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139251828 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.197738712 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204242712 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.204739603 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.192872743 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130559476 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.196324035 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.252871855 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.153724311 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138833466 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226336321 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154099368 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129278619 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181199006 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170421958 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.146057445 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.189979278 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.170001824 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199872688 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199693288 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166149303 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208307413 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186465303 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274550799 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164141437 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.201061288 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153379658 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.141874076 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.234551635 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243085835 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156988444 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240637621 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.218913329 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.288058155 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213753719 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15968591 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.235416344 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130557256 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.145356332 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220104763 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.208017414 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.211085842 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.237441711 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.315443057 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.21913645 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.164217763 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18459168 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222714319 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.224236036 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214780854 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.180336332 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.210247666 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222804101 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.119031403 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.150115216 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.126887544 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174303851 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133666409 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163161026 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247166977 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213414864 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.304861873 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208714974 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146122152 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.237203654 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.152130772 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212689683 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.227184058 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169890653 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.242139958 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235660111 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216249178 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149222465 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230985865 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.144146366 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123287398 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.164657938 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.216511941 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13363297 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167515729 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189772026 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.238424516 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228109468 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187267517 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.330477951 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21848121 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.249515739 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.120077392 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.194090798 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217564819 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199946623 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.198199686 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164649934 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.206700396 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.230661398 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155927626 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.291960034 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17980647 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223768156 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.305496668 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.197507204 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131897869 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189139686 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214325604 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180550357 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176565447 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183217057 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168932371 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194168744 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.143707491 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15623367 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.249918217 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176163185 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251249919 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.19669504 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242195166 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123274446 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18829475 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.205709651 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179533318 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.115049712 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218711649 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2517739 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18640105 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20338914 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2257876 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159031636 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.411814952 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.25200068 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247591141 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172990027 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180494142 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204944775 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173981204 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211847527 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.236294676 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186436576 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237555806 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200390076 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.176901364 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139963441 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182856635 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18837714 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.170020071 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.166589888 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.196457611 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.173073564 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.257168853 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180049993 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172524244 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216277659 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.177232907 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.192221043 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147355343 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265016555 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199813134 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234553063 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.195459051 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.210961406 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241577091 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150132467 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128508924 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.153675796 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.236090419 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133443563 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205774149 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.298809097 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.301396217 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202734335 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215135207 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170120127 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.121248739 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.205174863 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188148122 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.320268624 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158348248 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.165212478 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.249257664 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.183946543 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158280515 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18072372 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.398939973 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178514959 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226433723 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.118382219 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.385605661 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127158153 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160083565 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173303805 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220741991 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.161781397 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.22081246 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215589434 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156437389 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202137264 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170320681 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.278389829 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.31336092 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229408486 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232995581 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.181261367 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176636753 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212164189 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226980208 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180989975 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.179137918 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200980403 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236340284 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.241145732 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.13367063 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208580234 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209301826 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.20620354 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24871885 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163534839 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240592256 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131023761 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219560826 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180421535 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14961906 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168098744 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.294588782 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164501992 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226194335 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171152285 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160962628 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123711121 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198318803 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198986753 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183132653 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.127645894 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273139099 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.12581987 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213310391 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23070357 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128744891 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195003462 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182318304 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13131555 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179541571 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184711099 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138389378 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.205304413 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241652854 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.161630753 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228632589 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234559208 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212514133 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206050539 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149694541 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.697233229 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.125634978 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235637605 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182125335 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253368653 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18454013 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218484266 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.208024852 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184043429 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222487811 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162737008 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.256837649 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221237385 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.204519048 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130252295 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186021901 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182800741 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.160416112 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162007588 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208127078 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172763848 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.137158874 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.198814353 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185130702 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.183565143 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140218522 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243718578 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181976183 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.250610275 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.238321351 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173587955 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217752709 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250117486 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129052628 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.208921187 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222925215 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178786118 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199028378 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.128847148 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.165331212 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231592613 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.119700525 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206172642 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206314924 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.209311524 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210249582 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.168998539 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17822644 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183153698 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205627657 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151302541 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.16720947 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.199397666 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160024207 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.125890695 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196448924 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208989173 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.201770151 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124827884 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.20564324 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236832329 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.121189569 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166186386 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.379236273 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195107381 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256148741 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.1930498 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166418474 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146816617 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200003522 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.193988722 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20257092 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.155517986 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13216788 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.162352649 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.215763442 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.167264484 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.199571974 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24439554 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205535047 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2420155 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.162951033 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.305446814 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141099151 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196264015 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.163837463 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.128759253 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174712469 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136293012 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186992773 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.3062689 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232262935 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.160587352 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.184793425 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156753712 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.12442538 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161543115 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202622063 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167300421 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199118197 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185321658 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.114352861 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183082392 seconds)
  done (took 97.93696408 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.175563364 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.16779442 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.178490995 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.221827356 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199041423 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.278471186 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.236531949 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.256883051 seconds)
  done (took 2.785675637 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.133165049 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.16710959 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.176626055 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.126221866 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.141188571 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.45484575 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.169271807 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.154955229 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.150576247 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.195860244 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.115389493 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.76275984 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.121475943 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.154546822 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.137860132 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.138350326 seconds)
  done (took 4.359648091 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.87188816 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.605222006 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.272535802 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.305917199 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.29136812 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.212517661 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.813132886 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.249580596 seconds)
  done (took 13.684396518 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.154937331 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.16493344 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.17107706 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.19591226 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.150436128 seconds)
  done (took 1.911224687 seconds)
done (took 144.704385576 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.124073816 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.123296407 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.148660561 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.122952586 seconds)
  done (took 1.574704961 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.135630269 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.099910894 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.13148215 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.098790316 seconds)
  done (took 1.539537571 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.531544379 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.12962955 seconds)
  done (took 1.7714708 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.153900394 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.160418055 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.13399537 seconds)
  done (took 1.520657993 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.13440609 seconds)
  done (took 1.210066755 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.126200055 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.123943026 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.167557815 seconds)
  done (took 1.493014038 seconds)
done (took 10.181605926 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.139150505 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.560165688 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.409779531 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.163683137 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.724408632 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.430550679 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.070894153 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.16743173 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.201348468 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.14148518 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.136277564 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.721290145 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.061970173 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.485101836 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.044844331 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.390337886 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.69735379 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.143760641 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122870546 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.143284672 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.015477565 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.139539999 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.115878282 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.143272437 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.6940074 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.447935353 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.114056703 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.410336949 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.113107199 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.14835416 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.405922661 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112687928 seconds)
  done (took 17.878080654 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121961291 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.217996437 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.123838181 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.143910752 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.119907552 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.143475693 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.127633852 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.16330675 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.21947063 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.112859751 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.165000824 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.112797028 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.147465102 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.113914531 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.167327785 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.113119978 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.144716063 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.117925758 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.14990118 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.116626622 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.135660139 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.141262588 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114953085 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.144770599 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.113205105 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.157227551 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.113614406 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.162806789 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.112645378 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.150598676 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.120633545 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.142740198 seconds)
  done (took 5.533281049 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.172289213 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.230825642 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.15323042 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.152444623 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.209788662 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.114226101 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.246023363 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.197658396 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.222598744 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.140929887 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.136954917 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.11208549 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.186679983 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.141338852 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.140569304 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.140340539 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.11857721 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.144534503 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.125127119 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.143256376 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.138058041 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.140069293 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.1167772 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.115807709 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.143761031 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.129686971 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.143133502 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.161679627 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.113915761 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.121491937 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.149457207 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.114193171 seconds)
  done (took 5.893249221 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.129527873 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.154526909 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.135700318 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.163319534 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.117432021 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.151956269 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.12521936 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.115844271 seconds)
  done (took 2.179159 seconds)
done (took 32.559622777 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.13840471 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.11993915 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.159420003 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.128476013 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.153369053 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.139137462 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.140478742 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.126009616 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.155969558 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.122901689 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.160728866 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.112896345 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.114308197 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.140875946 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.128568277 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.147521249 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.131442271 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.152173735 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.140157191 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.160398871 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.115667706 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.155853621 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.124119742 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.169098242 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.140008039 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.16960665 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.132749493 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.150816776 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.114369731 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.143646489 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.132745647 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.172050515 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.116213122 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.162225115 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.119196379 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.146121812 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.114788839 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.11506 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.160305394 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.126311507 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.150557076 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.126433134 seconds)
  done (took 6.901310083 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.153051375 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.19337892 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.110706612 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.140736734 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.111311122 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.189855947 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.155092634 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.140243089 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.11039187 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.174662953 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.17449623 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.11155472 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.111197132 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.140836369 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.11065386 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.140496065 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.144021661 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.172600577 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.150975653 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.178019813 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.197534996 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.152523 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.182951193 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.143843346 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.193226294 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.185787465 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.140121413 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.186490981 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.175105157 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.111051782 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.181297548 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.149735811 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.140123139 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.110683658 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.190479859 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.185269207 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.149245417 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.190930319 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.178144383 seconds)
  done (took 7.151773665 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.131484383 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.131966039 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.170980803 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.223636916 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.162971937 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.159351989 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.126951091 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.168955139 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.134863111 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.145640806 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.125089165 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.184929499 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.134626112 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.154224893 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.121621734 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.162576072 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.140183709 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.148053478 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.121038878 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.167368927 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.135210451 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.162151638 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.129998502 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.155817783 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.115474509 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.162597063 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.121072519 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.160595056 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.121542304 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.152936847 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.12299675 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.149918119 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.124256253 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.128119716 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.148870402 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.128874846 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.173058395 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.154353174 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.127134619 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.185518805 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.130386062 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.15196957 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.144750914 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.192257854 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.117228694 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.154536801 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.121759232 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.155276649 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.113454795 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.165502438 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128971931 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.116617683 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.171567309 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.144609921 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.114058358 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.132453873 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.146539136 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.118954487 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.154846834 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.123249166 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.172127169 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.122180971 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.162344469 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.117924048 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.151923189 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.116678257 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.143376572 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.126930756 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.171555466 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.121144004 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.192769475 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.115496595 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.153668563 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.124777841 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.15115691 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127190548 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.114272785 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.162912429 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12560049 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.151731641 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.127549913 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.148842836 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.120069587 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.16515027 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.140872671 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.159514546 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.124596641 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.153890375 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.119912216 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.146560381 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132395382 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.146090312 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.12025544 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.163640057 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.11690081 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.147510025 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.124668852 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.150728436 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.114047737 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.160373432 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.122517512 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.11423151 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.15632502 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.116760879 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.149754531 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.127021992 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.150899736 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.116529232 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.160399969 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.124311421 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.144318965 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.121503658 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.148634432 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.119496169 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.162168544 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.124256659 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.119628539 seconds)
  done (took 17.65832684 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.298953325 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.26211234 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.24503648 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.372019469 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.176016623 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.148445433 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.259317269 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.209541815 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.11551147 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.202247299 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.221702537 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.228181907 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.212189328 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.223686864 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.222134654 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.115134565 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.174922801 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.210791189 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.262536873 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.332412859 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.176276007 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.165249662 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.201753609 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.172239822 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.171209503 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.167180018 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.146245559 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.17499528 seconds)
  done (took 6.974970705 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.143734504 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.195857036 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.125741169 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.184790478 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.179469576 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.117845554 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.151788457 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.117348994 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.165787637 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.137556429 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.148647544 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.125487286 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.153332801 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.127420438 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.144417363 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.127867675 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.157784582 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.130384729 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.148620604 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.121671704 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.168829447 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.136028682 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.15355263 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.125605929 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.169989166 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.126049359 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.149106425 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.177317747 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.129170095 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.183656393 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.111953372 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.156767192 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.133642247 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.145144497 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.127044212 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.149123416 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.117682369 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.147026387 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.118459278 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.111798102 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.146056159 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.104006742 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.155760035 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.135805576 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.155586924 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.119300982 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.153253165 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.120769034 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.152504388 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.111573991 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.148673582 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.118880567 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.150517761 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.138575687 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.149889127 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.112838088 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.120634284 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.13694455 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.128019593 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.149112898 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.109955178 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.155039822 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.108382692 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.152377574 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.12762334 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.139285343 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.124904227 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.147910207 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.123006375 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.156970304 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.119792936 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.13348111 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.144329025 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.117176125 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.162167205 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.133511333 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.15191958 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.124862406 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.15786652 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.1142652 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.131818156 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.114351205 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.099251747 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.151621103 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.114561885 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.156206474 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.119387094 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.153243449 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.169948113 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.131317208 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.154846847 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.116507711 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.125732443 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.152574001 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.112883024 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.151931661 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.13790582 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.175089281 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.114749171 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.14568931 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.140267761 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.148346178 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.113129967 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.136214989 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.129202614 seconds)
  done (took 15.663115439 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.180590184 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.219399758 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.148628647 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.139603279 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.190229648 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.20782256 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.13352175 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.125796135 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.147880742 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.14037169 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.15782792 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.127830765 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.158690945 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.134512404 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.206762183 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.158599315 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.11735005 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.165024214 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.123139753 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.223637571 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.139173074 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.204881044 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.212283616 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.162859298 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.122832572 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.201983417 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.211960289 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.133064507 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.160129125 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.183974338 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.162701704 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.210851601 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.214373211 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.123975853 seconds)
  done (took 6.77537344 seconds)
done (took 62.208664251 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.21001055 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.442753676 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.188970043 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.192032281 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.241926628 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.212229195 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.190991433 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.382210673 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.950512482 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.176416996 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.189252174 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.189174555 seconds)
done (took 27.673544216 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.284327917 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.346026673 seconds)
    (2/2) benchmarking "String"...
    done (took 1.487429054 seconds)
  done (took 3.942765638 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.191231578 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.191007352 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.436312343 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.191111896 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.210209087 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.209510151 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.190124926 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.201866403 seconds)
  done (took 15.732782337 seconds)
done (took 25.255685405 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.254308583 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.397031659 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.452762027 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.208451766 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.18953586 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.198501682 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.192952964 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.212114973 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.191036804 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.192385895 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.198546861 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.458394957 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.209862134 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.569135657 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.190226956 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.201496094 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.206278047 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.411806091 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.18971043 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.22559741 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.173299443 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.176760379 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.196150758 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.209468387 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.20412217 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.200138808 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.192212121 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.190612242 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.381645131 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.209326078 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.231116626 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.191379807 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.260635204 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.19204227 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.320574401 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.227833709 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.363967102 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.203623421 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.181811891 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.192086688 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.375854116 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.616246447 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.193921042 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.195969402 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.19910653 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.250584874 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.179251248 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.932659494 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.196192969 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.193679702 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.208455783 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.579026652 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.205014811 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.211779383 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.199929069 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.419428461 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.215260045 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.208923728 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.214871307 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.201420699 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.193999928 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.194450334 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.212164714 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.211082641 seconds)
  done (took 142.760614736 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.194091161 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.195036106 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.197844352 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.201581396 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.197884707 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.199915364 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.198987687 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.199276994 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.196508245 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.200580505 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.201077604 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.196501774 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.201394838 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.174546681 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.199751118 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.21189654 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.201486999 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.216618199 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.219211027 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.19996539 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.205845775 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.198392288 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.215218839 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.196240145 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.201333943 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.26583335 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.196414279 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.204952288 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.194736112 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.197787014 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.19624852 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.202806068 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.828595898 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.048608792 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.217302715 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.228611149 seconds)
  done (took 79.909547645 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.196790708 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.19754001 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.197585317 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.229557874 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.199038696 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.791009086 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.793715912 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.927737731 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.49104625 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.637242726 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.514818888 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.1981866 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.293766289 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.212584551 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.198374195 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.214529795 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.226532474 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.198239581 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.19926612 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.776548194 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.212735224 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.393520625 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.376993943 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.212055257 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.230990108 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.592983372 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.194934528 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.231538076 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.535937787 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.247134789 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.19618187 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.596846968 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.309516703 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.198959991 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.31328178 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.200128347 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.232048386 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.199479146 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.484528403 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.195200393 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.202808336 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.206380532 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.906636449 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.202114479 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.794692619 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.200893778 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.176293893 seconds)
    (48/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.199864694 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.20168976 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.200160086 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.346428847 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.912441781 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.201307828 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.200941812 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.20355485 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.200949696 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.198028595 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.235200201 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.56697611 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.304830466 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.204336228 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.208765529 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.233438278 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.202709732 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.418562916 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.198922484 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.169151115 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.262581474 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.30652501 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.779849856 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.196885486 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.301636954 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.320750292 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.197916295 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.200933428 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.20232614 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.200184251 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.311864934 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.197622903 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.203843659 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.610226098 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.378122865 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.217667921 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.200913568 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.6273571 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.302300586 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.202482001 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.639827092 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.201787932 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.203809699 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.964220145 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.295912398 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.200322717 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.201030277 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.200427478 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.614515898 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.798094513 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.480015878 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.20274242 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.008073473 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.204684336 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.630351794 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.772321176 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.932369254 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.20609722 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.320551655 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.376059031 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.218615995 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.201246386 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.631470912 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.205956196 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.268391236 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.200633034 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.604809464 seconds)
  done (took 367.26766138 seconds)
done (took 591.042354166 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.960283077 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.864292108 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.999420795 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.889436098 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.854963048 seconds)
  done (took 10.680992277 seconds)
done (took 11.793757265 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.402339395 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.404126075 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.266834212 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.406676588 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.237946403 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.429209828 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.385801161 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.22339943 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.312317796 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.288792265 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.318082188 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.263473332 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.244007651 seconds)
  done (took 18.296839046 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.487799436 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.207972925 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.268317629 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.45735834 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.244923876 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.487649981 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.520009636 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.207013917 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.385046629 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.217637042 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.218765451 seconds)
  done (took 17.819433485 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.492707907 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.207375647 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.273622922 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.460463741 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.245783421 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.486101753 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.52212401 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.206512797 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.382571636 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.221366633 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.220690537 seconds)
  done (took 17.83363506 seconds)
done (took 55.065972048 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.251779354 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.377410707 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.24096339 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.219869887 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.214789312 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.217649156 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.221370915 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.224327696 seconds)
  done (took 11.087831187 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.213429868 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.215636585 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.213879756 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.213361487 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.214250732 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.21322403 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.211163983 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.2112733 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.21436884 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.210657257 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.214328708 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.2156239 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.216180719 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.211713809 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.212304526 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.211812118 seconds)
  done (took 20.532203373 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.214393282 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.211106311 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.212456772 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.21289545 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.213859736 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.213607902 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.214706526 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.212996214 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.213966621 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.213357732 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.213176997 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.212842092 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.21367716 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.214985778 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.213881203 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.213078889 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.214425084 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.212106735 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.21822761 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.215403399 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.214556883 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.214687265 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.215920561 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.213268681 seconds)
  done (took 30.253493385 seconds)
done (took 62.991018931 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.22277729 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.21872531 seconds)
  done (took 5.559234736 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.274734518 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.276246212 seconds)
  done (took 3.671452519 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.217359124 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.21775197 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.218508902 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.219063798 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.218816288 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.217170288 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.218507735 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.219885618 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.21776061 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.218345196 seconds)
  done (took 13.301043251 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.217460477 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.216361079 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.216496385 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.218407093 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.217486651 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.21637852 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.219899306 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.217958006 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.22008486 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.216593484 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.217508165 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.215326995 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.220144894 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.218889409 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.219572591 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.218404961 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.216976456 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.217232416 seconds)
  done (took 23.040132534 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.234120165 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.239554406 seconds)
  done (took 3.595972737 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.346630249 seconds)
    (2/7) benchmarking "second"...
    done (took 1.25989469 seconds)
    (3/7) benchmarking "month"...
    done (took 1.32787475 seconds)
    (4/7) benchmarking "year"...
    done (took 1.315105263 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.261889424 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.239688406 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.258946839 seconds)
  done (took 10.134179359 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.221406648 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.4152352 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.529046788 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.820065714 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.223274814 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.223162196 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.102376267 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.223514519 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.226534363 seconds)
  done (took 14.108231485 seconds)
done (took 74.528645391 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.215565049 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.239456085 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.216692782 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.241825747 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.555990024 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.241927636 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.213475542 seconds)
done (took 16.046644355 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.195960638 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.21369099 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.21138956 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.212689057 seconds)
  done (took 9.955481666 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.224442075 seconds)
    (2/2) benchmarking "read"...
    done (took 1.564517966 seconds)
  done (took 4.91306433 seconds)
done (took 15.99226598 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.220766784 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.220024021 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.221562533 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.219899416 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.2194729 seconds)
    (6/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.220785413 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.219812579 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.217839376 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.217389576 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.220724122 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.219842785 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.22182603 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.220964817 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.22245879 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.219027864 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.218286306 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217914827 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220679749 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.220568603 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219263614 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.219421 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.22245218 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.221265661 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.219799075 seconds)
  done (took 30.404798246 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.225040378 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.221141233 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.222832052 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.223028719 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.220686237 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.223374915 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.223064831 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.221703674 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.223609821 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.227437061 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.222153945 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.222165537 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.223471704 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.221678112 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223411625 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.219980402 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.225158169 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221181935 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224333113 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.220686583 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.226504067 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.220858522 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.223152307 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.22353643 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.223364694 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.223180296 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.225935164 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.222192761 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.224646026 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.221294343 seconds)
  done (took 37.816972247 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.227149879 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.234059565 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.226078721 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.226161633 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.227352991 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.226753322 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.227316087 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.22659625 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.227846609 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.22592911 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.226397019 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.22672035 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.227434305 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.224442987 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.226816178 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.226192516 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.226809155 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.225232416 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.225445456 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.224970896 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.228509942 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.227491713 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.226620951 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.22591569 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.226517707 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.227315318 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.227849262 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.227389696 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.228367165 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.226309432 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.228092387 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.226724124 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.229167737 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.228062786 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.227467707 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.226876055 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.23181677 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.235940168 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.228811336 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.22632581 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.228485727 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.228101823 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.230286007 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.228582118 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.22875152 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.227406845 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.227209811 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.229100583 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.229053989 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.227943979 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.229008399 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.23011961 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.229202563 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.228822122 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.228175684 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.227514672 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.228630934 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.23039333 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.228185934 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.229531229 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.229932745 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.230128075 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.230244789 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.23146715 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.230774418 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.230825733 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.230362059 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.230267145 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.230034375 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.2317439 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.228690439 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.231122419 seconds)
  done (took 89.564843058 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.23127979 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.227935307 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.229740541 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.229327573 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.229866204 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.230560145 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.227302503 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231041064 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225254128 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.23128256 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23078498 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.226850319 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227976769 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.229479907 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.231134992 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.227069966 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.230544243 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.227060236 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.231970565 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.232241872 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.232059778 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.229728269 seconds)
  done (took 28.181295594 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.230672666 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.231510364 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.228709122 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.232789088 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.2297006 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.2338519 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.230797379 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.232568103 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.233008531 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.22975323 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.230416327 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232701183 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.229077132 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.22984998 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.230088826 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.231228617 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.232566781 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.232825418 seconds)
  done (took 23.294456585 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.230740053 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.231783491 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.232849053 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.231486756 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.231078885 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.233563776 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.230262082 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.231996467 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.232593076 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.231637116 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.23305936 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234287141 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.232642963 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.230898937 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233656132 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.231995516 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.23383506 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.230787886 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.234285079 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.232648943 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.231186883 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.234341252 seconds)
  done (took 28.24473139 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.234969475 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.235033796 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.231213025 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.232110123 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.233083773 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.234728197 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.237404291 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.229329352 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.235574663 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.235027827 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.232901366 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.235173346 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.234086214 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.230309354 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.230381245 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.231667896 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.234438629 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.231621835 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.234370644 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.233036005 seconds)
  done (took 25.800355087 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.243036736 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.244406053 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.244874093 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.2433879 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.245267361 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.246142957 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.24516549 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.24403975 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.246034658 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.244784696 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.241833291 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.244714325 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.244410847 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.244395027 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.2471524 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.246337405 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.246513184 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.249154059 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.247471729 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.248298095 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.248508329 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.248280215 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.248289076 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.246709323 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.248389419 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.250048921 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.250154235 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.246224033 seconds)
  done (took 36.029512313 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.239553497 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.237878702 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.237424767 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.237175485 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.237343004 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.23736572 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.237955251 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.234152011 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.237192551 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.234461442 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.238031594 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.238233415 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.235369587 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.237772139 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.238682772 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.238276109 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.237367116 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.235712956 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.233034526 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.235903949 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.23918582 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.237812388 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.236596949 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.234620203 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.234456318 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.237751631 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.235508871 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.235714444 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.238493158 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.23375291 seconds)
  done (took 38.241996836 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.282264852 seconds)
    (2/2) benchmarking "in"...
    done (took 1.283030705 seconds)
  done (took 3.702096712 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.234855914 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.239373359 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.238401876 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.236445837 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.236067794 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.241711139 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.239248861 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.236391573 seconds)
  done (took 11.041692397 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.242957982 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.240863365 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.242699803 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.242064414 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.747127777 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.24325623 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.248749073 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.263553241 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.241747641 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.242480235 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.245182743 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.249566819 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.244910595 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.240106374 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.240055297 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.23979733 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.241155746 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.24044231 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.240879639 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.243159064 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.240692668 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.242494079 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.241809 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.237144214 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.241350206 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.255234537 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.243542081 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.242904211 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.240588759 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.244366412 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.242591558 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.236303371 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.240886722 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.240689512 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.238425197 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.242336455 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.24990517 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.263520535 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.247415644 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.244407254 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.241726985 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.240385104 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.240853673 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.243057974 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.244365017 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.242224784 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.243564553 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.240855867 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.241794761 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.246914015 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.251352316 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.242688033 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.239630714 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.245241949 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.244965711 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.251163687 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.2650632 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.24774 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.255620267 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.254837028 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.254958651 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.268912531 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.244244654 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.245094279 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.254293727 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.268963632 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.253275059 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.258840096 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.241235562 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.243023279 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.250707631 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.256242935 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.269648045 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.245444736 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.245975178 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.243957793 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.244633566 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.246176557 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.252949458 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.268713002 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.245029212 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.245375504 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.255586081 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.270345403 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.243525307 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.245032762 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.246029809 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.243236405 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.247496972 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.256420305 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.267709939 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.248559413 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.244794073 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.245160641 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.246767155 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.245470264 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.244557637 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.245302219 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.242871271 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.247577918 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.249673068 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.252955171 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.259288486 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.248090938 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.250087341 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.256874052 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.249591173 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.248212186 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.254815223 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.248223491 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.247599483 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.248325579 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.254795508 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.244123908 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.249988796 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.255861294 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.248021659 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.250280845 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.24647137 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.24714003 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.259268596 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.275482512 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.247644073 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.247786078 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.252106622 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.262124041 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.248689104 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.250586073 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.24688604 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.24585134 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.246024903 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.248556087 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.249054651 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.249891955 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.250242292 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.248914069 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.245435416 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.249354726 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.248332249 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.251896388 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.248990519 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.248381708 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.250242533 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.252724122 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.251965918 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.251384962 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.255132452 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.248260854 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.25109968 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.249767505 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.247408252 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.249923744 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.251049623 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.252103206 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.250661094 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.249642112 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.249717813 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.252087037 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.250548238 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.251716748 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.251238143 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.251019639 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.2555001 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.250200186 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.255408336 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.250051575 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.250031241 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.250869221 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.25041889 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.248859623 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.251067205 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.250734327 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.253705429 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.261129047 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.251944256 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.251320268 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.254274751 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.249592187 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.252901861 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.249221748 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.25283814 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.263070976 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.251576646 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.257573918 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.251059626 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.250435889 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.253334413 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.252331336 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.252970899 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.252395289 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.25434129 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.263184471 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.265228448 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.276700168 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.254306376 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.257195659 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.253158207 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.257503647 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.256221622 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.253558839 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.25319134 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.255051729 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.256867248 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.256124513 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.25613118 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.256132571 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.255744648 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.256675807 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.258728097 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.254857773 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.256265827 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.255136683 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.255360948 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.251576695 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.254104667 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.256192038 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.255085238 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.253113654 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.253589527 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.254583887 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.256607813 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.256036428 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.260571896 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.255273683 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.257610053 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.258533381 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.25643351 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.256649618 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.257875662 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.258688583 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.255999613 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.263907131 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.277110501 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.257755969 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.262601596 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.27516768 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.254760277 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.259754124 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.257912465 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.254926376 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.261170285 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.267780779 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.258897468 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.25899663 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.258558186 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.25764428 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.259526992 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.263571741 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.256421912 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.256940035 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.258460541 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.260016345 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.255859098 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.258993569 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.258335657 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.258083994 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.260031438 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.259837044 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.259184751 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.258110429 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.259208928 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.257818029 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.25920713 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.260799514 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.26785861 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.263562332 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.258907448 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.261214563 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.258849788 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.263590557 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.259718307 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.259004139 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.258928245 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.273483809 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.283025022 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.266748732 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.260434456 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.26024699 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.265631543 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.260563092 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.265561288 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.261739559 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.261623894 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.259314099 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.259404791 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.258247024 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.261882619 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.259925303 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.259893959 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.260887916 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.265528426 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.261707644 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.261044703 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.261420952 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.262348708 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.261420917 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.26107434 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.262420447 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.262812074 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.263266723 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.261066757 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.261598533 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.269290609 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.281042626 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.262947465 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.262035974 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.263638039 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.262131714 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.26234661 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.261601158 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.266159306 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.272789968 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.267419144 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.273429469 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.265174682 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.274877725 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.260104044 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.266811331 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.272073754 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.260341166 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.262357009 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.264200356 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.261248938 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.271381328 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.282124687 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.265162559 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.266436419 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.264218565 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.263247678 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.26313853 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.26508377 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.264028705 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.266440569 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.2738979 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.286049041 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.267566945 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.264114502 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.258617875 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.263970442 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.262953341 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.262173777 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.266181976 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.263945213 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.263916781 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.262824153 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.260991939 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.26320418 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.265596934 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.264875505 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.261481568 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.264592286 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.26964278 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.285774542 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.268990953 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.263184444 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.270331408 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.265081227 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.272957491 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.283914784 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.264218382 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.263918546 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.266049965 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.264259664 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.262716621 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.264219066 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.265105665 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.266852631 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.270629552 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.264306881 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.268425401 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.265447887 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.263601586 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.263735693 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.274704608 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.290483733 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.26837885 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.271151284 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.262380981 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.266479497 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.270744046 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.266192646 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.266490075 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.269003222 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.278910717 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.277165007 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.267188984 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.267894486 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.267353493 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.265611979 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.263552234 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.266931113 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.267305789 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.265590709 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.26902601 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.266602008 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.271114551 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.265111019 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.265895555 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.268576352 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.267381919 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.278993889 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.268047727 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.268896534 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.266318953 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.270295486 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.268546813 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.266769196 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.268365409 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.264585606 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.268784925 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.268649551 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.277155178 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.276632227 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.271358922 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.267165249 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.26885705 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.269315524 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.269584934 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.267932583 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.267334888 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.270690222 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.270116042 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.269107285 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.26889423 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.268212098 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.27173457 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.270873055 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.270655962 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.273524469 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.275351122 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.268890918 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.265096028 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.268215423 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.270438743 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.26902555 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.269697533 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.275033663 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.270849794 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.281853681 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.281002916 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.275434656 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.270265717 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.273499219 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.279051821 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.269551591 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.270889995 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.268461075 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.270373839 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.270568287 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.274395986 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.271202551 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.275207072 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.269268275 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.268342301 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.280077194 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.293546741 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.270087798 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.27149133 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.275426385 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.269426792 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.269569198 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.271531465 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.269095861 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.27992146 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.294543022 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.274568623 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.273295825 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.270774703 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.273615874 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.276009805 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.270196065 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.2733614 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.270553799 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.271228037 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.272804776 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.273131596 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.268239608 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.271205725 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.272759943 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.274841401 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.278847774 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.269555832 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.276687614 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.272467709 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.270331155 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.271997844 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.272956534 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.267496458 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.269786475 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.271063293 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.273047308 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.273727208 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.275040229 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.270892084 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.273414338 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.273991086 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.273318696 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.274585915 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.284702908 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.2829354 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.269492519 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.271049154 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.272862159 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.272492077 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.271586675 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.271786728 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.272099391 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.273815021 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.273822683 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.272989102 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.270990041 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.2752636 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.292730599 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.295734665 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.272924339 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.273826228 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.277707647 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.272503707 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.270715745 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.27243322 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.27406708 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.276782783 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.283956271 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.273168321 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.277565626 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.292747937 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.274356488 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.279110115 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.278563711 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.285136018 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.277505177 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.273858743 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.274811523 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.280649379 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.293219744 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.275231148 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.285865604 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.30728302 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.294109121 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.275325146 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.27689767 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.274328879 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.274741957 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.275149214 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.275163137 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.276243852 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.274810152 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.275873742 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.275013576 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.280542308 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.275644698 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.279090634 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.275807547 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.27366252 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.276314289 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.272483848 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.275658659 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.274936968 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.275191164 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.277200425 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.276105587 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.277936683 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.290389627 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.300236469 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.275175637 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.276958753 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.273582963 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.27731276 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.278069841 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.290130804 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.285284799 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.275688603 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.276163225 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.276081173 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.275663775 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.27594396 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.27629114 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.27748631 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.276694414 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.27508062 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.289296622 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.302370577 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.281644584 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.275850666 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.27818942 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.278716884 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.277935773 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.278268075 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.279076557 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.27806028 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.28108922 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.283248054 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.277359693 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.278758349 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.281209117 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.287078668 seconds)
  done (took 754.269737132 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.275397441 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.273673719 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.277385617 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.276479151 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.276223504 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.275906846 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.275353339 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.276433316 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.275098729 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.275301534 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.277161195 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.277326463 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.275029869 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.278879241 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.277731216 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.277827496 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.275844957 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.27606288 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.276033426 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.276199261 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.277746168 seconds)
  done (took 27.97784228 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.279659477 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.277892569 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.277528503 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.281043731 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.278608396 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.282357856 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.278678891 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.280069949 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.28317928 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.277041285 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.280686046 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.283441204 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.277903665 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.279387813 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.278940503 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.281426524 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.28581624 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.282220134 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.285938536 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.283339454 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.285082613 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.282634148 seconds)
  done (took 29.358622473 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.28420918 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.285248377 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.284598012 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.283040593 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.285317946 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.282293369 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.286072254 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.285247787 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.285552469 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.285096127 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.282893642 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.285559344 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.292111272 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.292487563 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.285891913 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.284757888 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.284538336 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.282609995 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.28362083 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.280639597 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.289601487 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.279858687 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.28101353 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.281993947 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.283671969 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.285376572 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.282667383 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.285088472 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.282266589 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.289529486 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.284355639 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.284761052 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.28738815 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.281967682 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.286097056 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.290285222 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.283195312 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.281560857 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.284317628 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.295104689 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.306561743 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.28492633 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.288976486 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.284045548 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.284230617 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.286109164 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.297760986 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.283122438 seconds)
  done (took 62.897832229 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.283430791 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.286621113 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.281832566 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.285117323 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.285175894 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.284254932 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.285165637 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.283953718 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.281891358 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.283507184 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.285558761 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.284842476 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.281624944 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.285382237 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.286793529 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.283674907 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.28208065 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.285076032 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.282459728 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.28676687 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.286635276 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.289757808 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.288218255 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.287478724 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.289577049 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.285960052 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.287001798 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.289764367 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.286795475 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.288007101 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.288650238 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.287603503 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.288321447 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.286372015 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.285153221 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.289442849 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.288353316 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.284446037 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.286138881 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.28524185 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.287081762 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.287592971 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.289770701 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.286105285 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.284559439 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.286400934 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.285590749 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.287193387 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.283435207 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.288754624 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.289441793 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.282548333 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.286740527 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.283617301 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.287859482 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.289555436 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.284960502 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.2843509 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.290701935 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.286623293 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.285707928 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.288882725 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.287571141 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.288137682 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.288068854 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.28759876 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.286907266 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.289637546 seconds)
  done (took 88.65170284 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.288026553 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.289241235 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.287556115 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.288574541 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.289691443 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.287352477 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.289893536 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.290763335 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.289703609 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.291751103 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.291625861 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.289822468 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.292018409 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.289139995 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.290606912 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.290196233 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.289221094 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.291467199 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.290312773 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.290347694 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.290193587 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.290487867 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.291674869 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.290836587 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.291939003 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.290555652 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.291543188 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.291274165 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.290917153 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.290908183 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.292356122 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.291262731 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.293361873 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.293570005 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.29339064 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.291764941 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.291331133 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.289574625 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.291723518 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.292984161 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.29138522 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.291791005 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.293910102 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.291392717 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.291951138 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.291440135 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.292023904 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.29298352 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.292485893 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.29175546 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.293534989 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.293860522 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.292206138 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.290376001 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.292668507 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.292718291 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.291718028 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.294063251 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.292506822 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.29224246 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.293037399 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.292732789 seconds)
  done (took 81.246357377 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.293584096 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.294170733 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.292383592 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.29034558 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.292788291 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.293501675 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.292605293 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.293397547 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.294495718 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.294140624 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294065417 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.29173869 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29231729 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.294015495 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.293566488 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293886399 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.290849573 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.292930391 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.295318096 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.291616765 seconds)
  done (took 27.050084362 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.291046722 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.294949636 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.29188284 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.293229055 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.296180523 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.294355304 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.295970459 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.293909247 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292639305 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.295249274 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.293316081 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.293539189 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.29213565 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.29175823 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.296964043 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.294248215 seconds)
  done (took 21.892091572 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.293532595 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.296969367 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.295826075 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.295593883 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.294328085 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.294589334 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.296038983 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.295844784 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.293337865 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.29620967 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.298514869 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.295783117 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.295343448 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.297842553 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.295528475 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.29691954 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.295124845 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.294556121 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.296727981 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.296959743 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.293470262 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.294554044 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.296182662 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.297628627 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.295547054 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.294118918 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.295485048 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.294976972 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.296963317 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.296837355 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.295328459 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.295591857 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.293826441 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.295969504 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.297347765 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.294477538 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.295534511 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.298945676 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.298841732 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.29856348 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.299244173 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.296915449 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.2971718 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.298148544 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.29631592 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.299836365 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.295144491 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.296492133 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.296213771 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.296410476 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.299343124 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.300958605 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.299397946 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.299325008 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.300603926 seconds)
  done (took 72.500330966 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.297860651 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.298438538 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.29546676 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.29928803 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.300313309 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.297841723 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.298073419 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.299633978 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.29729282 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.300014852 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.299015489 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.300512985 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.299900754 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.302422583 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.298793173 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.301579104 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.296227063 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.296989105 seconds)
  done (took 24.571518025 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.297937852 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.298100939 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.30022322 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.299663557 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.298978702 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.302155875 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.296039074 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.302722059 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.299892434 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.298251546 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.298906125 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.302393934 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.300412569 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.300422458 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.298773584 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.296862658 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.301663514 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.302562414 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.299407817 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.297544739 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.304709478 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.303079507 seconds)
  done (took 29.797440584 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.301713703 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.301148294 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.302396321 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.318459455 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.321393664 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.301923359 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.303276542 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.301849354 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.322241952 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.355191673 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.35057677 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.323866992 seconds)
  done (took 16.999389086 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300652762 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302134319 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.300253067 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302441677 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303794973 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301972727 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300609341 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302241016 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305929285 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301604551 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301400443 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303437585 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303446284 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30206127 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304030419 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304584641 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302398353 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301952449 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301185435 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30476819 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301755928 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305349276 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301325385 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301168419 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301166336 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300184921 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305074028 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30243054 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301367773 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303633438 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306479772 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303999493 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306101822 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302680329 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303296209 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306509055 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303140089 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305336322 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306488227 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301891713 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.30448855 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30544901 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305219723 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30420163 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30617181 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302505031 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301930139 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303608319 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303084706 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305282954 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308280625 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302193764 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305581328 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306921332 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305231974 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306707331 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305813048 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303416425 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306132547 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303350379 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304204944 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307476239 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303722536 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303760028 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305312259 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303408549 seconds)
  done (took 87.242423475 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303950889 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.303834325 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30565659 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303281846 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303001436 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305359482 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303076842 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306405284 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304615119 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305332767 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307227688 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305463447 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304663376 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306523949 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307713837 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305898049 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305196393 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306266365 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306220461 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309764524 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307907275 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306133553 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308277882 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304481882 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305302057 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311094514 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307474414 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306561778 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307339871 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306654692 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306814435 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30656276 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308710858 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.308433609 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306482413 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307863698 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310192718 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306925905 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308314789 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311202807 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308313704 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308882592 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307218463 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308689667 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309205208 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309534993 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309127435 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308677439 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309353844 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309544741 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308432731 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309053272 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309879501 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309774185 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309401134 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309954181 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309144268 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310171241 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309118368 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312189283 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308476469 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310294173 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313754672 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308529557 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311606209 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310596205 seconds)
  done (took 87.512490348 seconds)
done (took 1765.414774593 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.476959558 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.431298664 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.31243651 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.327895232 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.308137939 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.336707137 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.317912583 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.306990483 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.310989176 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.311260424 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.311998416 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.499632392 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.307416051 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.307488851 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.311824442 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.407861657 seconds)
  done (took 26.792023854 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.341672015 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.317321193 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.444294508 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.333100943 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.342426046 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.515552111 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.370916239 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.316008234 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.5086584 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.360982283 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.311541532 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.337093259 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.316247728 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.315984846 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.332032003 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.514140335 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.586906474 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.308497705 seconds)
  done (took 29.077741291 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.818307278 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.3187136 seconds)
  done (took 5.344061345 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.339788797 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.315900041 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.3179854 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.316603322 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.317800495 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.305676443 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.313895126 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.310117024 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.334247752 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.455082651 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.31614812 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.325932952 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.336469898 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.317195541 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.313797227 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.358862031 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.475120485 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.31394281 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.312559473 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.32255722 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.318111655 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.410932421 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.360594764 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.314078416 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.45628563 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.318228327 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.320184967 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.324652357 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.47529903 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.314403211 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.317338934 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.317423825 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.318376792 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.277645465 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.783683536 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.310561795 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.340268155 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.328248395 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.314344503 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.480247083 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.316829678 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.324482933 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.309156997 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.777731917 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.456197004 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.445942642 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.322248799 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.315428037 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.318977759 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.386232215 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.318016939 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.319674484 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.364803952 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.141664724 seconds)
  done (took 84.455562226 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.32118998 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.308701117 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.495232724 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.339581226 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.309073947 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.309456322 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.309112589 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.632092353 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.347494016 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.315599359 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.62055044 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.894208066 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.331187999 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.40592069 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.167403065 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.371982371 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.3153707 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.324551693 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.308769706 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.31371879 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.88008292 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.309749449 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.330761696 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.53648927 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.351259939 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.862270426 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.309123438 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.309040881 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.335236981 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.310960114 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.856173682 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.338657232 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.393934835 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.318733424 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.612852707 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.726735062 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.682154158 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.316263149 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.325043684 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.311449261 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.316706523 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.846558512 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.703034311 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.310385088 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.310054245 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.855612338 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.312461026 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.319251564 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.314679034 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.568257131 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.313402762 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.314793662 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.328382304 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.307916659 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.312644019 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.418728777 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.385569032 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.866861904 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.309841701 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.312528757 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.327382124 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.314909279 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.314880235 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.318318059 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.315699543 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.705671256 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.467893432 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.315010819 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.703537507 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.848469636 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.32799573 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.922118835 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.328907022 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.327788787 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.457688009 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.316629761 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.314020067 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.872726745 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.343594208 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.310402339 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.692117894 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.313414442 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.6250176 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.348910575 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.311040231 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.903258507 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.323573454 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.324024075 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.314011946 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.313734764 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.315685403 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.329516271 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.613380191 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.361776397 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.314794413 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.313509032 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.313694119 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.318516786 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.317104738 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.32277743 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.920798236 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.332013709 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.313236458 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.317244344 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.328612542 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.314307555 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.316486712 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.318764712 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.585779032 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.318302242 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.343150005 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.320351939 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.319626756 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.317152186 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.547903909 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.324377086 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.658833808 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.317645117 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.315882671 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.3349259 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.318527301 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.321435274 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.318410156 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.324421715 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.247059267 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.626821905 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.339511161 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.317438745 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.316203599 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.3182325 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.315640108 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.334059385 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.352312734 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.317876572 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.102785726 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.354972935 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.347340384 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.318535736 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.331956004 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.320137141 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.340440415 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.318745882 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.622633021 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.615176095 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.466462278 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.319455078 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.318980728 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.100195566 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.376011589 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.502694212 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.341009243 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.319155328 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.573264396 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.560925505 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.319575839 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.320117736 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.321894819 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.584635611 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.321614428 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.641940398 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.885433669 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.335436747 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.320235392 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.105810713 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.068280743 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.325896938 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.326486307 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.623784089 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.338473789 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.322073989 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.322488921 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.322007659 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.31777483 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.325167774 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.322640887 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.320000175 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.322160685 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.436343697 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.519090472 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.340640685 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.327581874 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.866382694 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.330860001 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.330591263 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.326342962 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.319666535 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.319516839 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.382431 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.32152158 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.368226784 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.321425164 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.336205684 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.924532209 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.319790429 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.320723449 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.521331583 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.038285873 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.340751037 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.32257649 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.339122779 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.20412612 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.893729602 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.376193521 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.667443836 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.322769134 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.366153603 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.325039552 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.368612661 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.891103374 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.330025552 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.34561645 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.00546113 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.339731328 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.175825887 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.32203339 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.325058765 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.957659149 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.339989352 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.325886418 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.320614548 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.341264161 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.621597486 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.325329949 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.346288861 seconds)
  done (took 496.657995031 seconds)
done (took 643.531062192 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.325806324 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.329394096 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.309094714 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.327260941 seconds)
  done (took 10.51453723 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.333232965 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.332307899 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.345417031 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.331239968 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.33673376 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.331546814 seconds)
  done (took 9.233535821 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.324524219 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.330287307 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.327794006 seconds)
  done (took 8.206818028 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.557478654 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.353626152 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.68612297 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.343527889 seconds)
  done (took 9.167243071 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.341862561 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.346517805 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.346238695 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.338751742 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.339784416 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.338764874 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.337386347 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.339902051 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.339753642 seconds)
  done (took 13.291834668 seconds)
done (took 51.635543387 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.414517708 seconds)
    (2/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.316714483 seconds)
    (3/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.322875311 seconds)
    (4/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.348777324 seconds)
    (5/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.347115899 seconds)
    (6/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.419170512 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.369221191 seconds)
    (8/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.341747963 seconds)
    (9/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.336491401 seconds)
    (10/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.413100899 seconds)
    (11/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.31381485 seconds)
    (12/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.334957188 seconds)
    (13/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.441335719 seconds)
    (14/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.532848561 seconds)
    (15/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.381455968 seconds)
    (16/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.315925556 seconds)
    (17/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.505065679 seconds)
    (18/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.412367633 seconds)
    (19/286) benchmarking ("map", identity, BigInt, false)...
    done (took 1.416562842 seconds)
    (20/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.386907994 seconds)
    (21/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.38286681 seconds)
    (22/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.093868336 seconds)
    (23/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.553422383 seconds)
    (24/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.33304653 seconds)
    (25/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.338611901 seconds)
    (26/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.356007816 seconds)
    (27/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.470845841 seconds)
    (28/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.367549926 seconds)
    (29/286) benchmarking ("sort", Int64, true)...
    done (took 1.779862897 seconds)
    (30/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.334434904 seconds)
    (31/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.342986485 seconds)
    (32/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.339709737 seconds)
    (33/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.366473989 seconds)
    (34/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.385656147 seconds)
    (35/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.443047931 seconds)
    (36/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.333998416 seconds)
    (37/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.33780226 seconds)
    (38/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.464774849 seconds)
    (39/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.061478942 seconds)
    (40/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.439627074 seconds)
    (41/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.330279906 seconds)
    (42/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.337862282 seconds)
    (43/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.396264949 seconds)
    (44/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.362284357 seconds)
    (45/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.347715256 seconds)
    (46/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.332392879 seconds)
    (47/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.379356401 seconds)
    (48/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.404918299 seconds)
    (49/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.33919451 seconds)
    (50/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.33602498 seconds)
    (51/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.386685812 seconds)
    (52/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.548607924 seconds)
    (53/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.405055401 seconds)
    (54/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.342869255 seconds)
    (55/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.337581296 seconds)
    (56/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.37228824 seconds)
    (57/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.075832734 seconds)
    (58/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.222406349 seconds)
    (59/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.332307076 seconds)
    (60/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.423736047 seconds)
    (61/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.451594216 seconds)
    (62/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.420346335 seconds)
    (63/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.332569934 seconds)
    (64/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.350373652 seconds)
    (65/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.358456093 seconds)
    (66/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.510419808 seconds)
    (67/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.997133143 seconds)
    (68/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.451592072 seconds)
    (69/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.331965074 seconds)
    (70/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.342262058 seconds)
    (71/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.557511446 seconds)
    (72/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.364860596 seconds)
    (73/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.381684156 seconds)
    (74/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.462553385 seconds)
    (75/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.072285427 seconds)
    (76/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.39702469 seconds)
    (77/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.343694055 seconds)
    (78/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.338646421 seconds)
    (79/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.396621574 seconds)
    (80/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.339032463 seconds)
    (81/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.381774026 seconds)
    (82/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.128437203 seconds)
    (83/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.356516737 seconds)
    (84/286) benchmarking ("sort", Int64, false)...
    done (took 1.524090201 seconds)
    (85/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.387839769 seconds)
    (86/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.435180235 seconds)
    (87/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.332357505 seconds)
    (88/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.353672766 seconds)
    (89/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.366475988 seconds)
    (90/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.492870617 seconds)
    (91/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.426605842 seconds)
    (92/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.325558183 seconds)
    (93/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.317446945 seconds)
    (94/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.537665856 seconds)
    (95/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.349297158 seconds)
    (96/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.380461276 seconds)
    (97/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.018472312 seconds)
    (98/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.405578634 seconds)
    (99/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.096203252 seconds)
    (100/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.506606507 seconds)
    (101/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.345620625 seconds)
    (102/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.35012621 seconds)
    (103/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.42082734 seconds)
    (104/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.337075797 seconds)
    (105/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.319377213 seconds)
    (106/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.359110751 seconds)
    (107/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.350386534 seconds)
    (108/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.338739505 seconds)
    (109/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.41636014 seconds)
    (110/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.364584294 seconds)
    (111/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.544169359 seconds)
    (112/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.392396197 seconds)
    (113/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.346371481 seconds)
    (114/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.473553031 seconds)
    (115/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.348800215 seconds)
    (116/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.392478164 seconds)
    (117/286) benchmarking ("sort", Int8, true)...
    done (took 1.706068864 seconds)
    (118/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.097835862 seconds)
    (119/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.365461516 seconds)
    (120/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.351228842 seconds)
    (121/286) benchmarking ("sort", Float32, false)...
    done (took 1.495616551 seconds)
    (122/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.373745597 seconds)
    (123/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.341048461 seconds)
    (124/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.355168347 seconds)
    (125/286) benchmarking ("sort", Bool, false)...
    done (took 1.367331546 seconds)
    (126/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.389984317 seconds)
    (127/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.346669808 seconds)
    (128/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.367919117 seconds)
    (129/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.398011722 seconds)
    (130/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.486108005 seconds)
    (131/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.450644252 seconds)
    (132/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.365340779 seconds)
    (133/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.391602277 seconds)
    (134/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.336765398 seconds)
    (135/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.680217018 seconds)
    (136/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.34866054 seconds)
    (137/286) benchmarking ("map", identity, BigInt, true)...
    done (took 1.503182402 seconds)
    (138/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.34063784 seconds)
    (139/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.339020693 seconds)
    (140/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.341605848 seconds)
    (141/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.471864661 seconds)
    (142/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.36748319 seconds)
    (143/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.435540049 seconds)
    (144/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.344420159 seconds)
    (145/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.421503752 seconds)
    (146/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.398168943 seconds)
    (147/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.462475512 seconds)
    (148/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.247716931 seconds)
    (149/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.361991625 seconds)
    (150/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.321926005 seconds)
    (151/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.447622431 seconds)
    (152/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.99748087 seconds)
    (153/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.362808957 seconds)
    (154/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.354594525 seconds)
    (155/286) benchmarking ("sort", BigInt, false)...
    done (took 2.336317047 seconds)
    (156/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.347432982 seconds)
    (157/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.422889812 seconds)
    (158/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.532120177 seconds)
    (159/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.367957163 seconds)
    (160/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.347406151 seconds)
    (161/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.357631805 seconds)
    (162/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.466372603 seconds)
    (163/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.420144864 seconds)
    (164/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.355467203 seconds)
    (165/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.540141561 seconds)
    (166/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.345983076 seconds)
    (167/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.372588998 seconds)
    (168/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.014420965 seconds)
    (169/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.565945868 seconds)
    (170/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.574974034 seconds)
    (171/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.352402263 seconds)
    (172/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.373299733 seconds)
    (173/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.995548171 seconds)
    (174/286) benchmarking ("sort", Int8, false)...
    done (took 1.474891643 seconds)
    (175/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.491735339 seconds)
    (176/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.150088907 seconds)
    (177/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.51485759 seconds)
    (178/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.487152774 seconds)
    (179/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.361321345 seconds)
    (180/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.060069658 seconds)
    (181/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.226371077 seconds)
    (182/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.36379205 seconds)
    (183/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.541420514 seconds)
    (184/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.348101432 seconds)
    (185/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.362333372 seconds)
    (186/286) benchmarking ("map", identity, Int64, true)...
    done (took 1.480652762 seconds)
    (187/286) benchmarking ("map", abs, Float64, true)...
    done (took 1.485441557 seconds)
    (188/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.366070816 seconds)
    (189/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.494542998 seconds)
    (190/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.100097984 seconds)
    (191/286) benchmarking ("sort", Bool, true)...
    done (took 1.582093303 seconds)
    (192/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.352472799 seconds)
    (193/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.531971769 seconds)
    (194/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.370115079 seconds)
    (195/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.414168048 seconds)
    (196/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.353490836 seconds)
    (197/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.372789991 seconds)
    (198/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.456171734 seconds)
    (199/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.404010358 seconds)
    (200/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.350455222 seconds)
    (201/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.436723453 seconds)
    (202/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.405209025 seconds)
    (203/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.357636972 seconds)
    (204/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.413341241 seconds)
    (205/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.508792304 seconds)
    (206/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.453670753 seconds)
    (207/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.363696193 seconds)
    (208/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.437302763 seconds)
    (209/286) benchmarking ("sort", Float64, true)...
    done (took 1.964751719 seconds)
    (210/286) benchmarking ("sort", BigInt, true)...
    done (took 2.343682716 seconds)
    (211/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.472358309 seconds)
    (212/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.428516403 seconds)
    (213/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.369666374 seconds)
    (214/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.327263235 seconds)
    (215/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.480771722 seconds)
    (216/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.36023952 seconds)
    (217/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.351934114 seconds)
    (218/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.391651022 seconds)
    (219/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.373914562 seconds)
    (220/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.429772826 seconds)
    (221/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.35307853 seconds)
    (222/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.354781908 seconds)
    (223/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.651940017 seconds)
    (224/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.50426768 seconds)
    (225/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.347679756 seconds)
    (226/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.687038463 seconds)
    (227/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.425029867 seconds)
    (228/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.337998754 seconds)
    (229/286) benchmarking ("map", abs, Int64, true)...
    done (took 1.488049944 seconds)
    (230/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.360269501 seconds)
    (231/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.526469485 seconds)
    (232/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.416847935 seconds)
    (233/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.355828243 seconds)
    (234/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.360536729 seconds)
    (235/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.653184292 seconds)
    (236/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.452993385 seconds)
    (237/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.507804743 seconds)
    (238/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.364069384 seconds)
    (239/286) benchmarking ("sort", Float32, true)...
    done (took 1.907116718 seconds)
    (240/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.195996258 seconds)
    (241/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.323826971 seconds)
    (242/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.401318933 seconds)
    (243/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.35497981 seconds)
    (244/286) benchmarking ("map", identity, Float64, true)...
    done (took 1.486072648 seconds)
    (245/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.422278532 seconds)
    (246/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.564600226 seconds)
    (247/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.472597066 seconds)
    (248/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.374084609 seconds)
    (249/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.379213354 seconds)
    (250/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.119997946 seconds)
    (251/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.385297084 seconds)
    (252/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.024899633 seconds)
    (253/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.421159859 seconds)
    (254/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.353777324 seconds)
    (255/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.362171505 seconds)
    (256/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.355440739 seconds)
    (257/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.387321518 seconds)
    (258/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.254405294 seconds)
    (259/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.377989684 seconds)
    (260/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.007680317 seconds)
    (261/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.362101519 seconds)
    (262/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.404043319 seconds)
    (263/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.364021715 seconds)
    (264/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.513055766 seconds)
    (265/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.374034927 seconds)
    (266/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.347205572 seconds)
    (267/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.498190294 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.364536315 seconds)
    (269/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.502241275 seconds)
    (270/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.199201065 seconds)
    (271/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.35477561 seconds)
    (272/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.365290598 seconds)
    (273/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.458073176 seconds)
    (274/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.527225623 seconds)
    (275/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.355677924 seconds)
    (276/286) benchmarking ("sort", Float64, false)...
    done (took 1.549342198 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.356709843 seconds)
    (278/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.364058462 seconds)
    (279/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.619050448 seconds)
    (280/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.44684696 seconds)
    (281/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.36393398 seconds)
    (282/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.349866769 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.354875161 seconds)
    (284/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.119422761 seconds)
    (285/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.380160829 seconds)
    (286/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.003138021 seconds)
  done (took 472.656246573 seconds)
done (took 473.881669198 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.3905233 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.404746017 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.358664142 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.390084668 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.473567637 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.533082644 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.367989936 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.397285352 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.408650486 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.412114086 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.36392373 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.532454005 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.360817673 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.360160279 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.360104268 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.401900607 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.35223974 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.357048415 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.375190664 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.395157377 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.376124585 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.369290768 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.409406595 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.531466117 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.363936486 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.364476507 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.363639825 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.38185314 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.475421786 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.363025344 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.365403597 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.372914127 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.352969119 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.362730351 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.355639311 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.383979893 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.372948765 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.370958437 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.394859383 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.478185422 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.354147328 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.362038334 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.362575235 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.360633189 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.361923624 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.402599801 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.362953731 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.419629459 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.40466882 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.404486849 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.365336797 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.370426463 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.371287756 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.363873136 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.375142214 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.362853065 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.421563903 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.40781474 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.382404804 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.408550662 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.367746058 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.364524918 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.401633192 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.379992435 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.372853124 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.369481975 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.358027696 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.40209001 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.356941502 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.36475016 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.367907838 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.371866813 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.36636139 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.378205244 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.39822789 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.355041707 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.35386104 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.36361754 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.374462177 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.362570939 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.411365459 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.404994412 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.4152022 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.36526675 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.406492027 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.537694965 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.376051385 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.367398516 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.400340761 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.386103968 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.37400029 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.377768264 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.400562412 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.367236797 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.412113389 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.422509142 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.374429807 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.376982334 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.415424765 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.377327039 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.36287119 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.408932283 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.363301855 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.361190841 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.366283974 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.487296972 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.362236265 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.362815827 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.400255315 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.414499207 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.425278485 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.355914193 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.390402315 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.411426062 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.374495649 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.426212382 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.368367162 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.355399951 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.370334943 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.486853858 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.370413102 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.38548575 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.41321195 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.429184238 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.368236453 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.362824651 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.364661285 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.408328406 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.489315905 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.3798578 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.483232624 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.366564005 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.371360389 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.398320516 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.414474611 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.40230182 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.428534947 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.415122295 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.385017312 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.370640064 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.379282614 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.379063367 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.369118387 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.42580034 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.364934013 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.399914297 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.412259134 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.41114676 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.40220284 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.491061937 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.373211436 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.357939409 seconds)
done (took 228.705447754 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.431923349 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.363384313 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.474173468 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.366018403 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.468637698 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.467758323 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.36354942 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.361950862 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.362139796 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.769100377 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.365405986 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.362812482 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.364555016 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.364915396 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.450308128 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.365627643 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.363100288 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.726122579 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.367568707 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.441056976 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.366926665 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.363323811 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.366888747 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.769035921 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.367835867 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.360048712 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.439764795 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.368419198 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.717636249 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.360659814 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.364945725 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.731150068 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.458106541 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.385118731 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.378932102 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.375976643 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.476220586 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.3857958 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.453231767 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.446806931 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.476868894 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.406574731 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.363256816 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.365491457 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.368389266 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.368180846 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.366278427 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.394528773 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.366838038 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.366468065 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.709137397 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.377421844 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.376046141 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.367635256 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.365605512 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.388156935 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.365599282 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.368477537 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.461759627 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.36974733 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.43568423 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.752980152 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.769541247 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.372842287 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.366443947 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.368564099 seconds)
  done (took 106.848698955 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.438267761 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.446940724 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.49430766 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.372996023 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.423327404 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.499677119 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.372527633 seconds)
  done (took 11.303395776 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.376367096 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.37164355 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.421557298 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.420552577 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.371332166 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.582089762 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.371275534 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.38490566 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.368628868 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.451048553 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.38350663 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.373126043 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.380064489 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.370499803 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.418352755 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.381910296 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.486494359 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.372182856 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.369588429 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.52572587 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.368350063 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.38027379 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.447685693 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.3821885 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.386049732 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.38097318 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.318282122 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.372550137 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.36812934 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.371829079 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.369166281 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.479057442 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.373579279 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.374739332 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.370845603 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.532406869 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.372531774 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.368340251 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.37341726 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.372495896 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.370414936 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.372448907 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.372294427 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.371584221 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.373728275 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.398359122 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.374752677 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.374365525 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.374590354 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.374623931 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.448967416 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.373671573 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.371676081 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.371886353 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.452620637 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.379864409 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.376360874 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.37261658 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.373307441 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.371954728 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.5298245 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.424048179 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.375668701 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.423435515 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.374777043 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.374643276 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.376916783 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.374941866 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.468477019 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.37599756 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.42397215 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.372657057 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.597141726 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.399226883 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.378795938 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.376445593 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.380787207 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.375172705 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.373966348 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.381675073 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.374714264 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.37889896 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.383149359 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.373141922 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.375014485 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.558711646 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.534453974 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.374615439 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.388419011 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.384441908 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.374562502 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.450746362 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.378614878 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.374259709 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.429813745 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.492576549 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.459345145 seconds)
  done (took 142.095820917 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.380916343 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.385656746 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.380414743 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.401101075 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.376903273 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.378511688 seconds)
  done (took 9.565133977 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.380355283 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.380355493 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.376553008 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.378738824 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.377894675 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.390327951 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.390553181 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.380508407 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.383713483 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.37882626 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.3892221 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.381299952 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.382357957 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.377849712 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.389434131 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.379690357 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.38885898 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.376984891 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.379129294 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.383072481 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.377063402 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.380533418 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.379189739 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.382215818 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.394735736 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.381884621 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.385542941 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.378308359 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.379570172 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.386030986 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.40120065 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.391234709 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.380211549 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.387352893 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.398045414 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.383461243 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.388559795 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.383204176 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.379761823 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.390403738 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.382741324 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.381475898 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.381001976 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.383384138 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.383454126 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.385021252 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.38377141 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.389323529 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.39410025 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.380052594 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.382339434 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.382306762 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.393579559 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.385323948 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.384904263 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.403954857 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.387168604 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.391620113 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.383290299 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.384853567 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.384099363 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.39488998 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.383044954 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.398152124 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.38027494 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.383025218 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.383695917 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.387847276 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.382641614 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.382996844 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.384834572 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.380084056 seconds)
  done (took 101.966552534 seconds)
done (took 373.031856671 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.403584646 seconds)
  done (took 3.668461231 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.538530279 seconds)
  done (took 3.804842175 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.731834694 seconds)
  done (took 25.010552621 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.377013645 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.409274953 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.376264984 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.37665635 seconds)
  done (took 10.807036374 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.721757916 seconds)
  done (took 3.991530828 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.376209376 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.376427351 seconds)
  done (took 6.020641612 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.715362799 seconds)
  done (took 3.98392894 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.864176503 seconds)
  done (took 4.14435043 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.376980443 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.390641434 seconds)
  done (took 6.047594374 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.358418597 seconds)
  done (took 3.624872152 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.645799759 seconds)
  done (took 17.913761039 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.389969463 seconds)
  done (took 3.663417661 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.40967374 seconds)
  done (took 3.678635167 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.375245876 seconds)
  done (took 6.64365257 seconds)
done (took 104.270041077 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.376244855 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.379477732 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.381169394 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.379368417 seconds)
  done (took 10.781640147 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.421236185 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.421310327 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.419996144 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.42955518 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.422671363 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.420098601 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.409091401 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.411602385 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.429727052 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.420860311 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.421727129 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.421221745 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.41822954 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.411708383 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.420812837 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.420961471 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.431872479 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.418591871 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.410358397 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.422704237 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.385137632 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.4288836 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.422600275 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.38696103 seconds)
  done (took 35.298925448 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.884339896 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.463364882 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.542399867 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.439660382 seconds)
  done (took 7.600977242 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.454690029 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.455605071 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.464987107 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.502268313 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.528862163 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.462473042 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.413706724 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.409127574 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.395430643 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.455144446 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.51494825 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.451562078 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.549112201 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.387762864 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.651953769 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.385764605 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.389758028 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.463352731 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.502696169 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.519024482 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.385405461 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.464743244 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.466226231 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.451092729 seconds)
  done (took 36.394605055 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.385471681 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.403837996 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.386235558 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.386047235 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.395675115 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.387094912 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.387648934 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.388268626 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.386056055 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.952711218 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.38905745 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.400981132 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.925661228 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.388699665 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.394183701 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.389967236 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.930810075 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.931153303 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.387421486 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.395237173 seconds)
  done (took 31.262636909 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.378848849 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.379205917 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.734261715 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.644384487 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.382179121 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.37768223 seconds)
  done (took 14.17081768 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.469240994 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.631784051 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.390068983 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.815081082 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.876459683 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.38722687 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.392962848 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.67284107 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.053871347 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.029893733 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.454088912 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.473279991 seconds)
  done (took 20.921355217 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.397842175 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.383553681 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.391934014 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.401190876 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.455459923 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.393161374 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.40230864 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.382154502 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.455737858 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.461959444 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.392083262 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.460586299 seconds)
  done (took 22.253674618 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477590189 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.386213658 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.386112534 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507159774 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384108784 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.231202171 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.505540404 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.1816226 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.405561171 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658861662 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38429742 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.500469412 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.646729928 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384345082 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.380670871 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.376656412 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.615379838 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947614263 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387055426 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382939226 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41975399 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.391623591 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.388060504 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.62997018 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.385540643 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383762101 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.646097593 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.386824354 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.710792782 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.402603144 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395400333 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386016091 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.6601164 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.101613932 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.510829994 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.630199271 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427196291 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.387087566 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.380211492 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.380349389 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395418523 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.389118415 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394330386 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388494297 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.385267966 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389053396 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.194346212 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.412936238 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.383594932 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.389041167 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.688029276 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48730788 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.389829738 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.3867895 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386386778 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389104387 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.391455211 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.387685968 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987613859 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389473288 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388508678 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.389343002 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.429085258 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38859868 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.081705342 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.392652375 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.392861682 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.393755667 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390259367 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.386565132 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.406719191 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390814243 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.411486667 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389481906 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.210476649 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.405069027 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390054065 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000600662 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406533883 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.386232074 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.624208638 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391188448 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389921096 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.389509873 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.388666907 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.184971381 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397363815 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.373425265 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.38653222 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.214671852 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.652928536 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407949934 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419531308 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.614726383 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.37404034 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389445348 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.398951961 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39119509 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411292258 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.195588138 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407372288 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.390408312 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.652838416 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.60404578 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396338339 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.38322225 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.943647751 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410964916 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.406601909 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.389294456 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.640532295 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.034968756 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.407602812 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39130866 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410966708 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.392451584 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.225228672 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391866985 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.491787807 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.410338076 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.703516061 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.300255381 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390911258 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458768545 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396824486 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.391918278 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392442119 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396094127 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.392500421 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.625299442 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.416846406 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.404848142 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.40576387 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392976664 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.398490657 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406149091 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.393787428 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.619450252 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396656859 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668421357 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394515852 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390718486 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388758573 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.615694601 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.390182752 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.73390796 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.66129739 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399851209 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.400188401 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.406445942 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414485418 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.504256213 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417199012 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.412064913 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.653875309 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.396393468 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.397548887 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39651643 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.396998112 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402515084 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.399976302 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428673458 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.039366586 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368849053 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.40143824 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.291431416 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.409596672 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463068518 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.401924184 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.644091795 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.393041331 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.432793139 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.40318876 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.400235377 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.625637458 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.408228054 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.397630569 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.474827755 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.946287054 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.058970921 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.411803581 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.393769209 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.393127499 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.395047278 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398736236 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39537398 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.393880308 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.641782771 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.41077925 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.435853608 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.040308375 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398520014 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.39527736 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.404980346 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.408857187 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.403644476 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397114408 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.404698786 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397322158 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412496784 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.413455581 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.542491774 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.412742107 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.399721131 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.917090544 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.404088871 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.398038517 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.39884283 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436674399 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.400531294 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356946407 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.665350789 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.431213099 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.703287627 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.404846426 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.418430261 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.399789709 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413574203 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414922577 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.404382823 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427154595 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.412506594 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.401087851 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404158668 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976976478 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.249595046 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.994128874 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.423323999 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.4097625 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.402918766 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.220650597 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420865992 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403214748 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672393497 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.21788034 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420814197 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.955484568 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.419014191 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.283529922 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.703423945 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.639059512 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.422926794 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.417179228 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.706515049 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.61684047 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436344493 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.40840313 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404184693 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.381404538 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.048764559 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.424504347 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.483043058 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.218097525 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.434379386 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.405238446 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.498869962 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.404128787 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868719184 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.421475377 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40392048 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.40713252 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.42084022 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.283955541 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.411121456 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401512165 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.086600465 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.406111215 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.960404801 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422360948 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.650781551 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.417882197 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.405897511 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.401512878 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.418005289 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.661243109 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.704792655 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405325768 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.403433949 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.002613233 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.28072328 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.411723706 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406484803 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.249694281 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414025819 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.731808991 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.425542955 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.419890519 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406642622 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.404289972 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405177137 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.401243758 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.411721328 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376633793 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960406782 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.441076611 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410037547 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.422786444 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405068482 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.661916168 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.417431076 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.047050652 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.638830635 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.447565278 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429734415 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.409129808 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424064327 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.391272875 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.406719129 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.405209375 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407071817 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.632649613 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.423163325 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.389106569 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.533736816 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.620555738 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.408659044 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.408217711 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.704645026 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.405419295 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.422375209 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.288022674 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443013244 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.408312353 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408949473 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.440979306 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.408580434 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495650676 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.657335535 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.422389886 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.419257979 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875084327 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428168579 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.427055022 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.424438063 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.504966858 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419900049 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.422211031 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.183330857 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.052516162 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264575295 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.053875978 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.712389129 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.413081129 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413546836 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409715346 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.569423514 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407997203 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684125956 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411976498 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.440634297 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43319101 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409489549 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443192535 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.62381954 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.685266051 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410355728 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419281323 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411937965 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.410307901 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.422242273 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.623020906 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.973893377 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042089823 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414824593 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.426064955 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.227418831 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.705768178 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41089556 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412828728 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413004239 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.426525154 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.437877929 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.418629665 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429034235 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.556882501 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.713606746 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.141744455 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.441982381 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.437259679 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.185230597 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421988797 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.668738542 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409547483 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.664885413 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.057339537 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.199194301 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.682905374 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482608622 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.662099154 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.413588244 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.576820503 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.412730724 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.41422137 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412451078 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414426462 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.409119781 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.421153691 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.085236169 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.682118537 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.415196891 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.408564014 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.445362359 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.422910384 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.637501264 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.219169211 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.637493562 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.421113942 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.419997876 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.413756435 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.078312691 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.733763649 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418613724 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.417623984 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.689202334 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.417360379 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.439149463 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.867726973 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.412512272 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04372138 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.390828703 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436828691 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415193041 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.203112591 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.114560267 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.423816384 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.980508254 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.416772119 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.434084791 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68828347 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.422555724 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.416025236 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.694032806 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.419226483 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.428576338 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.667413583 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.066919465 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.305052082 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.426290545 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.449139247 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.415859617 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415224816 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.541041405 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416445663 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.421541291 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.895406455 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.435599811 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416248314 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.425494282 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.428826075 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415980308 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.414190583 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419775426 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.421242147 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.422411527 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.397395504 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.436109417 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.414443369 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.049605969 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.440352346 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.089827513 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.747447315 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.673854209 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.42682216 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.404302614 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.424127633 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419826752 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418942706 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414366501 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.445797234 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039152649 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.437079051 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.430628697 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.423260149 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.635938839 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.632576643 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.417286589 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.664847673 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.435042609 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.433853827 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.402457778 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421740705 seconds)
  done (took 999.331525807 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.45759911 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.468271053 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.455516702 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.524954614 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.469282886 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.502828004 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.471205552 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.474691127 seconds)
  done (took 21.132913812 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.429333995 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.430370177 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.426937161 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.428962889 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.427397143 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.944747579 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.437241734 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.429027579 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.431780802 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.420060081 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.4265758 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.2370493 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.430641628 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.427095831 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.41468126 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.431668367 seconds)
  done (took 33.494029091 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.752030732 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.701248139 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.081632657 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.509272231 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.421259271 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.419189875 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.831696627 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.439414237 seconds)
  done (took 28.464296016 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.431477814 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.43363024 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.432691962 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.43327185 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.433236935 seconds)
  done (took 8.474722181 seconds)
done (took 1270.851499117 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.424915098 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.426331719 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.423649263 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.427270864 seconds)
  done (took 7.008294301 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.406676192 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.402737233 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.407543592 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.422223918 seconds)
  done (took 9.94794791 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.252083004 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.146215869 seconds)
  done (took 5.708516564 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.419555835 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.175228213 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.170075342 seconds)
  done (took 8.073839369 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.735326722 seconds)
  done (took 3.042459175 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.834748873 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.788874935 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.618658635 seconds)
  done (took 6.550962203 seconds)
done (took 41.641599291 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.425401272 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.765523833 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.578245238 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.423015404 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.579204256 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.578233596 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.183720679 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.43653389 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.420743475 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.424259284 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.424787085 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.580769369 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.236282827 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.771025928 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.237059362 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.672283447 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.589751421 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.434305254 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.435767283 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.432612603 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.181493905 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.423922657 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.433865838 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.420522315 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.581178051 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.570921297 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.439839409 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.685695433 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.423162621 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.421621479 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.609257513 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.43608913 seconds)
  done (took 84.568169034 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.424361363 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.427885891 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.422171662 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.452340469 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.420587694 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.42280419 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.446554605 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.430587561 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.420866987 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.420504385 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.452559047 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.418889705 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.440208818 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.44152766 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.436875289 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.43823489 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.452336595 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.429820146 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.422216895 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.437979807 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.432431553 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.432488784 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.421653373 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.436135933 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.428678861 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.426645049 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.441990747 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.421640476 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.44008284 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.424166375 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.426385966 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.439861091 seconds)
  done (took 79.140963559 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.428777889 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.421783132 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.432768529 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.435905516 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.42057524 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.429207543 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.423427494 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.432147263 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.430245521 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.429224591 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.438163589 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.421214919 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.422990489 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.422084555 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.425938102 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.432904686 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.434081297 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.436141346 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.424219106 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.426223477 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.426695772 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.422841506 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.419052933 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.42378513 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.433923633 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.430566185 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.442205356 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.421763886 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.421314807 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.426488029 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.452282293 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.424791382 seconds)
  done (took 79.025635835 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.707920214 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.433114519 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.43435406 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.420188744 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.433137189 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.433809116 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.424711687 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.711192539 seconds)
  done (took 15.313465064 seconds)
done (took 259.355919479 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.424879884 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.429286687 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.644877462 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.452340173 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.445670109 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.457154262 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.457315613 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.677828158 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.446670947 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.679177672 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.446430305 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.450344833 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.426648917 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.451106417 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.732640431 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.587591265 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.441840169 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.431973634 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.793576685 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.461284499 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.71625109 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.424913854 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.719894236 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.428795351 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.42815317 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.432536508 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.428640232 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.42305217 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.46976099 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.808516869 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.433870286 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.412009833 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.524934727 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.549449271 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.661339327 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.604867646 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.430380692 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.529280039 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.674133724 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.43596392 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.424620402 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.277216868 seconds)
  done (took 85.891524858 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.439198034 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.553118427 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.438445286 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.437354763 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.434788599 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.553959412 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.533622107 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.435929897 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.440934826 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.438333942 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.437349222 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.438287312 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.438310979 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.438977689 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.440443323 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.436305865 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.437821735 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.453094337 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.45233294 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.485429637 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.559365872 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.467144192 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.42836622 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.437695862 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.53759588 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.58431401 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.437975059 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.429955326 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.48336943 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.444415208 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.444007522 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.486642487 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.442050286 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.444037175 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.558988228 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.54017748 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.452354891 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.434675997 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.550999224 seconds)
  done (took 58.648806358 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.441666006 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.709936258 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.910624906 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.443001471 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.442514795 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.44443394 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.534509595 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.442905868 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.444372952 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.444644696 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.604555686 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.441249829 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.478011475 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.957810572 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.442762746 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.4411434 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.443069694 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.443186974 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.719329226 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.449054266 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.555951747 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.441115277 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.533022904 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.453327107 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.465127528 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.440548017 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.447562323 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.01777386 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.442733054 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.602187488 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.356399711 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.529179681 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.970055467 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.927180374 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.359507706 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.44610081 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.443989654 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.611500171 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.444151765 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.445029861 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.530377198 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.441585492 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.92088226 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.115153471 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.466464697 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.448206712 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.048780518 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.606511982 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.722460641 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.449937471 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.954337208 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.444996095 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.446958292 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.445682279 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.727660362 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.453188027 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.443827585 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.055109684 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.464420877 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.533986807 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.443979834 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.443182159 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.721857888 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.44187642 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.708655408 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.445123085 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.450311366 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.466432832 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.92274692 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.448001977 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.145249327 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.46414579 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.445505928 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.608661104 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.712714071 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.08283069 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.449704577 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.729754259 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.980158128 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.530637398 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.449514621 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.012046664 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.532327793 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.449129091 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.450599388 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.446914894 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.447038269 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.494575466 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.531364152 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.073532481 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.132045941 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.080341767 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.552183448 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.457112691 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.448545732 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.057268449 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.461181428 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.447389494 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.920675364 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.146475177 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.4650722 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.489325521 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.150489782 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.465134947 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.53736428 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.451385366 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.93636819 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.447287325 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.507697561 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.447340254 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.45446535 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.473054774 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.536722587 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.446739966 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.443723231 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.116628982 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.632173158 seconds)
  done (took 190.890818797 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.442342266 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.439855927 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.441306605 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.455801332 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.440525422 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.44980118 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.441717784 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.444459399 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.448249878 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.442797715 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.445194286 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.441846222 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.441268999 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.447663696 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.45486588 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.451361343 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.444848299 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.446111595 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.458711277 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.442350164 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.441693814 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.442558804 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.462852538 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.442024404 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.447073859 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.443230374 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.447331648 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.443645338 seconds)
  done (took 65.826021049 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.448992547 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.099340321 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.450001338 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.603250255 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.471583643 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.448848017 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.600492164 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.511420122 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.451746576 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.448714033 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.447944775 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.801179322 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.451869518 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.072298863 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.673631687 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.601206975 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.064869524 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.472556526 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.449124103 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.448582984 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.605717194 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.457524814 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.814460866 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.12801405 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.453305338 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.118904087 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.441228931 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.452977286 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.452010018 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.122368241 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.452434345 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.814699787 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.543179297 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.517112523 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.144449317 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.021454694 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.037208591 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.628497454 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.455264789 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.453918553 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.451254405 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.440804325 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.121016945 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.458200049 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.455216862 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.114504174 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.470583152 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.455816965 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.445079536 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.45255804 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.522703588 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.525016712 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.816811141 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.20047255 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.547170018 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.458829951 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.609658604 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.751080056 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.461377416 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.021629162 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.442817279 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.126457231 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.461809873 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.442778946 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.455059152 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.445753371 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.624859599 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.607656958 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.025569815 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.478955264 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.027640587 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.644412109 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.452009393 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.452249093 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.45764596 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.130739465 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.030423892 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.645985523 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.605554536 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.677529045 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.438133531 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.455017128 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.44438567 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.548588378 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.454517311 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.127311624 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.048685588 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.477752224 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.457934134 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.458148317 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.456182187 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.662578095 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.122617594 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.547676974 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.048977522 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.837747844 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.817307505 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.459245801 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.525867274 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.47538741 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.888446294 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.461713673 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.526316287 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.805115911 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.823216082 seconds)
  done (took 174.848199543 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.737390191 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.471300053 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.558362536 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.627355497 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.115379768 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.091725972 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.451671622 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.59438672 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.576081089 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.743221461 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.455370403 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.541837566 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.69434791 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.545980086 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.240591032 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.532508662 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.558579672 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.619934515 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.609778196 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.453976262 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.188212708 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.795252636 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.670974886 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.475868828 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.594908829 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.2978085 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.076905102 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.065900051 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.654505591 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.46735682 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.034928525 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.453367439 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.451272268 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.252332001 seconds)
  done (took 68.034274327 seconds)
done (took 645.452718653 seconds)
SAVING RESULT...
DONE!
