cset: moving following pidspec: 26293
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.968476798 seconds)
loading group "string"... done (took 0.566589915 seconds)
loading group "linalg"... done (took 9.276565009 seconds)
loading group "parallel"... done (took 0.175323957 seconds)
loading group "find"... done (took 1.395896641 seconds)
loading group "tuple"... done (took 2.216160582 seconds)
loading group "dates"... done (took 1.403554003 seconds)
loading group "micro"... done (took 0.236095724 seconds)
loading group "io"... done (took 0.650189994 seconds)
loading group "scalar"... done (took 43.724723814 seconds)
loading group "sparse"... done (took 13.750515869 seconds)
loading group "broadcast"... done (took 1.2147506 seconds)
loading group "union"... done (took 15.567330914 seconds)
loading group "simd"... done (took 5.214441389 seconds)
loading group "random"... done (took 10.735192306 seconds)
loading group "problem"... done (took 2.321541425 seconds)
loading group "array"... done (took 27.164572975 seconds)
loading group "misc"... done (took 1.266778237 seconds)
loading group "sort"... done (took 3.988496944 seconds)
loading group "collection"... done (took 24.222660583 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.739824687 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.154416904 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.173352839 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.221384869 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.236953771 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.158740447 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.185851821 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.623913126 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.100795365 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.257846689 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.167921802 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.685163388 seconds)
done (took 6.450670816 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.26355533 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087840911 seconds)
    (2/2) benchmarking "String"...
    done (took 0.153599979 seconds)
  done (took 0.905195317 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.090082646 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.218551848 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.120943451 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.136787122 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.136900937 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.119542152 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.135734469 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.137146606 seconds)
  done (took 1.672015871 seconds)
done (took 3.600581901 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.958600031 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.877197427 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.583091241 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.152094162 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.19176289 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.168845485 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.385666311 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.176861973 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.128224115 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.137104831 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.208851728 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.370565151 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.589308648 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.072323204 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.118821347 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.144806746 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.100147858 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.723283391 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.102492142 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.142801882 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.641107486 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.13557046 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.134841617 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.142098568 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.223830302 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.138162623 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.203732389 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.134230108 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.676605616 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.118495394 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.208347511 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.117033415 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.181967721 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.299516851 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.098042085 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.123615683 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.689299665 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.210978234 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.134071646 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.111779598 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.689951888 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.098548794 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.228215186 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.135083705 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.13443221 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.207972683 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.123053819 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.113000702 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.122569289 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.107917107 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.177813139 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.475476174 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.12280485 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.164278344 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.110309105 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.715317064 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.114337114 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.172448816 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.142354169 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.1239865 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.116355616 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.117629589 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.189264923 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.121983175 seconds)
  done (took 21.595717536 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.146055736 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.169520197 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.110490352 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.163613521 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.172674683 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.095929076 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.118519337 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.093229772 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.152294592 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.221167897 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.16881332 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.17325901 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.09101072 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.111654628 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.122476277 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.275806254 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.14288882 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.129941774 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.114311063 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.112023095 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.163768693 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.116084678 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.130878442 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.133336837 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.191566952 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.220216164 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.124013422 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.139030664 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.109632611 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.122653486 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.158607794 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.187032954 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093289791 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.110372147 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.216835559 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.12293077 seconds)
  done (took 5.904331687 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.243767009 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.117754917 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.264517253 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.232164689 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.184974641 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.21464698 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.143031414 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.315857182 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.267394949 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.139327039 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.155845578 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.197466567 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.132182392 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.133030682 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094311658 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.113050512 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.094017177 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 2.284270801 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.207489789 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.191382415 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.13454094 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126843572 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.113727869 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.3953107 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105080604 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.115526053 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.105663946 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.103164513 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.221647705 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104738599 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.596692508 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.118682255 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.13404514 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.147571974 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.216327458 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.152478824 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.152398264 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.124606288 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.099827543 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.285210298 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.116536925 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.110597503 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.128750519 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.150979643 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.153597814 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.119195209 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.122439657 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.291303194 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.100961176 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.145813202 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.316170647 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.102288192 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.223310358 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.131695579 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097122285 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.418835881 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.138153514 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.126174437 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.10090942 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.350870582 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.149278336 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.116690603 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.09286743 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.123746008 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.093375254 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.41796656 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.133930606 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.882429822 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.113003699 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.203906842 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117731277 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.113466343 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.121080188 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102371899 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.138277419 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.098202118 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.092610666 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.115659131 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.092181694 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.121061574 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.13383707 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102576927 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.112135966 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.16475541 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.14332563 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.118123082 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.142758101 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.119652723 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.096671175 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.145783725 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.11336697 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.103069061 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.17492113 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.10816996 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.136409783 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.117454868 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102349322 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.158760438 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.114542459 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.212617017 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.099678514 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.144697875 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.116556166 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128908942 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.145261171 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.112796112 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102099169 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.109745165 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.098206555 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163680599 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.115201989 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.095250724 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.118812289 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.117042637 seconds)
  done (took 27.307104485 seconds)
done (took 55.47182766 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.457855422 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.141338598 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.142583211 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.140318313 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.139665228 seconds)
  done (took 1.767446667 seconds)
done (took 2.480710588 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.429408448 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.256499676 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.121914172 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.245488035 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.109141752 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.256343245 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.214162663 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.124367092 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.275761157 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.102471723 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.23974637 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.102179128 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.125187088 seconds)
  done (took 3.347605321 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.112629144 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.140957499 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097442412 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110944185 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.107465749 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109932709 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.126049945 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.132791012 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.126526144 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.102188008 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.109551261 seconds)
  done (took 1.986113407 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.108848987 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115325912 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.113432462 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.107664887 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.106962843 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.107414134 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.124477428 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119757262 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.125017881 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.104187843 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.106364731 seconds)
  done (took 1.949724206 seconds)
done (took 7.986651681 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.23711568 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 9.146594103 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.122098931 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.196535219 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.406534042 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.230805461 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.661120541 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.138142077 seconds)
  done (took 13.090408161 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.15233014 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.1144762 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.096317224 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.114300389 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.096513392 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.117244224 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.095317231 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.1150415 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.099580691 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.114645192 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.097152935 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.095796569 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.11340451 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.099563643 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.115898489 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.099114114 seconds)
  done (took 2.51905112 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.139108989 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.138696349 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.123212605 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.112969291 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.120930929 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.10224163 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.12431969 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.105745222 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.117805683 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.119021255 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.114135462 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.128386089 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.111800505 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.116892282 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.105985336 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.130795281 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.101422631 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.123334948 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.107248455 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.124151293 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.129037315 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.104449574 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.127856914 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.112722571 seconds)
  done (took 3.677368715 seconds)
done (took 19.995245741 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.206464872 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.103401473 seconds)
  done (took 1.025352832 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.12072713 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.138007726 seconds)
  done (took 0.982003421 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.130984086 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.113048188 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.162713541 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.118436498 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.113690183 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.096104896 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.154468794 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.113645195 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.096672846 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.113745287 seconds)
  done (took 1.937485749 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.10292298 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.102549055 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.125055615 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.138972963 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.111175663 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.116660006 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.102756796 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.119069893 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.104773439 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.112956725 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.106856852 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.139218061 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.122042587 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.126047408 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.120955808 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.122092781 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.110556349 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.119743955 seconds)
  done (took 2.826530089 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.096481391 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.099108091 seconds)
  done (took 0.919617224 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.099863895 seconds)
    (2/7) benchmarking "second"...
    done (took 0.111141919 seconds)
    (3/7) benchmarking "month"...
    done (took 0.099840199 seconds)
    (4/7) benchmarking "year"...
    done (took 0.115436243 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.095181896 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.110741543 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.095675004 seconds)
  done (took 1.452915025 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.603626919 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.275451577 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.406167602 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.140982996 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.182054687 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.441893052 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.1822043 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.137424389 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.136970532 seconds)
  done (took 3.279518111 seconds)
done (took 13.145706718 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.108880742 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.159220193 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.622125295 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.133236529 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.093256918 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.175877437 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.333261052 seconds)
done (took 2.352921757 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.40670073 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.140882451 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.100160592 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.094214407 seconds)
  done (took 1.463805533 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.096093484 seconds)
    (2/2) benchmarking "read"...
    done (took 0.105661149 seconds)
  done (took 0.931950271 seconds)
done (took 3.125191006 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.214173244 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.09339822 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.107939754 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.09282355 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.107620083 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.09128631 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.092961433 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.110976673 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.092782269 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 0.109348729 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093783777 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090355605 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107363555 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.14658246 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093901106 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.090495448 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109122317 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.093155591 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.111814445 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091268904 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092896924 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.109356675 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.090390526 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.107742165 seconds)
  done (took 3.311886816 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.121621348 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.112829502 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.10225895 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.119241104 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.100589036 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.119075731 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.101051821 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.111694125 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.101600679 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.114013754 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099714128 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.116043686 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.097846557 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.116975034 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096847932 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.116818432 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.118042041 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096081786 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096681932 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.116804072 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.118282463 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096060108 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.116444473 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101337925 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.116849721 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09956336 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.114524833 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.09617047 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.118089849 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.100375379 seconds)
  done (took 3.986955334 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.105471668 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.091149068 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.109550382 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.106096579 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.108049696 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.095753537 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.110020501 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.092900037 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.092639808 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.109022764 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.093538438 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.108885831 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.09181722 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.110375305 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.094142504 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.099130786 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.137255599 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.091094637 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.109134763 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.09250525 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.116332407 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.091606141 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.111856411 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.091126421 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.090583455 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.108413965 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.091807356 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.108505532 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.092558545 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.09075141 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.11539418 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.099173713 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.108575607 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.109637457 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.117026017 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.09106184 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.120384577 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.091001978 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.10934783 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.091394158 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.090641776 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.10876184 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.091326346 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.123735672 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.09505729 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.092521561 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.109265102 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.0942198 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.109771042 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.096075149 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.107758414 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.091972661 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.094486223 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.111027952 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.098339352 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.108116053 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.092529905 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.10852144 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.093249479 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.091193993 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.108087 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.090533818 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.118031981 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.092540598 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.143787662 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.106329066 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.108449267 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.094099904 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.11274154 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.10462083 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.111373746 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.118278373 seconds)
  done (took 8.15185316 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.098555502 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.123032465 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.095448084 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093584858 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.108788183 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.092206855 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.118588271 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092809966 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11200403 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.113364262 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110101158 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094258504 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111646341 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.097047678 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110123091 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.095016263 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.122094382 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090545035 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.092411531 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.114981924 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093046305 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.118428952 seconds)
  done (took 3.041426305 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.287177458 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.121923873 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.177127673 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.115314572 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.139993057 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.132057895 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102358634 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.120466952 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10148498 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.126064706 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108359964 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119501343 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.139249546 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107236295 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.125183045 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108787006 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.119499046 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.125854625 seconds)
  done (took 3.120443323 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.113090941 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.113571635 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.12443891 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.1137958 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.096146765 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.116448909 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104617386 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.132365544 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.099134908 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.113680634 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.109225095 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115997419 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.099683627 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113536606 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099411889 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.113727357 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.099529331 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113359374 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109623702 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.1224678 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.105160327 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.127357513 seconds)
  done (took 3.197819675 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.116673477 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.115311204 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.123045424 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.121435477 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.09385051 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.11155709 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.105983947 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.113318012 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.107435796 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.115548833 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096124713 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.111171781 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.106181183 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.113126291 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104732729 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.113624338 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098024864 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113436157 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098196055 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.108640787 seconds)
  done (took 2.93381173 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.148823972 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.133400254 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.116171324 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.147844033 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.132829273 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.116156823 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.147685435 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.116089457 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.133469783 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.136079838 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.133548089 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.133767987 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.130805723 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.143078015 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116086914 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.148617286 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.147901828 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.130284379 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.134480784 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115942726 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.153378763 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.134530489 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.13037554 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.134021463 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.116211919 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.134267575 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115300237 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.14304696 seconds)
  done (took 4.468352048 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094954225 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.094632923 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.11054309 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.091643157 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.10985536 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.091818395 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.091700017 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.110130109 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.09434018 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109829317 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.095507665 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.094425937 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.112266769 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.095276995 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.111968411 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.095789872 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094277493 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.110451134 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091715761 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109901443 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.094906216 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112420254 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.095144295 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091773999 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11002356 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.095135502 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.110043171 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.092479085 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094327189 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.110035773 seconds)
  done (took 3.766347603 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.109040861 seconds)
    (2/2) benchmarking "in"...
    done (took 0.122128412 seconds)
  done (took 0.980184132 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.094342487 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.133888023 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.091909764 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.098297038 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.122121998 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.096237781 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.127240344 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.122202941 seconds)
  done (took 1.634595497 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.126130449 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.136703042 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.102630611 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.130575438 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.117698949 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.136675326 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.203844045 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.103193387 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.123419329 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.098146617 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.137060513 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.096517433 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.126033998 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105343367 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.125764175 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.11763074 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.111442761 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.107790636 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.122217576 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.099124035 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103136856 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.138367228 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.130257737 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.10844916 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.118153786 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.113335595 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.135298832 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.111525298 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.121770128 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.115644566 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.123224267 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.089070981 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.119105424 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.102732475 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.111885505 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.116593461 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.140297283 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.103997262 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.12653479 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104029604 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.127082423 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.091625767 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.130879215 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105546899 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.130460904 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.102666121 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.120764242 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.091260599 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097444068 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.119827608 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.091750617 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.120117323 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.090530734 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.12798912 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.110710733 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.14427212 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.097927678 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.12102277 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.103065712 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.118795474 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.106388885 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.120864762 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112273218 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.118462874 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109727255 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.126960401 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107885595 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.110250193 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.089369019 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.112659168 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.110544074 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.146054399 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.115381983 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.121707456 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103537063 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.112502643 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105386643 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.121921576 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109120951 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.132088565 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.101809942 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.123939348 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110698299 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.120882488 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.101622532 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.12358611 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098407144 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.118414198 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.098166145 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.148184122 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.099189325 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.112486828 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.098572745 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.131606796 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.103103481 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.117990048 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.098100211 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.127444145 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.090117719 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.102074474 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.121036872 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.1056957 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.135535046 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.121189997 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104445032 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.127556462 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.11084898 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.121902467 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.103150454 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.092422483 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.121354842 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.099032385 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.126897753 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.089649023 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.122145684 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.104985192 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.120632667 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.11546758 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.116596131 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.102674758 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.129494981 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.114737858 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.11692155 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.092851412 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.121021833 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.101877867 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.126566446 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.116553268 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.117630899 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.092046826 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.109569904 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.110101924 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.11910162 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.107680566 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.120701663 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10535523 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.089595942 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.113107214 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.102454038 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.133899328 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.101675742 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.12435149 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.111923446 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.125206074 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.099535052 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.130331956 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.10014104 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.115747835 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.111811591 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.122190642 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.090921309 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.126634261 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.102567952 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.116929721 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.103020117 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.126254141 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.103904979 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.121115942 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099338666 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.121391922 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104114827 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.114574288 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105307367 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.098958328 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.135459943 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.121979386 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.092321713 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.09403146 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.123526077 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.098985882 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.119002466 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.098267981 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.121738485 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.103866341 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.122069783 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.101242707 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.120199491 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.117730209 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.13056529 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104601814 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.12552884 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.112500379 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.11972241 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.106929597 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.119347563 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104399614 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.120980649 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.111408924 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.123910691 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104208445 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.102220436 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.112771794 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10609992 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.128106548 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.097356153 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.113036531 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.097861398 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.120144281 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.114949986 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.120594224 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.103534073 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.116692379 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107287584 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.12698511 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.103468015 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.120042534 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.098009825 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.102083078 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.12791047 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.104358393 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.123103969 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.113831365 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.123758134 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.092447375 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.126871153 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099001671 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.12733494 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.092746711 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.116985585 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.099274198 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.122538358 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.102812457 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.120334286 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.090675915 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.11032188 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130676006 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.122544769 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.098562223 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.101457023 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.136904622 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.10080317 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.127480975 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.102319337 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.128115275 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.145386027 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.098345324 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.121093783 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.118088959 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.12100508 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.090796873 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.127018638 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.100316863 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.096682664 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.119646514 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.1000174 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.123142106 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107117114 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.124651529 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.090356001 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.121356784 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.100290161 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.097931297 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.11221468 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.113907778 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.124822995 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.104102307 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.13795071 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.123217748 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.104247048 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.123955082 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.101862141 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.102970242 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.122679614 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104625517 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.122653236 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.100877796 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.116701373 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.106022108 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.116294967 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.09614079 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.12052588 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.103629098 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.123485429 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106794393 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.11920943 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.113414039 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.122755063 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.10434962 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.164041809 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.099778042 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.117338932 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105682666 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.12645423 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.101880233 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.122153381 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.092777244 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.129105447 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.102431602 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.130609106 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.103263839 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.111686176 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.104173533 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.121753774 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.105434914 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.10325141 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.123428371 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.100900677 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.120907723 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.103062742 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.137862381 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.098536013 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.133780804 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107747479 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.126841952 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.103636933 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.125457473 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.101667187 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.116864418 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.104413576 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.122334923 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.104456196 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.120072332 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.107182866 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.123836081 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.10285227 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.119519384 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.105227968 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.124129004 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.105578787 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.109647947 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.099126988 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.098464364 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.121833717 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110625648 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.123199643 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.100520938 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.119329344 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104481972 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.119814094 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.093656489 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.128080415 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10711175 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.122406926 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117942676 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.11720708 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.104839308 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.139150763 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.091166284 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.117701306 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.096499926 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.099155311 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.131527176 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.103687474 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.131592749 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.105428756 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.117734573 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.094212811 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.123223225 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.100166942 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.110157062 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.09628481 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.127887857 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.100704157 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.119330961 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.104235463 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.106874046 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.124107748 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.129450182 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.102101296 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.105030385 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.12265958 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.094015248 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.118264488 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.098529165 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.123166845 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.104596223 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.117714494 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.095275031 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.120305147 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.105658978 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.104073406 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.120804045 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.102615015 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.130877509 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102112438 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.123777938 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108823398 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.111012649 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.104315411 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.120703434 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.1033589 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.117428174 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.106203221 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.125115563 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105699106 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.131084631 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.103095637 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.126704894 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103225324 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.114386446 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.10256809 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101978303 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.122424165 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.098719908 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.124796927 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114473056 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.115532325 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.106853916 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.125421346 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.101520938 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.127074844 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.105599734 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.12633436 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109713667 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.122600157 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.105649946 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.128333534 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.104479454 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.125003705 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105634452 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.121771964 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111045668 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.11710951 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.117755188 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.124087721 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.105324558 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.120649453 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.100688337 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102019186 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.121575932 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10158635 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.132424602 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.104500211 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.117656051 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.098970114 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.114722281 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.106227739 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.128906437 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112054655 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.124348791 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106344126 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.112763857 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.09540009 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.124219991 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.100927901 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.102444647 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.128041997 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110056251 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.124425998 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.100688889 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.120519552 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.111868869 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.130195421 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.108963421 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.11996547 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.108697139 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.124610734 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.104729503 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.121094919 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.10306521 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.124115546 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.108586243 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.12150065 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.099747564 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.13784488 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.112243697 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.124953626 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.102737278 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.126889452 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.104128363 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.112900734 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.105769087 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.123554282 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110220387 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.123910357 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103296501 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.14023016 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.098282981 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.122023405 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110410968 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.121048504 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.115613117 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.112405202 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.107023114 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.124956657 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105708507 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.112557199 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.099467936 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.100281443 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.124338532 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.099113735 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.112861086 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121908376 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.132129045 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.10740059 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.121169469 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101665582 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.113241995 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.094311318 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.117938187 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.1067024 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.121975257 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.118754746 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.11785469 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.100106714 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.093640845 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.122754208 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105812887 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.127209756 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.095058266 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.112919551 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.100980167 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.12678599 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.11682695 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.120439634 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.103986155 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.125275822 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.105945714 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.114997989 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110761008 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.093506711 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.127181903 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.141013994 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.106234391 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.126635602 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.111576172 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.13224464 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.105183802 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.112289085 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.105410196 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.127423013 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.10674528 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.104502619 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.125885316 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.149769873 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107628457 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.118823724 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.102618454 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.105983054 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.120274828 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.117250287 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.12603386 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.105014103 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.128294532 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.101812977 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.127127513 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.113428702 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.128995867 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.107661978 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.127958529 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101483019 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.124069304 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.101052445 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.122174638 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.10713757 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.125139044 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10443295 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.126885083 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.100777921 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.141044784 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.117105824 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.126223384 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.095723544 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.118504493 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.100993348 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.094208196 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.125823114 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.097186019 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.12110762 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.102136042 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.120883725 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.108827539 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.127393907 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.107389227 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.125876432 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.10455357 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.111737468 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.110614151 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.105319546 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.128741505 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.094367401 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.123749347 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104769173 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.133552763 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110328637 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.122768478 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.105402221 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.12311091 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.109040266 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.114409406 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.108109692 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.121604056 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.103204354 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.119280702 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104900775 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.124524333 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108011509 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105538799 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.12747587 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.12387823 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.110183195 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106845571 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.117359403 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.096043996 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.12884158 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.096999723 seconds)
  done (took 68.431115182 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.186979843 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101305362 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.093370044 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.113624397 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.150640952 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.096876621 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.112700164 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.096260794 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.095577391 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.135488263 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.112152212 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094812331 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.143951345 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.154993555 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129660528 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.135590772 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.093635694 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.116353446 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.093744197 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115747951 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.142475702 seconds)
  done (took 3.316544858 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.126538464 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.137746673 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.135803907 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.123516002 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.128343475 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.11836627 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.136066404 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.136302267 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.141642715 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112190031 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.142787847 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.136809802 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.111840804 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.130685221 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11093598 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.133049924 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.141717806 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109683115 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.138787695 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.13520712 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114037774 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.135689388 seconds)
  done (took 3.63335664 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.108431628 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.103141456 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.130074286 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.096710488 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.12222385 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.096966002 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.128575915 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.099568972 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.130331765 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.105629023 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.119965003 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.104226985 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.109519732 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.116502436 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.101927139 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.119007243 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.111224549 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.122126136 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.106689208 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.115124363 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.148354718 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.116622403 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.098091227 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.120432465 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.11397746 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.124339875 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.103687683 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.121951451 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.101573565 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103173968 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.118372764 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.108226251 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.13128633 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.101993746 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.120964428 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.104421431 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.123225401 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.098093421 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.09848218 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.131631806 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.097044646 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.124399088 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.115813233 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.119707908 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.098725699 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.127816544 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.104139825 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.115387057 seconds)
  done (took 6.23913752 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.132331603 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.16849677 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.124731227 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.165530719 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.141742803 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.115764391 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.124654646 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.163760589 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.09742973 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.118822516 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.124559865 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.142228279 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.120681407 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.107773038 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.126906927 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.101156897 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.123094787 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.099473885 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.130403221 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102494141 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.131136065 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.12756939 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.122022412 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.140028944 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.128189976 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100067403 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.118301643 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107931005 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.138426375 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.111039108 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.128431676 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.128302054 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.123295293 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.122044044 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102520009 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.123769484 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.144249468 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.102616853 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.123508572 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.099186223 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.12350168 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108458847 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.128196077 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.12488665 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.125996878 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.125779423 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.101933052 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.115546714 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.121565582 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.123001847 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.115975667 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.142551576 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.125784069 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.10257676 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.127274901 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.142708154 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.101846539 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.118274476 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.106558019 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.137465732 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.097896198 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.129214268 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.141525161 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104329458 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.134617555 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.122205019 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.12647622 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.128661261 seconds)
  done (took 9.324136714 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.123409356 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.149148805 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126828778 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.148716025 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.131596812 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111918018 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.13207613 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.111923985 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.132049566 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.139746572 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112478696 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.194883105 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.122937585 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.120829736 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.132531289 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.112097753 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.132337836 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111548221 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.132284404 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.131605356 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.112269683 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.146068895 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.111340498 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.146331596 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.150525771 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.102124932 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.133319394 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.130621078 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12570355 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.131123824 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.150689105 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.112425853 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.131958701 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.145693821 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.131468721 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.131905875 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.099083236 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131484515 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.111542057 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.133820768 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.101870102 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.146655395 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.131148853 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.103693757 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.131637678 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.111911588 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.146545061 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.151185454 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.139562452 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.121725892 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.131776299 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.145288856 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112877706 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.130722537 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.125970498 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.156443992 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.146683481 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.146308736 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112168317 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.146969688 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.145560429 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.157721052 seconds)
  done (took 8.931928769 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101048357 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098972632 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118636144 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.098472223 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.119665802 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097323395 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.099393201 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.120349335 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099792052 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.119266166 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100845183 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095875476 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.116613121 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099486085 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.116458186 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098124561 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096531951 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.11811634 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102466185 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.117180133 seconds)
  done (took 2.94651546 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.112151143 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.146774284 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.102046986 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.132629757 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.105156539 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.132052663 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.103948012 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.124228494 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.1019497 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.124337399 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.117524512 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.138506313 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.120574209 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.112368603 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.13743701 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11208572 seconds)
  done (took 2.736628075 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.127616315 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.140296888 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.151688835 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.107203484 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.097514618 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.132817126 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.099860296 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.119042893 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.095490561 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.132242315 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.108340342 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.133450481 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.10118853 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.119391379 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.102655157 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.128140702 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.096876858 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.125775419 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.101560241 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.1505913 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.108008736 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.124754654 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.102667443 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.125126418 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104547041 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.128145738 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.109804834 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.11939213 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.100517535 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.121798395 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.105188224 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.13210973 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.097632683 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.12805699 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.099091702 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.118915811 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.101152743 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.120990279 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109073346 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.120832529 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.100407333 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.123863218 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.101564227 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.123091671 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.096998738 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.101417673 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.117310717 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.108831694 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.123906479 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.104577329 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.122300696 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.110357061 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.129983648 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115432148 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.135121948 seconds)
  done (took 7.182614447 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.119737108 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.124956042 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.109234586 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.118350198 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.106465858 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.128972231 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107370172 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.102977175 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.124304501 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097605679 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.124409177 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.105559119 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.124385351 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105757425 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.12413697 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105243676 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.115532991 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.103430362 seconds)
  done (took 2.868231256 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.108403237 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.100348915 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.131168239 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.100633587 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.122129034 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103372033 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.116903629 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.099525649 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.1192189 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.101886404 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.119897314 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.104496225 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099006803 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.123809683 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100590584 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.121400729 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.103871784 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.118784498 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.102064771 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.116486609 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10504719 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098426872 seconds)
  done (took 3.239012015 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.127016677 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.16432127 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.121494427 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.176457694 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.130534124 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.108791891 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.141758762 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.110495794 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.150543918 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.108422423 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.127204813 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.109174397 seconds)
  done (took 2.400266753 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13511769 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.171875399 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099663675 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125864862 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119189734 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131304218 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10940471 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131673651 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145153898 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.150175723 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111218961 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144651045 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124359286 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.146384987 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138676816 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118695001 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131453571 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129576708 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103773378 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.157999654 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109335822 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.146016834 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130674065 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110141508 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130927125 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.144660866 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125558169 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.150483261 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12982414 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125331457 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140209864 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109383104 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14693078 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.150805008 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104428167 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145573044 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130597086 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.157807793 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121443829 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.144865407 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105808308 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140912572 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144788345 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118990183 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.145376924 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130013452 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119485463 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131367726 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110368884 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.168893449 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139868647 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.145502409 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119544251 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.146403656 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145515181 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.169360076 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129795721 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.146555477 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13931319 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.150441769 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124799144 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141023691 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.145137549 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130626102 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139932166 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.145112156 seconds)
  done (took 9.68297478 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.156338791 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.122191904 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110897608 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.152155038 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.145414222 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109622957 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131782252 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130827987 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11111561 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123827561 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.190688575 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111338549 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145071872 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.145876582 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111625823 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131304256 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111110407 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.144968161 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104306705 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.168912112 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131173196 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144328159 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125494279 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.146510133 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.15110302 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139115959 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111624572 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130161474 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111896029 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130425067 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119640134 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132206815 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.145386288 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101161791 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145365934 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110060697 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131219349 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13977076 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112015004 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140011151 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.145483251 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137942563 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131634737 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109686363 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.151026266 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131510316 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110084423 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125431304 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110229134 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125411393 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.151142211 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129613257 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.152710852 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.145598455 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13049838 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112227639 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131014829 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110837385 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130493124 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119092869 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144942717 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131197392 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171097461 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11120129 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131154285 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125243001 seconds)
  done (took 9.492880334 seconds)
done (took 179.751079809 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.125338244 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.16755989 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.119083225 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.188210882 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.10236889 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.159368112 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137565587 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.140535297 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.103302122 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.101001185 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.124717733 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.107240997 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.190999668 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.102121534 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.122363147 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107942555 seconds)
  done (took 2.925733886 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.220652875 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.335531009 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.130137553 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.131339604 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.111875783 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.128440786 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.110006721 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.131107397 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.105185143 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.143593005 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.106575811 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.127848143 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.122815802 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.128423268 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.105139766 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.128168406 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.124044623 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.128306056 seconds)
  done (took 3.355462864 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.144286538 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.170409497 seconds)
  done (took 1.148771754 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.148801019 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.227678682 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.356782363 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.176092323 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.160716086 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.159141905 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.197619892 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.127652255 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.232031832 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.158462904 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.156868788 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.111950804 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.164606575 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.140872688 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.118676419 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.130624804 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.144669063 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.1353851 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.113214106 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.135737117 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.141001369 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.135700707 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.139648602 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.115191374 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.22044635 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.157458254 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.113767581 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.136523878 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.113375091 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.134197911 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.14211179 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.138049689 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.156877065 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.221157362 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.140838133 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.215746441 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.145137037 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.112277794 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.134472616 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.111897186 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.138998335 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.137785237 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.133802378 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.131914889 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.114420926 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.14536131 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.113872419 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.134955445 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.124340684 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.147786203 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.145198166 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.123211007 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.236153468 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.126603235 seconds)
  done (took 9.009170912 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.960509777 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.181267006 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.108858833 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.128066745 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.146542209 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.151612783 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.198451398 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.135108482 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.31408962 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.949249533 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.152819963 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.123802299 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.30874612 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.301086091 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.225580293 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.416219137 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.813017694 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.149088498 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.14064429 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.192081246 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.142824526 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.16853883 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.13662904 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.490970748 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.13412082 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108457836 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.140474492 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.143646223 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.210672687 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.107831365 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.13531998 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.233838095 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.313359541 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.267661076 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.110835269 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.128955143 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107038249 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.215623273 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.337525463 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.284662414 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.212226857 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103256607 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.128649984 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124858159 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.158637623 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.1028223 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.236754092 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.223478453 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.223136763 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.134837057 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121971935 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.144104576 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.144969083 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.212101145 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.104265642 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.413181132 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.417363887 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.106028304 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144081708 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.152172635 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.308088981 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.12888325 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.299013717 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.143541635 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.278257538 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.105590242 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.84807489 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.215084176 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.128978927 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118449919 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.142088577 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115437369 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.147263894 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.207618972 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.461527308 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.150105907 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.11318122 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.128303304 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.264148843 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.127921217 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107925006 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.212571272 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133216382 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119859154 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.150598202 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.147633262 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.221373729 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.298026007 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.148981533 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120057233 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.1372513 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.146258615 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.111894995 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.261391194 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.29512919 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.207222487 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.260229578 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.148837871 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.214313417 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.236425383 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123380385 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.219032863 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.142118646 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.151116873 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125430001 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.290643593 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.17869477 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.106390498 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.137837068 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.139656948 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.180976892 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.111563865 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.145292108 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.218647188 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.535973717 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.21435188 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.125906464 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.111106321 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143946418 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.212207567 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.139548588 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.307246219 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144761208 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.217362646 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.141030594 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.104491098 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.142953871 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.215740917 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.148246609 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123200677 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.148753647 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118207328 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.323172369 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.264570799 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.15005058 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.303627298 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.193745782 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.141904956 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.223057785 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.144519356 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.218096861 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.144199115 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124894694 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134998074 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.844999858 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.126330037 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.142978582 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11468338 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.229304795 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.129708454 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10825493 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.128267844 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104414082 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.880070761 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.110629151 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.125808225 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.10874697 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.141186373 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120466327 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.140855388 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115113548 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.211847164 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.310990682 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.146659675 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.140489111 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.108302838 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.210778087 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.134469243 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.107855863 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.128496557 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.108616352 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.143242912 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114823997 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.130234859 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.222794802 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.207816229 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.297380022 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.614200885 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.13064661 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.10724069 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.307542559 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106364055 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.383252513 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143491732 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.300737197 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.217537208 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.104110691 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.413568357 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.21923618 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.230135088 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.132743238 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.223142019 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103975902 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.142020951 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.212557301 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.130245595 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119747952 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.207830173 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.153151457 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.149666152 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.205625722 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.129851402 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.278792374 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.126333278 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.219957343 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.112109105 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.147222713 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.382975899 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.108127486 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.156659759 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.21197798 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.135488106 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.108966421 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.092181289 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.130447389 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123283707 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.143297222 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.301890279 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.216670653 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.144048152 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120474577 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.147799484 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.212709565 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.263629756 seconds)
  done (took 52.989720996 seconds)
done (took 70.262937749 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.405614926 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.341833082 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.376739428 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.257342016 seconds)
  done (took 2.335993616 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.224840184 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.193640047 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.155497875 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.129018016 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.18915135 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.107596048 seconds)
  done (took 1.860241678 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.650527389 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.571222564 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.438629424 seconds)
  done (took 2.524099929 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.306831982 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.330282232 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.378031673 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.575025982 seconds)
  done (took 2.572994309 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.25338285 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.128383482 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.143133725 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.162810949 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.188847813 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.27853493 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.172943781 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.204596782 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.136603032 seconds)
  done (took 2.58736762 seconds)
done (took 12.746933079 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.3101676 seconds)
    (2/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.191170318 seconds)
    (3/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.128958648 seconds)
    (4/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.274910005 seconds)
    (5/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.111817445 seconds)
    (6/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.141516901 seconds)
    (7/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.169218798 seconds)
    (8/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.118736367 seconds)
    (9/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.189335866 seconds)
    (10/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.221930063 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.154112111 seconds)
    (12/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.309333326 seconds)
    (13/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.31681474 seconds)
    (14/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.121609908 seconds)
    (15/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.149228928 seconds)
    (16/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.122471294 seconds)
    (17/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.285155145 seconds)
    (18/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.270482814 seconds)
    (19/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.13945366 seconds)
    (20/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.137218477 seconds)
    (21/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.139422734 seconds)
    (22/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.240558922 seconds)
    (23/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.126000315 seconds)
    (24/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.282218702 seconds)
    (25/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.198471352 seconds)
    (26/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.162325231 seconds)
    (27/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.247915418 seconds)
    (28/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.174145729 seconds)
    (29/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.25452201 seconds)
    (30/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.150798423 seconds)
    (31/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.192258859 seconds)
    (32/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.148384713 seconds)
    (33/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.124318814 seconds)
    (34/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.144682339 seconds)
    (35/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.298213561 seconds)
    (36/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.143927434 seconds)
    (37/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.154730573 seconds)
    (38/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.15197155 seconds)
    (39/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.169562762 seconds)
    (40/286) benchmarking ("sort", Int64, true)...
    done (took 0.263651591 seconds)
    (41/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.253574085 seconds)
    (42/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.148937935 seconds)
    (43/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.273413591 seconds)
    (44/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.146072315 seconds)
    (45/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.120903706 seconds)
    (46/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.170893172 seconds)
    (47/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.137128787 seconds)
    (48/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.229693703 seconds)
    (49/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.251403754 seconds)
    (50/286) benchmarking ("sort", Float32, false)...
    done (took 0.180464508 seconds)
    (51/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.229990284 seconds)
    (52/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.228326774 seconds)
    (53/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.115629048 seconds)
    (54/286) benchmarking ("sort", Float64, true)...
    done (took 0.271055069 seconds)
    (55/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.14268387 seconds)
    (56/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.123550667 seconds)
    (57/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.176462977 seconds)
    (58/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.138286757 seconds)
    (59/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.227081175 seconds)
    (60/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.226117328 seconds)
    (61/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.134779292 seconds)
    (62/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.134348629 seconds)
    (63/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.113958084 seconds)
    (64/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.130252692 seconds)
    (65/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.114336724 seconds)
    (66/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.215661412 seconds)
    (67/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.15708505 seconds)
    (68/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.23840701 seconds)
    (69/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.176045816 seconds)
    (70/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.115916682 seconds)
    (71/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.113631849 seconds)
    (72/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.125673409 seconds)
    (73/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.130926215 seconds)
    (74/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.192769588 seconds)
    (75/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.164983487 seconds)
    (76/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.237935681 seconds)
    (77/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.180642334 seconds)
    (78/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.137879278 seconds)
    (79/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.115362291 seconds)
    (80/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.275051525 seconds)
    (81/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.12734288 seconds)
    (82/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.20558491 seconds)
    (83/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.182184727 seconds)
    (84/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.10592176 seconds)
    (85/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.133324094 seconds)
    (86/286) benchmarking ("sort", Int64, false)...
    done (took 0.106344243 seconds)
    (87/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.170764501 seconds)
    (88/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.143099873 seconds)
    (89/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.134328129 seconds)
    (90/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.154353627 seconds)
    (91/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.237626176 seconds)
    (92/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.137003699 seconds)
    (93/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.118556816 seconds)
    (94/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.172969621 seconds)
    (95/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.238436372 seconds)
    (96/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.111860807 seconds)
    (97/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.136355661 seconds)
    (98/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.093107006 seconds)
    (99/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.112970196 seconds)
    (100/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.189911231 seconds)
    (101/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.114206609 seconds)
    (102/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.125098758 seconds)
    (103/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.175833139 seconds)
    (104/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.099044265 seconds)
    (105/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.215481701 seconds)
    (106/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.135469988 seconds)
    (107/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.122294819 seconds)
    (108/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.13700242 seconds)
    (109/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.135532452 seconds)
    (110/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.138839977 seconds)
    (111/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.236613171 seconds)
    (112/286) benchmarking ("sort", Float32, true)...
    done (took 0.271324724 seconds)
    (113/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.150599534 seconds)
    (114/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.139732832 seconds)
    (115/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.092529786 seconds)
    (116/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.147511301 seconds)
    (117/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.093040458 seconds)
    (118/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.128867472 seconds)
    (119/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.153346994 seconds)
    (120/286) benchmarking ("sort", Int8, true)...
    done (took 0.260606266 seconds)
    (121/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.153431981 seconds)
    (122/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.113238213 seconds)
    (123/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.183933035 seconds)
    (124/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.148618096 seconds)
    (125/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.207090953 seconds)
    (126/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.115141611 seconds)
    (127/286) benchmarking ("sort", BigInt, true)...
    done (took 0.292102306 seconds)
    (128/286) benchmarking ("sort", BigInt, false)...
    done (took 0.281296173 seconds)
    (129/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.108941085 seconds)
    (130/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.139626063 seconds)
    (131/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.09098997 seconds)
    (132/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.221598942 seconds)
    (133/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.134574735 seconds)
    (134/286) benchmarking ("sort", Bool, false)...
    done (took 0.230414636 seconds)
    (135/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.121703058 seconds)
    (136/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.112506903 seconds)
    (137/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.107532221 seconds)
    (138/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.14606257 seconds)
    (139/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.137849709 seconds)
    (140/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.114727212 seconds)
    (141/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.113577593 seconds)
    (142/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.142824255 seconds)
    (143/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.124148174 seconds)
    (144/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.113753328 seconds)
    (145/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.100048746 seconds)
    (146/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.114322007 seconds)
    (147/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.144978896 seconds)
    (148/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.211759737 seconds)
    (149/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.121330206 seconds)
    (150/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.212688175 seconds)
    (151/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.138888369 seconds)
    (152/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.125059053 seconds)
    (153/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.137306121 seconds)
    (154/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.107963286 seconds)
    (155/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.138902121 seconds)
    (156/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.108200817 seconds)
    (157/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.119345556 seconds)
    (158/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.140064821 seconds)
    (159/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.09248044 seconds)
    (160/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.145408 seconds)
    (161/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.116840998 seconds)
    (162/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.120271119 seconds)
    (163/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.137585656 seconds)
    (164/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.115520649 seconds)
    (165/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.144223111 seconds)
    (166/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.137792807 seconds)
    (167/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.122065459 seconds)
    (168/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.179620862 seconds)
    (169/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.09747356 seconds)
    (170/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.228318651 seconds)
    (171/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.115886474 seconds)
    (172/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.117420694 seconds)
    (173/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.090637876 seconds)
    (174/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.140060354 seconds)
    (175/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.144451594 seconds)
    (176/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.092836391 seconds)
    (177/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.090694296 seconds)
    (178/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.145540772 seconds)
    (179/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.091886943 seconds)
    (180/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.120215896 seconds)
    (181/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.115654821 seconds)
    (182/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.13782366 seconds)
    (183/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.119788565 seconds)
    (184/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.116604203 seconds)
    (185/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.116020397 seconds)
    (186/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.117192986 seconds)
    (187/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.233583768 seconds)
    (188/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.147030073 seconds)
    (189/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.142806014 seconds)
    (190/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.131556166 seconds)
    (191/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.116450154 seconds)
    (192/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.137669639 seconds)
    (193/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.118246965 seconds)
    (194/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.153315651 seconds)
    (195/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.223923764 seconds)
    (196/286) benchmarking ("sort", Bool, true)...
    done (took 0.264431971 seconds)
    (197/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.112498493 seconds)
    (198/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.13825601 seconds)
    (199/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.124811687 seconds)
    (200/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.215167232 seconds)
    (201/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.114062482 seconds)
    (202/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.115952849 seconds)
    (203/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.114962546 seconds)
    (204/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.116645275 seconds)
    (205/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.092081598 seconds)
    (206/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.135520304 seconds)
    (207/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.126659794 seconds)
    (208/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.148373377 seconds)
    (209/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.13909606 seconds)
    (210/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.135911978 seconds)
    (211/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.093573145 seconds)
    (212/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.130259257 seconds)
    (213/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.111837182 seconds)
    (214/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.173630286 seconds)
    (215/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.098204207 seconds)
    (216/286) benchmarking ("sort", Float64, false)...
    done (took 0.20377346 seconds)
    (217/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.095321303 seconds)
    (218/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.135969216 seconds)
    (219/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.093346994 seconds)
    (220/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.135126548 seconds)
    (221/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.169196989 seconds)
    (222/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.11532349 seconds)
    (223/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.100775703 seconds)
    (224/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.12149261 seconds)
    (225/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.090556518 seconds)
    (226/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.093125954 seconds)
    (227/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.115472491 seconds)
    (228/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.090848941 seconds)
    (229/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.129659708 seconds)
    (230/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.094000892 seconds)
    (231/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.090941984 seconds)
    (232/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.161056583 seconds)
    (233/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.114680036 seconds)
    (234/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.161078536 seconds)
    (235/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.139202813 seconds)
    (236/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.099921637 seconds)
    (237/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.116254241 seconds)
    (238/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.141748394 seconds)
    (239/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.115572146 seconds)
    (240/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.151143472 seconds)
    (241/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.107305118 seconds)
    (242/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.141346211 seconds)
    (243/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.091684346 seconds)
    (244/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.139538193 seconds)
    (245/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.093896847 seconds)
    (246/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.13893333 seconds)
    (247/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.090419296 seconds)
    (248/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.193500943 seconds)
    (249/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.106355269 seconds)
    (250/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.149016556 seconds)
    (251/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.11625463 seconds)
    (252/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.115710095 seconds)
    (253/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.092471899 seconds)
    (254/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.121283321 seconds)
    (255/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.104775695 seconds)
    (256/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.111559289 seconds)
    (257/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.15236351 seconds)
    (258/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.13843517 seconds)
    (259/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.122847992 seconds)
    (260/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.115490885 seconds)
    (261/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.14225271 seconds)
    (262/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.137402016 seconds)
    (263/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.09234513 seconds)
    (264/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.110971047 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.141991328 seconds)
    (266/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.114294128 seconds)
    (267/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.132631644 seconds)
    (268/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.092148047 seconds)
    (269/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.133711638 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.125963696 seconds)
    (271/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.11391265 seconds)
    (272/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.112454162 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.136096563 seconds)
    (274/286) benchmarking ("sort", Int8, false)...
    done (took 0.243530847 seconds)
    (275/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.119306975 seconds)
    (276/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.133561357 seconds)
    (277/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.100169335 seconds)
    (278/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.189801587 seconds)
    (279/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.093007711 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.134518966 seconds)
    (281/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.113466067 seconds)
    (282/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.115904856 seconds)
    (283/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.093017923 seconds)
    (284/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.128179274 seconds)
    (285/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.142283699 seconds)
    (286/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.093349106 seconds)
  done (took 44.046429674 seconds)
done (took 44.918300915 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.125123674 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.180356011 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.122344124 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.167785889 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.124999426 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.152473806 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.142565797 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.12348121 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.14789558 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.127220362 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.151446033 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.102321184 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.144792268 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.121760934 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.145725914 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.143707032 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.148403541 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.117664746 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.136567827 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.113813349 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.136514606 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.11479458 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.139194823 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.102548898 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.144048291 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.119802143 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.139707234 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.122104713 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.138158062 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.10938484 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.134112344 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.116894743 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.133640662 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124600118 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.136629356 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.113039369 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.145132612 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.119020503 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.115722995 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.139101924 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.116704652 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.138990287 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.115492854 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.141019599 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.113035351 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.136817024 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.112295926 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.150406225 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.167740386 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.111531494 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.116368647 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.145198273 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.124260672 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.141532563 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.110950378 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.136832327 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.115052362 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.167476642 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.111336261 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.135967852 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.115980489 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.140846412 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.113112545 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.136052358 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.113154995 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.143694895 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.120729012 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.137110833 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.120660146 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.155776866 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.10701853 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.136986843 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.111379772 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.132476557 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.119393743 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.142992652 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.106605661 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.112860081 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.139215576 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.114725254 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.137440394 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.108479241 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.139167084 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.114541564 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.131727392 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.103060198 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.133882411 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.114813136 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.136939927 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.113148055 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.138369975 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.115495686 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.115780598 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.144863589 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.137437478 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.116142609 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.137793252 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.115284656 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.139805765 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.111629123 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.105675753 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.133044457 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.116270639 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.132185908 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.113585926 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.148975276 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.110731719 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.137930654 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.113822868 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.13672464 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.129034001 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.14366398 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.114904094 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.13521484 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.108616747 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.141699835 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.11170028 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.133642726 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.110939857 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.137512128 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.114687652 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.138239086 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.109742268 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.141263773 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124439882 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.107104402 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.136605949 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.10883114 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.138526606 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.11531106 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.1388746 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.110121079 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.135354537 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.10625823 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.132394058 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.110145926 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.142087726 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.109247268 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.112127769 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.138910686 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.112661856 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.138799181 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.114572725 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.139899571 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.111226686 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.126526064 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111735434 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.132338112 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.117287267 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.138071541 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.114480442 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.130443782 seconds)
done (took 20.316290555 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.124377925 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.223746274 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.176225254 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.157370705 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.191274013 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.167884443 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.152252607 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.159548088 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.149929037 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.180482761 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.156470702 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.165821136 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.181108018 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.127065632 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.167968183 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.145205412 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.12163146 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.163712852 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.187975748 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.148596441 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.175761331 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.150791052 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.15013817 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.178793467 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.119108193 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.187762667 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.152887146 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.12191282 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.151845621 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.130311046 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.1668498 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.153866959 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.127422418 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.161404548 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.127836448 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.142900978 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.166819208 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.11467357 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.147677781 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.123813045 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.162412547 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.133926503 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.142731505 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.160084416 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.122747497 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.150972863 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.121641237 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.145119103 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.121548434 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.138106769 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.130715983 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.173971822 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.145593863 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.127471312 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.1510189 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.121587606 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.151822302 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.150789055 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.12824555 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.151525099 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.123746875 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.151013076 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.13080448 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.172245203 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.145952706 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.127633977 seconds)
  done (took 10.801591975 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.143553069 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.182829546 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.127629015 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.153488895 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.152869429 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.107502693 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.130501322 seconds)
  done (took 1.932879006 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.109510563 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.16947134 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.151683817 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.17579045 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.139917739 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.181997002 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.156306521 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.109249258 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.165207778 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.124195422 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.167255897 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.203123296 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.109732766 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.150874843 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.153854073 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.135242821 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.179510535 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.110217127 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.144128587 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.151267863 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.141967067 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.137057139 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.155677685 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.109808373 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.162887616 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.111604098 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.222314272 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.152802381 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.108862495 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.143221657 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11993504 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.230127362 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.161258971 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124117132 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.131503713 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.17066443 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.135751365 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.143531921 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.141995916 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.142618722 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.136442637 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.145264804 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.121393355 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.144777706 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.120309917 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.150857402 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.128169574 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.148555975 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.117337795 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.169001625 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.151099053 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.136834953 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.13680357 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.115914522 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.150629381 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118839865 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.153818588 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.1192518 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.168677701 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.121159533 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.168433068 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.169905316 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.137232731 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.169715512 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.133585251 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.161687516 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.161477524 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.119144543 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.146231139 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.121986319 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.169819087 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.11681306 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.151489742 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.127370931 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.147317476 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.142138664 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.166192442 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115781938 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.151372637 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.116283263 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.139901993 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.110247753 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.152798211 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11447201 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.13812052 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.135492848 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.151944188 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.144092869 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.116215894 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.167591234 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.118074582 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.153336008 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.128031791 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.141201847 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.133681555 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.173636801 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.152022842 seconds)
  done (took 14.888728803 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.114976193 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.110948892 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.144141224 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.11225489 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.136844946 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.112778914 seconds)
  done (took 1.67161439 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.151286579 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.141323507 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.130778977 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.144484888 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.187930761 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.13893256 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.162983664 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.1249872 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.160747777 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.129420577 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.162923076 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.163915904 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.149280131 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.145675792 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.138152386 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.146433423 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.138124946 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.140543797 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.130284584 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.139318499 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.130535051 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.147104055 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.114855744 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.162912413 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.143766165 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.122443868 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.143559172 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.131289534 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.154535038 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.12552327 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.145682424 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119402908 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.146944837 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.125467013 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.163615779 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.145520495 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113790719 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.145118055 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.122374502 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.143817731 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.139983094 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.139440137 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.130079393 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.145745776 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.125747181 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.147120918 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.120800616 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.144253232 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.136879441 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.146066718 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.121769889 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.146707701 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118711491 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.146869813 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.121210748 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.150067461 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.145461506 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.138681654 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.146035103 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.122479027 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.142827662 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.11964473 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.150797978 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119185684 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.1442301 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121130526 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.146926699 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.114831398 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.139677665 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.12113183 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.146327306 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.117379636 seconds)
  done (took 10.941660767 seconds)
done (took 41.158080029 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.721004868 seconds)
  done (took 1.659447054 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.976342616 seconds)
  done (took 1.91726503 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.687991039 seconds)
  done (took 18.66175761 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.656867326 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.811626702 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.26623423 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.197805057 seconds)
  done (took 3.875024843 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.015624697 seconds)
  done (took 1.9750757 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.368239867 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.286448882 seconds)
  done (took 1.603243 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.879346843 seconds)
  done (took 1.838826033 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.719998846 seconds)
  done (took 2.670593046 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.447101425 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.229295573 seconds)
  done (took 1.642201811 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.670816161 seconds)
  done (took 1.628000803 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.026648813 seconds)
  done (took 15.989801989 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.29204189 seconds)
  done (took 1.260207818 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.349482656 seconds)
  done (took 1.306206443 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.774931744 seconds)
  done (took 4.731382423 seconds)
done (took 61.708382573 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.124069774 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.12677148 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.153271282 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.12417601 seconds)
  done (took 1.481669088 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.133036133 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.148056942 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.128905082 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.147068887 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.132998224 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.1495507 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.119799476 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.155088369 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121641143 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.150774018 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.122782795 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.148079643 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.125922732 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.145684103 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.118061363 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.151781863 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.126351992 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.148944275 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.121741811 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.15006199 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119525927 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.150422211 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.151212875 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.122232803 seconds)
  done (took 4.256034707 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.123431866 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.116707644 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.143887608 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.115975862 seconds)
  done (took 1.467622771 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.13145762 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.167363819 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.1403515 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.155201468 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.140390756 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.166230121 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.115300484 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.142450007 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.119013929 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.155372563 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.11865364 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.169471251 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.165568448 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.111766397 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.157480644 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.108275905 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.13965341 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.140719167 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.155037395 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.131061224 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.140387153 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.129279127 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.149715029 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.134218384 seconds)
  done (took 4.353476859 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.223879127 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.160233143 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.172399724 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.126066733 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.207516381 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.173086485 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.11537855 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.173984604 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.116540936 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.169329593 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.119838819 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.208446011 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.169190482 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.121603311 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.145022951 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.154033738 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.141901215 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.174554716 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.118826378 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.159409488 seconds)
  done (took 4.123701403 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.128288007 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.115339393 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.136867211 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116379363 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.150300006 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.119394756 seconds)
  done (took 1.741654959 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.111865226 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.109118837 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.136293289 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.10861631 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.139844638 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.109749221 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.107306059 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.135166103 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.108680666 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.135064021 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.108633812 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.107313572 seconds)
  done (took 2.394686184 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.510472326 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.114712484 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.1555644 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.11722627 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.167754642 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.13869163 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.134500725 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.13940938 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.209801666 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.127552783 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.159947462 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.207163391 seconds)
  done (took 3.160227413 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.275289708 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121895538 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.350457268 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.494705296 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195115524 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.21119461 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.375606706 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.210471824 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.243124036 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169790176 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251850981 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196976449 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188741157 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224604028 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149328931 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.219704988 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225349303 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.268667032 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186507588 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270496005 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218186732 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.213533136 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.236513964 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188494973 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172945864 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208372971 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.116818658 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157343991 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22876291 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220087805 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241584673 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193118363 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14751507 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.29652044 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.299193367 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245072583 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.466819784 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141688842 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.252976522 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.237376401 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.31232753 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176540645 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.270667661 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193781978 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133762839 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236271095 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201633425 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.231526254 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.16203547 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173756248 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.261580674 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22605007 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.240853206 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172894576 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.395105031 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181894973 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.17833817 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238108062 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261386796 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.251591106 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215037357 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.149005222 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.272994335 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232160193 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238175479 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.179435692 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.21946589 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15453845 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227363617 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.255733595 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237558193 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216131554 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.284468267 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168646279 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214304148 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.217621261 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191570899 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230648749 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203688375 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.119060919 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186883464 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143774227 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156070883 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.220078716 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121555694 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.277818587 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170225715 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.325369227 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.309914639 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173941221 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.209924644 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213536583 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220494708 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181836692 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.117885864 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184269705 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.205788099 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19869195 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137091929 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199174365 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182796567 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.153975968 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162652924 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.148564608 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202407347 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.137028884 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214437025 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209436165 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.159830269 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.211464027 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158584361 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.203450781 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222047665 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241522807 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163584055 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162576205 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255330537 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174240025 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.167086812 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.227714798 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.244884903 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.210523861 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172226443 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227678461 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.262155454 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17693906 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250758602 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155023176 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167572286 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.198609353 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204117703 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.204781036 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.166414888 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156764652 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.195937479 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254654802 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.15270803 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140501686 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226214611 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153862763 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129724265 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181826626 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16875571 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.147071314 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.190193534 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.169601741 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20024523 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172890808 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193494537 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208874194 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187045398 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274927105 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165055935 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.200041706 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15397217 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.141615519 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.235427244 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242992251 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130249647 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239799356 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.217263106 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.316067806 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21227 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159011745 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.23573254 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131082805 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.144996389 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220611147 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.207108902 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.210469378 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.236508395 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.287994851 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.217197707 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.192383376 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184575848 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223143081 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.225033519 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215100551 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.179682238 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183582889 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222199415 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.147817611 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.121831573 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.1559033 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174176931 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134368555 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161900007 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248805812 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213245532 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.303976045 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208672499 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146988227 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.237364391 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.152682036 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213119557 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.226770728 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142209178 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.241431175 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260479454 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189863476 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177072426 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231446104 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.144025668 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124063907 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.163441269 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.215875636 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133507607 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168269445 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188614095 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.237715653 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228575045 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159545813 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.332500539 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215501875 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.250665242 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.149210349 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.194325071 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21772498 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172114538 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.224654834 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165370173 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.206550556 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203027397 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184392892 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263708146 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207306946 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223776403 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.30603167 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.170204911 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159268402 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188229712 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215002728 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151871 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.20436305 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182248701 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167207354 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16659278 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.171933656 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154096512 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.249956276 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174906748 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251126997 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.196108347 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242877813 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123864702 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188572235 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.205638573 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177693488 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.116109097 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219944214 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252066882 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186991677 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202626068 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226449762 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130164299 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.43734166 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253058516 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248492858 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172740412 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180272286 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177876243 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200574973 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211587652 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.236837581 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185761259 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237477615 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199496751 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.14885348 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167985778 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182770859 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160218022 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.198559211 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.16812153 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.196206676 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.146031546 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28610398 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153109941 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.200818839 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216718737 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.17697035 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.164607627 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176708413 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266339955 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20100089 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233502058 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.195349027 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.210537122 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242682577 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120565552 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156324184 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.124738821 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.236930302 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161905182 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206244369 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.271876629 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.326958832 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204999738 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214805162 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168265992 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.121357355 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.206137256 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18699827 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.319189754 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158759617 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.166817979 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.249853233 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.184747466 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130179018 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.208921947 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.398142582 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150641312 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253919238 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.119217831 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.362395067 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150576471 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132661619 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202773192 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221316917 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.163212038 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.220654122 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188851277 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184457026 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.203215403 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170710689 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.276065799 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.312538547 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229310727 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232855922 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.153147221 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.206934938 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212244872 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228317352 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180907574 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.178932731 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1735027 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237692411 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.26662209 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.134757427 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209884871 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209891638 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.206071495 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248404137 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134825448 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268907443 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132796139 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21985579 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178556842 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122431034 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196913599 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.293380468 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138575751 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224793519 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1998234 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161423711 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124483587 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198520087 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200197515 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182581778 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.128526567 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.246036409 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.15439873 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212276456 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231296843 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130106291 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195204692 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182868445 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131079848 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180437237 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185136643 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139054901 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.204765466 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242835104 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.16104962 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228143147 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233700257 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21198489 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20596468 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150780551 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.697329206 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.126014363 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23481456 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182215819 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255053686 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184622954 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219598034 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.2070737 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15707181 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221981578 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190451346 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.257664513 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22087624 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.204350871 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131080475 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185197294 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182796019 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.133368055 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190643462 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208835041 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171961663 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.138608677 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.201222388 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18517972 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.182635338 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141218364 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243984542 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182883931 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.250451404 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.238425709 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173177375 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21770057 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248908916 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128886416 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.209139887 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223059456 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179654334 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198635536 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.128700647 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.165305289 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232504208 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.120329233 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206295149 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204714761 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.210951445 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210874855 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.140212948 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207792601 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182492154 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20587722 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123628564 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.196156142 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.201511349 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160073502 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.126721148 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196834621 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209059491 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.202191883 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126482723 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.204684574 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23726383 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.122175473 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165790629 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.377904847 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196388184 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257217991 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.194933473 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165818565 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146996418 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201139628 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.193628404 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203132621 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.127633274 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161299177 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.162248668 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.193643698 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.194208266 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200872354 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246230892 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206356631 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243268626 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.163229377 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.274752457 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169680141 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196187122 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.136650882 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.157092529 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175163628 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137890309 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186082825 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.30649509 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231931667 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.162691934 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.184346335 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156482568 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125095123 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161040022 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17558694 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196408112 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199644554 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185167222 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.115153903 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182681243 seconds)
  done (took 98.038158379 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.170997506 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.16819684 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.178054 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.223094343 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200067987 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.278320125 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.23652145 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.257545599 seconds)
  done (took 2.771494792 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.129186701 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.1673115 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.176979002 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.126447909 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.142138778 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.456359696 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.170200662 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.154645016 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.150930585 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.19550597 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.115614741 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.764069927 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.121513002 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.154547766 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.138043282 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.137966038 seconds)
  done (took 4.352335738 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.851665108 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.605840818 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.259703406 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.306262237 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.29193527 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.211972062 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.81243183 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.250613112 seconds)
  done (took 13.648080451 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.150522924 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.165114594 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.171261687 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.195777543 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.151816064 seconds)
  done (took 1.902282299 seconds)
done (took 144.645658793 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.119345417 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.123994747 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.148784569 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.123523062 seconds)
  done (took 1.57074774 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.131893359 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.101556522 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.131818551 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.099796788 seconds)
  done (took 1.534581628 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.534182268 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.129795311 seconds)
  done (took 1.768151553 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.149679243 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.160729598 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.134030984 seconds)
  done (took 1.507878704 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.129896835 seconds)
  done (took 1.197378498 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.122142531 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.124266848 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.167643962 seconds)
  done (took 1.480919564 seconds)
done (took 10.128461187 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.135333294 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.468404523 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.411474248 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.163621335 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.725798194 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.431285491 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.073050216 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.167999884 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.201981759 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.141196514 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13636185 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.721510933 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.065987676 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.392329961 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.046534943 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.390980018 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.699305044 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.144484909 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123589703 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.142805103 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.019205621 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.140332397 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.115648339 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.143170226 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.697542262 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.420724073 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.143412426 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.410945288 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.112983969 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.121350587 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.405447765 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112660809 seconds)
  done (took 17.710665692 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116435175 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.218375768 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.123966944 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.144544637 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.12023885 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.143276799 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.127496373 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.164387137 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.221246717 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.113045125 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.165597049 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.112560871 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.147332588 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.114818361 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.168906075 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.113394873 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.145010011 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.118036611 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.150850046 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.11743968 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.13662898 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.142270613 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.115926349 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.145204272 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.113078832 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.157479933 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.114621906 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.163130735 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.113869114 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.150835442 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.121032454 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.143073686 seconds)
  done (took 5.537480077 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.168790808 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.231761562 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.153074417 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.153860265 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.209753018 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.114347569 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.246222052 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.198093924 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.222191085 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.141084279 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138256103 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.11261903 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.186432984 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.142995 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.140334893 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.140967992 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.118448925 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.144977139 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.124728348 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.143599306 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.138586261 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.140205735 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.116595198 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.116553719 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.14376357 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.130633463 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.143420113 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.16230864 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.11536615 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.121567446 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.150413729 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.114040454 seconds)
  done (took 5.895982305 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.124793646 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.154952777 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.136225146 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.164230177 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.117953094 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.15145788 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.126230155 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.116529065 seconds)
  done (took 2.169419893 seconds)
done (took 32.378384541 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.133997276 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.120595972 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.158946343 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.128993704 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.15288895 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.139960977 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.141283314 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.12668206 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.156101134 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.123340824 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.16021058 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.113418658 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.114995072 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.141642738 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.129490576 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.147752935 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132254522 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.152815281 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.140460151 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.160782452 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.115312776 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.156034723 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.12574857 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.168677354 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.140729824 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.169560135 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.133122431 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.15048732 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.114432358 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.143814965 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.13322763 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.171949596 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.117373599 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.162083176 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.119042182 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.146933953 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.115137045 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.115634264 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.161623391 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.126414387 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.149432032 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.126094076 seconds)
  done (took 6.905218812 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.148509609 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.193435713 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.11170547 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.140958107 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.111586437 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.190067722 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.155220957 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.140320634 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.111079858 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.174686521 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.175391961 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.112920471 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.111452114 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.140978256 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.111377662 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.140415088 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.144532166 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.172641642 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.151265061 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.17918263 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.198410508 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.153137307 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.18327937 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.144076522 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.192985621 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.185852579 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.141211956 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.187003643 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.174883305 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.110644478 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.181595254 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.149113823 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.140593725 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.111577346 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.191041982 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.185147761 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.150192163 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.19208242 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.1783876 seconds)
  done (took 7.1530966 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.127333846 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.131718428 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.171417299 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.223931517 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.162666743 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.160127367 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.12746841 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.168070452 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.134589557 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.144975742 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.125206821 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.18557714 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.134664756 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.154124001 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.121593899 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.162623327 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.140595578 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.147292311 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.122256685 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.168020163 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.136632302 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.161857999 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.130604717 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.155438747 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.115475492 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.1615704 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.121572216 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.161187477 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.121848571 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.152595599 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.123483949 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.149601363 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.124800253 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.129462451 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.149752499 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.129682582 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.173441044 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.15389892 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.127273572 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.186352903 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.131013554 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.152097569 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.144354028 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.192195158 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.11694296 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.155224791 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.121984334 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.154474287 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.113920119 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.166051031 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.129699805 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.116650656 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.172389439 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.145207647 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.11383863 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.131755244 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.146967714 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.118710451 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.154936018 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.123013028 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.172194849 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.121273119 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.161072872 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.11811699 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.151723653 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.115639978 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.142901024 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.127162909 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.171917271 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122089112 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.193316405 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.115787771 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.153922615 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.125341686 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.15172034 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127852091 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.115112942 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.163623024 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.126018943 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.152728178 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.127630762 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.149109489 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.120284782 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.165878572 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.142162313 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.159655215 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.123949629 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.15379733 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.120064615 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.146488688 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132464232 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.146697624 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.119683847 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.164843812 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.117536846 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.147081858 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.12589238 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.151400734 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.11426837 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.159746587 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.123572588 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.114502952 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.156945458 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.11678169 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.150696253 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.126698841 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.151307936 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.117216924 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.151565912 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.124886521 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.14311318 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.122683776 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.120083954 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.15017089 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.133799195 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.155054663 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.11974254 seconds)
  done (took 17.666650311 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.296316802 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.263395052 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.245750525 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.371334901 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.184291932 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.148142948 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.258777367 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.209639343 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.115743502 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.201390546 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.220820522 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.22849121 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.212898667 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.223756187 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.221308614 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.115473673 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.17617994 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.210357095 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.262343689 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.362887463 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.145704112 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.166072074 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.20320743 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.171509563 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.170366554 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.167934199 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.14643369 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.175467895 seconds)
  done (took 6.975786846 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.139400448 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.196966502 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.125225282 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.184081781 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.179726005 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.117412366 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.151699193 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.116487783 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.165547422 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.137471165 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.148177107 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.126645967 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.153644301 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.128057162 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.145874281 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.128277476 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.158896323 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.130691137 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.148898809 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.122461405 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.169478445 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.136886223 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.152680322 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.126069589 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.169887749 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.126344461 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.150516543 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.177101876 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.129324287 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.184446374 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.112125902 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.15748221 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.134204494 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.146041084 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.126869949 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.149081805 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.117836842 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.147802115 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.118571117 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.112218012 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.146404783 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.103787018 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.156059826 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.136306269 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.155704947 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.119979672 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.153764166 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.12097044 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.153134554 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.111739401 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.148632538 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.119316174 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.151133017 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.138811513 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.150161867 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.111970336 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.120072014 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.137707892 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.128371857 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.149128432 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.110116656 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.155794437 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.109305175 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.152144564 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.128072604 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.138966123 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.12549406 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.147956394 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.12217076 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.155348497 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.119862824 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.133413899 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.143833291 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.117268146 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.162086653 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.134116449 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.151555653 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.124863434 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.158297642 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.115441723 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.132202081 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.11553842 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.100289179 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.15315366 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.115153146 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.155404007 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.119516738 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.154040296 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.168996822 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.130843527 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.15511787 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.116479044 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.125869463 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.152837312 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.112646904 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.152174959 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.138391344 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.17535844 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.113696178 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.145001013 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.140349505 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.148440673 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.113043516 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.136988068 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.129028385 seconds)
  done (took 15.674503651 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.176918308 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.219533675 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.148433713 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.139812151 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.189892844 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.207383628 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.133896079 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.125371846 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.147403032 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.140257104 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.158693709 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.127193804 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.158439968 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.135168883 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.20739481 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.158296223 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.117807591 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.164556109 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.12384476 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.223756601 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.139970632 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.205137783 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.213087265 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.162671616 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.122770948 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.2025714 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.211404409 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.132786817 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.16017665 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.184170187 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.162640582 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.210721807 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.215449093 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.124488982 seconds)
  done (took 6.765243166 seconds)
done (took 62.216671036 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.218968086 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.408871359 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.178346548 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.177464881 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.243006852 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.204785279 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.182045365 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.373654684 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.91109683 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.169692327 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.176050493 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.177202193 seconds)
done (took 27.520770031 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.295971471 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.333594817 seconds)
    (2/2) benchmarking "String"...
    done (took 1.47201837 seconds)
  done (took 3.90117824 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.176421003 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.178840011 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.424929072 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.185050488 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.177572675 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.196468233 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.177511234 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.185030308 seconds)
  done (took 15.618927593 seconds)
done (took 25.089056704 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.249356439 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.368216787 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.431823051 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.201303174 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.195872312 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.189092033 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.180569894 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.203416646 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.179899066 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.179229362 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.179503769 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.454804733 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.218228291 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.551628332 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.192341337 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.187468714 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.197878636 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.401549044 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.180157453 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.233028359 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.163021892 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.164434047 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.180970356 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.201192127 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.189243855 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.189228933 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.206786731 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.18494538 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.375936807 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.203523754 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.220770136 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.181513447 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.204200751 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.195869819 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.295450139 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.203044994 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.365031028 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.188311843 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.171400761 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.182512176 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.358350384 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.58992909 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.181828453 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.190899791 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.191066271 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.236372594 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.165046735 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.909233977 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.18935908 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.193916056 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.206295795 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.567142294 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.191737208 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.18510817 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.183573819 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.406434173 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.210021739 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.198090348 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.205246259 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.18121793 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.181997294 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.181834354 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.217212957 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.184389172 seconds)
  done (took 142.044747558 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.18183839 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.190635045 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.190922214 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.19288652 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.189853453 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.192405668 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.183859443 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.184986062 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.189868738 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.195140143 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.193185323 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.190264732 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.191708332 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.204907542 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.184876254 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.196470705 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.192484804 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.211345152 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.209459385 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.18723395 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.191383677 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.191634526 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.187066578 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.188247321 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.191994922 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.259453535 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.221358504 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.193392641 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.187172551 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.185593744 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.23734615 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.196148288 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.827027594 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.038191517 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.203898806 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.219625707 seconds)
  done (took 79.672395832 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.183325029 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.184841581 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.184574381 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.217520239 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.18550429 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.775479302 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.77552437 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.922582172 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.427500593 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.190754148 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.184711772 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.588517698 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.460130035 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.186062427 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.278784281 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.199792784 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.191109123 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.200859285 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.210636929 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.188458416 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.183911148 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.774073221 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.205223565 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.280437737 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.359382773 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.201312553 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.21582463 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.57854434 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.183452558 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.215774095 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.519069028 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.234593735 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.182699621 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.568107053 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.063582594 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.29748267 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.18593323 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.215415417 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.185118761 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.464209492 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.182431551 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.184139715 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.189783778 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.876425321 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.190198552 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.763152724 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.188474872 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.131148295 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.184214837 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.180368812 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.079395444 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.189909922 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.860415814 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.186394543 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.182354776 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.185993845 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.180929745 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.182389415 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.214916844 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.0255766 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.282495525 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.185070784 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.187760289 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.214508695 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.184869136 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.37956798 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.182365171 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.306927138 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.246621053 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.289237286 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.758075051 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.190422404 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.280964454 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.305736013 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.18324885 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.18156906 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.18588625 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.182586449 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.292401777 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.183904146 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.576860715 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.358479243 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.201511599 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.542544264 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.286684628 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.186299123 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.593632189 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.19178842 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.18605757 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.921446762 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.280296918 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.183451614 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.183309645 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.183153229 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.580215288 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.183593326 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.744185559 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.412127961 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.18979413 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.450493309 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.190873495 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.590958138 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.737145307 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.885082561 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.193716171 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.299051557 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.359901215 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.204781713 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.184584861 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.544945894 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.193496712 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.24417184 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.190615239 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.5830422 seconds)
  done (took 365.359421289 seconds)
done (took 588.171858957 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.952406768 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.853022345 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.985190561 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.880043513 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.846490428 seconds)
  done (took 10.615812579 seconds)
done (took 11.715292526 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.372634739 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.373509782 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.245546674 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.376764939 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.217811399 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.396487448 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.356717023 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.205417426 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.291674284 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.266614328 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.289798779 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.238871811 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.221311261 seconds)
  done (took 17.952946236 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.450800849 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.187388509 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.252272385 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.430858402 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.227039269 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.445402026 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.48881944 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.188818506 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.330089337 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.200021053 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.200379429 seconds)
  done (took 17.504876874 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.456766234 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.188334136 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.254608498 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.440751885 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.22789615 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.448616247 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.48841088 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.187701657 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.370035556 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.199939743 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.202523351 seconds)
  done (took 17.566902631 seconds)
done (took 54.124983302 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.229846628 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.354085971 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.227365035 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.201093913 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.196946334 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.198941598 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.202059189 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.206808982 seconds)
  done (took 10.920165076 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.19586997 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.193561181 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.193045042 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.193956664 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.190673924 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.197330369 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.192420053 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.197035138 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.197656496 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.196458265 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.194382245 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.194202915 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.194775736 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.196058066 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.194991021 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.196935914 seconds)
  done (took 20.222797137 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.194477805 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.192202287 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.192528483 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.192943057 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.193496398 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.19411438 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.193302214 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.192183147 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.192777582 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.192289926 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.1943354 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.192408109 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.192152519 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.19530919 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.192626275 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.193401116 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.193345693 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.191974256 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.197040233 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.19247608 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.192365213 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.193792045 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.193400177 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.192280045 seconds)
  done (took 29.742875147 seconds)
done (took 61.986378539 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.201854248 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.198144656 seconds)
  done (took 5.503268876 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.252694252 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.255791629 seconds)
  done (took 3.611716713 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.197907969 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.195163266 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.197199375 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.195202532 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.19579074 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.197776058 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.19515609 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.194844056 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.196802324 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.194432371 seconds)
  done (took 13.063783574 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.196235552 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.196359282 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.194258661 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.195949679 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.194871852 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.193810839 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.194155066 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.196471854 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.196016657 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.193811611 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.196782624 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.194317455 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.197130796 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.193839813 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.196582277 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.194514453 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.194433006 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.194465907 seconds)
  done (took 22.617057668 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.211143397 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.21793172 seconds)
  done (took 3.532289317 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.323568384 seconds)
    (2/7) benchmarking "second"...
    done (took 1.235893763 seconds)
    (3/7) benchmarking "month"...
    done (took 1.305361155 seconds)
    (4/7) benchmarking "year"...
    done (took 1.292355306 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.236048835 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.217532272 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.235865807 seconds)
  done (took 9.949125909 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.198296503 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.387470203 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.495244204 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.762674181 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.198223509 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.202802119 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.044145346 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.202124494 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.202993517 seconds)
  done (took 13.797881612 seconds)
done (took 73.176733002 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.191835087 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.208060346 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.192362892 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.208090304 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.534152835 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.199851869 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.200804932 seconds)
done (took 15.838561215 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.172774734 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.191979263 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.176148082 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.198426854 seconds)
  done (took 9.842497999 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.197232363 seconds)
    (2/2) benchmarking "read"...
    done (took 1.542894996 seconds)
  done (took 4.84232071 seconds)
done (took 15.788178919 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.197491263 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.196967186 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.19322775 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.195010505 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.194215415 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.194879708 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.19655351 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.196570811 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.196496001 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 1.195205082 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.197110257 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.19376217 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.193212304 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.192667838 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.195195713 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.192692152 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.194390236 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.196308862 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.195576559 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.192735736 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.19623475 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.193092154 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.193549051 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.193644032 seconds)
  done (took 29.780363923 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.197839162 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.192960389 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.195013076 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.196590079 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.192729313 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.19522555 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.197451335 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.194513582 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.197881238 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.198198394 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.195277312 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.194766271 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.197204387 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.194591308 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.19625192 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.192835409 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.195887314 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.193815613 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.198173439 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.193766722 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.196736941 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.194112436 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.194385812 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.196128295 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.194034492 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.194402868 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.196353512 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.192921548 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.195979001 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.194807736 seconds)
  done (took 36.964754432 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.202821297 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.205556292 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.19866738 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.199240542 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.198640376 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.197157229 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.198565494 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.195397142 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.197421972 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.197240265 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.197392403 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.199423873 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.198011774 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.197741737 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.196898297 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.197070693 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.198384555 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.198374614 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.198896409 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.197652398 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.19741697 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.197274046 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.198886226 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.198785281 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.199604147 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.198094405 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.198378504 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.197872866 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.198739295 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.198658877 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.198659371 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.199246038 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.198128557 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.198894789 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.199450193 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.198134171 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.205358407 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.206074314 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.198269846 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.198773817 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.199888915 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.19959316 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.198938298 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.197959865 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.20002566 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.198780921 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.19980963 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.199002084 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.1989024 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.199370563 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.2010648 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.19952115 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.19810115 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.199762841 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.200345298 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.198889418 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.198590078 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.200528989 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.200249544 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.19973741 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.19865235 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.200557317 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.200364018 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.20115332 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.199516802 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.200111562 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.200178464 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.200175631 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.199922135 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.201068427 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.200927473 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.200603297 seconds)
  done (took 87.454365163 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.201087687 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.198129025 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.196675619 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.19763101 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.197958706 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.201766548 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.199080555 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.200627842 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.198533857 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.202415114 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.200857681 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.19741121 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.197494227 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.201898186 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.200824212 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.198610361 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.202419816 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.198611551 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.201758 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.200924594 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.200705412 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.197930816 seconds)
  done (took 27.500347381 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.202342927 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.202889843 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.198773183 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.20270812 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.2008952 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.202606162 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.201475719 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.203039272 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.203107047 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.199873126 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.199807664 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.201750681 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.201149612 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.19881015 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.199399466 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.201761138 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.202315754 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.202423862 seconds)
  done (took 22.733963979 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.200844939 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.199945188 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.201012672 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.201163389 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.199285498 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.203003794 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.199888179 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.203105976 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.202163293 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.200859227 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.203487289 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.203871065 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.204392781 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.202289927 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.202652938 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.199985244 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.201912464 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.20061279 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.204206932 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.199604109 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.201372403 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.20519 seconds)
  done (took 27.548968637 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.204460529 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.204187189 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.201126236 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.200669628 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.199854489 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.204259226 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.202375387 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.201759541 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.204925976 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.203612283 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.19894485 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.203023405 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.203390927 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.20113987 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.19945624 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.20143994 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.203398406 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.200307735 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.203364159 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.201350785 seconds)
  done (took 25.151541551 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.210972632 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.213442747 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.213615509 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.213419721 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.213224333 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.213473137 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.214596841 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.214741714 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.214792951 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.214486806 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.212275557 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.212594214 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.212570897 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.214081324 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.214785809 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.213990249 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.212964333 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.214125961 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.213757584 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.213732957 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.214080064 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.214767323 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.21427275 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.21388587 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.215516069 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.212675889 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.213303558 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.214257358 seconds)
  done (took 35.095284231 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.206285237 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.204911116 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.202760713 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.202503196 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.203541392 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.202989496 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.203140319 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.204305791 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.206905608 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.204701603 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.206404335 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.206176489 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.205415138 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.205558925 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.205676054 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.206864488 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.206680914 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.203537417 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.203548443 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.202625107 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.206153004 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.206772667 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.208094615 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.204367697 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.203965974 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.207917714 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.203610489 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.20354104 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.207178026 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.204290707 seconds)
  done (took 37.261257237 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.253604098 seconds)
    (2/2) benchmarking "in"...
    done (took 1.250569403 seconds)
  done (took 3.616448637 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.204158191 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.207141249 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.207331111 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.204340684 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.204646532 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.20671872 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.208813876 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.204013819 seconds)
  done (took 10.760389109 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.207721979 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.206789111 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.208493584 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.208036905 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.675344027 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.208952573 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.213588445 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.226736368 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.207634996 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.209990252 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.213112483 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.214483932 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.209813269 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.207607343 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.207832645 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.208785144 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.206720848 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.206889216 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.208287542 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.207569371 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.206861091 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.210548033 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.210431471 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.205071601 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.210284247 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.217341616 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.21005859 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.208653825 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.207021698 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.210463156 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.210939917 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.203493149 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.206193373 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.208569638 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.205895057 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.20781051 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.216545455 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.227054267 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.21411689 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.208594439 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.208041901 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.205002273 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.206062192 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.208860801 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.208817714 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.207134984 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.209053481 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.203834602 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.207303328 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.211242885 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.211468671 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.207339938 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.206422238 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.210481086 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.208184598 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.214023514 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.22717785 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.21216842 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.216667197 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.217003468 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.220035237 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.230078096 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.211029928 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.209398335 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.21863143 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.230087995 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.214371764 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.221295171 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.204810219 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.208344912 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.215213798 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.2226261 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.232193321 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.208763085 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.208110492 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.207788555 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.208876852 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.210967697 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.215253913 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.230630761 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.209333031 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.209123306 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.21894003 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.229093974 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.20941586 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.207943457 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.209710431 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.210921348 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.209895791 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.218172571 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.226990505 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.21026744 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.209036855 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.210286828 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.20935049 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.210724605 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.210148418 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.210262593 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.206915962 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.208811594 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.211032244 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.212137307 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.219429557 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.20980428 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.211665228 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.21502543 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.209444188 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.209321351 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.214996785 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.209763359 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.209559611 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.211413046 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.216018357 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.206627196 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.212727976 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.216619996 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.210361768 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.210776208 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.209325136 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.209978899 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.218711307 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.232479546 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.210302407 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.210267551 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.213657583 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.219326355 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.211558204 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.213719589 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.210800349 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.20724217 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.205863688 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.211725359 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.210223055 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.21009432 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.210048969 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.211184611 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.206448251 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.210611214 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.21035177 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.210787914 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.211220895 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.210561025 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.210726554 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.211507767 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.210110024 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.212803931 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.217767849 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.211272589 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.210920294 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.211818899 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.209073617 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.211418121 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.210431586 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.213575943 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.21288862 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.21145729 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.212265545 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.211158886 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.211724059 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.211654372 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.212892457 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.212202015 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.218890452 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.212886138 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.216062892 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.211400925 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.209031572 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.211086471 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.21199449 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.213535549 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.21391253 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.211789785 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.214636061 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.219849879 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.212367501 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.211681083 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.214946461 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.212365165 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.213467902 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.214240304 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.21440138 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.220714646 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.213323254 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.218090559 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.214221552 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.212675737 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.213623426 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.212905249 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.21201941 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.213056684 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.215407476 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.219049311 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.224734499 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.235482746 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.214806315 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.216474584 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.214348689 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.216687901 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.216903777 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.213454334 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.213510912 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.214208987 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.214038931 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.214402122 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.215982675 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.213789586 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.214563896 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.214122437 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.21600445 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.2135111 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.215582614 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.216040408 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.214830288 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.213049555 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.216701942 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.21528583 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.216371608 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.211412649 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.214637121 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.215484111 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.214785001 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.216118203 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.220997559 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.212322974 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.21686026 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.217680685 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.216360489 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.214681059 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.215053649 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.216575909 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.214670835 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.221683643 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.232834507 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.21681251 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.222138338 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.234418995 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.215941922 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.218255512 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.21752334 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.21379027 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.217718388 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.223606091 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.216283002 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.216152504 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.217932793 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.2162786 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.218036241 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.222921032 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.215293174 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.217067539 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.218635416 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.219078491 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.21539964 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.218012821 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.218872089 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.217109215 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.218782867 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.21753775 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.218022123 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.217835149 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.21840925 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.219096569 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.217506321 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.220399485 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.22513133 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.223340757 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.218096547 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.220352497 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.218665452 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.221943344 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.218104183 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.218683713 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.218176267 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.22759256 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.239400807 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.224691738 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.219718482 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.219688531 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.22363163 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.220550733 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.222302463 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.218673686 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.219361096 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.219994247 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.219304698 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.215669683 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.2192089 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.219954887 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.21914449 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.220612948 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.222140619 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.219563783 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.219113921 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.221103335 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.220326581 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.218986464 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.218782456 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.219387593 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.22221148 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.221581989 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.22107477 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.22149413 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.226184867 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.239330852 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.220892607 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.220465208 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.221386553 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.218742251 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.221685582 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.221905719 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.223459958 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.227987966 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.224497718 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.229218011 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.221381519 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.229894015 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.221015311 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.224441126 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.228201362 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.218880186 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.221453683 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.220453046 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.222130283 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.228602679 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.241331524 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.22356811 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.225384517 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.221295467 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.222541846 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.222665451 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.221788381 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.22248793 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.222738572 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.23064028 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.244003446 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.226928054 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.224763143 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.220717192 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.222856177 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.222783586 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.222378661 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.225849897 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.223658122 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.223155775 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.223261505 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.221506569 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.225951599 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.224392792 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.225537129 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.221881704 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.225148893 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.23096379 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.244958648 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.227431034 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.223861312 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.230095908 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.224278981 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.231413817 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.243654022 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.223373849 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.224086608 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.223861411 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.225621782 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.223603158 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.225559654 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.225854666 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.22471438 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.228178615 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.22427369 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.226536654 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.225964644 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.225910958 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.224897191 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.233409818 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.24548317 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.226652288 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.229798645 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.221950178 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.226748096 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.229446458 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.22707566 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.226868267 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.228595101 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.235562913 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.232145231 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.22482768 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.226255837 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.227304255 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.226432761 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.225890018 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.226677436 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.226191128 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.226335181 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.226126248 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.225531203 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.229227129 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.226303023 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.22707542 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.228296401 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.226783452 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.236110533 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.227727898 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.229398734 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.228028636 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.229588115 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.228160333 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.227732761 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.227781281 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.229093055 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.227662388 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.228599144 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.233889936 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.233241751 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.231196712 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.22819489 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.228640213 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.227946265 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.229692179 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.228468852 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.227854622 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.229163428 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.228206414 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.229230341 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.228874056 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.227090492 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.22932811 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.230227365 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.228756485 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.230754304 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.235374174 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.229319879 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.226309016 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.228926735 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.228186753 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.229197175 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.230036908 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.236073194 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.231508041 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.238243725 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.235672374 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.232712806 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.230414799 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.23126831 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.237202182 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.227627277 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.230550654 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.230391963 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.232370533 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.231275433 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.23252282 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.230240652 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.235663756 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.230596959 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.229486629 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.237969144 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.251795983 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.231039972 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.232319708 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.234571669 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.23084074 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.228590254 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.230856558 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.231543541 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.239953144 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.250575394 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.23311204 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.234066252 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.230887368 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.232767339 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.233691156 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.231922145 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.232462638 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.228725232 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.233332114 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.232949402 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.231631134 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.228235881 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.230899969 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.233130645 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.234989791 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.238102803 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.230382456 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.233842621 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.232894673 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.232673187 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.232997023 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.232544703 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.231692998 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.231069333 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.23179602 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.234757717 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.233858968 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.234571418 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.232252366 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.234421586 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.233553855 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.232651441 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.236214219 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.242885023 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.238093356 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.230768155 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.233204754 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.233247875 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.234366418 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.233681507 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.233828969 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.235257105 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.235389027 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.234242888 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.233610932 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.234250892 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.236522465 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.249491632 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.254481591 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.233111956 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.234209177 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.235420098 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.235713 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.23096812 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.234122403 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.236892572 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.237575219 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.24088455 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.234547313 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.240598531 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.253667505 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.236079815 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.23831121 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.236799917 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.242528546 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.238467193 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.234823855 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.236448152 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.240377225 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.247743159 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.236627516 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.244772201 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.261147305 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.255031015 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.236159199 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.237073015 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.234493641 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.237139708 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.23754038 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.237388564 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.237566389 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.237841548 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.236508928 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.236552181 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.240822034 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.238758162 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.238006726 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.236332536 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.234068197 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.237271344 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.233713048 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.236704656 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.237021584 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.23609389 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.237856032 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.237409744 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.236681097 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.248237761 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.260857199 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.239062818 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.237898656 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.234512435 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.24066325 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.240449701 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.24819418 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.24599608 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.239838963 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.238516046 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.24054591 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.238570826 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.238706771 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.238960975 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.238556284 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.240483338 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.235871622 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.250197408 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.260780268 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.24343641 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.23786262 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.239430047 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.240529025 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.240566356 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.239448172 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.239479129 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.241433718 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.242402347 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.244226817 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.23821851 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.240411064 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.241967518 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.24554095 seconds)
  done (took 730.778696396 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.236773779 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.23674242 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.237538527 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.236489777 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.238426321 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.235761609 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.237100791 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.237851625 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.238621937 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.240224153 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.238135817 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.238115129 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.237698612 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.238148067 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.237314516 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.237401535 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.237636807 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.239335058 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.237206769 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.237773604 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.238002617 seconds)
  done (took 27.134368013 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.242433309 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.237593075 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.237905996 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.241814828 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.238498603 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.240580119 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.238973275 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.239884767 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.236598988 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232613137 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.234598979 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.234695705 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.230849734 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.233911607 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232638069 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.232469733 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.225739072 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.223268182 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.226181495 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.223608786 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.227589501 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.22478553 seconds)
  done (took 28.279860639 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.226723617 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.21971415 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.218328725 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.216042268 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.219436927 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.217327054 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.218842562 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.219750118 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.219850861 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.217120096 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.217781252 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.217638113 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.223099103 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.220558303 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.219643039 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.218777327 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.218199486 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.218320944 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.218001948 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.214390387 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.225076051 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.216415644 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.214915213 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.215451631 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.218379534 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.217971603 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.219420517 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.217526744 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.218707184 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.220868941 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.218636746 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.218037368 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.22109597 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.218343972 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.219566719 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.222476231 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.220032763 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.215820904 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.219280695 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.228055821 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.237074852 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.219006109 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.224961848 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.218851858 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.219195818 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.221989394 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.225112721 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.217967172 seconds)
  done (took 59.681220456 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.220515592 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.220443829 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.217072478 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.220295424 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.220323768 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.22105535 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.220649921 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.219581627 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.21678338 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.216923398 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.220286779 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.218678877 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.217675952 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.222044567 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.222459025 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.218029921 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.217319702 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.218031872 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.212841756 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.211691813 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.212073409 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.216678087 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.216045615 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.213934739 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.216857093 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.213939519 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.208434391 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.212520127 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.209956097 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.209309583 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.211516857 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.211145995 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.212264172 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.210639518 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.205765703 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.20797292 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.209779955 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.205561734 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.207668877 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.205271827 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.208992201 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.210349357 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.204398362 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.20556485 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.2016576 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.203365555 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.203046113 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.203769279 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.204123912 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.207518431 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.206938326 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.202551868 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.205300193 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.201845181 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.207021471 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.205034456 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.203632393 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.202755501 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.207086091 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.200196978 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.199620318 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.204090514 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.199682168 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.201868989 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.203972217 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.200611404 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.202048317 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.201188502 seconds)
  done (took 83.423365796 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.200568721 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.19934342 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.199804933 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.201010692 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.199897369 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.199426768 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.201181704 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.197689651 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.198703348 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.198260171 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.198515512 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.199081616 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.199039053 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.198662247 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.19942348 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.199676282 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.199151368 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.199876808 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.199079304 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.200320914 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.199190142 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.199413848 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.199805941 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.200064609 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.201387877 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.199796569 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.20005433 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.200466134 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.200110973 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.200164528 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.200728329 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.199859964 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.200756826 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.200157915 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.201617228 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.200652263 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.199587793 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.200196445 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.201111251 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.201379944 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.201433574 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.200407515 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.200614604 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.201191438 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.200915173 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.200782302 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.201825038 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.201973664 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.20219362 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.201389039 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.201604529 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.201082367 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.202190063 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.201420122 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.201683543 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.202302515 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.203133796 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.202094399 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.201663295 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.201097176 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.200957613 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.203175896 seconds)
  done (took 75.537350101 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.203688028 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.202590553 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.200180155 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.19981428 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.203545616 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.199863448 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.203264893 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.201538977 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.203926548 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.20179731 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.203111024 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.200451305 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.201084735 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.203696266 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.201310926 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.200821952 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.201077951 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.200994669 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.203758932 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.200701793 seconds)
  done (took 25.145398392 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.201173705 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.203689295 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.200496773 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.201415317 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.203226883 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.201738364 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.204335755 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.203199123 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.199780769 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.203781328 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.203852817 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.20414085 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.201297514 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.201952821 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.204564373 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.201844636 seconds)
  done (took 20.350189979 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.201858276 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.204191167 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.204682745 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.204277919 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.201086201 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.202207303 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.204721905 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.201962566 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.201595108 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.20469481 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.20432351 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.20578867 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.204655885 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.206315199 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.20208879 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.203754254 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.201819621 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.201399561 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.205344675 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.204904573 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.203788196 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.202282121 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.206026351 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.20710728 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.204312417 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.204246548 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.20396051 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.203378067 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.203176182 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.206557156 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.204410602 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.203994579 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.203898528 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.205278694 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.207830427 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.203730378 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.208515 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.206825704 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.206905062 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.207221554 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.20528136 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.204514379 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.206221511 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.207704277 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.204081923 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.207419173 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.204612762 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.204206156 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.204325987 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.206231119 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.20777504 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.208397154 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.2066916 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.207742683 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.208081684 seconds)
  done (took 67.379014013 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.207899698 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.20764837 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.205829271 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.2082149 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.208143076 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.205151948 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.208720168 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.209135421 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.20557451 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.208445551 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.204780279 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.209956344 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.206845508 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.208831559 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.20563607 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.210579326 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.207732406 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.206780903 seconds)
  done (took 22.849303633 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.206527051 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.206723418 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.209122629 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.205664409 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.20539629 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.208936366 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.206937647 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.208801553 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.209860844 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.20686425 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.205996618 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.209979647 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.209888428 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.211341412 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.206942652 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.206732387 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.208789041 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.209904646 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.207517794 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.207773611 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.211334301 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.210082433 seconds)
  done (took 27.695536557 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.210211258 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.209602366 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.208835743 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.224449227 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.226215898 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.210902293 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.210266864 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.208723112 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.232033804 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.256745029 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.251884218 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.226404198 seconds)
  done (took 15.790997302 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.208360799 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.210597693 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.207969713 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.211133206 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.210335313 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.209410682 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.208165191 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.207721107 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.210872073 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.209928318 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.209390448 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.210288746 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2110906 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.209297073 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.211897498 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.212375293 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.208807307 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.209551626 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.208580785 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.211842765 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.210615338 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.212050974 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.210406569 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.208353974 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.209921746 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.210659609 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.212697003 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.211159254 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.209406993 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.21184522 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.211072234 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.210788049 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.212284872 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.210475319 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.213132563 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.213111173 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.20951955 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.213927686 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.212618135 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.210519052 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.21274514 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.213763316 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.213520128 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.210110299 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.214326083 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.210900898 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.210679074 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.211285452 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.21059532 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.21452381 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.213573175 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.212964924 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.210937161 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.212738991 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.211896309 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.211810372 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.210184033 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.209894299 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.212567843 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.210383124 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.210571021 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.207762611 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.205859734 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.206004959 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.20840345 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.204423291 seconds)
  done (took 81.022143629 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.206253187 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.206100714 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.202594473 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.202197476 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.203763442 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.203519217 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.201897583 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.203323042 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.203017038 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.205517306 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.205229623 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.202379948 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.203188785 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.202313889 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.202243196 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.202714811 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.202382913 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.202920962 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.202896164 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.206905473 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.202358623 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.202962504 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.203903809 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.204833095 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.204937968 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.208101828 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.203798352 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.20357112 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.202721338 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.203903094 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.203950545 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.204191353 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.203474252 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.203908067 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.20389514 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.203332655 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.205055255 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.204750007 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.204008164 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.20765301 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.205960815 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.207786304 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.205582922 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.204323381 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.20423355 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.205397772 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.205434642 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.205660772 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.205004454 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.205383377 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.206163731 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.206875554 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.207241435 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.207241161 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.205830099 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.206915301 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.206440773 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.205805284 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.20402437 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.208665046 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.205879502 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.205583076 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.20975625 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.206257852 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.204339122 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.206207152 seconds)
  done (took 80.630311209 seconds)
done (took 1690.669320149 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.372196937 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.324799883 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.207405272 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.223578557 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.207405301 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.202639978 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.218573497 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.20652545 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.208020024 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.207404994 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.207158552 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.396371674 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.203302195 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.207632447 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.208313088 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.305265742 seconds)
  done (took 25.020859078 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.232095947 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.221117568 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.327347675 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.235465611 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.241986883 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.39524935 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.274741093 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.220912635 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.379395194 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.259957625 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.220631512 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.2422697 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.22197076 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.212249213 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.23613001 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.394587066 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.454539658 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.2204879 seconds)
  done (took 27.105633685 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.635423533 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.244458234 seconds)
  done (took 5.003314249 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.237842345 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.221256188 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.224707286 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.220504042 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.21058438 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.211478684 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.218453173 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.214190007 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.218433885 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.338190302 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.221713035 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.231626423 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.239036057 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.221496781 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.217494804 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.257789874 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.409465224 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.218759117 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.216854514 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.227441113 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.221280223 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.301370668 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.259673397 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.21862702 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.338093842 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.218756973 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.222884446 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.22772356 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.367145953 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.219344449 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.220593521 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.222346862 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.22212066 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.125581013 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.691091869 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.21546806 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.246187128 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.229977495 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.218296681 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.367160557 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.223058426 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.228426856 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.215160493 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.672916525 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.352281833 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.331424483 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.228273815 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.237005433 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.224203078 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.282238554 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.223873384 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.223356561 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.263709577 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.994931045 seconds)
  done (took 78.964818783 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.232219999 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.214161624 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.394580117 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.237753867 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.215785962 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.22926179 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.215885512 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.484004498 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.249801891 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.215849585 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.500771921 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.750021035 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.236975755 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.264545019 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.068491382 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.281494751 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.218531569 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.231078181 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.218538404 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.218106838 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.750997003 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.216651386 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.214923248 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.441643516 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.256059866 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.71452392 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.217076063 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.21603617 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.217467048 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.217404652 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.70705877 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.238818978 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.274439074 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.220027497 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.48329006 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.576146221 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.539070639 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.222208659 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.254795879 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.220433188 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.224650512 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.698894821 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.55689038 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.217736277 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.217959887 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.70633402 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.218070628 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.22745895 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.220923504 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.474932586 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.216785019 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.218919656 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.233467182 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.217976096 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.217458376 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.318198574 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.290880521 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.719929628 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.219284822 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.218600315 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.266736556 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.221435333 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.219494925 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.221331904 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.220968546 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.566880654 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.36145261 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.223039125 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.560400589 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.702207824 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.234357701 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.794463391 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.234735083 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.230570595 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.364470674 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.21883825 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.218632582 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.725573647 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.234742769 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.219977746 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.543064279 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.222976537 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.506360749 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.237715186 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.219686247 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.759843136 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.236196048 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.294347908 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.219435549 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.235762685 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.219936104 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.231431406 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.495151134 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.279581563 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.220730711 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.219469377 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.268419691 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.221419883 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.220277043 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.220341294 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.778293556 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.244222204 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.220471609 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.222825915 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.221053953 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.222481967 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.224315625 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.222998455 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.486587472 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.222664765 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.224921816 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.224306372 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.225305733 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.248679051 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.449679013 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.2286255 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.515182017 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.22586853 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.221300673 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.222391832 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.222770311 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.225789805 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.221358827 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.223694145 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.103343915 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.519768412 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.240107927 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.236467587 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.223997862 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.221872888 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.222962595 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.222471744 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.263849791 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.226042524 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.956171197 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.260239247 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.247813855 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.223902695 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.234589125 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.223116715 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.22689744 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.223383326 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.513242696 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.493852501 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.368812487 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.22544974 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.224126733 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.959259128 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.285463447 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.403661246 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.242613309 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.224692807 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.475527001 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.45438936 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.22397513 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.222643255 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.226198415 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.481649367 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.224466498 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.538858107 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.738816372 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.239651374 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.226007602 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.961891498 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.949631158 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.230573396 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.230616296 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.509428882 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.24712701 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.225436348 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.223749237 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.22641549 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.240313689 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.22862991 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.230511112 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.225227466 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.225182425 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.344935556 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.416546299 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.241238957 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.231798047 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.718390125 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.235381594 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.234655319 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.226505538 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.228389179 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.226680286 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.28834971 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.228233087 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.260795924 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.229414782 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.232994341 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.77714102 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.22673308 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.227722129 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.417859967 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.887764132 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.243231221 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.228319081 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.241637123 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.126147499 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.748925212 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.271471644 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.520781544 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.237669478 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.267179224 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.238652841 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.316990664 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.74917269 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.228831745 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.245249211 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.864991021 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.244411663 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.082410564 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.229337379 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.22893822 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.813049119 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.24396739 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.231068695 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.227881938 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.231904349 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.520364784 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.230390589 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.267403958 seconds)
  done (took 473.490391297 seconds)
done (took 610.698611752 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.23044841 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.23456289 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.216897496 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.234567282 seconds)
  done (took 10.055445899 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.23839933 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.234855418 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.244606983 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.233231676 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.239105939 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.23602507 seconds)
  done (took 8.56484547 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.227950272 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.234925629 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.234802913 seconds)
  done (took 7.835715133 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.429505176 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.247198128 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.545379327 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.24883039 seconds)
  done (took 8.609365464 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.244438664 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.24733479 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.247922518 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.240348207 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.241353246 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.242891156 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.241667666 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.24248372 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.244398267 seconds)
  done (took 12.330867717 seconds)
done (took 48.535314161 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.30770193 seconds)
    (2/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.252527587 seconds)
    (3/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.279877755 seconds)
    (4/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.330018685 seconds)
    (5/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.258673821 seconds)
    (6/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.239381038 seconds)
    (7/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.240151036 seconds)
    (8/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.28016408 seconds)
    (9/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.429340302 seconds)
    (10/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.283752383 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.265591846 seconds)
    (12/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.362075646 seconds)
    (13/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.216967265 seconds)
    (14/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.265592114 seconds)
    (15/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.240865738 seconds)
    (16/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.245064634 seconds)
    (17/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.2321465 seconds)
    (18/286) benchmarking ("map", identity, Float64, true)...
    done (took 1.365551133 seconds)
    (19/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.25703642 seconds)
    (20/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.414787703 seconds)
    (21/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.311140682 seconds)
    (22/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.271617584 seconds)
    (23/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.284353257 seconds)
    (24/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.308275192 seconds)
    (25/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.261885913 seconds)
    (26/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.24385304 seconds)
    (27/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.376298967 seconds)
    (28/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.264396555 seconds)
    (29/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.446175921 seconds)
    (30/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.325858679 seconds)
    (31/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.390270304 seconds)
    (32/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.249215271 seconds)
    (33/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.242988023 seconds)
    (34/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.283134025 seconds)
    (35/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.881195351 seconds)
    (36/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.248705922 seconds)
    (37/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.252321522 seconds)
    (38/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.34885528 seconds)
    (39/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.270061223 seconds)
    (40/286) benchmarking ("sort", Int64, true)...
    done (took 1.678780027 seconds)
    (41/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.222221331 seconds)
    (42/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.299611007 seconds)
    (43/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.248626446 seconds)
    (44/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.246645149 seconds)
    (45/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.346522335 seconds)
    (46/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.287364974 seconds)
    (47/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.285115165 seconds)
    (48/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.308979437 seconds)
    (49/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.929045625 seconds)
    (50/286) benchmarking ("sort", Float32, false)...
    done (took 1.392536155 seconds)
    (51/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.900375253 seconds)
    (52/286) benchmarking ("map", identity, BigInt, false)...
    done (took 1.310828871 seconds)
    (53/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.266341428 seconds)
    (54/286) benchmarking ("sort", Float64, true)...
    done (took 1.854502659 seconds)
    (55/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.256581969 seconds)
    (56/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.263899859 seconds)
    (57/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.234980167 seconds)
    (58/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.296224178 seconds)
    (59/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.357675558 seconds)
    (60/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.394732149 seconds)
    (61/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.262867498 seconds)
    (62/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.376544495 seconds)
    (63/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.381950486 seconds)
    (64/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.269996302 seconds)
    (65/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.316800445 seconds)
    (66/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.95851068 seconds)
    (67/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.325554325 seconds)
    (68/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.356181552 seconds)
    (69/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.324574813 seconds)
    (70/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.409223606 seconds)
    (71/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.897741468 seconds)
    (72/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.253806993 seconds)
    (73/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.089698877 seconds)
    (74/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.309911299 seconds)
    (75/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.436054404 seconds)
    (76/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.244478028 seconds)
    (77/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.252403051 seconds)
    (78/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.257224701 seconds)
    (79/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.887358334 seconds)
    (80/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.295890302 seconds)
    (81/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.255438431 seconds)
    (82/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.097761266 seconds)
    (83/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.280747444 seconds)
    (84/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.33270663 seconds)
    (85/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.253630971 seconds)
    (86/286) benchmarking ("sort", Int64, false)...
    done (took 1.425510932 seconds)
    (87/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.244755854 seconds)
    (88/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.297389876 seconds)
    (89/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.263505199 seconds)
    (90/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.345340912 seconds)
    (91/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.974776288 seconds)
    (92/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.393481875 seconds)
    (93/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.237627779 seconds)
    (94/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.341733762 seconds)
    (95/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.976928902 seconds)
    (96/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.274883478 seconds)
    (97/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.27243331 seconds)
    (98/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.97175912 seconds)
    (99/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.25210947 seconds)
    (100/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.351694986 seconds)
    (101/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.33527399 seconds)
    (102/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.250121304 seconds)
    (103/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.247761748 seconds)
    (104/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.268818471 seconds)
    (105/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.224597674 seconds)
    (106/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.388601909 seconds)
    (107/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.300670742 seconds)
    (108/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.244989671 seconds)
    (109/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.257152122 seconds)
    (110/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.330076811 seconds)
    (111/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.91830405 seconds)
    (112/286) benchmarking ("sort", Float32, true)...
    done (took 1.860785302 seconds)
    (113/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.290374037 seconds)
    (114/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.353873623 seconds)
    (115/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.890544412 seconds)
    (116/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.263751716 seconds)
    (117/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.222937598 seconds)
    (118/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.332990287 seconds)
    (119/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.252863148 seconds)
    (120/286) benchmarking ("sort", Int8, true)...
    done (took 1.691312299 seconds)
    (121/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.254537377 seconds)
    (122/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.249898771 seconds)
    (123/286) benchmarking ("map", identity, Int64, true)...
    done (took 1.357696419 seconds)
    (124/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.436296753 seconds)
    (125/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.382836136 seconds)
    (126/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.317377859 seconds)
    (127/286) benchmarking ("sort", BigInt, true)...
    done (took 2.257825088 seconds)
    (128/286) benchmarking ("sort", BigInt, false)...
    done (took 2.24064185 seconds)
    (129/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.257406447 seconds)
    (130/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.311948836 seconds)
    (131/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.973384994 seconds)
    (132/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.096165838 seconds)
    (133/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.324599493 seconds)
    (134/286) benchmarking ("sort", Bool, false)...
    done (took 1.275850872 seconds)
    (135/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.249118463 seconds)
    (136/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.291857767 seconds)
    (137/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.291160819 seconds)
    (138/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.271911075 seconds)
    (139/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.247675227 seconds)
    (140/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.980732383 seconds)
    (141/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.343303608 seconds)
    (142/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.249484173 seconds)
    (143/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.272728715 seconds)
    (144/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.054594524 seconds)
    (145/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.380620415 seconds)
    (146/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.249299334 seconds)
    (147/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.251341087 seconds)
    (148/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.264636748 seconds)
    (149/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.2550406 seconds)
    (150/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.361794351 seconds)
    (151/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.324616908 seconds)
    (152/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.363664866 seconds)
    (153/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.276298526 seconds)
    (154/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.32171659 seconds)
    (155/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.250261109 seconds)
    (156/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.37350691 seconds)
    (157/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.437077865 seconds)
    (158/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.405655438 seconds)
    (159/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.94050532 seconds)
    (160/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.252020769 seconds)
    (161/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.247712227 seconds)
    (162/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.273974867 seconds)
    (163/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.444553952 seconds)
    (164/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.239715763 seconds)
    (165/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.257572213 seconds)
    (166/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.254357264 seconds)
    (167/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.249674267 seconds)
    (168/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.271503798 seconds)
    (169/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.319668831 seconds)
    (170/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.228802872 seconds)
    (171/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.432072352 seconds)
    (172/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.267024261 seconds)
    (173/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.266485696 seconds)
    (174/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.288337054 seconds)
    (175/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.257841368 seconds)
    (176/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.22709892 seconds)
    (177/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.412289735 seconds)
    (178/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.343089432 seconds)
    (179/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.229764023 seconds)
    (180/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.300492869 seconds)
    (181/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.253012223 seconds)
    (182/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.25063544 seconds)
    (183/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.258522976 seconds)
    (184/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.250730441 seconds)
    (185/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.425045831 seconds)
    (186/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.245036337 seconds)
    (187/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.943037141 seconds)
    (188/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.252649599 seconds)
    (189/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.242903039 seconds)
    (190/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.381032285 seconds)
    (191/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.289917842 seconds)
    (192/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.262225961 seconds)
    (193/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.324096206 seconds)
    (194/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.251329681 seconds)
    (195/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.228761872 seconds)
    (196/286) benchmarking ("sort", Bool, true)...
    done (took 1.496396258 seconds)
    (197/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.254703808 seconds)
    (198/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.255716579 seconds)
    (199/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.329626739 seconds)
    (200/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.012550346 seconds)
    (201/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.346736902 seconds)
    (202/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.229255185 seconds)
    (203/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.265347766 seconds)
    (204/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.228681955 seconds)
    (205/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.233947702 seconds)
    (206/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.297970093 seconds)
    (207/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.341459059 seconds)
    (208/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.268542553 seconds)
    (209/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.431886185 seconds)
    (210/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.265339259 seconds)
    (211/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.239871088 seconds)
    (212/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.328378069 seconds)
    (213/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.251909291 seconds)
    (214/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.298861308 seconds)
    (215/286) benchmarking ("map", abs, Float64, true)...
    done (took 1.366067161 seconds)
    (216/286) benchmarking ("sort", Float64, false)...
    done (took 1.486184929 seconds)
    (217/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.891144223 seconds)
    (218/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.254899889 seconds)
    (219/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.387751081 seconds)
    (220/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.278882145 seconds)
    (221/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.244477135 seconds)
    (222/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.071796983 seconds)
    (223/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.293291159 seconds)
    (224/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.491759173 seconds)
    (225/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.302736691 seconds)
    (226/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.103356107 seconds)
    (227/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.24763365 seconds)
    (228/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.315045804 seconds)
    (229/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.323090596 seconds)
    (230/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.331886666 seconds)
    (231/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.951154896 seconds)
    (232/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.260084364 seconds)
    (233/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.262126904 seconds)
    (234/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.259942737 seconds)
    (235/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.262977147 seconds)
    (236/286) benchmarking ("map", identity, BigInt, true)...
    done (took 1.393818711 seconds)
    (237/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.314207674 seconds)
    (238/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.261003696 seconds)
    (239/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.345132668 seconds)
    (240/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.254909922 seconds)
    (241/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.284968261 seconds)
    (242/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.266226912 seconds)
    (243/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.357815589 seconds)
    (244/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.254351579 seconds)
    (245/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.331997201 seconds)
    (246/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.255554512 seconds)
    (247/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.231651548 seconds)
    (248/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.366857373 seconds)
    (249/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.512071094 seconds)
    (250/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.289631782 seconds)
    (251/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.347643807 seconds)
    (252/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.016180314 seconds)
    (253/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.320795734 seconds)
    (254/286) benchmarking ("map", abs, Int64, true)...
    done (took 1.372321585 seconds)
    (255/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.303312037 seconds)
    (256/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.260702456 seconds)
    (257/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.25095665 seconds)
    (258/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.25708594 seconds)
    (259/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.546480608 seconds)
    (260/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.256514166 seconds)
    (261/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.259923167 seconds)
    (262/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.249831353 seconds)
    (263/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.439660372 seconds)
    (264/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.273838057 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.265861365 seconds)
    (266/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.249935191 seconds)
    (267/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.267430434 seconds)
    (268/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.432364926 seconds)
    (269/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.286246535 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.424015298 seconds)
    (271/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.256791184 seconds)
    (272/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.250993491 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.263239886 seconds)
    (274/286) benchmarking ("sort", Int8, false)...
    done (took 1.383438762 seconds)
    (275/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.432091618 seconds)
    (276/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.2669154 seconds)
    (277/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.424266291 seconds)
    (278/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.266153558 seconds)
    (279/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.50842895 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.257246943 seconds)
    (281/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.260629176 seconds)
    (282/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.996342409 seconds)
    (283/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.317716009 seconds)
    (284/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.551356856 seconds)
    (285/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.270469357 seconds)
    (286/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.382523792 seconds)
  done (took 443.272986159 seconds)
done (took 444.414313641 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.29490946 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.30621685 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.261123067 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.293327434 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.377592116 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.434926733 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.272517583 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.299638962 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.308022377 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.310696705 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.268673053 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.434819098 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.262930517 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.264259716 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.260644391 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.303983735 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.25428802 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.262972624 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.27889518 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.300356128 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.279313644 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.275986869 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.314589986 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.435160782 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.266808372 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.265144355 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.267157319 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.285872137 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.378454018 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.267697486 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.268624265 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.275917538 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.254549467 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.269110331 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.258625769 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.287865051 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.276342286 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.272674355 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.298425859 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.377580318 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.263834892 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.270169997 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.265255126 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.264591195 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.264920107 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.304758882 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.26629915 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.322172831 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.306429175 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.308219599 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.255028431 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.280100804 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.273200594 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.266378052 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.275824376 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.265063418 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.322267816 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.311399225 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.285024615 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.310499488 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.268279638 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.269077196 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.303305439 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.282246769 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.276462151 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.260851291 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.263002281 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.304526706 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.267411892 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.270448938 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.261266017 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.276812808 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.267305894 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.280173437 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.301971672 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.259344067 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.260025674 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.265424031 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.277065171 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.266425141 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.312954672 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.310007176 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.316119882 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.267076012 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.308812103 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.439427523 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.277074399 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.266211872 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.305979251 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.285928709 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.279042258 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.279060085 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.301125624 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.267582567 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.315107258 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.323916767 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.276685541 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.279299513 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.317343776 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.279236913 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.270026654 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.311771506 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.265193423 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.266216043 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.268273769 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.388941738 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.271393416 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.267549619 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.300794935 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.316667258 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.327279137 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.268989946 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.276781401 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.314987485 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.277692555 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.329344845 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.269545882 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.269560432 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.260146046 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.391529364 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.271094131 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.281396584 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.314541315 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.32989506 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.271838604 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.262687122 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.270414773 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.312226116 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.390592995 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.280427666 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.385475534 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.267956131 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.274945658 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.300484563 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.315079427 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.305718965 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.329124616 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.315123186 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.285547076 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.272333989 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.28219968 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.28022628 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.270875657 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.327055403 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.267208676 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.302084824 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.312193718 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.314048836 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.30427675 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.392497079 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.276037724 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.274773929 seconds)
done (took 213.813754405 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.330183533 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.267488129 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.372645864 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.268935551 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.368085768 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.368343932 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.265615979 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.265033513 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.264630642 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.649841341 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.266501153 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.265979573 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.268758633 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.265475574 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.350677509 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.269984466 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.265136078 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.610498728 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.269359693 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.339477422 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.268456293 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.265049544 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.268579821 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.655515968 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.268733189 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.266935834 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.339201409 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.269221726 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.617391949 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.264722618 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.267043893 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.618600122 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.360900922 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.287512178 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.279203819 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.276460651 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.369243218 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.287903577 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.351941395 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.352736084 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.374767876 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.30873044 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.26421435 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.261972846 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.271574349 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.270611489 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.267927249 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.295449544 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.269608019 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.268478874 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.615134136 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.281429152 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.277887826 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.26909984 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.269048802 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.290449225 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.26883463 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.270829641 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.360469982 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.27233116 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.333320535 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.657233495 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.651873316 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.273075146 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.268403784 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.269944704 seconds)
  done (took 100.179527113 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.337950768 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.346668932 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.381683833 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.27097488 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.322820657 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.388517798 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.272581898 seconds)
  done (took 10.491560034 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.277558974 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.272996822 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.322764028 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.32385296 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.273619454 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.486133575 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.273404188 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.285555111 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.270250856 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.351628868 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.281733187 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.273628197 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.279499952 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.27149706 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.321611612 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.285469809 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.38758762 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.273878883 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.27291569 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.426202079 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.270385806 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.280717185 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.353578361 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.286076179 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.283730302 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.283394277 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.218490829 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.275236808 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.271372816 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.275115625 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.270933766 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.384959104 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.275282929 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.274847124 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.271310225 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.43461044 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.275600933 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.272664006 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.275696021 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.274692825 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.275224134 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.276060921 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.27574485 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.272520331 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.276304633 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.297975204 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.27615333 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.276442568 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.275486535 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.277688981 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.357847365 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.277529551 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.27397462 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.2727289 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.35510362 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.283206032 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.27660522 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.273050908 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.277222661 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.272578583 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.428936011 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.32340726 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.27718206 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.32387994 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.277650397 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.277125895 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.275842357 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.277530337 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.368540868 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.276804877 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.324449796 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.273422458 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.50075668 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.301456605 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.278076632 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.279809445 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.281439089 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.278865306 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.276901895 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.286237055 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.275977837 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.278446269 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.284521455 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.276037399 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.275357628 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.459834789 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.433767573 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.275699996 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.291444921 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.284786517 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.275826376 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.356499568 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.278578354 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.275391604 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.329156203 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.393191405 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.357495283 seconds)
  done (took 132.48376949 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.283339193 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.287959088 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.282447809 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.300663191 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.279948539 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.278932705 seconds)
  done (took 8.889460932 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.281312087 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.280473721 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.278216746 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.279117363 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.279490158 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.287715418 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.289300448 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.282679183 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.283701979 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.280413102 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.289804037 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.282479937 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.284167224 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.279943101 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.2896248 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.281279535 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.290510394 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.278645694 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.281017534 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.281246285 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.279731379 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.281630537 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.28040627 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.28195094 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.29483378 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.28080483 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.288646749 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.280979494 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.280352432 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.289293354 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.30052682 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.291506908 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.284210418 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.287785711 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.293778783 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.282412921 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.285349726 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.283147977 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.279190662 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.291465273 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.284014638 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.282670323 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.282877924 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.283032802 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.284382411 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.287248155 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.287544723 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.290288016 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.292169535 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.284912381 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.285522236 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.2830404 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.294167626 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.284209995 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.286639784 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.30302724 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.28754726 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.293898566 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.284182416 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.285337939 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.283982843 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.291969047 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.285742933 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.296466047 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.282642114 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.284660273 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.284197463 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.289014014 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.283614351 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.284091109 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.285367125 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.282551525 seconds)
  done (took 94.739744647 seconds)
done (took 347.95162576 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.697541254 seconds)
  done (took 3.879426603 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.364855666 seconds)
  done (took 3.549555302 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.65366416 seconds)
  done (took 21.839070409 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.324455068 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.291153413 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.29864358 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.285034826 seconds)
  done (took 10.384062448 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.509911211 seconds)
  done (took 3.692606577 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.287043567 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.280790727 seconds)
  done (took 5.752912173 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.513348621 seconds)
  done (took 3.697621396 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.591443462 seconds)
  done (took 3.775848188 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.310472449 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.293003827 seconds)
  done (took 5.796874803 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.263452688 seconds)
  done (took 3.446456723 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.155041546 seconds)
  done (took 16.340749689 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.282432591 seconds)
  done (took 3.470105467 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.304446563 seconds)
  done (took 3.488736479 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.768193029 seconds)
  done (took 5.952576687 seconds)
done (took 96.248962686 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.280546363 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.287389157 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.287671658 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.28851899 seconds)
  done (took 10.329215398 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.321561816 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.32043938 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.323182836 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.333665641 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.323979336 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.321368694 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.312851438 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.313968762 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.331712181 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.324964517 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.322885374 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.327192624 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.32705023 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.314630024 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.324333292 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.322575482 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.333279676 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.340681345 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.314766383 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.328315667 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.290025431 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.333391521 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.324825449 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.289208949 seconds)
  done (took 32.907063911 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.782267171 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.361457084 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.441094928 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.341049819 seconds)
  done (took 7.112093308 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.367431394 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.358096222 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.367874485 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.409559666 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.431463349 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.367946407 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.316154953 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.310327021 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.297244705 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.360356635 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.417852834 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.356070835 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.433989756 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.288505901 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.56498739 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.289705322 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.28895151 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.367448937 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.406083236 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.419876155 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.290787866 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.36665509 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.366809032 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.355800779 seconds)
  done (took 33.986633655 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.290323474 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.307442412 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.290116213 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.289493976 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.296188093 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.289655408 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.289897051 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.290442747 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.28890637 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.798675161 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.293395652 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.302757405 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.783840537 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.294118685 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.296514083 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.292402159 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.788335281 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.790046044 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.295525985 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.297408784 seconds)
  done (took 29.054714534 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.285461579 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.285335485 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.636817393 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.54340712 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.283758201 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.284176079 seconds)
  done (took 13.507531434 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.365078391 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.500229635 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.293681026 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.640349171 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.719584154 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.296044515 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.296914907 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.537145214 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.846137914 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.824437921 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.356630813 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.365619929 seconds)
  done (took 19.231975765 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.286322416 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.289657202 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.29975426 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.307645744 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.347691712 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.296922016 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.30316139 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.286621382 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.350178686 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.355337891 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.296827906 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.350652394 seconds)
  done (took 20.962537246 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.383494063 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.287653643 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.287354087 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332306247 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.29043966 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.13019728 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.30858432 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.005023632 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.310561557 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.559945241 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.289709306 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.387339358 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.544042415 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.286391008 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.292241748 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.270240791 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.522596459 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.772396337 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.293036514 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298410499 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.324578199 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.287496421 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.301457405 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.498011786 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.293372501 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.288288503 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.549560261 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.288971199 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.570393966 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.306484521 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.299717517 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.288501153 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.562230035 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936286627 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416959479 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.493160134 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304583333 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.310972155 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.296883066 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.303689189 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.305907758 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.295099699 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.299020512 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.288643915 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.288309153 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.288818711 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.015378027 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.318384038 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.285689705 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.289024501 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.546291897 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.393188217 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.294385824 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.289104038 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35625449 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.294522832 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.293497004 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.288577806 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.877011802 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.289971986 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320905674 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.295640226 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.299765573 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326174287 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918949434 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.300258855 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.29455647 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.294568661 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.29056461 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.30210901 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.312518179 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.292376929 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.31802491 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.291744107 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.993255938 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.305627694 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.298065408 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.843627529 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.301697485 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.2953787 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.523989379 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.292944308 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.292466771 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.291852041 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.292925939 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990714228 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.306038449 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.276250094 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.313944665 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.033862239 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.523522503 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.319838697 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.324426412 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.516745423 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.277382915 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.293367108 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.293732746 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.300119833 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.316388315 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.015370666 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31637919 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.298342957 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.55294498 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.506697778 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.293805491 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.290114398 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.772557985 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323082682 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.311727302 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.305314539 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.504904243 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.880011531 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.314912412 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.294375744 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.319018774 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.293955035 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034959959 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.302555888 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.399860788 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.303055304 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.569182189 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.070191054 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.302235598 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.364299169 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.301184609 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.296366271 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.296019333 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30264585 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.297174032 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.492809758 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.331910156 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.311776314 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.306801374 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.296836275 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.305977855 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313155169 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.302831644 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.519945318 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.304981653 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.576344481 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.296614222 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.295633297 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.296185624 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.521326776 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.29915093 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.639436907 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.560820283 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.296963425 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.315004723 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.312315886 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.316829669 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.403948209 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.319278505 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.301750174 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.556902301 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.302290465 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.300863347 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.297375327 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.321064948 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.302482324 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.304664623 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.299817113 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.883316956 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.280810276 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.306918392 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.187430413 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.313256653 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.366909534 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.304969249 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.507732431 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.301058459 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317381763 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.325116467 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.306868021 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.524528849 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.309706647 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.299347031 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.398961436 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.770810172 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.902514987 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.31792922 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.299747672 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.296145383 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.296711126 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.299172953 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.29920552 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.299809928 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.507972744 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.319048336 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.314180211 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.908182537 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307434288 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.300024361 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.327143938 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.312780717 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.306305849 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300676661 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.297147297 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300097482 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.319535664 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.315092345 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444391456 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.314374219 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.299814894 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.818402127 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.307304727 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.302471459 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.300817305 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336489004 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.30123749 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.178039724 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.567013591 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.313026557 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.581864538 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.32051839 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.321604153 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.30021069 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.304759504 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307120723 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.302406626 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.333228357 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.311834388 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.302312717 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323431365 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.879784863 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.04108153 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.844539809 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.317596524 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.313929042 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.307200996 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.03138621 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325721853 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.303763099 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.537926939 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.031021175 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325873104 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.779808729 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.322868397 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.063813764 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.56277998 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.541622996 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.308393013 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.311686354 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.568794879 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.522184856 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339362871 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.307619806 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308540191 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.288382987 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.866575834 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.324582054 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.386330064 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.032844749 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329293293 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.310321725 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.333453626 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.308416293 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.705500793 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.327851972 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.305451805 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.313923383 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.322663963 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.172250355 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.318615556 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.305241151 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936124434 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.313224768 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.783072813 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329385379 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.51432814 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.322174861 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.308872106 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.30967902 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.313303265 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.562073287 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.566162337 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313532167 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.305819926 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850770639 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.181440443 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.313638986 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307347384 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.054223424 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327023464 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.597743682 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.326599593 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.312029003 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309270701 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.306808583 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307360751 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.303800942 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.31234618 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.284196615 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.800294399 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.32323157 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330602156 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.324341903 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313037396 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.561962517 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.322845486 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.89164004 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.543550721 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.329354274 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352609961 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.312516486 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31789353 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.297934805 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.307083712 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.310080066 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371370779 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.537894539 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.308793956 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.297168478 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.319984344 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.524986563 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.309931583 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.307973687 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.5704695 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.311845926 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.311151347 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.02881792 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348345483 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.310111652 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333028286 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.310169708 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.332823137 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.385317713 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.520657337 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.326624648 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.321834751 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.704136764 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333055046 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.317926177 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.32552526 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.407899708 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.311724624 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.319088057 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.085811578 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.899879166 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.05801853 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.906521106 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.576095521 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.318879731 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316133421 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312856601 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476390358 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.311726117 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.585681113 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312628796 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.324917918 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356379453 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325063831 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326858735 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.526947207 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.588673764 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.311845273 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325954924 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317265901 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.312647012 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.32444754 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.524733303 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.810472989 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.878468486 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31937292 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.321074919 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.049253394 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.610252227 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313388527 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.312469371 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313107988 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.317252751 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.318828199 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.322925122 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313555593 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46294091 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.572689186 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974172923 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.346782208 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.34315512 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.088446539 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314479202 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.574375057 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.311563231 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.526244945 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.907828284 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.019845994 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.586090815 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.383551175 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.525364499 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.318785479 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480909511 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.313287836 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.337238149 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.315441533 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315288234 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.3131707 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.325009531 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.913216237 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.586012494 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.32016734 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.312374655 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351066068 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.326160532 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.539499488 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.033139116 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.546523272 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.325980332 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.322001707 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.31705776 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.908541315 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.582981003 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322247039 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.320027845 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.554643523 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.322530957 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.342133618 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.769799618 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.312649411 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.877817237 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.295206 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339494551 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316681349 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.044157486 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.913922081 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.33105601 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.814471641 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.323570429 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317119638 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.612014422 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.32440135 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.317778134 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.616071925 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.321604201 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.324075528 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.534592904 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.913453527 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.083051973 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.324478736 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32335036 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.325281259 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319878203 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354139723 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32537261 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.329269453 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.726832475 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.343520722 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320116608 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.332359861 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.318596775 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323162075 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.323996515 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320139761 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.326317195 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.31724792 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.307475092 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.356677025 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.324508379 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.896265708 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352159234 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.993669167 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.644060712 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.5774159 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.326338447 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.309937863 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.325424704 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322060373 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322856496 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322291414 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.335226518 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907166402 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.335536191 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.338494544 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.32513403 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.539298568 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.533782643 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.321976242 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.539814726 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333006184 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.341519389 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.306060591 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323943808 seconds)
  done (took 946.87542066 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.348811464 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.341568886 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.345293018 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.346678772 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.338155619 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.371469037 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.330938999 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.343257821 seconds)
  done (took 19.989451777 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.327960263 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.336896734 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.328538889 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.337241223 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.32650899 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.78999707 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.348974437 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.331808257 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.334426714 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.331904642 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.33358226 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.036287965 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.337886357 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.329700254 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.314587839 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.336686002 seconds)
  done (took 31.708115526 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.268849584 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.455724761 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.212743778 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.360258584 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.370538829 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.324450295 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.544002377 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.342696485 seconds)
  done (took 26.103747228 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.336529153 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.338437646 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.337041955 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.336387677 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.336162463 seconds)
  done (took 7.909899872 seconds)
done (took 1200.865237037 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.328041828 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.331303442 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.328868272 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.332136233 seconds)
  done (took 6.545340081 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.308119271 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.310672875 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.310694485 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.325288109 seconds)
  done (took 9.480256942 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.026869568 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.951706306 seconds)
  done (took 5.204402267 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.332532205 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.08401297 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.078555897 seconds)
  done (took 7.726448835 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.629719185 seconds)
  done (took 2.860889613 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.742049213 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.701910381 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.521942807 seconds)
  done (took 6.197676201 seconds)
done (took 39.24018 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.33645647 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.576062989 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.489489916 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.336648661 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.493214653 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.491201649 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.069468098 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.330567877 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.329936216 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.345563613 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.337809045 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.490477324 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.119821932 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.573789882 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.120216559 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.576800326 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.492059483 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.334845879 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.359468835 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.330782565 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.073258264 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.331593946 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.334084279 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.330951398 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.511668154 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.481506826 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.346887225 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.582957871 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.333298174 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.337774226 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.48454537 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.332592099 seconds)
  done (took 81.247947812 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.347016066 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.333008634 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.347438309 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.343417255 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.335866915 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.344846378 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.334718671 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.339891284 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.333425566 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.333053279 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.344395579 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.331399806 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.335140202 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.332125036 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.352255177 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.332142939 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.350364119 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.351496806 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.350782492 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.333485142 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.33476082 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.34848122 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.334545302 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.333907066 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.332965489 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.357873244 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.355768139 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.333177138 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.352653176 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.336439289 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.338889687 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.364390982 seconds)
  done (took 76.163243322 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.347126224 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.334626852 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.354842234 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.334649573 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.333195196 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.336713315 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.336692868 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.332789979 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.349867763 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.334614452 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.335493448 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.334877554 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.335461981 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.344328427 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.336636066 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.33562718 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.351124648 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.354244028 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.356795091 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.334417416 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.338732084 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.335531761 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.342706002 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.335999384 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.339290286 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.359731227 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.336564186 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.336463573 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.351961551 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.358849679 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.338621678 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.335255993 seconds)
  done (took 76.158157864 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.61913941 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.344178124 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.343715872 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.328208385 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.345156052 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.343189774 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.337592807 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.617758783 seconds)
  done (took 14.515856807 seconds)
done (took 249.317704068 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.349994887 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.34957393 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.546375694 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.364410554 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.343081681 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.368168263 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.365345368 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.556902516 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.330550137 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.574822468 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.355744928 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.363210951 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.342090108 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.363652471 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.616213981 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.487332825 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.26613739 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.337655304 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.682936589 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.355290941 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.633690206 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.337795425 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.610876357 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.307847796 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.371368598 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.342205512 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.349457326 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.262388756 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.382518676 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.681998339 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.345267272 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.343231159 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.447258804 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.443252607 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.550435254 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.493602891 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.339303705 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.424359623 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.559418734 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.336113556 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.340655045 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.130498136 seconds)
  done (took 81.59199278 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.343269776 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.462769279 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.344092351 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.343445807 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.34425495 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.4629099 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.439721564 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.343372232 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.344326855 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.343970346 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.343072289 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.344911006 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.343761215 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.344050513 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.344026586 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.344923785 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.343319269 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.355928547 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.356852162 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.388334504 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.466858296 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.368795064 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.336802202 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.34594244 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.447324577 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.480623699 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.34511812 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.335409724 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.385481334 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.344988028 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.349776741 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.390407418 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.346032536 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.345702437 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.460784466 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.445087912 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.356229269 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.342311673 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.459773215 seconds)
  done (took 54.873935166 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.345779622 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.592546004 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.773584191 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.354354318 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.347842316 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.351922327 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.425257198 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.350504487 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.350856185 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.351357371 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.500114516 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.351549909 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.381301949 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.805208549 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.350721358 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.348101549 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.347205631 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.348488725 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.606600343 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.35762741 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.444810016 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.349450306 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.424315361 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.357378432 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.370393928 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.349475596 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.353902455 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.907933514 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.350902961 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.500626472 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.133773514 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.425588108 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.863180329 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.7871605 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.138391465 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.353714082 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.349656641 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.504668352 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.35150651 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.348835071 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.42684548 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.352602229 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.784842767 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.994978835 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.367722082 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.349618144 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.931525675 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.505987769 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.59001715 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.364427205 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.814142747 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.353036618 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.351419789 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.352263554 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.593114205 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.358389096 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.350450758 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.91878864 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.37271728 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.427850712 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.352669971 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.352949486 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.608668766 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.351964686 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.601157553 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.355110459 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.359462966 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.371661164 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.790089372 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.35539578 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.019399444 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.370554253 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.35050213 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.504585435 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.604852003 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.96732457 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.357023014 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.613986962 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.879532933 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.426660164 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.358082175 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.902671292 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.432389858 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.357239977 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.355516113 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.354878484 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.353556336 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.400717801 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.426521983 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.960868257 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.011261995 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.947174552 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.453586504 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.367206788 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.353850354 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.924795758 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.37127048 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.354002493 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.78505715 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.019056999 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.372264862 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.36221071 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.022756473 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.374455628 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.432427863 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.362440683 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.800998365 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.356286482 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.403549091 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.354615808 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.361676469 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.377779363 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.431506097 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.358868241 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.354244842 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.994965457 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.530981246 seconds)
  done (took 178.446058292 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.347999471 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.348172217 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.347745313 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.347567199 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.355298673 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.356242366 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.347818226 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.348122751 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.354797445 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.349384875 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.349716779 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.349217478 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.350766071 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.354367943 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.361030704 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.35718251 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.349145943 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.34917818 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.350097935 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.348028701 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.348525862 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.367512966 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.348379014 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.379016008 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.349086252 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.351201779 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.356064671 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.352056002 seconds)
  done (took 63.121795683 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.356649685 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.908388668 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.358596735 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.48744383 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.378231385 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.354853686 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.484878683 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.412155704 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.359875068 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.354245761 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.355316096 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.653374017 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.358566046 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.862759689 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.546741662 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.488795982 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.860593908 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.374936878 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.355149314 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.355944271 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.486931613 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.366266594 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.652921123 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.909786939 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.357792194 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.911822707 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.345781905 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.357432855 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.357305806 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.91419489 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.355806493 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.655802096 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.433543527 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.415728443 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.930253019 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.867535232 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.89314217 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.508567832 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.359299904 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.357551075 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.358191071 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.346706935 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.920007737 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.365177849 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.361297788 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.910012101 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.377500128 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.35968855 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.351254002 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.357836487 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.419070341 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.421940327 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.662591906 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.995665389 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.438514297 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.358493295 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.489802908 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.647997078 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.363778737 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.871258396 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.351740199 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.922706498 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.366570781 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.347727891 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.360987943 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.351617092 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.507928016 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.49016239 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.868586204 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.380026512 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.865928007 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.522776776 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.359367273 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.360619594 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.362945345 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.92095081 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.876076005 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.528593579 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.493778647 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.558128566 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.350080684 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.36162313 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.350474433 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.437328918 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.361197375 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.92347495 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.892770488 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.385394073 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.364975195 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.363741518 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.364154303 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.540502087 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.923907537 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.439289331 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.868152395 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.685015558 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.665443748 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.36483102 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.42021725 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.379526376 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.733211034 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.367979742 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.418691159 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.699209908 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.669705392 seconds)
  done (took 161.860003953 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.603184077 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.381658287 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.455786951 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.516706455 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.965345663 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.944572947 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.361953407 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.485270391 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.470702926 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.618221644 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.358512476 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.457852996 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.575226197 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.442993826 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.070888259 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.436612563 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.452297152 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.508519132 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.504412526 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.359595352 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.016737718 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.673960147 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.554020308 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.391703882 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.465333645 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.135605208 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.948737649 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.897444076 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.545410578 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.365727647 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.917719812 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.363941183 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.285874456 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.040137641 seconds)
  done (took 63.828045032 seconds)
done (took 604.959241519 seconds)
SAVING RESULT...
DONE!
