cset: moving following pidspec: 14437
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.273528941 seconds)
loading group "string"... done (took 0.538943605 seconds)
loading group "linalg"... done (took 6.887708271 seconds)
loading group "parallel"... done (took 0.157196111 seconds)
loading group "find"... done (took 1.200315056 seconds)
loading group "tuple"... done (took 1.738763822 seconds)
loading group "dates"... done (took 1.184514752 seconds)
loading group "micro"... done (took 0.223867639 seconds)
loading group "io"... done (took 0.981120421 seconds)
loading group "scalar"... done (took 38.644012829 seconds)
loading group "sparse"... done (took 13.480064529 seconds)
loading group "broadcast"... done (took 1.01723326 seconds)
loading group "union"... done (took 13.466230911 seconds)
loading group "simd"... done (took 4.730938092 seconds)
loading group "random"... done (took 9.440917872 seconds)
loading group "problem"... done (took 2.103537048 seconds)
loading group "array"... done (took 23.121476674 seconds)
loading group "misc"... done (took 1.971000444 seconds)
loading group "sort"... done (took 3.632606068 seconds)
loading group "collection"... done (took 18.103492935 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.51027327 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.140981596 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132128431 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.134458454 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.171245392 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.132524919 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.144271494 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084728551 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.094088667 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.156781022 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.134196827 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.467973107 seconds)
done (took 5.200094779 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.269524102 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083936765 seconds)
    (2/2) benchmarking "String"...
    done (took 0.096082275 seconds)
  done (took 1.023259233 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065765778 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121329475 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.06547943 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.083012701 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066354312 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.064852169 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.083374477 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066009846 seconds)
  done (took 1.398902354 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073766386 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068059862 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.084734062 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.06789018 seconds)
  done (took 1.142688089 seconds)
done (took 4.756948192 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.850734322 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.259884152 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.183421625 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.449871281 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.147947218 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.182917533 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.667190343 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.328348691 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.200991149 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.082541061 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.121784919 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.358042678 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.124072806 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.665093249 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078140027 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.110536113 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.17092671 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.441740575 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.068776241 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082558373 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.103979783 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128669598 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.106178707 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.094615111 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.158687849 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.082934176 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.147771176 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.08072218 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.083932404 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.225009812 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.188175133 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.677731072 seconds)
  done (took 10.540399552 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.09619985 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.11407022 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069112225 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140269626 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.097106908 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.086526743 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071110967 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066614671 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.104422957 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.145851163 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088553076 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.118098939 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065204591 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.087283726 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.087039098 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.226132825 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079455706 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.099148239 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.071581319 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.093527602 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.1091348 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.094784462 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.080676888 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095924485 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.131671769 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.19770353 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097043484 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.112897342 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068492138 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.100708853 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.132599837 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.130665872 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066780715 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.085223959 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.126435274 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.113660142 seconds)
  done (took 4.614360992 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.050574298 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.08539619 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.163380716 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.112783734 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.155394895 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.070808373 seconds)
    (6/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.11233962 seconds)
    (7/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.111023887 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.085935672 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103201751 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.225900329 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.112317351 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.446143213 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.134272321 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102833455 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070032444 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068185234 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.06580238 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.572738703 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.146169638 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102208821 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103618569 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09010086 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.070249516 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.362682553 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068192093 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066282409 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08527359 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058815446 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.141487945 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068051439 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.129039751 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.087600817 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066707329 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.122642429 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.188127482 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090053282 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.152827813 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084236216 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065849844 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.165401522 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.091340499 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.065591859 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065406011 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.100416885 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102951915 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.119769599 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.083880943 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067408191 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.177140104 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.069406718 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.100866401 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.877851325 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.167939363 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078651544 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067875617 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.28624368 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.083505525 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085194046 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06458046 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.28133104 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.152088495 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069177404 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.086264162 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068291613 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068200959 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.377902059 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084474179 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.009504139 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.068470728 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076141727 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068034044 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065850226 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094165703 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072791227 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.102014242 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068068325 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.067662993 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.084531231 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067047915 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067344 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.102677067 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.206136853 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066925769 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.085554353 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065041043 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.102525752 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09630979 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.086828374 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065327053 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115732849 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069682219 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067668644 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.120157463 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067317499 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.08133046 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.086038048 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.087171727 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.129951341 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067395928 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.136168424 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068345298 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.113686004 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.071697624 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115689389 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.09504953 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06816816 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.14838412 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065209208 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064021609 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.085002073 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067562505 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.084556768 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068987633 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.077972251 seconds)
  done (took 21.285656407 seconds)
done (took 38.33940749 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.299183321 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.098359848 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078463178 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.099039326 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.097977176 seconds)
  done (took 1.599704468 seconds)
done (took 2.500689025 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.118219553 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117750088 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064058483 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.093434449 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062767391 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.120516761 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098097368 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.101110587 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115211254 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064894782 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095162167 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082343657 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063897283 seconds)
  done (took 2.123401423 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082864585 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.081654083 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086770614 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082138735 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062920363 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099074904 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08063051 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105214996 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080478589 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.070983322 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08200671 seconds)
  done (took 1.807504429 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08163841 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082428632 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086382847 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082130439 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063565121 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098926678 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080482245 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102619408 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081169035 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090205265 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064280985 seconds)
  done (took 1.808213942 seconds)
done (took 6.626376863 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077417863 seconds)
  done (took 0.966253047 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.665518958 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.026754841 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.079609913 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.134598509 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.200615969 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.143921431 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.350693165 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.090521791 seconds)
  done (took 9.779625138 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.101123736 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.086249776 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071886619 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.086660707 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071486139 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071861208 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.087964782 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071113393 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.085343051 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071193719 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067365585 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.086724653 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069945008 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.089387364 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.073326793 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.087389259 seconds)
  done (took 2.236298591 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091363648 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.10979604 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073437658 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.093956521 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071358376 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.090846628 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073244632 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.092587442 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070326879 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.089468806 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074892026 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.091196476 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.072242923 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.082873248 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074218167 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.092967213 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.072035396 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.090286483 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075860278 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.09184265 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.07549427 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.0644251 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.09095379 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074077825 seconds)
  done (took 2.962907538 seconds)
done (took 16.839255867 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.112871929 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.089484568 seconds)
  done (took 1.097728366 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081689251 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099521902 seconds)
  done (took 1.07802472 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083888439 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.082272466 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091574904 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.096908364 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066200117 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.084098917 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.107006484 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.069380782 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.067343454 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.087469159 seconds)
  done (took 1.735127081 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069099229 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.093914884 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072152276 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.100408791 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07666574 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.083857247 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075856936 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.086815928 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.082274797 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.064336091 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.092202621 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.102579632 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074583644 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.104916524 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075514214 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.088825934 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.07292962 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.088157358 seconds)
  done (took 2.403183052 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066966158 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066430189 seconds)
  done (took 1.03289167 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068736564 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063312528 seconds)
    (3/7) benchmarking "month"...
    done (took 0.084734393 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066285518 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.081407375 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063052834 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080040542 seconds)
  done (took 1.410125798 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.414465443 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110095211 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.334744048 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073611634 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.10454757 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.271754686 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065474595 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070800558 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.095751201 seconds)
  done (took 2.484535621 seconds)
done (took 12.143213365 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080221907 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084428348 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.113930294 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.419169572 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092999226 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.084923937 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.135563454 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.233415923 seconds)
done (took 2.151920817 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.12626653 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.618729947 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.411105847 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.212180411 seconds)
  done (took 2.152118152 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.312397695 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.113263404 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.061134779 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.088557737 seconds)
  done (took 1.48637606 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067134391 seconds)
    (2/2) benchmarking "read"...
    done (took 0.06880917 seconds)
  done (took 1.045467305 seconds)
done (took 5.718910959 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067864873 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.081476079 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.08611354 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.064470154 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.084409254 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.064874825 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064298356 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.084458233 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066636074 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.065948073 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.082851214 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070359056 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064827452 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082435918 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065850319 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066364707 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.085587532 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066222832 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063902644 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082759101 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068361389 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063351711 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.082608588 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067289279 seconds)
  done (took 2.69128372 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085227994 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.083827953 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072906107 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070742761 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.08845046 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.073554927 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.090043628 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066543184 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.089200986 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068506163 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087124843 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071665456 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067429549 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.089361888 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068228527 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.08846114 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071412999 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084115565 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068661849 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.087116407 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072218322 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066052891 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.08799092 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070595809 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.088374897 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069478174 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.087537799 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067199304 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.087915192 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070919816 seconds)
  done (took 3.25532492 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070776415 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063321087 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.08170472 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071193255 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063370218 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.083863707 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065390064 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.065097413 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.084636552 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064636268 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064474779 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.082775548 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064718571 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.082738347 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.067817937 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.069300552 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.100037945 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066948657 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.064061869 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.085476771 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.06955111 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.06381119 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.083460111 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063539213 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.080897248 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065603024 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064700596 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.08367513 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066984476 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.065064407 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.087667052 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.069668631 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.065663156 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.09099534 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.069313212 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064577548 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.089091483 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.065288561 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065748424 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.085213213 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.06546286 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064653829 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063922023 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070869191 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.086392939 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.068240573 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065587755 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.086096 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.06652061 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068059569 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063808366 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063999428 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.087352435 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.068196673 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.070416348 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.084323122 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.066789624 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063937956 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.084638138 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065869385 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062800247 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.083432809 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067886031 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064847003 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.098029374 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071323943 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.082336764 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067789012 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066043392 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.086572051 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068119729 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077015614 seconds)
  done (took 6.162839088 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091621849 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106684611 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064898104 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.084517492 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062123555 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.082809368 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069182203 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06445049 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083652346 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.070388376 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082781073 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066313465 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064806215 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095140328 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064668067 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.083054218 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071190427 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062175476 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.173167798 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066369554 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.083494165 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.0687033 seconds)
  done (took 2.681399947 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.177380937 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070495072 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.125241394 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072065253 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066667831 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09262579 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071308403 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069421482 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090369393 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068168978 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087692236 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070225208 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.086819615 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069085676 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086586158 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068874356 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087579948 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070194054 seconds)
  done (took 2.452762071 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078691302 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065673432 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.10467964 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065275697 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.084836641 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.0698202 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089937086 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075083015 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.08620748 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06713183 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.07428305 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087626073 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068405387 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084327559 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069735756 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065658896 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.087992131 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066397108 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093238203 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071966157 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089995349 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074580775 seconds)
  done (took 2.647410994 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08081802 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067458916 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.102105257 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068387476 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081141333 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065135307 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.088762504 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067602201 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069795586 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.086576986 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066807513 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082248437 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070823719 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066247702 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.088851483 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066169504 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.085869343 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066623146 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067395397 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081061272 seconds)
  done (took 2.444888479 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088396594 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085651517 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068817725 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094392864 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068670622 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084935971 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077624536 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.085564486 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068826336 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.1064688 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069086053 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067208503 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.095450186 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090925239 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068423873 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093746189 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076159199 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.095001229 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067472816 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086225487 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088152606 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066739488 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073690765 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.088876316 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.0678615 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086206154 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06832841 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090958595 seconds)
  done (took 3.193751322 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067674717 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065604618 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081265082 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065061318 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063252215 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.081785097 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064118324 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063282214 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084912927 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065223506 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.06609769 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.084665193 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067134077 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065881808 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.084823572 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066948558 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065843802 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.082200381 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064606492 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063191366 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.085095249 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067203044 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066454528 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083253002 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063607618 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.084075956 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064884081 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063286624 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083546255 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064405986 seconds)
  done (took 3.065754832 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076792968 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072140115 seconds)
  done (took 1.078519955 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064903158 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079496567 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.08239243 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070034792 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088965014 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067168921 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073557206 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089948812 seconds)
  done (took 1.547243221 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082385251 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076504791 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08676307 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079427204 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.096032802 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082247234 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.154985885 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086559953 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073670569 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064412304 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.099194842 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065260688 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091368602 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067709354 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071755765 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091864185 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064682953 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.092143197 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070117352 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064840238 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087139014 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075414232 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08759425 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063141788 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.06710479 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.108261867 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095680541 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.066991489 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069423678 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.093352269 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072291214 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.078986908 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067929416 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.067301026 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.083013126 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076886929 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100799328 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070022164 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.09276781 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069192064 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.09533309 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.06309546 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.07041217 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092482511 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076471597 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.08495197 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068186144 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061504113 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.083393028 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069195303 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061266024 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086164931 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062516175 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093322823 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.072738121 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080323035 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.084178588 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068604059 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087754913 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071038338 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073037709 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087394651 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069204432 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.084845955 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076886684 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070648683 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093986879 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061504511 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.079693992 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064696124 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075779123 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086967505 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07106738 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.08912127 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067734113 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.083287616 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071100859 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067349249 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09202614 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071810938 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.085694469 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072866659 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091870456 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066768152 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067871063 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.094637733 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065118464 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.088445258 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064591604 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100840433 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.066494791 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064527106 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.083248074 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.0774466 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088382787 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067185479 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064432935 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092530179 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060274776 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.085320948 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06906594 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067766934 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.096223376 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071414726 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091876698 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.075171938 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.093821012 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067914928 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069410541 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063125846 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066763881 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086450251 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074524602 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060916304 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089683113 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.068091737 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.085636199 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076757968 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064581896 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.085788179 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073893193 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.090927309 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.066343823 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063239781 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.088441172 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066780534 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089189027 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.07514329 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064682406 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.081700383 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061831693 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.088759561 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067345594 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069762085 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091174502 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069637763 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.080514235 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065406449 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.090546074 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.0775488 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.065793312 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.0873026 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072669243 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.087048159 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066885162 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072452085 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088440377 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066660107 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.090494911 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068885274 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061930521 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089982364 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069957603 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.083785584 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071413907 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068830805 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087853396 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067424991 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084327225 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.07519935 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085513661 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067326367 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066921453 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083846322 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077489123 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067323943 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.081905277 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06384112 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.095348761 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065017364 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.083239933 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066757251 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069046783 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.086070143 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064937698 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066116096 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.087876981 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077044818 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.090874833 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068106682 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.091234129 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078414563 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.083739542 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070155279 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066070666 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086864729 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.06825165 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.093495061 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072790078 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071626749 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.088704205 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062912009 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09079808 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075196774 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065249416 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.083987028 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.06604015 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.089686485 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072793252 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.088870534 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069881096 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066051796 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089097044 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071912221 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.090571617 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.069469768 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.068297385 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.096490478 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.067346855 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.096671341 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07049558 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.097831748 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072921426 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063540862 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.091250987 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066543103 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.093722033 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064618371 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066340331 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.087816584 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.070824383 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066959925 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.091269668 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.06320873 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094825189 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077601732 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.06842172 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.088073844 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.068328425 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07423666 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067136945 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069365065 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.093303991 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.075329102 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099298603 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068184615 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071815324 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.099821765 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068388205 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.082656106 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.074788053 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066936885 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.088097059 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067947198 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.086438589 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07254294 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.097250883 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.077219596 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061956498 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.091896753 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067623045 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067583487 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.085608834 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073301561 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.091660603 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.070400799 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074820492 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089902127 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068707935 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091336618 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.068328033 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067337399 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.087854735 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069313093 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086873746 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070064006 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066401435 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089379259 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065873824 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082971013 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069567992 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066384467 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.086301172 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07281913 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.084766594 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068545834 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068629009 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.087221117 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068657314 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066924414 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.085853046 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069761626 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086346478 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067804303 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068459706 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.08189825 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073689445 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.084569006 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074984395 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066444682 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.083128728 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.07450637 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.08872504 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072952933 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086022645 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069705986 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069290221 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.088015486 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070974335 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093759966 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06709705 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076703426 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094583112 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067580756 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.088467265 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068211731 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068344355 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.085404498 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068616062 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.085757622 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068349808 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066619508 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.091084078 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070010626 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065964896 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067049844 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066321682 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.088850392 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068909936 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060697617 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.085909584 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066832465 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.08492178 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078138326 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067111558 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.086662739 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065603999 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086430948 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.067035627 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063035888 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073496508 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075272673 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.089619489 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073816482 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.08605274 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068408065 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095411967 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062194662 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064696745 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.084151458 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065035807 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073377029 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.087324242 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075698384 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085903181 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066847227 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063984698 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.087289493 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065683485 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061214129 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.084256745 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069797544 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084772834 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06697887 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066849512 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.08862954 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068095696 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09534342 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066583726 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066683437 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.087245183 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063804424 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065807779 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064825697 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.067824706 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.08927308 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065889164 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063873109 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.087489185 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067386087 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.087413659 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.0680027 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067453812 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093109002 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06622276 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.088587578 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071401876 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063779026 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.089406074 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067424877 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.084757257 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066920876 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070349979 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089634499 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068452867 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.094990033 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067632386 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067679765 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087257708 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064511278 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.085220889 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067869688 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066857996 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.086142473 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.06942143 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092986763 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066201715 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069351866 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086407844 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067832431 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.091413097 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069252079 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.06933258 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.093278927 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066458489 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.08761652 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075501905 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071058943 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068757137 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067363049 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.091332828 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074954577 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066114479 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.07270109 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.065915466 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.090851475 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070817316 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065027482 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087718488 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067187222 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085553415 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074929696 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066293095 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.086973831 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068340512 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.085243312 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069920467 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071726129 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09557219 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071138438 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090928888 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064246168 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064654362 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089011901 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065981339 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067788764 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.091753771 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072852027 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.088823493 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067906071 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065548271 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.096157169 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071658012 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.090492974 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065257273 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069960811 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.088075406 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068952525 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.086790597 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067617648 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067857641 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.09019944 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068080619 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.085011336 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074713237 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069483812 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087864834 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.06898018 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.087382304 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067941714 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061584884 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.087112762 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068895721 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091448966 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.06929976 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066193736 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098769494 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065074108 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.085779654 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071518112 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06606466 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.091110482 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062014818 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.087352516 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068379147 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066730066 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.082391015 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065843762 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064033591 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.089978352 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066350495 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.081590049 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078089843 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074754879 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068301492 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064440599 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.0880317 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062806401 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061321622 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.086442572 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068144638 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.087724571 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.077533581 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065339897 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.085778748 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062830753 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087061821 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072766705 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070502841 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.087223067 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064417818 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066692895 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.09228033 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072457977 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085285019 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066289049 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069818083 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.088605112 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064362108 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089636986 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064514884 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069553034 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100003718 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067439839 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087719941 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07465062 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094842569 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069893221 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062726153 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.08896391 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071814805 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.087857385 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070340796 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068217651 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104405393 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069753041 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.085783372 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066590124 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069222247 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.086773611 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074830214 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087937173 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068063491 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.090322662 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070240242 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076185221 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090170764 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074428454 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.090538225 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070513319 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.085154707 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06811154 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065022114 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.085284527 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068902848 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067013658 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.092717585 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.07445116 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.086043713 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076921774 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.096447229 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068841095 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063390347 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.086620982 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066039858 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.082157543 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068727522 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064605703 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.085040474 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065841564 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064929053 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066331965 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070052021 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.090272973 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068380113 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066100367 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.083358071 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070428336 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.090061418 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070626446 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065861084 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.090132071 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.069781373 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.07112065 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.093015934 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06637695 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.088397378 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069557405 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066885825 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.082884412 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072969132 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085180617 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069623341 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06589687 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087380026 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068773778 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069434665 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.092669572 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067208284 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.089586153 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071530237 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088691666 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064922634 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063845429 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.09240339 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065514558 seconds)
  done (took 46.679251669 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101121793 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083752619 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062821781 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061979138 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095862032 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063200275 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082872514 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06397945 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08210896 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067749871 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061840171 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08224807 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072235302 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.099665796 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074841722 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.089212924 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063410055 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.085623793 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065200883 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064855536 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.095127288 seconds)
  done (took 2.598798792 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075738308 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069726273 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071172354 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074702739 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065861589 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.095592044 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073014199 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092162506 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077235908 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090776482 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078176421 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094835067 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.068608659 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.090464522 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069105006 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094872513 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.078223334 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092097923 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.072570635 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096486323 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072597512 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.097084681 seconds)
  done (took 2.76761086 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067965205 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065760074 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.087574418 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062849458 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065888566 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.08340814 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072644804 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064622957 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.075904734 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.063813361 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.087868505 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067095493 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068660029 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.084336878 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067931109 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064721887 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.133927506 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.093702513 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067838314 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.068390268 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06187094 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068125364 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.087950486 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064766086 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.06646228 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.093830122 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.069126272 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.088092822 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.068800963 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066713541 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.089113459 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.066744429 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069325861 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089905283 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067750268 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066774554 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.090749299 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.06816112 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.084757602 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.067112646 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068088953 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.085679869 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.06939502 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069259133 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.088929538 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.066116585 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.089578482 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.069203274 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062961881 seconds)
  done (took 4.660244673 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081358086 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.129867228 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068610311 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090217087 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.106274896 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075478682 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.094290368 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.113222539 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.066207041 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.066168814 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.0817615 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.109433567 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06866374 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.095711939 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072281258 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.089208551 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070785354 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066491532 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.094172174 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067490814 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.093896718 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.073979855 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.105532371 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.101880956 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072646018 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.087172973 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06850712 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072144268 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.103075359 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.09336039 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.074267183 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.094550354 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.085065261 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.094922156 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067391904 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.090559889 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.084788794 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.08681821 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069225285 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.082674974 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.070056996 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069612433 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.093688429 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.103048871 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069995928 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.093420102 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069963854 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065055435 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.103281667 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069789886 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.09881382 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.103830863 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073204257 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.088636391 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.074253203 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.104914575 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.069850955 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.086634329 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072785646 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.102444132 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.067539902 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071207524 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.103586488 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.090023807 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.077144688 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.104613042 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.073566755 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.093843111 seconds)
  done (took 6.913564768 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075861782 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093049287 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082208533 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102345404 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072134133 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.070969457 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093880463 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.07435683 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.093018665 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079781901 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093615759 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.118236267 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071235913 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.099509767 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076404492 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096509939 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.076013496 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.096561868 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075395235 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.096159103 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.074579447 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.101802705 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092607499 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.08314284 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.119924719 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06844543 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.093323987 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07329319 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102676034 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072504608 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078094727 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.094583463 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073883535 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080164553 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078484202 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.070483092 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064037302 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097858693 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.07260252 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.094012134 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067521559 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102042635 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.093082939 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.068519394 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092948787 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073857065 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.102141784 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.07957077 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096662885 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097457686 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074239361 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102259277 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072486882 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.0944363 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.101189521 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.107615626 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101832761 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.10197693 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074646892 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.10178772 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101583241 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.087711316 seconds)
  done (took 6.40432861 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08497326 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096395283 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076761187 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.084151259 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065052623 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069279913 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063543045 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063278926 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099022825 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.075110048 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099670385 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091181563 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075715621 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098854718 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070202263 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094246189 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071006811 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.092025571 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075598479 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092440652 seconds)
  done (took 2.629713431 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076372436 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082328552 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.089262917 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072175316 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.090420311 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072563278 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.090439593 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069792037 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086308886 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07040348 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076155273 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.09798898 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066678493 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.094029067 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.095946651 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073893008 seconds)
  done (took 2.296278058 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.076798921 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.093594987 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080397405 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.087063146 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066000558 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062641277 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.087932191 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062477632 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062852876 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.100071138 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065969603 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.09190663 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.06655177 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.085379519 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06441643 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068576788 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.084216332 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064089122 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.085860364 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.080156777 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.097180791 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.067064265 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066920523 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087687714 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066777714 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.09222576 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066686308 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.08422694 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065052796 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066336056 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.088443121 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070583935 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.084429033 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.0650468 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064736448 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.087701729 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.068503811 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.089874229 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071255813 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.068055916 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.088925918 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068461655 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.089902463 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069153201 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063707722 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.091348702 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063700297 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092475726 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066927488 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.090133916 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069189449 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.070240796 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.090920993 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.074616247 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.094116814 seconds)
  done (took 5.234118593 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079824246 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069722754 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083790437 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064578665 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068358173 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.089954238 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069683896 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.09011716 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068251774 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084107517 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069680895 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068727265 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089127543 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070880059 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06734908 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068356972 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060897322 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.09222625 seconds)
  done (took 2.350344551 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072331064 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066328124 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094370715 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066341462 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065231865 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.090446522 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062663492 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.085727974 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065488251 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065478909 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087410772 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068487275 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085239541 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069579304 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066096746 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087178183 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068943803 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064253183 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.08764506 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06219043 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088619678 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065525967 seconds)
  done (took 2.629767293 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.073172071 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.09241765 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.159943993 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.105853798 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.082841329 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.079017286 seconds)
  done (took 1.59162169 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091950592 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101021347 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067752498 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086835476 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096247445 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06713537 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090341141 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067820293 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09845356 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098699046 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069203236 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097779393 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076755596 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099306212 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094486399 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075411412 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088746967 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071340091 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067582173 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083432487 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091896071 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079684931 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093138134 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071045398 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091959185 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079948647 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101873761 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100574992 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07144864 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101216209 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076867054 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091956336 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079215426 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099529536 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069818807 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09801737 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068670558 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108080078 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096307634 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080315995 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.093689832 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07751483 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1018315 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076183249 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101615231 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069845496 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095454462 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068267663 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090922181 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109202569 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075005492 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099055244 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074287685 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098549225 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098020953 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090211632 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101595624 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098696784 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077748315 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099622162 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07614564 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096000821 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096766331 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079986138 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096927105 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080960415 seconds)
  done (took 6.771862744 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083812303 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108191002 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069566374 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099231794 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076499474 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090902738 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069075331 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090152476 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068634812 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089142953 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130494694 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070855205 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09854961 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077688398 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090371059 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068739562 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089990683 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076894632 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090369977 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108044475 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070200743 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098021668 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077096777 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098586231 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098622074 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075923531 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090424875 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069590161 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088780833 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069337818 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094618644 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069076611 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09929114 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067396097 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098775824 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068319524 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090203112 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07324427 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091229491 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074089328 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099323849 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106954754 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068506076 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089997998 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077282008 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09010425 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068340645 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08995777 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068572917 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08975472 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078161332 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076123097 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075207083 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074478689 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093426068 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069516063 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090383071 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070125014 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090576069 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077748284 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100512581 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070723462 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112269825 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07046564 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093924105 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100971681 seconds)
  done (took 6.608431048 seconds)
done (took 132.269995067 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.221285686 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.189189151 seconds)
  done (took 1.411836673 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.07075372 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098073711 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.103472969 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131222768 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.08879927 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101570709 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098346531 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.100509891 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066861527 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087640022 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067842604 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068788727 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.152953695 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067740417 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066797519 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.091205295 seconds)
  done (took 2.471885321 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.107163591 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.196198882 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111263257 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067566458 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102911629 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080700829 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065803678 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.099046333 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070845235 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.087336106 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079452893 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.097338663 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.067533486 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.099375998 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075107956 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.101359048 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068430147 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.079693933 seconds)
  done (took 2.667068076 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102317585 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.144338489 seconds)
  done (took 1.258509535 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.183311523 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.139659346 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.191727951 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.433614565 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.214483945 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.272291625 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.185435469 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.183514123 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.164338695 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.178542452 seconds)
  done (took 3.152438242 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103530013 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.176268529 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.306561336 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.119099612 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.099543257 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.11923858 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.122464397 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.104379347 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.082207212 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.105036866 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.103001548 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080648535 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.122710143 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.078780511 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.099712839 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080075489 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.126593799 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076251475 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.100800393 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.078296112 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.123358347 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069977768 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.098316475 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077177068 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077558301 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.101787453 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.06837121 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.090522891 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077881905 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.098849268 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.081895595 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.11875295 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077683972 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.134346345 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.096569183 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.136964483 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.07922072 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.097975126 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076911374 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.097810641 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.07919813 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.102479187 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.075446062 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.101353492 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.068889038 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.079527123 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067241765 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066843084 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.106648582 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.070281264 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.104685402 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.08108813 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.13456164 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.091939923 seconds)
  done (took 6.407411794 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.709942537 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.131709167 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072646006 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.135782357 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120969181 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076372125 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.770540321 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118862973 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.204640266 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.096434174 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113752345 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073529775 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.106263033 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08918308 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.130900038 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.102279666 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.115627949 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071292857 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.126231642 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.124640172 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070953035 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118850417 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.09415617 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.405276964 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068815428 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093665533 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070568928 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072031053 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.139595109 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.07880057 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071339742 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173854851 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.091090851 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.145647368 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.0911822 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.07096812 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069723622 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.106133318 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.209358944 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.18266183 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.153131762 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068399186 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068122098 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.0918581 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.090583592 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090289849 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.136952278 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.084092729 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.145108538 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091813351 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072167011 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091052 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073079344 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081590369 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.080415299 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107286676 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.235392132 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.094217455 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071266996 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073875627 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.23133265 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081501735 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078495773 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.09128903 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.186526771 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070791139 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.74464482 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08720952 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068858969 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.093254782 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06918185 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09205604 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070021367 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.142031132 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.365341728 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070668935 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070136505 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090181483 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.185748186 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078024737 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090201351 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.134952994 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067125097 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.09003706 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070556149 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069151313 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.161649376 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.081739088 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069455371 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.090977343 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070715201 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.089681427 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068190061 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.186103566 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.101352455 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079959046 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.179582321 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.090203012 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.136784572 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079895705 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.091382906 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.08066915 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.088769443 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073231877 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070385163 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.104205759 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.120808019 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082564371 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094614045 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070609365 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.12405454 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083619102 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.092235615 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.081628013 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.398209649 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.10791093 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069041625 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105265627 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070033273 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.137144206 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092759474 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.207629093 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068861514 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101692933 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068740207 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.08932499 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071323871 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.136149036 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.093288845 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071485446 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070957613 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.095435075 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.082917248 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.16149063 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072880912 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.188420383 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.160246888 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.094210966 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.145914578 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071024827 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.145336867 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070298709 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.092067785 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071076323 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.750293254 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068575748 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068890483 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.091892119 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.161313316 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069905916 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079136116 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076226815 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066703086 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.787726397 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079730078 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.09968316 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079892173 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092303899 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06935725 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.089938495 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071673684 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.133359728 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.190656293 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.0715419 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068417256 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.100369416 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.135902693 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067367533 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.100206829 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077637534 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.100540927 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06863377 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.091859769 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08173153 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.140689903 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.100756969 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.157715522 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.562288513 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070918558 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100668234 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.174422887 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068132048 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.107554855 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067929406 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.105586856 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.136061455 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.097686409 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.256329517 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.138615097 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.161810506 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080503478 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.106168029 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067420723 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.090427838 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080284337 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.09061183 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070796969 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.10041566 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070604831 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070214136 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.106990938 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068994137 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.198196985 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.089772477 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.080436242 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.089772822 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071338087 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105765183 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06981113 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070390751 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.103005367 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069975507 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.1013984 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.688146589 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.100424465 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069535182 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069902965 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.184561508 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.137136314 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068054913 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.09042058 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071349774 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.134381603 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.18113316 seconds)
  done (took 30.974783914 seconds)
done (took 49.352010032 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.265237866 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.177019785 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.25170975 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.141491854 seconds)
  done (took 1.945243514 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.147425358 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.10323338 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.11943689 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065039117 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.126323132 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086978496 seconds)
  done (took 1.681257015 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.410891972 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.263949026 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.227713176 seconds)
  done (took 1.935594426 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.2271393 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.242773178 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.416437894 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.300167655 seconds)
  done (took 2.333510202 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.143969296 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.119835397 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.069784438 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.11194838 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.163086805 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.210064927 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.125375469 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.148159551 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077002927 seconds)
  done (took 2.253337424 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.19454932 seconds)
done (took 11.378541965 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.101824212 seconds)
    (2/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.186694774 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.190935865 seconds)
    (4/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.200474936 seconds)
    (5/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.179054299 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.149826585 seconds)
    (7/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.103268628 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.099647589 seconds)
    (9/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.190377061 seconds)
    (10/309) benchmarking ("sort", Float32, false)...
    done (took 0.151877763 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.066571023 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.106303283 seconds)
    (13/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.244287407 seconds)
    (14/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.185511655 seconds)
    (15/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.146884343 seconds)
    (16/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.099194428 seconds)
    (17/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.132705399 seconds)
    (18/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078784297 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.130733104 seconds)
    (20/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.174853734 seconds)
    (21/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.092067186 seconds)
    (22/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075261525 seconds)
    (23/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.23757211 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.06514188 seconds)
    (25/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.184914799 seconds)
    (26/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.097092154 seconds)
    (27/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.108354833 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.119080293 seconds)
    (29/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.163040466 seconds)
    (30/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.13308863 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.130089145 seconds)
    (32/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.171602496 seconds)
    (33/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.113515018 seconds)
    (34/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.071836211 seconds)
    (35/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.073987217 seconds)
    (36/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.097393931 seconds)
    (37/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.181713463 seconds)
    (38/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.076577033 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.117628047 seconds)
    (40/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.141825808 seconds)
    (41/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.100554213 seconds)
    (42/309) benchmarking ("sort", Int8, false)...
    done (took 0.172748689 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.093736066 seconds)
    (44/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.172953497 seconds)
    (45/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.229930977 seconds)
    (46/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071624571 seconds)
    (47/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.229848319 seconds)
    (48/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.101578076 seconds)
    (49/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.07230901 seconds)
    (50/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.089241676 seconds)
    (51/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.065874865 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.142800669 seconds)
    (53/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.140197015 seconds)
    (54/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.097302311 seconds)
    (55/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072446033 seconds)
    (56/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.125068585 seconds)
    (57/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.07269401 seconds)
    (58/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.099248366 seconds)
    (59/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.098516058 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.097135429 seconds)
    (61/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.230163605 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072941767 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.166619038 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065944746 seconds)
    (65/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074439121 seconds)
    (66/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.097237625 seconds)
    (67/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.075944227 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.096812877 seconds)
    (69/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.130884733 seconds)
    (70/309) benchmarking ("sort", BigInt, false)...
    done (took 0.211134127 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091043467 seconds)
    (72/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.091199755 seconds)
    (73/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.178601862 seconds)
    (74/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.18829469 seconds)
    (75/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.103221864 seconds)
    (76/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.074655096 seconds)
    (77/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069472094 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.116260727 seconds)
    (79/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.16200273 seconds)
    (80/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.132818143 seconds)
    (81/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.120892071 seconds)
    (82/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.053315514 seconds)
    (83/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074245718 seconds)
    (84/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.099578322 seconds)
    (85/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.17659832 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.14689857 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.148491784 seconds)
    (88/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.063878471 seconds)
    (89/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.123810866 seconds)
    (90/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.054229666 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.094531233 seconds)
    (92/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.100119297 seconds)
    (93/309) benchmarking ("sort", Int64, false)...
    done (took 0.067971754 seconds)
    (94/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.138550748 seconds)
    (95/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.069808616 seconds)
    (96/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.160775166 seconds)
    (97/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.178624492 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.116244392 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088958719 seconds)
    (100/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071341546 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.120203239 seconds)
    (102/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.09705989 seconds)
    (103/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.063374792 seconds)
    (104/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073578964 seconds)
    (105/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051884325 seconds)
    (106/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.077335549 seconds)
    (107/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080222954 seconds)
    (108/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.100099135 seconds)
    (109/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.076842196 seconds)
    (110/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.203047992 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.150627676 seconds)
    (112/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.20092625 seconds)
    (113/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.06894439 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.097127166 seconds)
    (115/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.067273397 seconds)
    (116/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.060693722 seconds)
    (117/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.125380427 seconds)
    (118/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.191622841 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.145389037 seconds)
    (120/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.098088269 seconds)
    (121/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.052449787 seconds)
    (122/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.067374638 seconds)
    (123/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.075839746 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088974064 seconds)
    (125/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.094212815 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.092173115 seconds)
    (127/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.053046662 seconds)
    (128/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.162906634 seconds)
    (129/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.402678948 seconds)
    (130/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.181112639 seconds)
    (131/309) benchmarking ("sort", Bool, false)...
    done (took 0.159410832 seconds)
    (132/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.09780508 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066615415 seconds)
    (134/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.073376472 seconds)
    (135/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.101150243 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073402442 seconds)
    (137/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061561585 seconds)
    (138/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.093327564 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071597333 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.094136333 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.121423499 seconds)
    (142/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.112161094 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.132676081 seconds)
    (144/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.094281755 seconds)
    (145/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.146857353 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.096402829 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.066490569 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065943706 seconds)
    (149/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.08948343 seconds)
    (150/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.081591076 seconds)
    (151/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.052334547 seconds)
    (152/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.065876458 seconds)
    (153/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.050737172 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064385992 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.09865502 seconds)
    (156/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.053039606 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.064987877 seconds)
    (158/309) benchmarking ("sort", Float64, false)...
    done (took 0.149463784 seconds)
    (159/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.071666617 seconds)
    (160/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.090584919 seconds)
    (161/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073025634 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.136691972 seconds)
    (163/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.138122866 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.097906408 seconds)
    (165/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.06606863 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.088363897 seconds)
    (167/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.092007045 seconds)
    (168/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.186391894 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.067994308 seconds)
    (170/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051459541 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.110710076 seconds)
    (172/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.170525194 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.115193882 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.09413663 seconds)
    (175/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.075996802 seconds)
    (176/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.136866959 seconds)
    (177/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.070935009 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.122798203 seconds)
    (179/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.050877192 seconds)
    (180/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.133885816 seconds)
    (181/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071805354 seconds)
    (182/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.194270964 seconds)
    (183/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.108562728 seconds)
    (184/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.080636344 seconds)
    (185/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.052565533 seconds)
    (186/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051284834 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.117359196 seconds)
    (188/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.052307772 seconds)
    (189/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.067664119 seconds)
    (190/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.159814531 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072078914 seconds)
    (192/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.075086056 seconds)
    (193/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.053568388 seconds)
    (194/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.170252967 seconds)
    (195/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.088666628 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065072805 seconds)
    (197/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.093031663 seconds)
    (198/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.145712295 seconds)
    (199/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.098651557 seconds)
    (200/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.06658314 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.114584569 seconds)
    (202/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.0677899 seconds)
    (203/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.053912502 seconds)
    (204/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.078704776 seconds)
    (205/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.053851402 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.085511926 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.0896128 seconds)
    (208/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.052383082 seconds)
    (209/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.111068038 seconds)
    (210/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.068362398 seconds)
    (211/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.054030741 seconds)
    (212/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.094951362 seconds)
    (213/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.173038425 seconds)
    (214/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.074469628 seconds)
    (215/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070774492 seconds)
    (216/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067224225 seconds)
    (217/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.101304737 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.101171239 seconds)
    (219/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.098725109 seconds)
    (220/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.166435652 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.098682373 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074001597 seconds)
    (223/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.096234229 seconds)
    (224/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.05384308 seconds)
    (225/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.050817539 seconds)
    (226/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.194849412 seconds)
    (227/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.071935978 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.166274665 seconds)
    (229/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069130452 seconds)
    (230/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070503876 seconds)
    (231/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.099088614 seconds)
    (232/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.168625435 seconds)
    (233/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.078467637 seconds)
    (234/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.066611936 seconds)
    (235/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.08803149 seconds)
    (236/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.071763145 seconds)
    (237/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051263595 seconds)
    (238/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.160704406 seconds)
    (239/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081132941 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.110808003 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.137555462 seconds)
    (242/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.09092744 seconds)
    (243/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.083052981 seconds)
    (244/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.064522288 seconds)
    (245/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.097345449 seconds)
    (246/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.136459928 seconds)
    (247/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.085515345 seconds)
    (248/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065995242 seconds)
    (249/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.051220711 seconds)
    (250/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.074660815 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.096733544 seconds)
    (252/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052449571 seconds)
    (253/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.091238541 seconds)
    (254/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076648851 seconds)
    (255/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051302752 seconds)
    (256/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.095277999 seconds)
    (257/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.052395053 seconds)
    (258/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067177665 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.090788677 seconds)
    (260/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.1080795 seconds)
    (261/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.074703291 seconds)
    (262/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.069782108 seconds)
    (263/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051730722 seconds)
    (264/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.20515447 seconds)
    (265/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.087858421 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.097351827 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.074205393 seconds)
    (268/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.05124202 seconds)
    (269/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.111807591 seconds)
    (270/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.11832409 seconds)
    (271/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.077647675 seconds)
    (272/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.052217565 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.111790947 seconds)
    (274/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.051001385 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.124860446 seconds)
    (276/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.087774059 seconds)
    (277/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.052202863 seconds)
    (278/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.053569832 seconds)
    (279/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.093259497 seconds)
    (280/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.08021085 seconds)
    (281/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078309253 seconds)
    (282/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.087029146 seconds)
    (283/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.053498668 seconds)
    (284/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.063328628 seconds)
    (285/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.098167405 seconds)
    (286/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.052223339 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073331827 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.089912669 seconds)
    (289/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.053055616 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064580462 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.090324038 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.065346459 seconds)
    (293/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.06601815 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.098551334 seconds)
    (295/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.053466805 seconds)
    (296/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.051715502 seconds)
    (297/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.074473522 seconds)
    (298/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.054295792 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071914872 seconds)
    (300/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053174945 seconds)
    (301/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.078817256 seconds)
    (302/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.05213437 seconds)
    (303/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.06423909 seconds)
    (304/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066199392 seconds)
    (305/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072969603 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070441026 seconds)
    (307/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.07818499 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066745033 seconds)
    (309/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.06536212 seconds)
  done (took 33.047794098 seconds)
done (took 34.089665958 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082145887 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114413514 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076060475 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.091078197 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.105283333 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075881759 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.096795881 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079215851 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079023761 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.079896359 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.104301282 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055404516 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073865427 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.099289988 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075490507 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114866657 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078329611 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.096053904 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074955157 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064943708 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.096815625 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066822833 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066591616 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.079272658 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078761744 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070806733 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.09720523 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07363455 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.088825623 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066958916 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068920651 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.097439684 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066252792 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077209569 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.096258033 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073456649 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097781224 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077633397 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067656804 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.090254185 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075212694 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065739839 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.096863384 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073804338 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071332063 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.095746235 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073228106 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.101801937 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091622804 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092045681 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075123971 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076880058 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.10171048 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.07251524 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.09370234 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074470308 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070431645 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.116415523 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073348189 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067021956 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.072616076 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.072913643 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070141103 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071683742 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.071604568 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.105232655 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.07516977 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.096054104 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075317045 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071466755 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.091119885 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073348705 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.06887952 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064755116 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075435315 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075676197 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064162736 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.07009989 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.101526153 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072949301 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064789256 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093569035 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068288931 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071171408 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093600948 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055732257 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069241334 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.097025217 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065559977 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096111601 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073213296 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07230696 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.091471865 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077484498 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064963541 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.095621463 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.06692975 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065689237 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.092564729 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.07055713 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065409335 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092425502 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075266956 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066126165 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.096743186 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079629526 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.089621068 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072736959 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064949141 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064706481 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078432917 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.100721855 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067467621 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068299311 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.090223922 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07380567 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064639226 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.090123006 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066955248 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065404564 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.096754575 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06626928 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067172673 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.097365946 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078902935 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.088761593 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070736343 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068057101 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.089154952 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072473771 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065856404 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.090048635 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.068251034 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062154552 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092390597 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.068274557 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07253071 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092461505 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073486469 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067139394 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.098538045 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.0710149 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.094845178 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072605656 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065048011 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.082293654 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069921409 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067587648 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.091320739 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.067143988 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067718545 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.089102493 seconds)
done (took 13.184554014 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068251212 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.169258191 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.123112331 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096544206 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.110336686 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067284184 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076270471 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.127486446 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.091576612 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.104839553 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.111572037 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.08516263 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.138166442 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064466556 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.09101662 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071151447 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066866585 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.11344326 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.125262879 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088026453 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.136064919 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065145811 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093623952 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.087927193 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.115639181 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.117696199 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068068926 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070166415 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.093993045 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.101525567 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.111168213 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070837736 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066294151 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.123627805 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.117326811 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.085299152 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.089252935 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.0847492 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066037706 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.091229863 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.088186538 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.123461314 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.104330075 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.08265452 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.072619883 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.067925024 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066255137 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.110937974 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089209594 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.104995396 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.111708415 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.106909944 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.093492142 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.082294586 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.088955989 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.087956475 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.10617722 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069070751 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066564603 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.093541965 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066072656 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068959425 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.1128512 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.114178847 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070388884 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080383859 seconds)
  done (took 7.27201471 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085069237 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089921931 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.108781321 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082964117 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064988915 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.06558855 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065605228 seconds)
  done (took 1.672957224 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068563031 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088613618 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.11469753 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089820842 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.110457572 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087333827 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.101884657 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.06779325 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.08274422 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.094314545 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087794898 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.127095217 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.068436892 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.098459202 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092024243 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.06639234 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116844913 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066936897 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.095249173 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090383262 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093266241 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.08771926 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.068530757 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.092661874 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081874923 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.091289475 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115145331 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095970314 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069159623 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069930887 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089801801 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.10800681 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105646723 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074539329 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065921493 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.107585661 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081614146 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090569247 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084126867 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.096052291 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082387753 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067612255 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.093053883 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066421056 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.07204225 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.102972974 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068310118 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066752664 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.095844728 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087163162 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.092786388 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082151121 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.066731088 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.096132027 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069295232 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096411712 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078085139 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.06823844 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.111648712 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069122733 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.107773585 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08474844 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.081133082 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.109057382 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069691906 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.105691132 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.081018308 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.093968833 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070969365 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.071188828 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.108206142 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.066067808 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068175912 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.103297506 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069558464 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.114605821 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.091226829 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068045126 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.076114892 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.065913278 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066348367 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066086934 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088119953 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.101409386 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06776498 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.09659722 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071649521 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065329998 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.092623539 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.07166267 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065140359 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.093957413 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.071337918 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.067363276 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.095395089 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083913404 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.092960564 seconds)
  done (took 9.395984733 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069822916 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068827038 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.093871414 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068931865 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068138968 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.093002561 seconds)
  done (took 1.578159662 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.095512336 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.093810849 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082370318 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072536087 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.129827106 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.080825664 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.10747613 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.103790572 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.086162874 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078790416 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.107405767 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.082470008 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.112553567 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073255236 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.107529062 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.07283298 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.10662589 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076763119 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.103774763 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07521081 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.111916661 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.074323195 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072910127 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.107891312 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.071143415 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.098507252 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077360449 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103905156 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079613476 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.104373984 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.074303799 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.07039689 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096134036 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079847045 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.107077304 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071030397 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07168288 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.070270287 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102554471 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071903558 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.081180851 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.10018574 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.075068462 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.09706469 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079739231 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.096054197 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.072083302 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101137606 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082863192 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.096079914 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.07350578 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.07218705 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.096667408 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.072633589 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.095744004 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080604911 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.09563136 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.08296825 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072819751 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.097174487 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070693125 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.096467788 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.079259653 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.096015037 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.080714666 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.095735505 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.071797498 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073007984 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099198534 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.072905721 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.09628277 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.07124246 seconds)
  done (took 7.409661173 seconds)
done (took 28.428812422 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.673298372 seconds)
  done (took 1.787618433 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.764640964 seconds)
  done (took 1.880125475 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.810363403 seconds)
  done (took 16.929165535 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.600278286 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.777079799 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.863921566 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.156399127 seconds)
  done (took 3.512430077 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.906923678 seconds)
  done (took 2.041187755 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.238043946 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.226030673 seconds)
  done (took 1.585162242 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.782744193 seconds)
  done (took 1.911303044 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.276779737 seconds)
  done (took 2.396383168 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.31979701 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.148586833 seconds)
  done (took 1.59840184 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.489067838 seconds)
  done (took 1.620910887 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.109641608 seconds)
  done (took 8.244956875 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.205069366 seconds)
  done (took 1.346639401 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.267200385 seconds)
  done (took 1.403654182 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.340844801 seconds)
  done (took 4.472824932 seconds)
done (took 51.859153828 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079224308 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081629586 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.106810062 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078725696 seconds)
  done (took 1.473965846 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078428655 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072500882 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.102286561 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072135202 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.10160624 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073144839 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073461112 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.103005614 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072499439 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.098136702 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073487265 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071738846 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.101405215 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074657267 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.096612908 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076474013 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099986017 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073653247 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075843604 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.098390693 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.07151382 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074457922 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.101187322 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071316367 seconds)
  done (took 3.147773508 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079012878 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072898154 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.099778431 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072891794 seconds)
  done (took 1.463943265 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078811655 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092301339 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.115763534 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076680241 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.119126199 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.11170705 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069920565 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.06931156 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.095664868 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.07770192 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067823821 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.123241574 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.113356685 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077781057 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078742312 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.092409886 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.069525134 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.112882616 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077846636 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077694446 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.099280919 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.07701961 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.092972843 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.09041195 seconds)
  done (took 3.297995725 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.0787629 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102466934 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.104096718 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.086883327 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.117524847 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065799458 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073355972 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.087677539 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.151736983 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065861252 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.096404676 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067120033 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.073150234 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.091495444 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.077254686 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.130434473 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.109488076 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068053419 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.122487974 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066022333 seconds)
  done (took 2.980674596 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074120447 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070297898 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090282224 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069831533 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077128579 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.098249876 seconds)
  done (took 1.628741008 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069369966 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067517184 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.09221006 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067795486 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071426053 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.091673098 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067055549 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067009647 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092434002 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067768327 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066402575 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.091723017 seconds)
  done (took 2.055720882 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.410449972 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.096272228 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.093251643 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067936749 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071562689 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.092301381 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080914259 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.06812951 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.088976616 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065335882 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.09349525 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070184184 seconds)
  done (took 2.443256158 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262038086 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077758998 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.292764537 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164137473 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139770524 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143793739 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131610178 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140958066 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.174218532 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130278394 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223598312 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197486704 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10609408 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167168234 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116193214 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.099576048 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2133167 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191987494 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131204863 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22030035 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175327369 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153049379 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176380994 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129135866 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134408681 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150701176 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071605654 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106823211 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22788023 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16102894 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17553219 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138850285 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121506278 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232371179 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227458676 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170791932 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162052683 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084217134 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.156003471 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.162669606 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229413461 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116739963 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196455262 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135097748 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106778541 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170047833 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148847342 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.147618267 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.134330929 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090298628 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201287937 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210922222 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.193304978 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087008532 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138902352 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143219654 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.142433016 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129357091 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238370921 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189422619 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153868172 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.096852051 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099721828 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207709702 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158187978 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.135572047 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.154720568 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119830871 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16194772 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182722307 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147292251 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170309535 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.184946004 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087909345 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144759683 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193917862 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157638001 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198348138 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152000821 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.098874173 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153769547 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102176705 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079281026 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.168977364 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075184366 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230370725 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123718402 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.106863688 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140342438 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136052252 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107483136 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19099747 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202406181 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129462272 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066155651 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130532482 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.146482378 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177129908 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113629494 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10797245 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113323354 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.107588406 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136245403 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.102905362 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150938762 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.076428462 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152486986 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157151117 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.102996248 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152702437 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101602083 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.127604062 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161785669 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216664256 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089366332 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110482121 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194781106 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151986075 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.132350569 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197793394 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187735922 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.125589445 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103701815 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206162141 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237463616 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08950015 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220330116 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136187202 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084100197 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.114832915 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153607543 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14024081 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.149642839 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083224266 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.116673598 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228196802 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074117248 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122944329 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161445676 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106687977 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081818248 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131773349 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129837664 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095256912 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.128208223 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.134162056 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169380755 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152011202 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133123981 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153101859 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126508063 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198529057 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117026784 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101343594 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132208041 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070570817 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.192586325 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187318274 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079043058 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192748069 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.152307171 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132399411 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147061505 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082824931 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195403391 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080174057 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.0703917 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201153219 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137147702 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110150191 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.207742405 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131145605 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.156958089 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.147908307 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164998087 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161644671 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.157526248 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133718649 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087400456 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139907858 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15343266 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.074800717 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.120296028 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081368744 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13190584 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123616462 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084576736 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197681777 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155427575 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100173079 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108748773 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127296538 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175273813 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.104163668 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157964467 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.147622989 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121132322 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.183399292 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182205723 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184989817 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101890891 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173480313 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071652724 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07368993 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.120132008 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151174321 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110529805 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084175454 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14646018 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.202237243 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159320385 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168088621 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139130188 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149701618 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183964713 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070161204 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.113754958 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177358243 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176184213 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.129870478 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118282772 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.100074439 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169820674 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13730977 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238601048 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142340514 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151560796 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212953166 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099303529 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108388453 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133852649 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166905357 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134166836 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173636627 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127854268 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115577979 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138166011 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.076177237 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13006303 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157392824 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149278336 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163622671 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.142205144 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189446732 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078321419 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145261476 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149701651 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156208574 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063287549 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147689029 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189111285 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12402785 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147729925 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183580086 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1069644 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.152270704 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206964517 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176496985 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112450805 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111728163 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147057992 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155625253 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1476906 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.196737225 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139288744 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164208418 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109873062 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.113170125 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114505527 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098386079 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132768526 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.122600856 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.137008073 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.144605641 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095813947 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159145634 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104448592 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138877967 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116168148 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.125517885 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.090605238 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126014703 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20370319 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149075675 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229480257 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.126739658 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.17519136 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222243035 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074654954 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107328326 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078805983 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168982837 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112477135 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160657304 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.126115948 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132151382 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154624959 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17306766 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122244601 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070820373 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136909046 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163960833 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139848235 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125024348 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.107285442 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22193374 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.127563561 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081122859 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142766124 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131914193 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105107463 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232948141 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.06111438 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126801168 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075801924 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109158927 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15589815 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211813221 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.083862538 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.152582941 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149037648 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140324976 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15737962 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103164011 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128240075 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143396598 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178617162 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185679746 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.09152435 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140755372 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158982462 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214481917 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133393371 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097768059 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229766637 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180272158 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.219250604 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.116797332 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144015823 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115452404 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105987461 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20030161 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083886887 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224486537 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081798755 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166140483 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134337636 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117175229 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161312215 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.099936225 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13413797 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176619292 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147314249 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111251036 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077516201 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146297342 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147527085 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13588836 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.103597229 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170696408 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.098782114 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163720979 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199085846 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110471313 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131886291 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097837863 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107952716 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137199666 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130207649 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088760859 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.147711517 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205413297 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.11744582 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209219758 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172168675 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142546088 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166832187 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128017324 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.665921344 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.105066989 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183735149 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149281176 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232951258 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097549329 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144603102 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111553015 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153359471 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204027375 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104577732 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.1726531 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192633012 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.14580946 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081305698 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131013646 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13045943 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089402639 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103686283 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110683878 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149070225 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.122372199 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.147241788 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15502095 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081535092 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125357841 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185016106 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145963878 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203063376 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169930054 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11230025 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120426511 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198332531 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079320845 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.151126821 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185019233 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135828301 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127216301 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081256869 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.13220538 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230082883 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074845177 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222342102 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149912234 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137268842 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114204998 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.172030541 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160891709 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138149392 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151375124 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121076175 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.139299259 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114573703 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110995175 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.07738502 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133971084 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14158582 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.125351546 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127144214 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.122985288 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181145847 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.10050938 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123651892 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104398661 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20401937 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205424965 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.086386071 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081672754 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150808489 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170441841 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.116261832 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177242761 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.082107749 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109374585 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.083240169 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.103753641 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.13593649 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140364652 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133569456 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140164186 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195537331 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.112083674 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.24737117 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096607567 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134029112 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.06962934 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.107639837 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122884198 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099684202 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138514591 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129777885 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201107112 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.123674321 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.119298459 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094468863 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.102016531 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084589671 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156267783 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1397934 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14794466 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126778864 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.06190158 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139511885 seconds)
  done (took 69.627708121 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.145806447 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.109652708 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.123423274 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.17641861 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.150521525 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.241133304 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.183754121 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.227838344 seconds)
  done (took 2.580137808 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070039257 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.120330328 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100013228 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.110079213 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067624583 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.095382574 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.279583063 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081601971 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.094786578 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.089090997 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.107891365 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.095234859 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.490754296 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.06672244 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.094491362 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.064636563 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.094242324 seconds)
  done (took 3.339370764 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.425360463 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.662110021 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.425658096 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.102417846 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.958096818 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.09017456 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.609243046 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.169429061 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.07221801 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.4506556 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.745752943 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.138731341 seconds)
  done (took 18.069823413 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076307348 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069316121 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.111125601 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.08386505 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072086554 seconds)
  done (took 1.643142945 seconds)
done (took 114.879408043 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081214704 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.35808991 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054138576 seconds)
  done (took 1.672545018 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.084396344 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084019383 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.113184636 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082199685 seconds)
  done (took 1.600574215 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.075635281 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076514433 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.111683584 seconds)
  done (took 1.495648782 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.285325782 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.139830309 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.116227004 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083350842 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078124775 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.105919792 seconds)
  done (took 1.498888252 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073730927 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074050354 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.100167065 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075986358 seconds)
  done (took 1.550615708 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077157166 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052320467 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054534812 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.083633737 seconds)
  done (took 1.500539877 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.08801676 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.077571169 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.106341458 seconds)
  done (took 1.499266716 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106981147 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.112341589 seconds)
  done (took 1.450648434 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083043493 seconds)
  done (took 1.310429649 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.100851501 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.141290449 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.158279093 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.138240722 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.16679189 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.139539963 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.113299985 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.088815893 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.105696772 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087800472 seconds)
  done (took 2.47482219 seconds)
done (took 17.907661733 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078922216 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.386037378 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361632868 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08925112 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.696772382 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356479881 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.044963212 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091765103 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.149187632 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094807613 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084656347 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.647295879 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.994144455 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.322857256 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.98183252 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324316309 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.674887842 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06984895 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067208851 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095291884 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.000214236 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067036533 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095859402 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068088772 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.676535632 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.373189814 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067996146 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.352930412 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068637989 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.095322001 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356584899 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068067285 seconds)
  done (took 16.125914318 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072078599 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.143989203 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074608883 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083474959 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.099596252 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069902724 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.098491116 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070249384 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153440246 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067849871 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111429839 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069094434 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072317832 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096626769 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088031914 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.066953661 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068007613 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067419271 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.097499143 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06911851 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08567196 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096820427 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068365988 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094658518 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069840914 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079415213 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096308864 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068533137 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067796526 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098771504 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070981708 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096794386 seconds)
  done (took 3.975237476 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115942155 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.152457275 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074344555 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.130085904 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112666308 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098536618 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142491086 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.122334259 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155776192 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.0675214 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112392571 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068636517 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127554396 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070169905 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086712308 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.097358838 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069306429 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09541649 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069719328 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068630992 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.114783298 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068493236 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067626721 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067525752 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.066834556 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.111610541 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068641234 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067974512 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097057633 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069933585 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098378417 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069498455 seconds)
  done (took 4.242860939 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073500788 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07437195 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110612162 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083607968 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068975451 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.100650469 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073103885 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.096842263 seconds)
  done (took 1.926564574 seconds)
done (took 27.505100354 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079927992 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069393481 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.100024916 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081247185 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072381948 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.106944314 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067517428 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.101439319 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.074104604 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072884201 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.103122346 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068451201 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070537305 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.095831667 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073830977 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067523433 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.108286027 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071719967 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.10672767 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079953281 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.06861203 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.101958726 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073498976 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.106800165 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079657563 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.104834825 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078365201 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072503428 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.097720671 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070513465 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076221557 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.112132778 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068339017 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.106805973 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068343235 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067270885 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.09972095 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068335839 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.105726556 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077893765 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069427669 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.105693514 seconds)
  done (took 4.785701949 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.088980023 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090297397 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.113185883 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061457053 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.065861477 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.09375368 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088136254 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.087906594 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060601999 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087529361 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.085683777 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060363815 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062341547 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053525475 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.088668265 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057752244 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061349399 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.084411194 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060054432 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.05936519 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057138711 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.082585256 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060827089 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062295221 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.084053836 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062939979 seconds)
  done (took 3.164403988 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07615689 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084198459 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.116340161 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126305448 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.133252179 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076819095 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.108229008 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.088082955 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.113499251 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068050369 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070810055 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.122592767 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088696681 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.10184237 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068598395 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.086595747 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.11136149 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069641526 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.101069041 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092384705 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083537866 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.106896943 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092308542 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.109296437 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068547844 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069721985 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.100866546 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081748091 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.099996856 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078308977 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071224171 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.099772733 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069737946 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.116143824 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072076146 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068202323 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.118901093 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076995721 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.10624315 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.06882403 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.069925193 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.097198536 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089342934 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.142054583 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067369052 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073097108 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07381464 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.075267303 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.09812656 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086114745 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07689686 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.097279756 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071230008 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.065844598 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.0669373 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078899051 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.099428284 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071210404 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075679133 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.100598308 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.080111951 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.09864387 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084517324 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067333476 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.104329999 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.06734255 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068216705 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.095884197 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092509233 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.097243759 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.109054323 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.096509652 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.070288505 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077051558 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.104972708 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074210317 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067155767 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.111736034 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078161046 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.099054868 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077092348 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070725307 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.099465508 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.086987188 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069978982 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.067892735 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.06709044 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072375258 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070168323 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.067631722 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.113981539 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.06856903 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.07029951 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.114051688 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067191734 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.097499359 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07440822 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071131557 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.096849326 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078410984 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.101354578 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069302625 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076480499 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.096609293 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070739842 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.106454348 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075238628 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066052413 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.101409624 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074719404 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067552231 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.098554868 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070801232 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068410393 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075741825 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.072900728 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.103293119 seconds)
  done (took 11.336599114 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.186161818 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.15319911 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.100124428 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.173161797 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077664212 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078239092 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.176099089 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.12402444 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068704212 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.0683845 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.099153527 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.114384106 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.136732004 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.151976429 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079166499 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.097645151 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083379344 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.145981453 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.178422295 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142505648 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.114023445 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077264062 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.099228527 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069412232 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073449623 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.111668319 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090645299 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.106109225 seconds)
  done (took 4.433400764 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082537922 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.128250477 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075292006 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089204887 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.121525862 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067754811 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.099572387 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070686587 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079921138 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.109269153 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.06759665 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.102820831 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074857258 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.101368079 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069915743 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.073896924 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.104059509 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069590515 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070206475 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.10261531 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077228463 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.10965691 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.073609772 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066704526 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.104051485 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066652905 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.093783577 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084935728 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.096757305 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090226652 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065458086 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.10501697 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080976703 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.097239324 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068967368 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067413814 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.096624388 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.06832391 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068979553 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.09532463 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067106056 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057205374 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.095997573 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080441616 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.102154422 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.05783804 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.07200643 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.10178856 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073432345 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065118311 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.099272297 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070853364 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.07028373 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.10368572 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072689204 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.10042408 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069930466 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.066184946 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.10358069 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.06856377 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064785025 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.095100047 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073390009 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066331191 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.105563668 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072252247 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.094230478 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069289087 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.070365837 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.102594924 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.069462136 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070601888 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.094823689 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070569327 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071865629 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.099011297 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069418673 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065796794 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.098083478 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068183121 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055316447 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.097887594 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054241465 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070595837 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.095782057 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067001719 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.094422589 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074411875 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080124367 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.09832497 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073703313 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.096722628 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068076662 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070983738 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.089235084 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071763125 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082200922 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.113607836 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067245276 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.095339571 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082232902 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.100649114 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.06821602 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056354466 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.103341758 seconds)
  done (took 9.923965722 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.095472055 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.087029118 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.09896104 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083104401 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.11895463 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087698786 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.073900306 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.103583635 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069915808 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.108076726 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074785144 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076013807 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.096786896 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077624109 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.093391242 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.10590967 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069841169 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.105259209 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072755653 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.100234644 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112710911 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081838368 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.105510696 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068836674 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.072866265 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.110168365 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089902676 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.108453065 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.079808994 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.075632635 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.109333723 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.091027855 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.104003734 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.073450425 seconds)
  done (took 4.350038464 seconds)
done (took 39.232783279 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.342119358 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.552208099 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.317073948 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.345314924 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.327590963 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.342513741 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.330526398 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.321161852 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.800362028 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.322234087 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.569255828 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.131112198 seconds)
done (took 60.965940337 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.41295801 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.467931228 seconds)
    (2/2) benchmarking "String"...
    done (took 1.596891833 seconds)
  done (took 4.329577171 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.750369373 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.239164252 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.581090571 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.320337235 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.321543979 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.64085964 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.042317376 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.215363548 seconds)
  done (took 28.622132967 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.321032974 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.712706287 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.901479603 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.887935132 seconds)
  done (took 19.087734343 seconds)
done (took 62.464898732 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.339111027 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.36424162 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.334758161 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.306095138 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.43488771 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.349189552 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.650248271 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.323944544 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.323238032 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.321162436 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.321326936 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.321326287 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.327706261 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.647372875 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.325288451 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.325005691 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.326661201 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.767544677 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.723830821 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.329554557 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.350197506 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.349218989 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.356001698 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.325552746 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.329992339 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.323322019 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.330521806 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.336152562 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.739182929 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.325183937 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.426688998 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.863171504 seconds)
  done (took 194.48199827 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.320636541 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.398760251 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.477650579 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.376289105 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.01227968 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.517440117 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.454629133 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.075535131 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.338445405 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.351316441 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.532488832 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.320003984 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.594485766 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.335460087 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.336704139 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.409258852 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.534119149 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.60466871 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.345030557 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.578397658 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.323717562 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.436970625 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.363828549 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.507378456 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.321537051 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.357379022 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.342079804 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.318917205 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.507258562 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.456769182 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.348849669 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.333958569 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.902233489 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.17503795 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.335647522 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.318999972 seconds)
  done (took 154.527674633 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.597092805 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.314270221 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.313590793 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.313641267 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.314306891 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.345118902 seconds)
    (6/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.313271467 seconds)
    (7/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.314204228 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.850247265 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.852123329 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.818550324 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.590753027 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.378768926 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.525641945 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.314404325 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.406503601 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.327685317 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.316219695 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.330203957 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.339598379 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.319200424 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.315384307 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.851243455 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.329749524 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.39545045 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.322802873 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.316524234 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.34605653 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.708687807 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.316233416 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.345781851 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.632171893 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.362054005 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.316763662 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.595778307 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.82986547 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.423479088 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.31773381 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.346561026 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.316039469 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.584681676 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.316078744 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.315475032 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.315638301 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.31931406 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.873881988 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.315144428 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.849176518 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.31882778 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.199865893 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.31544159 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.315603327 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.596619796 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.782289802 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.317170156 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.313894708 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.317310403 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.314076749 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.314870604 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.344399523 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.730908183 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.412550545 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.315311263 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.317828141 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.34368339 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.315369338 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.402296167 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.314242752 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.512546826 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.372691459 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.424737222 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.836883191 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.31763586 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.406453683 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.432356529 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.314570774 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.314570693 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.315084709 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.315018558 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.420023135 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.316141825 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.707099911 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.322294057 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.316395933 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.376123256 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.408317508 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.314893003 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.587643263 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.317290745 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.313601989 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.002724274 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.405539755 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.315785189 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.313685574 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.314322011 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.315664062 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.697539715 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.832311873 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.472533259 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.316608856 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.806119474 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.316152793 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.70107801 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.804531792 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.876154262 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.314852898 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.418351518 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.316160927 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.313857932 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.31152015 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.342557835 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.313312523 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.372494023 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.314371547 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.71293886 seconds)
  done (took 357.923649412 seconds)
done (took 709.793435908 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.013472545 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.013267372 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.123838414 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.001810672 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.993763979 seconds)
  done (took 11.400117615 seconds)
done (took 12.653536961 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.497496843 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.497459979 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.371958884 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.499418295 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.341736427 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.516623218 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.477574608 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.333771019 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.416158827 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.396044886 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.418342626 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.369089289 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.342640445 seconds)
  done (took 19.733152453 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.630187898 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.622579517 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.376022574 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.629086094 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.352948189 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.620511393 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.508634086 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.51737203 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.503017526 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.327624306 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.326981433 seconds)
  done (took 17.670742335 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.629279199 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.623392626 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.379306052 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.627827438 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.354711021 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.630589171 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.506969484 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.51914745 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.502537234 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.327824881 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.326761118 seconds)
  done (took 17.682906264 seconds)
done (took 56.34053247 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.322498426 seconds)
  done (took 2.577383667 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.355676948 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.518862651 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.337847273 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.326477696 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.323037999 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.323147342 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.326438582 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.323428523 seconds)
  done (took 12.091132166 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.32222106 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.319586917 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.322109214 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.320377582 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.319601658 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.322067105 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.320387737 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.32179036 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.320350395 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.32210693 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.319933783 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.320006947 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.319671065 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.321764613 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.322880169 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.323163453 seconds)
  done (took 22.394154728 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.322161416 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.319894128 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.319821335 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.319966654 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.320579248 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.319867139 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.320814052 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.320005136 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.320138827 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.319381889 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.320631096 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.319806048 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.321778133 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.319515999 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.320172522 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.320931158 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.319773253 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.320160883 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.324252813 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.320838747 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.320492659 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.319189334 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.321346142 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.321115039 seconds)
  done (took 32.951769281 seconds)
done (took 71.270366506 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.224801878 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.840515863 seconds)
  done (took 9.320568228 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.323355123 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.322293317 seconds)
  done (took 3.902607703 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.322127868 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.321395686 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.321771237 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.323119466 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.322490684 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.322338522 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.323567458 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.321694883 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.322321091 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.321941077 seconds)
  done (took 14.47847908 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.322740004 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.322778266 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.319487772 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.322810657 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.322516769 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.31991247 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.323153331 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.321989527 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.322645122 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.319468294 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.324340617 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.320112812 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.32143233 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.319890253 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.321644194 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.320568007 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.319844453 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.319580754 seconds)
  done (took 25.04145554 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.322905299 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.322642905 seconds)
  done (took 3.902933236 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.32006444 seconds)
    (2/7) benchmarking "second"...
    done (took 1.319338696 seconds)
    (3/7) benchmarking "month"...
    done (took 1.320143778 seconds)
    (4/7) benchmarking "year"...
    done (took 1.321929073 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.320170719 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.31946083 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.319860269 seconds)
  done (took 10.497332763 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.323506714 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.5128942 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.596906672 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.027532683 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.323167155 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.325721455 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.275388268 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.326557139 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.329253304 seconds)
  done (took 15.297090615 seconds)
done (took 83.696305323 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.302527444 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.316769862 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.169379141 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.317744718 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.331465866 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.657221437 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.348406684 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.557013053 seconds)
done (took 39.257536439 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.314647939 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.014037313 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.053757823 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.314447803 seconds)
  done (took 11.638841801 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.302799196 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.178913451 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.302667069 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.287301225 seconds)
  done (took 18.32717941 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.899854631 seconds)
    (2/2) benchmarking "read"...
    done (took 1.649782482 seconds)
  done (took 4.805283939 seconds)
done (took 42.340999853 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.322926525 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.319507155 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.321699051 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.319772682 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.322462072 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.319257083 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.320115615 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.322040202 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.322085398 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.323203356 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.322367581 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.323025995 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.320094197 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.320163137 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.32057425 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.322064494 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.323200769 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.320518064 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.320868574 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.320560073 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.322749745 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.320343917 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.321115262 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.322369786 seconds)
  done (took 32.970033305 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.322621431 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.321283649 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.323800416 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.322957507 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.320934824 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.323535815 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.322918578 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.320260171 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.322888476 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.323060154 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.32232641 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.319815061 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.323120503 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.321364304 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.322777623 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.320693735 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.323425237 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.321585808 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.3235744 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.319308455 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.322880896 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.321107207 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.320696119 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.324184235 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.320939164 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.320950555 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.324214825 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.321441687 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.32311359 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.320792953 seconds)
  done (took 40.920925807 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.329290131 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.330692913 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.323759325 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.32437239 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.324089859 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.32474579 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.32477692 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.32409295 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.324306222 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.324310229 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.323986416 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.322986346 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.323868962 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.324356147 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.323967857 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.324626139 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.324221283 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.326682035 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.323842829 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.324556973 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.325228121 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.325297768 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.324825662 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.325312595 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.326378911 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.325244425 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.325234973 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.324855147 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.32563179 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.324318483 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.325122245 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.325606755 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.32594562 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.324872769 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.325430148 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.324453315 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.328660509 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.331356221 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.325574822 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.326069704 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.326598042 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.326159006 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.324950925 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.326898162 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.325064044 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.325308283 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.325819676 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.326517283 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.326379086 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.325732324 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.326181875 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.326677772 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.325969714 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.325992603 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.326857846 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.326629067 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.326053159 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.326329142 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.326390464 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.326367748 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.327019851 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.32557612 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.325739359 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.326847933 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.327092829 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.326646388 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.326806794 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.3268462 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.326081996 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.328125352 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.326771467 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.327194823 seconds)
  done (took 96.716761624 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.327152682 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.324929106 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.324567197 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.324086772 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.324120538 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.326618522 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.324914702 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.326908604 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.32473065 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.327799763 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.326968866 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.325331863 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.324380243 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.327617165 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.328528452 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.324651377 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.327665547 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.325745304 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.327707794 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.328078076 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.327759715 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.325620235 seconds)
  done (took 30.437476717 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.329322541 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.328753436 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.325567437 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.328490492 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.325618865 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.328269894 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.32816462 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.32867714 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.328652278 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.32703013 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.325547564 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.329475184 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.326827994 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.325610623 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.326124833 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.327011205 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.328441973 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.326701721 seconds)
  done (took 25.157306155 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.326815992 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.327478604 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.32843139 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.327318137 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.327146072 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.329623611 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.327207863 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.328874271 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.328751912 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.3271157 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.329596626 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.329527533 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.330084197 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.327343175 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.329028186 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.327789696 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.329676631 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.326557396 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.329646435 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.328277284 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.327792416 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.329769349 seconds)
  done (took 30.487336705 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.330332488 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.330094775 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.327648129 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.327927344 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.327464117 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.331245263 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.330758066 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.328447802 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.329702618 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.330161842 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.328399752 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.330457596 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.327608436 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.328968447 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.32842329 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.328091798 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.331357629 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.329277057 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.330515248 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.328421514 seconds)
  done (took 27.850553536 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.332090433 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.332478612 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.331920656 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.332010212 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.332280328 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.332114943 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.332259522 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.332719002 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.33297811 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.332899573 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.331837322 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.332546405 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.332446799 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.332491784 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.333520648 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.333186293 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.333865664 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.332890115 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.332909624 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.333060822 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.333588345 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.332498599 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.334308877 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.334656272 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.334131413 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.333807947 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.333630658 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.333845959 seconds)
  done (took 38.58907858 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.332685391 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.332311494 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.329934552 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.330578305 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.330710845 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.330108505 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.330255527 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.330555651 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.33331963 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.330811774 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.333525936 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.332563405 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.332804401 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.332729306 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.333297388 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.333671874 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.332806613 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.331005225 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.330319685 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.330850174 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.334092966 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.333742683 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.334120307 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.331673867 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.330361624 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.332986498 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.330925397 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.33129516 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.334396052 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.330637059 seconds)
  done (took 41.227997186 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.352783268 seconds)
    (2/2) benchmarking "in"...
    done (took 1.353002067 seconds)
  done (took 3.973604966 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.332186463 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.333983082 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.334081384 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.331432991 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.331473397 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.335094927 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.334616779 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.332057478 seconds)
  done (took 11.93314296 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.335801218 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.334613952 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.334812199 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.333748804 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.336101611 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.336872544 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.344414285 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.350374585 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.337849079 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.336340156 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.340551988 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.342244511 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.34152036 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.336361158 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.335530085 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.338222618 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.336626546 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.336220854 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.336593292 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.336130547 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.336281781 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.339263948 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.338691279 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.334636502 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.337260023 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.348679915 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.343243942 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.336985598 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.337257417 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.343123482 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.337512787 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.33444848 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.336540636 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.337256522 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.338007624 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.337025785 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.349059869 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.358133847 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.345610712 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.337147989 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.337210264 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.335128419 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.338027959 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.339480515 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.338676249 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.337176188 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.337505919 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.334424201 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.336568053 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.338939134 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.340606008 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.336528079 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.335064142 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.343789912 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.339560184 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.346385738 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.35336485 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.339539743 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.34441999 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.350454199 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.353009774 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.343682826 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.339241053 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.338066079 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.348383408 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.358389453 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.347981655 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.3512355 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.335675777 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.339256235 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.348791136 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.352248699 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.346367076 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.338444097 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.338675417 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.338661155 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.339670749 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.338681799 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.348615744 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.358377228 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.338843608 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.338897005 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.348378114 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.358128236 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.339054886 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.338726735 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.33999129 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.339619179 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.340306167 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.350367812 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.355970522 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.341360483 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.339595578 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.340674611 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.342764387 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.340058812 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.339590869 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.341681858 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.337631098 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.340130651 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.339343997 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.344455783 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.348050096 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.339857755 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.340504579 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.350326325 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.340383715 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.340698518 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.35083384 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.34077394 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.341238908 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.341306525 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.34852299 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.339599232 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.347581914 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.348611309 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.341632243 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.342712501 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.340259419 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.341058348 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.34993703 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.364188315 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.340356476 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.340980765 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.34534499 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.35055458 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.341358877 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.345878401 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.341023504 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.338613253 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.338783003 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.343339809 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.341559749 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.342437128 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.341395924 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.344909236 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.339828101 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.341917971 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.342585556 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.344250601 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.344748665 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.343209973 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.344625645 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.344379288 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.342504409 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.343757173 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.351158463 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.343480192 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.344095859 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.343886856 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.340221737 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.342590284 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.345288172 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.342903602 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.344465898 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.342426282 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.34225224 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.343271113 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.342958076 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.343401662 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.34371482 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.340698166 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.34355311 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.339140331 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.345257166 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.34024597 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.337378576 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.340353413 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.340143881 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.334187229 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.331994657 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.33141778 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.33676301 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.339381032 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.333323774 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.333252887 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.334403668 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.330769062 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.33039054 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.330550903 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.334326081 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.337647375 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.330484287 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.340094688 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.332601961 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.332396143 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.333019975 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.333075525 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.331054671 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.332309659 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.335686783 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.336159341 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.340778903 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.339060642 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.329656984 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.33141651 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.327465518 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.329859121 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.337169389 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.323136843 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.323835124 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.326207007 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.32434631 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.323239024 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.325778632 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.324423242 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.327015602 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.323788609 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.322942458 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.322816517 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.323790553 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.32495369 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.325646339 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.322071487 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.320817427 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.320089306 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.320878539 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.31919961 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.320431834 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.321048568 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.321476804 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.319401792 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.330099777 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.314603246 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.320099919 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.320353609 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.319696884 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.318046908 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.319240445 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.31795509 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.316235241 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.324006245 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.332645808 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.317183445 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.324099193 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.33204127 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.314339262 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.31607617 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.31281194 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.309630615 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.314669066 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.320234413 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.31251528 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.313720326 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.309154832 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.310150604 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.309030137 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.317554515 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.308092888 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.308542992 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.31034409 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.313500332 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.304673742 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.308034992 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.308029305 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.307719531 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.308711393 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.306923985 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.307524724 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.307644793 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.303714659 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.303309702 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.30389766 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.306431475 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.310909209 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.311677369 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.306980177 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.304573741 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.302131762 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.304016089 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.301862364 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.300664115 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.300449828 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.314259689 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.30846791 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.306482604 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.302636408 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.29799971 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.3052051 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.298627591 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.301228848 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.298441077 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.297846428 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.295603005 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.295246419 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.292218247 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.298215271 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.296733854 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.296757577 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.298378594 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.296483059 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.293390709 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.292994593 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.292381298 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.294491615 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.297660068 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.293308233 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.295435867 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.296525059 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.293560296 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.291221838 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.291735284 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.30044029 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.30800022 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.294243159 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.29241278 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.290458784 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.290525239 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.291898971 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.290914438 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.293919348 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.296981102 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.293586762 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.300568787 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.292431344 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.301086054 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.290765513 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.293562589 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.298859734 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.288754106 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.29018219 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.293224941 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.290194356 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.30169333 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.306203216 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.292043134 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.293870127 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.291814102 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.291262405 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.292573634 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.291331458 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.29168039 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.292036605 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.303135434 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.31143156 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.29482988 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.294307767 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.28871291 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.291110888 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.29186485 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.290859858 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.298219592 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.291301474 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.293844465 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.291377305 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.292320554 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.292365191 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.291629464 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.292484786 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.289900116 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.291518489 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.301324467 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.308033613 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.29525439 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.29249963 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.304372416 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.292232488 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.301575208 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.308420001 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.293768861 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.292538678 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.291916357 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.296247256 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.292636355 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.295304719 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.292802536 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.294433348 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.2950441 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.292398685 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.296704437 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.293325026 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.293187675 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.294207359 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.302658034 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.314552135 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.294721589 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.29674342 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.290696047 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.294047926 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.296860777 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.293897797 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.293074787 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.296211772 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.303717385 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.300851469 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.294725046 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.294228243 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.295852648 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.294877386 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.295521324 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.293957695 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.293819878 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.29367554 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.296596603 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.294681053 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.301647027 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.293796851 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.295260919 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.297160903 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.29559447 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.306617702 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.294566266 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.296705836 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.29534729 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.294971531 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.295631253 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.29606827 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.295827775 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.297200055 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.295611865 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.296869615 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.30173983 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.301225464 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.299154391 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.295598422 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.295205156 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.296394815 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.29777861 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.296063329 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.295714665 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.296447044 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.296746791 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.295681629 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.300154265 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.294042452 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.296049583 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.296722668 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.296327513 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.297977576 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.301903886 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.297083203 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.293775811 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.295868526 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.29603792 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.294871213 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.296875363 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.309034899 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.299078319 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.306122663 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.304805743 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.299196071 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.297276946 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.2990933 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.304252406 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.295245006 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.29785119 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.296772231 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.30054189 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.297204965 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.299394074 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.297127881 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.308336979 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.298539627 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.298444153 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.308949642 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.320838111 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.297631479 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.299136422 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.301504693 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.298844929 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.294759788 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.297890942 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.298016118 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.308564436 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.317920447 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.298839431 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.300314891 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.29598834 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.299901336 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.30169332 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.298596236 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.299388283 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.296077285 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.298900628 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.298032563 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.298815473 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.296474695 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.298590527 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.299323303 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.301851013 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.30625955 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.296914203 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.301371893 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.299252879 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.300422955 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.299384537 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.300019136 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.296564894 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.296432118 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.30023371 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.299629374 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.301142442 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.302732081 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.29975132 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.299986313 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.299438929 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.299762695 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.302879845 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.309300578 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.306962616 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.297424309 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.300700085 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.300767566 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.306000015 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.299813462 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.301088668 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.300230617 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.302759729 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.29959024 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.299245554 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.300878735 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.302824005 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.319564057 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.319379544 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.301757958 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.302422159 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.307083327 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.301044134 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.298652431 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.300823071 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.303852407 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.304366142 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.308807894 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.300812104 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.308740886 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.316621465 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.301841694 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.304301269 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.30318872 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.310320704 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.30445859 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.301198243 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.301383984 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.305968016 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.318451135 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.301254381 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.311165585 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.332870037 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.319265692 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.302631075 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.303434906 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.301566405 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.301465923 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.306120488 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.301731714 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.301761786 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.301452072 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.301045866 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.303340054 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.307691354 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.304479869 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.302033476 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.303178932 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.303155074 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.306016553 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.299801383 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.302954086 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.302162514 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.301897641 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.303161319 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.303310026 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.303549293 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.317116657 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.315345235 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.302836764 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.303442365 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.300437748 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.307560143 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.307303209 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.312222827 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.309238425 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.302948162 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.304743041 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.305964184 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.303775639 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.301645775 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.304708572 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.304926585 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.303678747 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.302017288 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.316798986 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.313694799 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.311392748 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.30485942 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.305071944 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.304190225 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.306056655 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.304001136 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.304126394 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.307706534 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.304511626 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.306570594 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.304192361 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.303634333 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.306762737 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.31047437 seconds)
  done (took 785.31246792 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.303031312 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.302145236 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.302302191 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.301706502 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.302810233 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.301682591 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.301207624 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.301680294 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.302213425 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.302565361 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.302248321 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.30217609 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.302276589 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.302578506 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.302875529 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.302656906 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.302423164 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.302140554 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.302119605 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.302993501 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.302332122 seconds)
  done (took 28.589861407 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.306441964 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.30291203 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.303057731 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.305076377 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.302946066 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.306103012 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.303024301 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.305705673 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.305550433 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.304134722 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.306599771 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.305488972 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.304913788 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.304265661 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.303604423 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.305767681 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.30701965 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.303273303 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.306059722 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.303747647 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.306010162 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.303452851 seconds)
  done (took 29.947792048 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.308143728 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.307418221 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.306051759 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.303889571 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.307589411 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.304944999 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.306809931 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.306271584 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.307433808 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.308643834 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.30669099 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.307974889 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.312767351 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.311965629 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.31060051 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.307345281 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.451178205 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.307116939 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.308212638 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.307440791 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.304996046 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.315388959 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.306006927 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.305749027 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.307041472 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.307883629 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.307861513 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.307825405 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.307167432 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.308901993 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.310411724 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.307785739 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.3072101 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.30983808 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.307140937 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.309279774 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.310887728 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.308151492 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.30579582 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.30996613 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.316774719 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.326127525 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.307113881 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.315498852 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.307428432 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.307526978 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.311520546 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.315451384 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.305481546 seconds)
  done (took 65.521818608 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.306430614 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.307558946 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.304430392 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.30664979 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.307104598 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.306967552 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.307340571 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.306814979 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.303887793 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.304463424 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.306543718 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.304957467 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.304840814 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.306806877 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.308280799 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.305321866 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.30509928 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.305364422 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.306021075 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.305742988 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.30556446 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.308870118 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.308917393 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.30597717 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.308224379 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.305865275 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.305712255 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.309011162 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.305994723 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.305684293 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.308329851 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.307960845 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.309115241 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.306691244 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.306983248 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.308711369 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.308839648 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.306189405 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.308687162 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.306422032 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.309301019 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.308798141 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.309024367 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.309505658 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.30672901 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.305514994 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.30703092 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.306545398 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.306890942 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.30900076 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.309510962 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.306982409 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.310118648 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.306824749 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.309010183 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.308968654 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.306705763 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.30657532 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.310676649 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.306357101 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.306217791 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.308056481 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.306705442 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.309251772 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.308954177 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.307177665 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.307706686 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.307688232 seconds)
  done (took 90.135662267 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.308134019 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.307326291 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.307830732 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.308068693 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.308258633 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.308133945 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.307172908 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.306848566 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.306908564 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.307415359 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.30672282 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.306435474 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.308256753 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.306102164 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.305939063 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.306184527 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.306127254 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.305828844 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.305773332 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.305908163 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.307830039 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.305532037 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.305338671 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.306351728 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.306790573 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.305926181 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.305916515 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.306197983 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.30599272 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.305443298 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.305907496 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.305036754 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.305428792 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.305633892 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.305673864 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.306787861 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.304853958 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.30470805 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.304356722 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.304612666 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.304722603 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.305165029 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.304743004 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.305231071 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.303818449 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.304178966 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.303616796 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.304048587 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.304206697 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.304348914 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.303946631 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.305924146 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.303595334 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.303625836 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.303478374 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.304126486 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.303600478 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.30408842 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.303887879 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.302554731 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.302691868 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.303334536 seconds)
  done (took 82.189138564 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.303821019 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.303068461 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.304661692 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.301649078 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.302268967 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.299617039 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.301941637 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.302558657 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.302264302 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.302623226 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.302702146 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.301889178 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.299977077 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.301432797 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.299712916 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.299449869 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.299146747 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.299311153 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.30334369 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.299314685 seconds)
  done (took 27.270925349 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.299483114 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.303011297 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.299907834 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.300149516 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.301954139 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.300068447 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.300756124 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.301346985 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.299502206 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.301512733 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.302137622 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.302551826 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.299255865 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.299272365 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.30214192 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.298511546 seconds)
  done (took 22.051064663 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.299042596 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.300205012 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.300696013 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.300892575 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.299172865 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.299102426 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.301746372 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.297904923 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.299383987 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.301719457 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.301212784 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.302489309 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.301628431 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.301120433 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.300519449 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.301061905 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.299300432 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.299679309 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.302395421 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.303643168 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.299847111 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.299176542 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.301840201 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.301758659 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.298526083 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.300581107 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.299132501 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.299789537 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.29867283 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.300897714 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.298423191 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.298940071 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.298692265 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.298735469 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.303381138 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.297985583 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.300082991 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.30049338 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.30048832 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.301693661 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.300815781 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.298986316 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.301223231 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.300421119 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.297022142 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.299723604 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.29813733 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.29800671 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.298136346 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.298338562 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.301491349 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.300494872 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.301159411 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.301512288 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.300051783 seconds)
  done (took 72.747172231 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.301559222 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.304520206 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.297668342 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.301110111 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.300096309 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.298158186 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.300770897 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.298168063 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.298074077 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.300775455 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.299546125 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.302336423 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.299062967 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.30199805 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.299146359 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.301052495 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.298351187 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.299460526 seconds)
  done (took 24.640235902 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.299561234 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.299946047 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.301872696 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.299181627 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.299398029 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.302013013 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.299238713 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.301562976 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.301454984 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.300130986 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.299982732 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.302774694 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.301397292 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.302746029 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.300301121 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.299000543 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.301978353 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.302962544 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.300023047 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.299979032 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.303080706 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.302919519 seconds)
  done (took 29.860155168 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.302049515 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.302276933 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.318526958 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.343255416 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.330067508 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.302164297 seconds)
  done (took 9.137598764 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300727485 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303368658 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.299811637 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302587231 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30217778 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300050986 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300043777 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300034422 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302831931 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301053338 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300303977 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303034112 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30311554 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300596253 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.3035091 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302686485 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300339663 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300323094 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300983953 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303369573 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301334951 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303799047 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301106286 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300694159 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30113417 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301518496 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303831342 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301786099 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.3010546 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303697146 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304108936 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301271423 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303784947 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301727951 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305552649 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303630053 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302316985 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304622471 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304440847 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301127869 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.304608996 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304666388 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304187201 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301545204 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305892428 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301467494 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30225904 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301816103 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301732059 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305933894 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305244278 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302274314 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304747507 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304841364 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306112577 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305384015 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303332141 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303839944 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306333601 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303112025 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303438482 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306024548 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303468782 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303916821 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305480764 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303258547 seconds)
  done (took 87.230693759 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304238752 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.303885111 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302976646 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304580248 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303765497 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303136261 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303175445 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303396912 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303042386 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303910369 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305730105 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303738765 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303289987 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303105082 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303324191 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303815706 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303098373 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304002847 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303545157 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306860092 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303901547 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303906554 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304404086 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304698386 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305120091 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306582488 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304776731 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.3044099 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304482398 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304937202 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304154714 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305427178 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302000747 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.301258403 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301931961 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30213296 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301420254 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302525981 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30225645 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304989969 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299787994 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302439276 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299605164 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299491979 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30021585 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299437674 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301266828 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298402972 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298395086 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298278148 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298727701 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298290148 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298592753 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29826878 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301072646 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29689714 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297142865 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297167812 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297678319 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299620219 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29791981 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297375006 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301784737 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297773709 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297005539 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296967489 seconds)
  done (took 87.167225555 seconds)
done (took 1823.322336937 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.313104879 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.393577869 seconds)
  done (took 13.943873689 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.462777 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.413596205 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.298963307 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.345803988 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.299451903 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.304125027 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.317353772 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.29962303 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.299030309 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.299034958 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.299354898 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.487279992 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.348083104 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.300062984 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.29978414 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.390821463 seconds)
  done (took 42.708867279 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.333322428 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.304770148 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.42060247 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.320148287 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.33797653 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.491201042 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.355532678 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.306079466 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.464253717 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.350007654 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.752004221 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.336666156 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.306199303 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.340203877 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.322657197 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.492232477 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.545988309 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.755319738 seconds)
  done (took 29.77353182 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.712134258 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.319183225 seconds)
  done (took 9.271097561 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.299899312 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.322512996 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.341741937 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.296963248 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.316150801 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.359181757 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.31359693 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.300267774 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.334216854 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.351777672 seconds)
  done (took 64.484624278 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.324403989 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.306022554 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.304983568 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.303728381 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.298351306 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.297184654 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.304281507 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.296442579 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.564557512 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.423361286 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.323589928 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.310294694 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.304585267 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.307220278 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.302736657 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.338352673 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.440708984 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.302652479 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.301995656 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.310247194 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.305105288 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.409667333 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.344633015 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.302887825 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.420653239 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.576048016 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.309691476 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.311862107 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.436118902 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.303664362 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.305746431 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.305770993 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.308081442 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.851707958 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.795733591 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.313387231 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.327565748 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.31506244 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.3026007 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.415293504 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.306631712 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.311946521 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.298269432 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.774007435 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.458234783 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.414557404 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.445749047 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.308289415 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.307335623 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.363363794 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.309465554 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.307259924 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.333436108 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.063792702 seconds)
  done (took 108.87164052 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.354550592 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.786836097 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.467756895 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.316712683 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.806214133 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.74846196 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.301831849 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.558062198 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.351421723 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.759972476 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.580695169 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.644865331 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.302725327 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.30253772 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.303690243 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.300477608 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.555170903 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.596260747 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.301594712 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.306651263 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.350846133 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.797207571 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.528966115 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.481257832 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.339461079 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.741605618 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.528303008 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.645281192 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.303000468 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.299941129 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.582304335 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.309604112 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.304257681 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.301803566 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.570568146 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.634288479 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.615148325 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.303900743 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.323993799 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.305587359 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.338466595 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.732341528 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.621604058 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.543224493 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.667416554 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.755684504 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.304243026 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.30086444 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.304084019 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.508402859 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.547145651 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.79310733 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.53265759 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.317540253 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.565557412 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.301710032 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.332167022 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.769320485 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.637334187 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.641404346 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.32014179 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.303703404 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.302673774 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.835996616 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.307769611 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.625302771 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.622631559 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.3026132 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.622512433 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.622319624 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.635508981 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.765009495 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.344882214 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.320576146 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.346278451 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.797782611 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.581988188 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.762768328 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.338028546 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.30236827 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.606581769 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.303983687 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.582739301 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.842459543 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.775914479 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.355252381 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.325259278 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.304447968 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.762669712 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.761128024 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.551313812 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.668999346 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.584420139 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.341003582 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.304112366 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.304185674 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.329869147 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.541530633 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.318812408 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.665926101 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.761846408 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.075571141 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.349953573 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.830729393 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.542866459 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.319094645 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.305203637 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.304093081 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.523490321 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.377654852 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.328147256 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.306866062 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.763295609 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.175318724 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.446477118 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.010174098 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.582682267 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.305573885 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.783382714 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.304921029 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.764501061 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.305092065 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.827931613 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.924752187 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.363469704 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.529574202 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.669860365 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.320888837 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.780724961 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.833331786 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.532032617 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.779066225 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.069229022 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.305792515 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.810517066 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.340593692 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.309122638 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.488814064 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.325105175 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.57954063 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.3294352 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.787983106 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.342973836 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.581367878 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.508441625 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.795718631 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.363382246 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.586753931 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.331662932 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.453980559 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.324458306 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.315257239 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.503428005 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.453974438 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.30734948 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.856138614 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.308735084 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.468019726 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.836608374 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.344041886 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.590858572 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.306970478 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.312985762 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.616102402 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.353134637 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.931158535 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.311875911 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.584715405 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.306104896 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.757281419 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.307787599 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.83098283 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.529067074 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.326071067 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.314002566 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.110128273 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.308222755 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.453347533 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.48162566 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.576477771 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.308472248 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.739482979 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.309728887 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.545926453 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.323681553 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.307436009 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.659281166 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.360962143 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.311068415 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.330824335 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.309038911 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.309681912 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.74965533 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.349096228 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.031809371 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.4611663 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.786393693 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.618895368 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.785237925 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.36886846 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.327626233 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.787683072 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.365699844 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.590159975 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.308792044 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.348697863 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.765598376 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.308928196 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.750411372 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.807102512 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.334846279 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.572542174 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.312548584 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.419386111 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.30949882 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.556540052 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.639226506 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.311913734 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.314192862 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.53220544 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.553155957 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.529772421 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.327810493 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.328012625 seconds)
  done (took 843.706367744 seconds)
done (took 1113.997310882 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.30995018 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.311723403 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.299589315 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.313097026 seconds)
  done (took 26.488002371 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.319548766 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.316883539 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.317325338 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.317460854 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.319063991 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.316572088 seconds)
  done (took 9.160325436 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.324930201 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.313563206 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.312738911 seconds)
  done (took 19.204495323 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.527910985 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.507787827 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.666185723 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.329437115 seconds)
  done (took 10.285105081 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.317801291 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.318111607 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.317844283 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.319768072 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.320266429 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.322104794 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.318859939 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.320137476 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.321587662 seconds)
  done (took 13.12971518 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.924752685 seconds)
done (took 84.445869573 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.31160515 seconds)
    (2/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.497003739 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.928072497 seconds)
    (4/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.299405903 seconds)
    (5/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.343418566 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.608060115 seconds)
    (7/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.460168672 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.788408277 seconds)
    (9/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.312008479 seconds)
    (10/309) benchmarking ("sort", Float32, false)...
    done (took 5.308471113 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.853797961 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.576472672 seconds)
    (13/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.524378055 seconds)
    (14/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.554790276 seconds)
    (15/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.323898775 seconds)
    (16/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.435646069 seconds)
    (17/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.370150614 seconds)
    (18/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.355187925 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.069692031 seconds)
    (20/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.475676016 seconds)
    (21/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.297546636 seconds)
    (22/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.378577234 seconds)
    (23/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.81814165 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.883334929 seconds)
    (25/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.598453075 seconds)
    (26/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.341279839 seconds)
    (27/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.647888517 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.729064692 seconds)
    (29/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.953244029 seconds)
    (30/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.496772963 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.166320302 seconds)
    (32/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.314272353 seconds)
    (33/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.323939662 seconds)
    (34/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.65125906 seconds)
    (35/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.366057897 seconds)
    (36/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.33988655 seconds)
    (37/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.835961715 seconds)
    (38/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.442086728 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.711932651 seconds)
    (40/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.676744732 seconds)
    (41/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.31626876 seconds)
    (42/309) benchmarking ("sort", Int8, false)...
    done (took 4.36323054 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.145167788 seconds)
    (44/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.914437041 seconds)
    (45/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.31480227 seconds)
    (46/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.418481859 seconds)
    (47/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.303078851 seconds)
    (48/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.403075943 seconds)
    (49/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.009292546 seconds)
    (50/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.314472151 seconds)
    (51/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.397368105 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.362804471 seconds)
    (53/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.124311309 seconds)
    (54/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.101829564 seconds)
    (55/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.341298171 seconds)
    (56/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.314142585 seconds)
    (57/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.359182273 seconds)
    (58/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.356195114 seconds)
    (59/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.31593319 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.437110014 seconds)
    (61/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.790499817 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.575930679 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.421920434 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.662631625 seconds)
    (65/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.434735131 seconds)
    (66/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.370630892 seconds)
    (67/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.31182974 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.134676898 seconds)
    (69/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.307205171 seconds)
    (70/309) benchmarking ("sort", BigInt, false)...
    done (took 6.319783204 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.331351136 seconds)
    (72/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.388271884 seconds)
    (73/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.748989397 seconds)
    (74/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.912769525 seconds)
    (75/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.559482786 seconds)
    (76/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.399856188 seconds)
    (77/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.398849692 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.496520999 seconds)
    (79/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.69828062 seconds)
    (80/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.256614683 seconds)
    (81/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.498074443 seconds)
    (82/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.639122726 seconds)
    (83/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.343120698 seconds)
    (84/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.374613445 seconds)
    (85/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.313946769 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.361189855 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.312146304 seconds)
    (88/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.66687537 seconds)
    (89/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.683857709 seconds)
    (90/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.854989897 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.14329575 seconds)
    (92/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.341261251 seconds)
    (93/309) benchmarking ("sort", Int64, false)...
    done (took 5.457463474 seconds)
    (94/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 4.133941433 seconds)
    (95/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.440074967 seconds)
    (96/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.58697561 seconds)
    (97/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.929959855 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.501607809 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.685350664 seconds)
    (100/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.030843212 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.397091483 seconds)
    (102/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.342495334 seconds)
    (103/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.109772148 seconds)
    (104/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.329016621 seconds)
    (105/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.360003171 seconds)
    (106/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.178209204 seconds)
    (107/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.017314633 seconds)
    (108/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.440364183 seconds)
    (109/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.316068595 seconds)
    (110/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.304909828 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.358070636 seconds)
    (112/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.726864441 seconds)
    (113/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.78657568 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.515574912 seconds)
    (115/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.31616323 seconds)
    (116/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.687337756 seconds)
    (117/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.879564685 seconds)
    (118/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.390603339 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.332682819 seconds)
    (120/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.343534378 seconds)
    (121/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.732295147 seconds)
    (122/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.427549469 seconds)
    (123/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.317218547 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.146849583 seconds)
    (125/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.048870491 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.362616268 seconds)
    (127/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.725389346 seconds)
    (128/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.670433229 seconds)
    (129/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.34390822 seconds)
    (130/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.313898157 seconds)
    (131/309) benchmarking ("sort", Bool, false)...
    done (took 1.827591084 seconds)
    (132/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.343191857 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.866604366 seconds)
    (134/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.351886341 seconds)
    (135/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.438523171 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.574675891 seconds)
    (137/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.027920004 seconds)
    (138/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.384942204 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.018315294 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.597575022 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.34195702 seconds)
    (142/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.318370056 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.420494382 seconds)
    (144/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.7575371 seconds)
    (145/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.319203549 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.446538166 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.126700689 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.916562676 seconds)
    (149/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.02041376 seconds)
    (150/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.975646111 seconds)
    (151/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.318826891 seconds)
    (152/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.421808781 seconds)
    (153/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.356124605 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.037527246 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.345859343 seconds)
    (156/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.087296702 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.662353521 seconds)
    (158/309) benchmarking ("sort", Float64, false)...
    done (took 5.551116417 seconds)
    (159/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.561934044 seconds)
    (160/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.335633972 seconds)
    (161/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.3507632 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.393082595 seconds)
    (163/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.857061458 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.34436251 seconds)
    (165/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.519599808 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.654770098 seconds)
    (167/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.321712974 seconds)
    (168/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.584618306 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.18372704 seconds)
    (170/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.770150841 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.690858752 seconds)
    (172/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.338448289 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.721972908 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.372013452 seconds)
    (175/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.779430791 seconds)
    (176/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.509467321 seconds)
    (177/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.445700668 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.306238884 seconds)
    (179/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.162692543 seconds)
    (180/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.685915576 seconds)
    (181/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.347235356 seconds)
    (182/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.320676567 seconds)
    (183/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.512098964 seconds)
    (184/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.93065182 seconds)
    (185/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.895451559 seconds)
    (186/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.929965076 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.630348417 seconds)
    (188/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.606053603 seconds)
    (189/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.422819599 seconds)
    (190/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.320444325 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.347890709 seconds)
    (192/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.882081765 seconds)
    (193/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.308724207 seconds)
    (194/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.695744416 seconds)
    (195/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.339878074 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.70954748 seconds)
    (197/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.401046786 seconds)
    (198/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.627918319 seconds)
    (199/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.365949278 seconds)
    (200/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.319952116 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.134108418 seconds)
    (202/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.323848126 seconds)
    (203/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.329528872 seconds)
    (204/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.324037776 seconds)
    (205/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.946021978 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.651655799 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.378842987 seconds)
    (208/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.930643911 seconds)
    (209/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.350031616 seconds)
    (210/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.406798786 seconds)
    (211/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.318569531 seconds)
    (212/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.622719414 seconds)
    (213/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.545418295 seconds)
    (214/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.798266241 seconds)
    (215/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.387915791 seconds)
    (216/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.321753741 seconds)
    (217/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.334099506 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.398831102 seconds)
    (219/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.407241085 seconds)
    (220/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.321293701 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.963328122 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.524892084 seconds)
    (223/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.504904338 seconds)
    (224/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.318679625 seconds)
    (225/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.85540151 seconds)
    (226/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.335000383 seconds)
    (227/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.429077273 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.322254252 seconds)
    (229/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.386835777 seconds)
    (230/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.344801036 seconds)
    (231/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.348185599 seconds)
    (232/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.758943684 seconds)
    (233/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.388027361 seconds)
    (234/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.34232983 seconds)
    (235/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.366527696 seconds)
    (236/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.34893707 seconds)
    (237/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.583747864 seconds)
    (238/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.480931795 seconds)
    (239/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.614691794 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.62794211 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.324326595 seconds)
    (242/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.42634649 seconds)
    (243/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.553359174 seconds)
    (244/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.745051363 seconds)
    (245/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.350567838 seconds)
    (246/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.85540632 seconds)
    (247/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.499927714 seconds)
    (248/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.626963139 seconds)
    (249/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.630005908 seconds)
    (250/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.592565943 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.308303406 seconds)
    (252/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.922178032 seconds)
    (253/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.335612047 seconds)
    (254/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.34998727 seconds)
    (255/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.132500133 seconds)
    (256/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.426015815 seconds)
    (257/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.484366683 seconds)
    (258/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.406491205 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.523991879 seconds)
    (260/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.678846025 seconds)
    (261/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.067915548 seconds)
    (262/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.346942942 seconds)
    (263/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.804562705 seconds)
    (264/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.327039204 seconds)
    (265/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.406848164 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.35082485 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.705489892 seconds)
    (268/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.645477301 seconds)
    (269/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.344431766 seconds)
    (270/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.325778331 seconds)
    (271/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.871182954 seconds)
    (272/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.112866951 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.421059651 seconds)
    (274/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.503133674 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.432270046 seconds)
    (276/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.701246983 seconds)
    (277/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.589147256 seconds)
    (278/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.641359648 seconds)
    (279/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.349292412 seconds)
    (280/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.019900812 seconds)
    (281/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.425476786 seconds)
    (282/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.040138457 seconds)
    (283/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.313036566 seconds)
    (284/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.318986874 seconds)
    (285/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.340182625 seconds)
    (286/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.612043504 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.426228676 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.19033225 seconds)
    (289/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.121905674 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.409266353 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.197847143 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.443476723 seconds)
    (293/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.370822027 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.478102609 seconds)
    (295/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.535485879 seconds)
    (296/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.463065754 seconds)
    (297/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.03251433 seconds)
    (298/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.32740325 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.37111717 seconds)
    (300/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.330547871 seconds)
    (301/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.839952076 seconds)
    (302/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.526050675 seconds)
    (303/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.441716947 seconds)
    (304/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.360336388 seconds)
    (305/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.353688404 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.34976589 seconds)
    (307/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.528956465 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.731289888 seconds)
    (309/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.123509896 seconds)
  done (took 915.182944535 seconds)
done (took 916.437944558 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.360983582 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.355199487 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.33856951 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.359931239 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.450064315 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.371589906 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.348337007 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.34068614 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.386438384 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.388703775 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.33795485 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.371728048 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.341323604 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.339937771 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.338266161 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.353634428 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.292474356 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.34320698 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.356393043 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.348554035 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.355878995 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.338630427 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.388521481 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.371241983 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.343053502 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.342339805 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.342936979 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.359524753 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.451763299 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.343513977 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.342482772 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.352057146 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.294459493 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.341079069 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.334874314 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.360118261 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.353060529 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.349976986 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.344336801 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.373435823 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.66983232 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.34406315 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.342835705 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.3415027 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.341806752 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.34526693 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.341939745 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.347671638 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.35384456 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.355823857 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.677355234 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.358817497 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.344672795 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.342446384 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.353153868 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.341572453 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.345508071 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.358141146 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.361314567 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.357613235 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.288679006 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.348889748 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.342988723 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.359075623 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.350240113 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.717273502 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.339789899 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.346524273 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.672127994 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.349684123 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.715102215 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.355283279 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.343947825 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.356808073 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.375715006 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.300448711 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.339618883 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.342314523 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.351426478 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.341072027 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.352069944 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.356488272 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.347523851 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.343905802 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.357636214 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.374930933 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.353283397 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.344469298 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.351296897 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.363737979 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.351393562 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.355125951 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.346658272 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.339775233 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.352990791 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.347263725 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.347541144 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.347751935 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.348928879 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.354656927 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.674238604 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.363220779 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.340301448 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.340445927 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.342829274 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.358276116 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.675110401 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.347153013 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.366426465 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.392331095 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.345342 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.292650218 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.352116342 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.360500608 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.354031622 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.347633509 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.340984921 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.29348299 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.682923807 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.36188849 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.347032115 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.344015473 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.360827797 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.347020853 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.341542589 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.304500236 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.348968224 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.359567937 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.466402342 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.356392893 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.377872155 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.34463253 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.349306137 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.37873817 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.362191536 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.377646901 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.348847623 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.362075802 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.363218539 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.343167413 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.357766981 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.356570063 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.347466312 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.353752053 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.340833625 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.374828401 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.35910983 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.359397373 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.367644104 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.467736402 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.34401516 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.291990451 seconds)
done (took 225.521953465 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.405343551 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.340391829 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.444279504 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.343543054 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.44102328 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.440151574 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.340245246 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.340604178 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.340339188 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.717836654 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.341001974 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.340754578 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.335571532 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.341091206 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.425432469 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.343631623 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.34144079 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.68177101 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.344515338 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.413977577 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.34321565 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.341379057 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.343695894 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.723604022 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.340326716 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.340160594 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.413805808 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.344101027 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.688778043 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.339950852 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.342447501 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.688825578 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.434617318 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.361429475 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.355198561 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.351689753 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.442525811 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.360966276 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.425889009 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.426636955 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.446040634 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.384779682 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.339183901 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.342725514 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.347375922 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.346116033 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.342754438 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.371951329 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.342060507 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.343327216 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.683339746 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.355341208 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.344521886 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.343300646 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.342762222 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.375624064 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.344206006 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.346357645 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.435377361 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.347017076 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.407924975 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.725854542 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.721428933 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.346221142 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.341411819 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.343539383 seconds)
  done (took 149.163589652 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.412373921 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.419622235 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.454751266 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.347763304 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.395548302 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.460366402 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.347041069 seconds)
  done (took 11.11857744 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.353077204 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.347079067 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.396578456 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.396560809 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.346677758 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.497726449 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.346802559 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.359206042 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.344311332 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.400491919 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.348472065 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.347301943 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.354314678 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.341035858 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.395695644 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.35873237 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.463214536 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.349133624 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.348717689 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.499248669 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.34524421 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.355138824 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.399254983 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.359893819 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.349226807 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.354061481 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.933036951 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.347496905 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.345311364 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.347442453 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.345682678 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.389926396 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.348110854 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.342061424 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.347254592 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.463948837 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.348513392 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.345799872 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.348467732 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.345795605 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.348155704 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.348566328 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.348383967 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.345823216 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.348755483 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.372646828 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.348270873 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.349093636 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.348849094 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.349177633 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.400222429 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.349022882 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.346836587 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.347683647 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.405128268 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.356677175 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.349159168 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.347130661 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.349847817 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.34624219 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.500796456 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.397513884 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.349339976 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.397505841 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.35023421 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.349887709 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.350678766 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.349902148 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.404417389 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.350441141 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.397580965 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.348255118 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.507064515 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.373383729 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.351779816 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.354066435 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.353496472 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.350492506 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.344774349 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.357468889 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.348623779 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.351722513 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.357348616 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.348599029 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.348250208 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.458720419 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.459443512 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.348480077 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.363594611 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.357719418 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.348767549 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.403868943 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.351244789 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.349946754 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.403195474 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.466277309 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.404862869 seconds)
  done (took 154.756875388 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.356973592 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.359153293 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.352647353 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.366682178 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.35105467 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.35235186 seconds)
  done (took 9.42522815 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.353772278 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.352698503 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.350827456 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.351325608 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.352265184 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.353192784 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.352094396 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.354169762 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.355736065 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.352054892 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.352807781 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.353299798 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.353300016 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.352151058 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.353349429 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.352385771 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.353490378 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.349914612 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.351843135 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.352459698 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.458110912 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.352963504 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.352605943 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.354802624 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.356652847 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.353205349 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.360807534 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.35325411 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.353208622 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.36114145 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.355913941 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.354126513 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.356213336 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.359560385 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.356687325 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.356389246 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.357128318 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.354585751 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.776588117 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.354662037 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.355055072 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.3538833 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.354993455 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.354897959 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.355440713 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.358974541 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.358971794 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.361690129 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.354082759 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.355286929 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.354431016 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.3544765 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.354258853 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.355765116 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.360061147 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.358312234 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.358784463 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.35504452 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.354066103 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.356951791 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.35479662 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.354794271 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.356116444 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.35853567 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.352376993 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.355824587 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.356812424 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.357944176 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.354618058 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.355130041 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.355526499 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.352606295 seconds)
  done (took 100.371464327 seconds)
done (took 426.114573952 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.853281799 seconds)
  done (took 8.142971529 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.437485672 seconds)
  done (took 7.728702191 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.180271753 seconds)
  done (took 20.476964557 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.349678204 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.379506763 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.355620403 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.358973555 seconds)
  done (took 26.733770347 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.537224463 seconds)
  done (took 7.828184442 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.347917033 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.348049905 seconds)
  done (took 13.986564961 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.484689802 seconds)
  done (took 7.775369106 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.483383286 seconds)
  done (took 7.781924941 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.372823852 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.374702283 seconds)
  done (took 14.291085191 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.333407528 seconds)
  done (took 7.62367248 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.185849696 seconds)
  done (took 8.475729218 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.354614271 seconds)
  done (took 7.644680814 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.420446872 seconds)
  done (took 7.710303148 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.781006972 seconds)
  done (took 9.070979674 seconds)
done (took 156.561762492 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.347385789 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.349612161 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.349152085 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.350222456 seconds)
  done (took 26.686278655 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.389308109 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.388552303 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.390234773 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.398746 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.391854527 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.38906293 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.380821632 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.381978726 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.399525388 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.391552488 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.389689767 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.390712585 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.388204929 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.381166996 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.390921014 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.390700814 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.399070079 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.390991251 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.380547736 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.391756814 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.356710478 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.399658484 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.392416192 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.356652985 seconds)
  done (took 34.591424425 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.552020562 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.427014329 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.508837307 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.407466627 seconds)
  done (took 7.18625996 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.40787891 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.410351268 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.420458736 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.459755745 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.485300448 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.418425813 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.381089841 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.37810494 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.363848113 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.410605434 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.484565064 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.426441008 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.492699824 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.356865972 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.564247887 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.356641395 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.357541377 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.40913092 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.460518089 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.476923137 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.357274046 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.408779347 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.411417237 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.426215447 seconds)
  done (took 35.416941487 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.355913515 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.365546339 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.362385397 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.356484627 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.356720611 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.357045791 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.362494701 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.359116057 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.378494889 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.359074325 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.356384599 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.356819055 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.355420962 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.356919016 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.355746337 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.368774444 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.371270339 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.356898761 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.360147858 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.363341195 seconds)
  done (took 28.50811555 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.350765238 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.20609037 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.70329222 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.607389698 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.35339941 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.353778567 seconds)
  done (took 27.867968451 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.425067307 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.542724663 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.357357208 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.692182931 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.770651179 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.360543175 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.358753499 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.578856296 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.86422415 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.876214344 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.41253019 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.409181399 seconds)
  done (took 19.942354029 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.354017118 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.354570862 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.360182194 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.371171557 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.410831126 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.362883005 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.367083008 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.353160248 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.412925627 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.414534971 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.362490115 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.412490168 seconds)
  done (took 37.831482865 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441070907 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.399668907 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.209442261 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.196203147 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.730061257 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.564822562 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.175880198 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.810123818 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.35710829 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.62734325 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361445043 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445656908 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.60992648 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362703959 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.357354163 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.341880917 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.583782144 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835089561 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355724959 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.209816302 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382657856 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.354486357 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.316640832 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.384171092 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.566741753 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.483661258 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.616120081 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.354611469 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.620824293 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.369444582 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366400414 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.356031386 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.629388028 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003339954 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449015803 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365373283 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.129982936 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.068690823 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.34239344 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.222695551 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.12386345 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.358753844 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366932623 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355728722 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.2902274 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.367437173 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.818331394 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.3613911 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.067177171 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.355548496 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.366764682 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451017066 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.360282728 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.173173184 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.475812441 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.357307096 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.354094676 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364426858 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926582755 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.714321711 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.361120871 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.292579907 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.463536714 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.216159111 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999748482 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.457800571 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.361177324 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.361906856 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.293705635 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.311967139 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.377229845 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.685696514 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.378102712 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.007463387 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.06523108 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.368760279 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.290493732 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903720605 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.358781045 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.295881613 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.585135486 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357732133 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.293366274 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.305369357 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.291882453 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.037098499 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369152937 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.69409834 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.366989782 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.814765615 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.369481456 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378026137 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381401253 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.582782462 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.245219593 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359367229 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.189292412 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.522556968 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381758332 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.816183341 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.29401232 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.36156075 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.615313956 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.570346977 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.363793954 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.333706478 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.57485748 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363580985 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.378084119 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.358391143 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.373150755 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.952839305 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.369629434 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.721929502 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379391965 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.359751418 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072055857 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373520364 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.464586856 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.360720278 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.599793714 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.107518285 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363080991 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444453036 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.362231606 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.360480856 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.318282171 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.876803374 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.359663489 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.361506873 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.35974618 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.374854662 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.360133976 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.308492243 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.367427969 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362234169 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.365889057 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.584748837 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.361295162 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.640472434 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.295743071 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.690341808 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.451533965 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.583041375 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.521280517 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.359864401 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.622592914 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363019215 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.366957003 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.374782448 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379699355 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459909165 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38285273 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.372877032 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.620101355 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.365199317 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.365715016 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.330834848 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.366759755 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367855642 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.366896073 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.268532746 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.957340389 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338624287 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.370073255 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.253786872 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.375755642 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426950071 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.367436561 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.371914093 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.081881756 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.24688857 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.367105931 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.370265312 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.589469291 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.372446366 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.321474435 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.445932231 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.572790089 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.960892294 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.376914248 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.296547891 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.073826218 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.055824048 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363114288 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.298327416 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.362933362 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37277984 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.374546093 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.588933804 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.960526662 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363176683 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.246838575 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.371665185 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.374453185 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.36907396 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36327316 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.055933352 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.740684986 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.36878365 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.392155055 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507303209 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.377903241 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.299659686 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.367427316 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.368788903 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.364326263 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.364571923 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396713064 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.256154501 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.853733294 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.624977802 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.127391003 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.374614411 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.429031445 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.39707572 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.36452019 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.234328184 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393797407 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.387453094 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372880054 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.375267311 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.30640147 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.026137053 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931602897 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.092485814 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909011404 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365053187 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.379040822 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.367524094 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.828740042 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.299005413 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.922793375 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.54548698 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.830723582 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.310470788 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.577954636 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.533675273 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.093548379 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.37713963 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.593764583 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366090446 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.237413983 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.398157992 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.577742469 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401455989 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.376116619 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.296322333 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.66909817 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.634677555 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.193048716 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.449046424 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.82699988 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.246167742 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.388653623 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.364907872 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.659679068 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.53874942 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.076226557 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.539100353 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.373898174 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.371657889 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.855345157 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.375450979 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.593062609 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.011250534 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.368559178 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.580989555 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.302471831 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.377898128 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.3777404 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.367754953 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.572934109 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.37092275 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.622445489 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.377994969 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.301473793 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.369655137 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914883263 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.219982704 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.373665351 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367800108 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.083377851 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.370445225 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.641434272 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.374689151 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.049337311 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375805799 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.302331961 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.302544712 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.060670519 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.374816168 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344294168 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853173189 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.45789124 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.434525236 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389825184 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.587698602 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.625212892 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.383210156 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.967582954 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.596523198 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.241163224 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390825307 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.468875847 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.295281396 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.376904531 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.369120716 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.605228929 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.277485712 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.593048448 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.245180508 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.277816426 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.367329498 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.581098021 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.36898404 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.377251805 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.609101159 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.082439894 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.37935005 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.08594895 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394326648 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.372122548 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.288364253 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.476206704 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.377646372 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44982197 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.380740931 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.381388238 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.38087424 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.541125581 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378599941 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.374755863 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.384019872 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463802245 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.773717063 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.075267497 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.374258439 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.974919959 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.103899643 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.974490629 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.381604102 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.370430396 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3801652 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.304781502 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.519729033 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.59720778 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.644706284 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501648421 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.51540397 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393786656 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.29745596 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.399223788 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.584846471 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.646279588 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.267236712 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376617586 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.387080478 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.371878626 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.381871669 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.583648869 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85938809 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928336687 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481024937 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.375983445 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.833697117 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649699836 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.372205209 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.372495536 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.965182807 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.38900204 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.676915374 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.38040106 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376842118 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.522541564 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.382720428 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021637037 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.384503778 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.531857868 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.147391528 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.371275198 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.631682704 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.803013757 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.384179283 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.976936257 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.109226097 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.635094457 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441186829 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.3846384 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.475215463 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.520581779 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.379115939 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.37407826 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.373383764 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.590078584 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.08381995 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.383505939 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.98088598 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.63512293 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.370463307 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.378520007 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399177571 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.383649592 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.59693128 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.062970808 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.600859973 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.384047403 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.38127902 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.189736298 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.979623407 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.38535109 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.308879781 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.378270295 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.611487293 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.613960734 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.395064477 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.826722788 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.085603545 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923660514 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.349369161 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396726967 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.378362793 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.117190721 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.97782928 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.082904563 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863437769 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.944572545 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.375144231 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.65331974 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.380859549 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.380220319 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.654767891 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.379288783 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.382075874 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.389575857 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.97675667 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.115194325 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.392669558 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.301009456 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.315274458 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.718699246 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.085067393 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.311285316 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385843541 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.563091845 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.376341984 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.505207681 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.388380734 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.386058456 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382741837 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.113094101 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.65097484 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.382235678 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.377369837 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.350766193 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.392422305 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386098496 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.648311532 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384103259 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.051571648 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.726876564 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.633037877 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.376748219 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.365556372 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.381052657 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378110061 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.365048936 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.573466269 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.602382209 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936226908 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.379959711 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.391238497 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.381210202 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.594366137 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.589395189 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.389206235 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.392448477 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389200512 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.39708148 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.284619256 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.879487656 seconds)
  done (took 1606.696742486 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.390372872 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.401578374 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.407439849 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.472363612 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.424639183 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.508671447 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.465333708 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.403420574 seconds)
  done (took 52.793012103 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.386034309 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.61205898 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.407752296 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.377881957 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.388002935 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.388437733 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.808911893 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.388448412 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.388104304 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.38787785 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.380209953 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.385508848 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.994842309 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.391224419 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.378612911 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.372438506 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.386837721 seconds)
  done (took 66.149728383 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.389414329 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.811758 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.465703758 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.378630352 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.264072006 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.39635165 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.948760158 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.440005404 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.381986374 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.593346404 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.024025094 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.429412256 seconds)
  done (took 84.844473206 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.387394529 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.385720552 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.386451454 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.3860271 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.386118614 seconds)
  done (took 8.252612686 seconds)
done (took 2038.058706968 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.634566347 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.061154 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.007249953 seconds)
  done (took 5.389032955 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.530005563 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.578564559 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.69841268 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.704983663 seconds)
  done (took 7.834011191 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.669358299 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.768574 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.589778234 seconds)
  done (took 6.349000496 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.718804342 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.389470361 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.472563436 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.380337858 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.381839679 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.384652203 seconds)
  done (took 20.469641265 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.386244837 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.389429189 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.387201272 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.388915349 seconds)
  done (took 6.873382863 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.366205612 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.104482893 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.370078473 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.383424446 seconds)
  done (took 18.546865263 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.132996659 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.146696906 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.130043882 seconds)
  done (took 7.732763072 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.382370819 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.230459681 seconds)
  done (took 9.936265346 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.695061284 seconds)
  done (took 3.018674663 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.51964351 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.650276557 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.472390805 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.329770068 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.492028282 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.999074555 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.92011978 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.53797495 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.32100327 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.409032552 seconds)
  done (took 27.974653576 seconds)
done (took 127.660471451 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.038786705 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.629374063 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.58647422 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.013398014 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.616346585 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.58755763 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.815763183 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.982176123 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.523980067 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.51282357 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.013152739 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.619093299 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.54122714 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.628195286 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.541359023 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.63104994 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.612770444 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.08931536 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.739364822 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.90081794 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.81731161 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.655709611 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.846023594 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.676449018 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.613557364 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.539445236 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.239895563 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.628119182 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.915962739 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.255842311 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.539368258 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.073713355 seconds)
  done (took 193.749137482 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.393694592 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.383149967 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.39672482 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.384095357 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.384835733 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.388132552 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.383189283 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.385017313 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.39073441 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.390731356 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.385267808 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.410562973 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.386795866 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.39840569 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.385341249 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.389215265 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.387013798 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.385097422 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.385526444 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.38508845 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.383901801 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.397716594 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.384908331 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.392923444 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.385051651 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.386107344 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.395281934 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.385263761 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.385623302 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.385696209 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.38737256 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.385413283 seconds)
  done (took 205.759650897 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.387547064 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.385798765 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.387481618 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.386401557 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.397489272 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.388013167 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.391488587 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.398938508 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.386056428 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.385567476 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.386652119 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.403292411 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.38874559 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.398218581 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.386732969 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.386796489 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.386847995 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.386264781 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.387238944 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.38632166 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.403798655 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.412037759 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.386989887 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.401201428 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.387148681 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.401125114 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.390085386 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.386145915 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.387462986 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.386853993 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.402113014 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.400883484 seconds)
  done (took 205.865625922 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.582292991 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.394875864 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.395019857 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.332742362 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.396836932 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.394413978 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.392412572 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.592144206 seconds)
  done (took 14.809510671 seconds)
done (took 621.508203972 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.602697362 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.328141738 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.588067419 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.415488696 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.12435835 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.416476622 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.415006654 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.578955609 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.885563245 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.564842438 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.609884057 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.415646753 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.73488765 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.413189347 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.664004635 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.513418608 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.24479818 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.347846682 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.722366911 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.909202246 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.66086557 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.908825491 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.583129382 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.930438163 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.736162144 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.914536961 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.138877109 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.238653422 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.41461011 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.723570404 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.973545209 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.344364877 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.471114384 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.455494688 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.512949589 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.492586602 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.36348472 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.451030402 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.594335024 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.65548335 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.899372299 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.684091695 seconds)
  done (took 94.972501513 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.385537801 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.385700366 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.384742874 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.385936824 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.387069071 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.385906894 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.38470073 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.38393367 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.385848837 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.385052443 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.385367157 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.386904641 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.384799543 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.386152848 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.38494415 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.385193655 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.386388202 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.387650617 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.385163577 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.385368816 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.386379335 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.386118146 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.386895449 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.3903816 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.386939003 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.387143348 seconds)
  done (took 37.367524865 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.399230702 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.623898049 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.800111319 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.407298256 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.398487828 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.403213239 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.473540808 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.400520873 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.402181334 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.402055735 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.553594503 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.401331793 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.431433447 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.806374787 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.404697517 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.400357159 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.401134457 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.399308154 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.630924428 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.408369314 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.492495139 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.400847452 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.474592787 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.408556994 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.419266393 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.40054162 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.403678221 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.92569251 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.402298929 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.555317199 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.146698339 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.474206189 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.891410641 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.813391974 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.148248714 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.404981389 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.401474018 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.558425552 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.402568776 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.400714723 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.474080868 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.40308964 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.809677365 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.017659851 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.418695465 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.401032236 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.945950202 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.5574717 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.633646656 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.411594535 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.829747805 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.402671566 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.399687804 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.399302639 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.631200392 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.408788319 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.398239518 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.968240945 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.418747774 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.472785527 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.401828962 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.399388952 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.638412083 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.401812113 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.625699945 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.40101445 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.406810635 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.400395946 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.805699334 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.401204571 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.033744025 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.418300801 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.403270916 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.555685301 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.631321395 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.976974245 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.406897328 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.64412694 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.902806326 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.47497527 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.4066879 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.917228676 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.478569362 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.407480931 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.404702766 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.404330161 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.403691027 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.44650918 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.474619201 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.970328594 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.031723465 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.986339998 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.49462371 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.415546206 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.403230828 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.971495386 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.419841604 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.403651433 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.803362417 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.036864345 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.419289643 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.411704877 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.023094261 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.421468856 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.478725846 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.409677005 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.818329908 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.40284797 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.44542734 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.401659421 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.408258047 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.404452016 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.475179514 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.405350107 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.401816038 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.006369193 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.574927724 seconds)
  done (took 183.333098897 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.400366788 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.394891428 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.396220204 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.394693772 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.394653628 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.401433985 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.394584381 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.395710988 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.401344378 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.395051816 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.395226952 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.398500913 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.395424655 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.405819491 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.404350292 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.402905073 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.007225968 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.397904915 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.397613916 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.396256249 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.18375746 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.399461986 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.396887093 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.396630859 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.398841515 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.403405412 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.404204786 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.398494547 seconds)
  done (took 153.888736036 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.404092843 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.943348248 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.407231388 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.52821925 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.424145007 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.401362637 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.527742453 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.458110943 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.405149196 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.40039165 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.400378468 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.692635337 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.405590755 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.891645125 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.583987815 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.531364268 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.8916407 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.404627125 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.401390983 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.401632164 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.530126655 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.411354248 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.692933799 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.943064142 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.405179837 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.942204254 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.393295538 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.404763228 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.403830084 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.943932547 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.403167046 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.694460732 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.479630786 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.460222099 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.944827185 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.892851307 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.897834722 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.547564244 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.40494184 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.403059391 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.402881823 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.392758483 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.943177322 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.407158218 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.406556929 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.938694639 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.421245626 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.406388761 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.41382976 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.403783219 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.461764021 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.463572153 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.696805497 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.950176574 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.478656969 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.425949969 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.53071954 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.774529449 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.407405898 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.896001434 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.39565088 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.948602679 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.408527862 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.393315037 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.404887039 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.410642594 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.547203486 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.531580083 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.895023864 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.40845238 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.893745735 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.548468118 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.40445313 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.405067196 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.407159999 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.951952655 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.897958639 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.549351972 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.534453864 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.590912834 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.395506116 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.405782955 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.394915781 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.479940714 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.405296945 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.953580537 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.898708518 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.4085444 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.40820449 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.407662064 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.408098647 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.573703831 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.952428838 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.483078255 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.89070933 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.715325479 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.702801265 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.411239977 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.463927652 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.407183028 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.701495425 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.412417386 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.462391659 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.838453436 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.700918753 seconds)
  done (took 166.076554708 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.637910194 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.572615237 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.496344681 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.51547655 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.915453435 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.969339554 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.445738963 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.531695501 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.513031671 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.645861087 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.053406997 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.499986893 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.59447008 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.4794299 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.074270193 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.474141723 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.499194256 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.542570032 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.514990076 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.405132095 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.990556696 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.699936378 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.553298201 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.306729799 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.499243397 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.171006161 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.141762111 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.905899427 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.570284163 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.514890232 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.910644891 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.532518693 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.121984869 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.023153369 seconds)
  done (took 65.665735146 seconds)
done (took 702.633558731 seconds)
SAVING RESULT...
DONE!
