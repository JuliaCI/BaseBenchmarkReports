cset: moving following pidspec: 25634
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.299111192 seconds)
loading group "string"... done (took 0.538768466 seconds)
loading group "linalg"... done (took 6.938706658 seconds)
loading group "parallel"... done (took 0.159397664 seconds)
loading group "find"... done (took 1.107375653 seconds)
loading group "tuple"... done (took 1.813079107 seconds)
loading group "dates"... done (took 1.216415731 seconds)
loading group "micro"... done (took 0.22471072 seconds)
loading group "io"... done (took 0.981584576 seconds)
loading group "scalar"... done (took 37.774775674 seconds)
loading group "sparse"... done (took 12.708110548 seconds)
loading group "broadcast"... done (took 0.977474017 seconds)
loading group "union"... done (took 12.957581711 seconds)
loading group "simd"... done (took 4.602053368 seconds)
loading group "random"... done (took 9.203080506 seconds)
loading group "problem"... done (took 2.040755777 seconds)
loading group "array"... done (took 22.364516332 seconds)
loading group "misc"... done (took 1.879222975 seconds)
loading group "sort"... done (took 3.561263173 seconds)
loading group "collection"... done (took 18.463939997 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.506248295 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.139754912 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.131790236 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.115201237 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.170354921 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.127726956 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.139475334 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098791858 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.072117274 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.154630745 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.133310041 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.462736521 seconds)
done (took 5.03860758 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.20321043 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083976412 seconds)
    (2/2) benchmarking "String"...
    done (took 0.096183099 seconds)
  done (took 0.910924949 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066016033 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121391627 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065578931 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.082115134 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066890436 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065593401 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.082139668 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065979718 seconds)
  done (took 1.28840777 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074259042 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067871307 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.083360428 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066998393 seconds)
  done (took 1.030063495 seconds)
done (took 4.245610355 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.836460619 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.245328804 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.183774208 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.446085962 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.151520125 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.185683156 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.661957161 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.320553518 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.200269771 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.082268441 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.119623384 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.354498763 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.126005444 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.661824431 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078202547 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.105490617 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.158197584 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.423195987 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.068981802 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081742247 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.103147552 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128745084 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.100437201 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090746938 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.156602318 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081181877 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.145694145 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.081973994 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.083110132 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.225719122 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.189580472 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.679149056 seconds)
  done (took 10.332473514 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095852699 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.112707854 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068811445 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139931265 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096997144 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.086024794 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071686644 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.06684326 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.10317631 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.14369208 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.090108855 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.118022891 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065211357 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.085213669 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085216398 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.221504403 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082884717 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.099131589 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070944695 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.091267823 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.107535411 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.093058869 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078963488 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092874798 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129116457 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.207347339 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098413699 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.112077079 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068720894 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.098391404 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.130177364 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128016611 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064904282 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08293517 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.125242575 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.110813064 seconds)
  done (took 4.474265084 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.028096317 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.15530755 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091303699 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.149233632 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067335441 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.124107001 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.080889949 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085176985 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.230601169 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.132321681 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.441446157 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12913372 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.10104779 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068808225 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067975572 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.082733715 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.544100744 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.143103032 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102752664 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.10076093 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.07422024 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.085922521 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.369211673 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067841037 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066205012 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083200454 seconds)
    (26/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.082777179 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.075633095 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.124292598 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086561952 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.14221403 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.0877336 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086185957 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101916284 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.199142616 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088728335 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.152207512 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.065791421 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.082089575 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.164177254 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064946519 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.07216797 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.083336366 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.082424626 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120373565 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.117756921 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.068649587 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.082369141 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.17510028 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066714412 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084626726 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.839708351 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.163757005 seconds)
    (53/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.091663469 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.074033071 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.082364957 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.260432208 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.102339301 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066609132 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.081178538 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.232867173 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.148706952 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067727491 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.082920398 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066368668 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.06774859 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.365982405 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082515513 seconds)
    (68/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.063866333 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.065762175 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.09393059 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.740003187 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071645211 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084469556 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07531366 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07420994 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.101518937 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065763494 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.083892737 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066555212 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065561563 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.083990518 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.08448179 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.183524233 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.084574784 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067234895 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064454193 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.102051632 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11097128 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.072127434 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066943295 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116739349 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068374912 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.083849512 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.100873828 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083775932 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084070788 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085509106 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.127541558 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066526939 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.13174499 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067699901 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.112681666 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070890788 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113709501 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.093511733 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068305544 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.146927573 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064783241 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.06452885 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.083328929 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067585207 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082802361 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068615804 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079027785 seconds)
  done (took 20.681295567 seconds)
done (took 37.253559897 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.293475811 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.095396681 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075561771 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.093290339 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.092322807 seconds)
  done (took 1.460675751 seconds)
done (took 2.245413562 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.118563364 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116798088 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063766213 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11302421 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063603296 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.117964295 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09812692 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.097637295 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098193891 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.062871604 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094464375 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083207633 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064163465 seconds)
  done (took 2.002956264 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083085673 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082820359 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08594713 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082066093 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064218327 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098548512 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080379102 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105878105 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08179836 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073163023 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.082114416 seconds)
  done (took 1.699397014 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082729979 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082767189 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086131736 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081363772 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063503172 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097319425 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081286751 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101704724 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080661837 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088427511 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064579289 seconds)
  done (took 1.690734756 seconds)
done (took 6.166481931 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079058294 seconds)
  done (took 0.852769353 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.665889875 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.761306417 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080416339 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.133452335 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.200684149 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.141698394 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.333854924 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087059039 seconds)
  done (took 9.373366244 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.087591972 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.098559639 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069944676 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.084093663 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.07322726 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068273027 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.089104089 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070479218 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070546161 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.070762407 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069740393 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.087464953 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071258176 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.085066579 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069441462 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.082838373 seconds)
  done (took 2.089207546 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091304775 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.10828023 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.07222514 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.092404466 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.070730619 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.089398126 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073402239 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.090562701 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070833781 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.087999022 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075190625 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.089228903 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071988875 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.080666836 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075339756 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.090835736 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071504321 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.089775673 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.076367952 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089757145 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076276419 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063687433 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.08870548 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073922755 seconds)
  done (took 2.82896556 seconds)
done (took 15.925473809 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.112466209 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.087690277 seconds)
  done (took 0.979590659 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082435289 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.098069649 seconds)
  done (took 0.966240938 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084508966 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.080171772 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091499285 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.094369923 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066304073 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.082133538 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.103181418 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067041366 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065353639 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.082926453 seconds)
  done (took 1.605720638 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069364983 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.09230792 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071309567 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.096383244 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074800291 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.080301686 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.07419591 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.083103345 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079453868 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062482663 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.087528764 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.097496632 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072328484 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.10055283 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073393146 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084259669 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072146099 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.084112994 seconds)
  done (took 2.242590041 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066759816 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066212216 seconds)
  done (took 0.920961547 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068553093 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063111829 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082822351 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066417337 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.079162561 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062458195 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.078167275 seconds)
  done (took 1.291150046 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.413116929 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110754162 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.336799123 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071798481 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.101040914 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.268883153 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065599739 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069874697 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.091824475 seconds)
  done (took 2.358502575 seconds)
done (took 11.151873386 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.07995685 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084835947 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.110229127 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.409684367 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093048812 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.082130656 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.132023726 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.224725745 seconds)
done (took 2.009764661 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.126613874 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.611347269 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.384565863 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.213244612 seconds)
  done (took 2.004091202 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.312358897 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.109929901 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.061551477 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.085843263 seconds)
  done (took 1.369495164 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066979326 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068790264 seconds)
  done (took 0.932934854 seconds)
done (took 5.230602718 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067584434 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066128939 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.09998076 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.06513175 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.085672819 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.068968721 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.064663671 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064354917 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.06684245 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066898141 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.089109926 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.069806578 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064746954 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.086710029 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067875904 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064692511 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082250486 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068284771 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064851721 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082608943 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065726384 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066955375 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.08260915 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065293112 seconds)
  done (took 2.571198533 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084563659 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.082398087 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072466083 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070591505 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.087147385 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.073322205 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.088175095 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066410375 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087181986 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068370138 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085576855 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071645298 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067795998 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.087456555 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06814025 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.086199344 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072169743 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082618122 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068355629 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.08541698 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072480586 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066709031 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.086663835 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071111345 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.086304783 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069688259 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.086263028 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066653263 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.086299879 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070782076 seconds)
  done (took 3.121149265 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070032492 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063470761 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080142459 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071251562 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063157376 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.081521093 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063658456 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063808639 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.081347097 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063486509 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064327178 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.080499732 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063967426 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.080829936 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065789999 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067053854 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.095483438 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064821379 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063540798 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.081050058 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066964834 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063018894 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.08171875 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063694344 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.078913194 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064259748 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064337032 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.079926455 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065382693 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063288963 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.083829669 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.06761293 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063036201 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.087149545 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067540407 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062634087 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.084869559 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.06392601 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064746978 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.08073571 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064183517 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.078489107 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064622944 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070608965 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.07999398 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.066468169 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063800765 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.081493087 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064930489 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066187779 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.080876718 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063948764 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.081122575 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066438893 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068313822 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.08029919 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.065429058 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062503749 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.08123106 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063684559 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062958728 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079819072 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066230902 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063886118 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.076762393 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069320803 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.082142333 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066498347 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064691098 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.083072346 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066609443 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076058997 seconds)
  done (took 5.924995076 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091375595 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104974072 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064925156 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.08304459 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062383421 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.080579096 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.06891487 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064206174 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082285569 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.070106861 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08043624 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066203583 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064897925 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093618808 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064333235 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.081339129 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070694561 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061785144 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.187057468 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067778905 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080245564 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069031052 seconds)
  done (took 2.569008605 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.173054397 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069955939 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.122784364 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07268027 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066751518 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.092769132 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070785697 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069503579 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088543523 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067944058 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085751482 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070576935 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085029743 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068474057 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0850244 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06914606 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086480186 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07020126 seconds)
  done (took 2.325197034 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078786845 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065412611 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.104022526 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066257113 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.083839181 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069270253 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088215856 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075293748 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084780734 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068146229 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074381924 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086469221 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068609971 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083363406 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069384983 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065907251 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.086033194 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066835564 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091730867 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07122169 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088713645 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075252458 seconds)
  done (took 2.523042285 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08132053 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067493002 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.099910841 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068878073 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.079497779 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06550926 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.087385954 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067695407 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.07067412 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.085099201 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066696264 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.080908037 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070575419 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065741128 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.086899273 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066398449 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.084225265 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066880118 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067688087 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078711061 seconds)
  done (took 2.320563833 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08722193 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084158223 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069257336 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092782213 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0682263 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083748555 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076801937 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.083609643 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068502756 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.104636395 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069196844 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067264648 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.093257423 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.089520426 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068469214 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093052516 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076321199 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.092883846 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067929111 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08471867 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087533576 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066565084 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074048933 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.087384751 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068085338 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.084641594 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068506476 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088974472 seconds)
  done (took 3.058034298 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067748995 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065950239 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079508409 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065243487 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063494973 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.080039687 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064504702 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063484812 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083115754 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064124341 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065673836 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.08231268 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066073951 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065194855 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082735042 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066473883 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065481585 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.080276308 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063813554 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062956293 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.08278954 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066399947 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065909819 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.080649402 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063402754 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.081831198 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064602088 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06369744 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081767204 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064839053 seconds)
  done (took 2.927297376 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076296266 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072097273 seconds)
  done (took 0.964658395 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064823127 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080305181 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080827477 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069798716 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086908417 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068318477 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073023787 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088374988 seconds)
  done (took 1.430457735 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082419372 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.07682173 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084886742 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079672648 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.094604221 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082308255 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.153181285 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.08488545 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074118515 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064212666 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.097944316 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066541888 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.089282099 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067175296 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071307445 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090901325 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064047029 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.089903413 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.07018458 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.065284239 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085818838 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07536605 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086125431 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.06319347 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067511058 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.106751647 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.094047318 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067802609 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069690194 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.091675553 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.07229606 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.077017238 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067593298 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066525721 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.08229796 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.078182003 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098778075 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070068152 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074322358 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066813818 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.096537071 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062731747 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070318963 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.091312781 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076327803 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.08437875 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068516786 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061503399 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.081733243 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069521869 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.077599034 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067819627 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.06153554 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090161398 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.070765263 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095502006 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.067273663 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068188344 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086898884 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070324074 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072082458 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068166935 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068121136 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.086137994 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076329508 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070416814 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093743523 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061353669 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.07840726 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.065780874 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075323756 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087877749 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.091171066 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068682297 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067158932 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.083257169 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070602832 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084551264 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073615471 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072434065 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.083976579 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072637164 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091007632 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067342443 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068597421 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.093712531 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065043078 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.087259434 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064578325 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099850977 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065776777 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.081579113 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066041228 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076810649 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087410352 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067393662 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063668396 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091714793 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061390433 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.08495531 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068390323 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067011873 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.095011105 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071491743 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090041209 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.074140947 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.092200746 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067182639 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.086361533 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.064986702 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067607783 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.083404631 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074230918 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060387247 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087462559 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.06742954 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.085073701 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076063374 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.082033802 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067833668 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073951491 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.089993034 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065646844 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.06243215 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.08784865 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067068843 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088091219 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075013924 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.082486935 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063092484 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.06152187 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.088198683 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067370413 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069776844 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089499983 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069239803 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.078796425 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065322086 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.088945038 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.07557537 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066295716 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.08564939 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072656852 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.085613882 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066420248 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072549055 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.08686961 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066097001 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071783315 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066994708 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061049524 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089998026 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069254549 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.083334394 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071129265 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069587809 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087164959 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067747981 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083542588 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074950409 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084220186 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066668979 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067127304 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.082521101 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076873178 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.086138878 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063456698 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063698764 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.094706084 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064997989 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.084182877 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067248961 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068805919 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.085483765 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065844321 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065670724 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.087592645 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077531764 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088982247 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066883497 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090566341 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077923806 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.083962233 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070312427 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065573218 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086501514 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067956291 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092414359 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073040893 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088513415 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071058838 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063583309 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089720474 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074573173 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065130804 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.082984436 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065720196 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.089286884 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072096357 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.088581421 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068201068 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065087235 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085049027 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070375271 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068699523 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.06537957 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064483771 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.094420116 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064877946 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.09245906 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067617403 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094690141 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071038999 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061638157 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088194548 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06501041 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.090886865 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062823863 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.06435683 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.083913312 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068838289 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065290247 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088121214 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060706188 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090716512 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074677614 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.06636784 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.084461816 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.066792996 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072695767 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067540595 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06991196 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069000051 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.071230656 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099592709 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066583281 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069252225 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.097044633 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.06663813 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.079373757 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072748049 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.082437577 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066469922 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065743246 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.082941342 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07024235 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.093638165 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074636794 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060305847 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086828186 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.06567114 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.08312814 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062988499 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071242356 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.088032801 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068414974 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090623538 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068554368 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067551653 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088062622 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.06664255 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.084926974 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.069453446 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069502919 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.0670822 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067566449 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065512714 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.090541904 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065492308 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082583196 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069449762 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066569135 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.085319402 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072625426 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.084182722 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068263864 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068920561 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.085833897 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068043122 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066746509 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065095225 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068958562 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087874861 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067357234 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068456825 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.081343701 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07443209 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.084884794 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074394127 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067029229 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.082317532 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.07448023 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.087462339 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073144225 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.084918868 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068718014 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067675095 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.084682185 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.07024214 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091580579 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065488348 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077375745 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093658073 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06771003 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.087915816 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067798342 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068055809 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.084288543 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067946993 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.085729455 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067864066 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.067112264 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.089639551 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070064825 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.085347398 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069862486 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066933823 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.085250016 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068233763 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061084674 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.085081143 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066574019 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.084480769 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076884719 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.08417735 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067547308 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065442968 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08627361 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.06593237 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062875778 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.093435452 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.093831934 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.068502625 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073711877 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.084990981 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068725662 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095240192 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.0614877 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064750646 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.08318677 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065454644 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07348103 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.085772205 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075634792 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085411407 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066548769 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063750077 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.086099874 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065761556 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.078670372 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.065605835 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069734478 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.08383343 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066660655 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066477701 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.087930753 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067201754 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094816596 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066419129 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.085167511 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.06791212 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.06389522 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.084200551 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066921503 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.06924292 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066701371 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063700602 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.08304181 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.067565482 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067861432 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.086721826 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067310601 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067638778 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091923802 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066176906 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.088335101 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070385447 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.06398211 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.087862384 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066693835 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.084460814 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066449213 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069579617 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069091036 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066773979 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.095320192 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066900571 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06734191 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086108332 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064943303 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.084256712 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067593893 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066173049 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.085208524 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.06911362 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092864372 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065548153 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069559708 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085219906 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.06768123 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.0912229 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068639098 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069142182 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092368875 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066639225 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.087059708 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075100741 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.088938127 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070648351 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067308873 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.086577169 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072343375 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065321352 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.07166624 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.065852253 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.088326947 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068697036 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.06415886 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085445668 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.06747446 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084166249 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.07332767 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067095296 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.085452473 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065459661 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.082491002 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068885346 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07055125 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073172373 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068903888 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089871716 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062500447 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063629541 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087118893 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065065247 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085926505 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070327064 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071870324 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.087551902 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067739548 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064631843 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.095197174 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071875767 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.089051968 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064850777 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088341868 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068790481 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069041627 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.086019978 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067665196 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085512572 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071587617 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068469745 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.085176097 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07439437 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.088244813 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06917559 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068508984 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.086351219 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067443214 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061912287 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.086517911 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069399309 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090843047 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069276409 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066856736 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09629377 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064543084 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.085296579 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071038106 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066207846 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.090240859 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062129256 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.086881194 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06766795 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067270194 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.08135813 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066749761 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.08212297 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070869662 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065576926 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.081130254 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077420194 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094688466 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070451021 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065190691 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08473656 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062624896 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061677409 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.064580769 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066515636 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.089343878 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.077027361 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.083990658 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066593531 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062288146 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085661324 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070077012 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069721922 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.083045493 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062167342 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.083498223 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070472167 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071530561 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083968081 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.06743917 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069208107 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068074438 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063783425 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.090854722 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064024077 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069327537 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099377431 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067128541 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086696268 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073020756 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093229035 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068442725 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062339151 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066422014 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.068296439 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.087641915 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.0684208 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067572017 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101144795 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069349082 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065158561 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064713537 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.089995775 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067862867 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.07476289 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08729387 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068251858 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.089741412 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069824768 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.093865666 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070481184 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073858568 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.089620757 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069605166 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.083919806 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067620778 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065291293 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.084706449 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068373117 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066971869 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.092711144 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.093632654 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067650969 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077014201 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.095395437 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068734381 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.082621128 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067603346 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066089966 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.081525298 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068500094 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.06506492 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.084025924 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065440407 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.083336394 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069861177 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071518028 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.086322871 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068313063 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066625101 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.080866232 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.06928835 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.087423966 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068044685 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063480195 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.085339761 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.06799553 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.089053047 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071852176 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06433363 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.088069069 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069340824 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067591813 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.081510125 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073422798 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084722279 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069423557 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066072923 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086320815 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.069254044 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088762843 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073873434 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068372117 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.089069134 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071051503 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088314818 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064879967 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063926367 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.091889925 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064809561 seconds)
  done (took 45.964301477 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100170892 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082543462 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06281675 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062213877 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094392323 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063542144 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08203002 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064485579 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080927222 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067544019 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061638758 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082019709 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072134821 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.097855015 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074965772 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.08761611 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062454759 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.082453686 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062496432 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063276431 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090602126 seconds)
  done (took 2.4621157 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075789366 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069595632 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071163039 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074395454 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066111527 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.094764147 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073960382 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09183081 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076526674 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087681533 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076188636 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090558236 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067584704 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.086995084 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067323311 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090833784 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077349925 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08742491 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.07081838 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094128362 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070181239 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.092684335 seconds)
  done (took 2.616483171 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067863253 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065806159 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.08639915 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062170157 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065924592 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.080817313 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070992424 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063697933 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.075411724 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.063857611 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.086247977 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066152145 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067432627 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.081091606 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066035309 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063771373 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.129619789 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.089138239 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065890282 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067068778 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060536854 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066625871 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.084140425 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062874044 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064952499 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.090163945 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066643612 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.083366567 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.06652276 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064885107 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.085491201 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064502238 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067992509 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.086124073 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065793389 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065028149 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.08590958 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.06632111 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.080816249 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.06477381 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066608744 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.081579201 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066856854 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067311778 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.084270021 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064537941 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.086287413 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.067655251 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061746165 seconds)
  done (took 4.441661124 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081590624 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.128662501 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067412096 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.08874811 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.078874407 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.071985207 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.092903516 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109606946 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064937245 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064717906 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.103957042 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.102815442 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066532744 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.09127294 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.073573275 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085018473 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068619293 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064456923 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.090351865 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065649883 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.08994884 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072050926 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.101228582 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.099480883 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070669766 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083810936 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066693489 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070789732 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.099512287 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.08961974 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.07197578 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090957739 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.082647204 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.091574724 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065835869 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.08811871 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.083440669 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.086301534 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069494447 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.08361412 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.069567287 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089858309 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.074391373 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.102347528 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067399705 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.090193165 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067593139 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063349403 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.099857394 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.06838929 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.09532464 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.101608301 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071369702 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.086123205 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071636691 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.101543335 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066684144 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.08306951 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070478919 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.098179447 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064710325 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088547444 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.081831305 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.087345677 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074705477 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.099661167 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071489892 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089296219 seconds)
  done (took 6.627927399 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075881388 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.091809617 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081918959 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101014069 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07212384 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071135341 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093382282 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074132267 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092280936 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078702937 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.09247355 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11427058 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069645226 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095443639 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074590628 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093089163 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.07435963 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.092375939 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073680224 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.092933705 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073329411 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.101709213 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091313928 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082023125 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.096995065 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066794912 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.094474666 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072841771 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101274804 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.091645938 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.081950588 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.09260253 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073784894 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.101413938 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.08022846 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.093349946 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065780624 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092807331 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072714483 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071469033 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06684178 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103430762 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091401117 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.06942739 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09234066 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073271962 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.101441966 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079617202 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.09534699 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097447837 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074728837 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10095403 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072615758 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09312866 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.100538334 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.106776218 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101088586 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101118148 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073772071 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.10079862 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100136438 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.088118295 seconds)
  done (took 6.257666188 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084826622 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.094981652 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076451216 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.082442104 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064068441 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069546523 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063328839 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063394778 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098154504 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.075247783 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098426035 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089518647 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074243253 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096921231 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070460395 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093295748 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070638121 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090523202 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074775316 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091284466 seconds)
  done (took 2.498424759 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075367952 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083575532 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.087733968 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072117766 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.089410698 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071955166 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.088580572 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070343862 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086005514 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070519655 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075887986 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.097330954 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067249278 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092997181 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.095429256 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073524696 seconds)
  done (took 2.173698752 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.076802161 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.092193445 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080870113 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086358808 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066003088 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063058021 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.086660966 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062154731 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062694908 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.099653077 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066093904 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.089773799 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066609941 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.084521392 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064802624 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068931319 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.083984545 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064467665 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.085614013 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.07993888 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096040894 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066750962 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066886935 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087231016 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066969243 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.092541573 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066655968 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.083602304 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065395567 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066768688 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.087824674 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.07067868 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.083592693 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065054642 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064542692 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.084214149 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066968684 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086134223 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070663267 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066112386 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085169026 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065854709 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.08654362 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067736006 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062812107 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.087281219 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063203766 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.08793547 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064990083 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085554183 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067376299 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068821478 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.087047262 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.073490116 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089272806 seconds)
  done (took 5.057753947 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080273152 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069766038 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.082613227 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065080183 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.06884627 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.089017103 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068825851 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088318736 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068273565 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083148265 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069642037 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068479014 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087957285 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070288262 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067730837 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068338826 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060888092 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.089965657 seconds)
  done (took 2.224929852 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07180948 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066244104 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094098921 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067176458 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.06525542 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.088991881 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062921349 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.085363567 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065919302 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066385523 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086071267 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069218832 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08436594 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069995726 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065818239 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08575023 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068640464 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064584337 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.08687062 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062203667 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087997407 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067066482 seconds)
  done (took 2.512075905 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.07349916 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.091623546 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.158579919 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.104372591 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.081791556 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.078601976 seconds)
  done (took 1.471424424 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091986227 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099955515 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067916251 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087460497 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095588118 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067257025 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089452804 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068400188 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0981704 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097071763 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069147964 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097269142 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07726583 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097826903 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093621408 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076108652 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087573931 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069694749 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06700643 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083352524 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089491915 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078102644 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088704065 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0684885 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088682975 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07733325 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097737449 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096371473 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068720546 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096427516 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074508975 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088296135 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077444926 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097555454 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069578566 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096880256 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068391327 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106390387 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092918774 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077285627 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.089169963 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075451735 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096499142 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073455925 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097394892 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068210892 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094216363 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067409724 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089868621 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107872397 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074866904 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097361276 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074011384 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097317474 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096610193 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088164374 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098037648 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096024916 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07544949 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097103586 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076498133 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094975355 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09518853 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079284575 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094984953 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079754733 seconds)
  done (took 6.545468094 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083319586 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106590828 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069142562 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098709707 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07713874 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089469847 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068932878 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088365322 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067680434 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088672374 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128803453 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069737156 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097225164 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0759674 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089428912 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068106036 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089147367 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0766178 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088561812 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107538607 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069149097 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09722801 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077037586 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096797198 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097063599 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074700328 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088004019 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069137071 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088377776 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068688153 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093749032 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069101061 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097047186 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06819438 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097219846 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068477356 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08860575 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072551289 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089714436 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073198955 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097608114 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106214014 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068619897 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089260206 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077143155 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089073899 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067932699 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088310994 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068457253 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087953705 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077774671 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074818503 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075093068 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073728012 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092063069 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069031287 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088274064 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069317196 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088158958 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075158004 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096836742 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068581112 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108510353 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06809024 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089944613 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09601515 seconds)
  done (took 6.416596626 seconds)
done (took 127.805656544 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.204023455 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184931317 seconds)
  done (took 1.273074625 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069273387 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095471562 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.097862871 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127853706 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087347844 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100335946 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.097885798 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.09916688 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066520397 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086481717 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067421286 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068588278 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.152393879 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067268356 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.06581906 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.089325327 seconds)
  done (took 2.329804264 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104965261 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.194459879 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109351413 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066204862 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100578032 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.078846782 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.06468244 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.096381363 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070570379 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.085718362 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.078235227 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.09549208 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065734743 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.094612502 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.072151044 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.096772798 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065955659 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.077021672 seconds)
  done (took 2.510972212 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102283471 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.140477783 seconds)
  done (took 1.13823408 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.183348234 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.135740192 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.18839257 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.398682876 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.205438238 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.261623999 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.175013364 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.173052999 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.158399068 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.170610752 seconds)
  done (took 2.937977855 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099674302 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.171010624 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.302706379 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116807796 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.094773912 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.1148563 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.119019095 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.099062548 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.079073164 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.100621057 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.09876298 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078027098 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.11800043 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.075439999 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.095225398 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077772204 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121054092 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.073692785 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.097619497 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075254612 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117875488 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067901481 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.094604031 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074833244 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.07581379 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.097227558 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067141131 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.087462429 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075592526 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094814798 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079657345 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.112724874 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.075180735 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.129044623 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.092299054 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.129932622 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.077270411 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.093944462 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075055224 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.092789958 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077188373 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.0972111 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.073142299 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097776105 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.066797814 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077274414 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.087840102 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.06638785 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.100223985 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.068302915 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.100060289 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078826249 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.128904384 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.087732952 seconds)
  done (took 6.118994207 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.708058536 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.125714535 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070389186 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.129407778 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116554217 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074044524 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.761183668 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114285305 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.200536746 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.093847172 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.108166909 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072010439 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.101347987 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.084816828 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.129529481 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.102546361 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.115274737 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072223958 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.12314137 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.120339165 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069010249 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11506082 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090740897 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.39943211 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067739551 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090772587 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068555944 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069767452 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.132947558 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.076632799 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069628041 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.16685378 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085957102 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.144330218 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.087599741 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068714237 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06835286 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.101455369 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.204045993 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.179699543 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.152128835 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068420497 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068627976 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.090108908 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.089748603 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088195606 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.134051994 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.081022282 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.142933599 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.090397667 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070832058 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.087923185 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070334248 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079905242 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.075662312 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.102217723 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.232918663 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090296828 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069464292 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071061239 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.224629471 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080134058 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.100757108 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092948555 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.153568356 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06770433 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.757759618 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086472576 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067827019 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070202615 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067695788 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.092936113 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069901138 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.116646845 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.365130241 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071142124 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070236097 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090260162 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.186467094 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07840896 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089448656 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.134582272 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068110325 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.089553516 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070513316 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069089895 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.15877581 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.082528398 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069148551 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.089634535 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.0697526 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.088599773 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068501954 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.186257228 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.100328955 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080929095 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.181230582 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.089492167 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.134554897 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080077773 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.090318475 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.080614606 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.088201296 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072062083 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069133881 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.100195012 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.117111539 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080709363 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.090981988 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069137369 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.119747789 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081807765 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.088472112 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079580479 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.420378644 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.101759665 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067681949 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102052566 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068645167 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.134317077 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090904505 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.204736852 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068407273 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100668049 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06803686 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087979751 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06991774 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.13311546 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.089209403 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069970403 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068939578 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.090495623 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080865353 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.178632649 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070920354 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.157616833 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.158421418 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.091218552 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.142086331 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068910865 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.139601592 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070582318 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.091151742 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070060323 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.759792247 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06971007 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06829832 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.091339785 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.159297335 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069692094 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079004096 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077038223 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066814807 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.754395544 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079696449 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099271918 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.08050576 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091014791 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068880659 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.087904972 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071231869 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.131739942 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.188949409 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071579778 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067799967 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.098979824 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.111220951 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066659262 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.101564282 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078998059 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.100263841 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069105207 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.090896181 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08095556 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.14012636 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.099596844 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.158449756 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.559390655 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069539201 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.097887634 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.168211982 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067785503 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084187033 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067974829 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.106404371 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.1352309 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.096635257 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.254660709 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.136788448 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.162241291 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080080046 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.104420324 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068016887 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.089138848 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080758146 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089161229 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071522189 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.099318296 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070544644 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069519663 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.105836359 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068660767 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.198411067 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.088181694 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079798293 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.088566143 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070711135 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103575109 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069523035 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069997932 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.100926874 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07002236 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.099035573 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.659675001 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.099422164 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069427528 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06908174 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.180182962 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.137160018 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067851758 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.089805235 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070219628 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.131452666 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.180873655 seconds)
  done (took 30.368938478 seconds)
done (took 47.567930439 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.231738037 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.174039867 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.250165998 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118452512 seconds)
  done (took 1.763553352 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.144599456 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102026326 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.118687399 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065240296 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.124888106 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086239047 seconds)
  done (took 1.564692643 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.408383713 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.261183597 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.226751496 seconds)
  done (took 1.81227907 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.219409511 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.233644118 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.412302047 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.297862607 seconds)
  done (took 2.187171214 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.165830925 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.112670408 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067579281 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.105492359 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.15990423 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.208381355 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.124282831 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.171859796 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.079443976 seconds)
  done (took 2.161753886 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.190624297 seconds)
done (took 10.595423548 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.101785928 seconds)
    (2/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.188833177 seconds)
    (3/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.097964936 seconds)
    (4/309) benchmarking ("sort", Int8, false)...
    done (took 0.172989785 seconds)
    (5/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070761548 seconds)
    (6/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.205349026 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.108125893 seconds)
    (8/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.232397067 seconds)
    (9/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.221509549 seconds)
    (10/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.182104702 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.100740462 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074650206 seconds)
    (13/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072839297 seconds)
    (14/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.194722293 seconds)
    (15/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.096377723 seconds)
    (16/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.147539341 seconds)
    (17/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.094491707 seconds)
    (18/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.163302782 seconds)
    (19/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.122214848 seconds)
    (20/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.212305041 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.170897168 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.111552877 seconds)
    (23/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.09214293 seconds)
    (24/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.083552345 seconds)
    (25/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.131729658 seconds)
    (26/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.100547431 seconds)
    (27/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.182164766 seconds)
    (28/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.101354674 seconds)
    (29/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.07448967 seconds)
    (30/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071510593 seconds)
    (31/309) benchmarking ("sort", BigInt, false)...
    done (took 0.23958321 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.102105312 seconds)
    (33/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.227703128 seconds)
    (34/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.098081075 seconds)
    (35/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.232125116 seconds)
    (36/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.176957139 seconds)
    (37/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.1389368 seconds)
    (38/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.105319274 seconds)
    (39/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.152938387 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.115638523 seconds)
    (41/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.195754313 seconds)
    (42/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.198622494 seconds)
    (43/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.144740323 seconds)
    (44/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.175613096 seconds)
    (45/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.099442232 seconds)
    (46/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.161202134 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.095327108 seconds)
    (48/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.101183373 seconds)
    (49/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.097924079 seconds)
    (50/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.053517883 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.091769271 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.115055432 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065442444 seconds)
    (54/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.095715543 seconds)
    (55/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.193395692 seconds)
    (56/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.143526464 seconds)
    (57/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.224165778 seconds)
    (58/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.073549086 seconds)
    (59/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.095217063 seconds)
    (60/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.068038922 seconds)
    (61/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.194344521 seconds)
    (62/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.090397636 seconds)
    (63/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.085282735 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090185006 seconds)
    (65/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.051397176 seconds)
    (66/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.162544142 seconds)
    (67/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.205333441 seconds)
    (68/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.08002059 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.135161536 seconds)
    (70/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052973986 seconds)
    (71/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.127272469 seconds)
    (72/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.152386637 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.093052795 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.119860235 seconds)
    (75/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.168809399 seconds)
    (76/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.104309644 seconds)
    (77/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.098686865 seconds)
    (78/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.123256866 seconds)
    (79/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.089066142 seconds)
    (80/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.091764142 seconds)
    (81/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.10790363 seconds)
    (82/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.097938048 seconds)
    (83/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.077432877 seconds)
    (84/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.07574231 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.115304885 seconds)
    (86/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.075479322 seconds)
    (87/309) benchmarking ("sort", Int64, false)...
    done (took 0.065395649 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.094074411 seconds)
    (89/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.129795493 seconds)
    (90/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.053673463 seconds)
    (91/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.13574884 seconds)
    (92/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.075567897 seconds)
    (93/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.105237422 seconds)
    (94/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.06234364 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.121300501 seconds)
    (96/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.079148298 seconds)
    (97/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.100836148 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065525679 seconds)
    (99/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.156570427 seconds)
    (100/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.136066922 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.162667799 seconds)
    (102/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.050508719 seconds)
    (103/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.096592606 seconds)
    (104/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.075072689 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.114600296 seconds)
    (106/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.052430601 seconds)
    (107/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.062963895 seconds)
    (108/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.089263186 seconds)
    (109/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.176754907 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.172940925 seconds)
    (111/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.127504667 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092902658 seconds)
    (113/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.108573172 seconds)
    (114/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.162625693 seconds)
    (115/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.050798465 seconds)
    (116/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.124766806 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.076403009 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.118601942 seconds)
    (119/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068453466 seconds)
    (120/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.179684159 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072329185 seconds)
    (122/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.09396466 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.121248642 seconds)
    (124/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.099071795 seconds)
    (125/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.076476861 seconds)
    (126/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070592249 seconds)
    (127/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.281214483 seconds)
    (128/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.190286097 seconds)
    (129/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.17256534 seconds)
    (130/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.166561377 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065785607 seconds)
    (132/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.08917406 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.124334578 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065188502 seconds)
    (135/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.170268438 seconds)
    (136/309) benchmarking ("sort", Bool, false)...
    done (took 0.157577147 seconds)
    (137/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073627958 seconds)
    (138/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.074717091 seconds)
    (139/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.067954921 seconds)
    (140/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.052092331 seconds)
    (141/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.147319347 seconds)
    (142/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071155455 seconds)
    (143/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.093808533 seconds)
    (144/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.066692159 seconds)
    (145/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.090494865 seconds)
    (146/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.052304249 seconds)
    (147/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.053865604 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.096262376 seconds)
    (149/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.052368698 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.06573427 seconds)
    (151/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.094026763 seconds)
    (152/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.180664285 seconds)
    (153/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.074367338 seconds)
    (154/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.073090814 seconds)
    (155/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072509014 seconds)
    (156/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.104739122 seconds)
    (157/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.061412705 seconds)
    (158/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071365714 seconds)
    (159/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.095677849 seconds)
    (160/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.052252621 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.117400143 seconds)
    (162/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.066291762 seconds)
    (163/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072405666 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.154182385 seconds)
    (165/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.066799752 seconds)
    (166/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.100482918 seconds)
    (167/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.18681584 seconds)
    (168/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.062332883 seconds)
    (169/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.053148154 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.066872835 seconds)
    (171/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.173632455 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.06645271 seconds)
    (173/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.090155295 seconds)
    (174/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.05376967 seconds)
    (175/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075376259 seconds)
    (176/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.095308978 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.067567968 seconds)
    (178/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.054955793 seconds)
    (179/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.097000668 seconds)
    (180/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072851738 seconds)
    (181/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071742433 seconds)
    (182/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.074558402 seconds)
    (183/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.079269653 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.11589118 seconds)
    (185/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.1390641 seconds)
    (186/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.11589633 seconds)
    (187/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.067040537 seconds)
    (188/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.11455047 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.089215284 seconds)
    (190/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051292449 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.143776371 seconds)
    (192/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.051019583 seconds)
    (193/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.088907154 seconds)
    (194/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053151543 seconds)
    (195/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051619238 seconds)
    (196/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.094641003 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.093939532 seconds)
    (198/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.051218006 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.111351559 seconds)
    (200/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.072735372 seconds)
    (201/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.088541651 seconds)
    (202/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.147132809 seconds)
    (203/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.096168961 seconds)
    (204/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074627461 seconds)
    (205/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.069325719 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.087395665 seconds)
    (207/309) benchmarking ("sort", Float64, false)...
    done (took 0.126677232 seconds)
    (208/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.05262926 seconds)
    (209/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.095552525 seconds)
    (210/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.064817037 seconds)
    (211/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.051038816 seconds)
    (212/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.075825737 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.066538546 seconds)
    (214/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.101638717 seconds)
    (215/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.101221774 seconds)
    (216/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064072713 seconds)
    (217/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.074784667 seconds)
    (218/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.052681959 seconds)
    (219/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052719822 seconds)
    (220/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.050926047 seconds)
    (221/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.074108357 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075083617 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072199632 seconds)
    (224/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.108427321 seconds)
    (225/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.07025284 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.140764005 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.149539371 seconds)
    (228/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064933 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.154919077 seconds)
    (230/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.062542474 seconds)
    (231/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.136654043 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.094864852 seconds)
    (233/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.075122239 seconds)
    (234/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.188114683 seconds)
    (235/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065325161 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.113823108 seconds)
    (237/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.068084236 seconds)
    (238/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066625509 seconds)
    (239/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.076013299 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.111675194 seconds)
    (241/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.086829289 seconds)
    (242/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.053237221 seconds)
    (243/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.072533827 seconds)
    (244/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.101993741 seconds)
    (245/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.052197461 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.159889029 seconds)
    (247/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.062497514 seconds)
    (248/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052143833 seconds)
    (249/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.088787717 seconds)
    (250/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.054263437 seconds)
    (251/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.053251445 seconds)
    (252/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.0534322 seconds)
    (253/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.075679413 seconds)
    (254/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.051411314 seconds)
    (255/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.085710171 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.089418776 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065922466 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.118440209 seconds)
    (259/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.072268441 seconds)
    (260/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.051145187 seconds)
    (261/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.088704486 seconds)
    (262/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081919053 seconds)
    (263/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061981445 seconds)
    (264/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.088780523 seconds)
    (265/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.066818058 seconds)
    (266/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.092173829 seconds)
    (267/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.066195248 seconds)
    (268/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.167718708 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088406522 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.08949319 seconds)
    (271/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065065959 seconds)
    (272/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.167478224 seconds)
    (273/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.117911243 seconds)
    (274/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071477796 seconds)
    (275/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.096234622 seconds)
    (276/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.068547358 seconds)
    (277/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.071537863 seconds)
    (278/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.098051488 seconds)
    (279/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.068195304 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.125605918 seconds)
    (281/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.052799934 seconds)
    (282/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.066765077 seconds)
    (283/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.07480798 seconds)
    (284/309) benchmarking ("sort", Float32, false)...
    done (took 0.130056242 seconds)
    (285/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051165769 seconds)
    (286/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.092466231 seconds)
    (287/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065865443 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073069039 seconds)
    (289/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.076088472 seconds)
    (290/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.175508859 seconds)
    (291/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.087952043 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.096836845 seconds)
    (293/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.07556507 seconds)
    (294/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.053873105 seconds)
    (295/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064715338 seconds)
    (296/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.164423004 seconds)
    (297/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.067981611 seconds)
    (298/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.09634068 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087423531 seconds)
    (300/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.05266408 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.092539188 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070688509 seconds)
    (303/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.070047641 seconds)
    (304/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.050974696 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070768769 seconds)
    (306/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.051542275 seconds)
    (307/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.094399534 seconds)
    (308/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070678132 seconds)
    (309/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065663332 seconds)
  done (took 32.687725035 seconds)
done (took 33.610824913 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.081920752 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.113118589 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075690599 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092033397 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.104211742 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076514125 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.095665802 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078879024 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079913161 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.079958341 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.103191076 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.05558727 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073082591 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.097227579 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.07438102 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113355786 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077552301 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093846267 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074722899 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064639574 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.095154417 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.06649225 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067022817 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.077042861 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078683342 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071459535 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.094731762 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07392372 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087781807 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.067208425 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068974187 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.094969677 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066387248 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077345319 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.09482355 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072238836 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096672222 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076722688 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067490415 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.088242871 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075099887 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065629003 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.095213066 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.07362084 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071745469 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.094312463 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073429048 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.100562169 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091673725 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089815574 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074751119 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076730095 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.099359591 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072635049 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.09194514 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074816042 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071014271 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114642453 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073783361 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067279557 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.072984326 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.072721447 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070026722 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071612655 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072043581 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.103675606 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075287662 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.094693947 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075364533 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070831489 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.089060646 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073833633 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068837236 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065191869 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074655612 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.07548297 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063806499 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070351096 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.09973304 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071865118 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064975175 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090965729 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068223148 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071528904 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090849324 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055314409 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068515503 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.094670215 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065598381 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.095089982 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072945823 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072069647 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.089935608 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076428642 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065327746 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.094016207 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066624398 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065633977 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.090477815 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069694811 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065743681 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090223569 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074231317 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.06698528 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.094778638 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079756186 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.088535828 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072634324 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.06471939 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064819782 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078171417 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.099083229 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066881186 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068081362 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.088110818 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07346689 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064498731 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.089069085 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066067405 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065624872 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.095017649 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065977124 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068103236 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.095766365 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078294632 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086844041 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070416956 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067947722 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.087650632 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072402229 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.06552389 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.088521442 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.068617651 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062008203 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090659834 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066775764 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072498432 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090350949 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073335414 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067320904 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.097179553 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070176366 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.093516745 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072553448 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064512251 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.080310967 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069699067 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067682316 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.089452709 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066750879 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067115445 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.0877095 seconds)
done (took 12.963653138 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067602017 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.16732664 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.121422189 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.09602208 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.108831161 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06666007 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076127524 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.125222292 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.089973953 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.104551491 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.109763927 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085262472 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.136755231 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065088051 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.08845772 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071210636 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067098154 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.110744954 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.123137028 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.08778226 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.1333391 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065588991 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.119258077 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090651404 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.112002906 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.124362717 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067829965 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070254725 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.092147477 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.092250687 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.108704909 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070637624 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066356508 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.122245136 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.115707288 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.085316709 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087509918 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.084890582 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065869517 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.08906545 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.088448655 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.122086231 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.103571799 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081708529 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.072397616 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.092039211 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067356757 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.107884172 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.09018851 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.103110816 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.109085176 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.10550107 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.092413833 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.08135905 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086965185 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.087733714 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.103899707 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068799757 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066730626 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091909082 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066033112 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069422945 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.110672975 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.11302888 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070890034 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079754977 seconds)
  done (took 7.141429004 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084004971 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090079142 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.106545891 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083727512 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064984099 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065591008 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065478258 seconds)
  done (took 1.549916578 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068740973 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088307443 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.113814441 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.091873946 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.111828042 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.090504601 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.102580725 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069141991 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.082492822 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.09222549 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087657245 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.125822367 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.068202276 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.096751277 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091761294 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066425116 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.114259923 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066785426 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092872147 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091496109 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.09168168 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.087492162 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.068811971 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.090718793 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081201047 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066504692 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.111245949 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095710253 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06965238 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069760722 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088328461 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.108701012 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.104401121 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074251698 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066130399 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.105628091 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081825969 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088685423 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083719749 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094580115 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082558465 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068168543 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.091231225 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066107082 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071107517 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.100804279 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069376313 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067918036 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.093691795 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086792346 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090960512 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081459399 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.067685838 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.094906198 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069224669 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094831635 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.07817881 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068832518 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.109838035 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069052689 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.106744386 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084602613 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.082120379 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.108636491 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071148771 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.105554555 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.083233586 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.071919558 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093972693 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.071380848 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.105789672 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065619545 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068096128 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.101450591 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069431642 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.114190188 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089777765 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067835114 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.101892701 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067238441 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.090934969 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.068171086 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089350842 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094062284 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067218828 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.093906999 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072229882 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065229927 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.089285577 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072154866 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064867332 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.092867492 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070891215 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.067555066 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093180549 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083896525 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.090849865 seconds)
  done (took 9.257271974 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069782266 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068402867 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092019312 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069168354 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067711842 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.091610192 seconds)
  done (took 1.454306263 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.096352658 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.09178627 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08218395 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072547658 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.128350534 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.080591974 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.10692154 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.101920874 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085335191 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078918946 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.105924429 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.082618556 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.112106907 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073167871 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104966457 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072826651 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.104736658 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076829139 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.102435828 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074634161 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.110692237 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.073795541 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072988032 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.10580936 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.070711672 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096548929 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.078069729 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102407546 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079601053 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.10308885 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.074399123 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.070667666 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.094547282 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079667972 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.106147057 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070748446 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071030611 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.070777339 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100824036 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.0710303 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.081591589 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098961189 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074298889 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095474628 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079433112 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.094362675 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07231506 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100401457 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082590617 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.094186872 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073496815 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.07206162 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.094448705 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.072501504 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.094068398 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080057156 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094020795 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.082480536 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.073183391 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.094913326 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069870352 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094426222 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.079571273 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.094065569 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.081307898 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.094129177 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.072228879 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073401846 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097830147 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073608107 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.09478687 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.070633203 seconds)
  done (took 7.236430154 seconds)
done (took 27.615551084 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.65438235 seconds)
  done (took 1.649694776 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.688431788 seconds)
  done (took 1.685729723 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.206200091 seconds)
  done (took 15.203375381 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.583513698 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.725302948 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.8485434 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.153964066 seconds)
  done (took 3.309798867 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.866836802 seconds)
  done (took 1.881082763 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.236303164 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.222981337 seconds)
  done (took 1.460367157 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.735451381 seconds)
  done (took 1.742608572 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.255714155 seconds)
  done (took 2.254000678 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.316677884 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.178038176 seconds)
  done (took 1.502817381 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.490178023 seconds)
  done (took 1.496906873 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.555138297 seconds)
  done (took 7.567822491 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.207971493 seconds)
  done (took 1.232772045 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.266163493 seconds)
  done (took 1.285681541 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.018722056 seconds)
  done (took 4.034039896 seconds)
done (took 47.314643817 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081071694 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080946557 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.104510809 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078691645 seconds)
  done (took 1.354640376 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078640897 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072334632 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.099842627 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072775051 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.100041196 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073119184 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073791175 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101525452 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072498169 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.09606293 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072877595 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072344079 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098944713 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074841259 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093425197 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075253972 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.097515642 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07398802 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076104238 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096164536 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071903388 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074740875 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.099741756 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071477855 seconds)
  done (took 3.009028615 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.08001744 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073756364 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.098484215 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072418188 seconds)
  done (took 1.347780671 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079324583 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091310688 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.113870324 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076458202 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.090465817 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.112325206 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069859848 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069077208 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.095833017 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077874129 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067438792 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.121457899 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.111299094 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077525405 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078916601 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.090113 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068717203 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.111038497 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077953763 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.07716603 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.072287562 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.075857762 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.093120371 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.09060801 seconds)
  done (took 3.1117325 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078837543 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.101768728 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.101673582 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087887815 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.115043259 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066031981 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.099009249 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.090127351 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.147862442 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065439346 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.093579173 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066555809 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072017741 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.089272217 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076496029 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.128419194 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.109827786 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.06855446 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.120646784 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066325744 seconds)
  done (took 2.870771215 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.07442027 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069222127 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089140099 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070604244 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077695847 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.09676243 seconds)
  done (took 1.507429554 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069003015 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.06676749 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090045007 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067832681 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071903113 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.090883156 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066998067 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067190241 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091276403 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067600249 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066565034 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.090051887 seconds)
  done (took 1.929767465 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.410578161 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.095069177 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.090722902 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.068035362 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070422 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.090657903 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081744275 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068133677 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089381336 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066066476 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.092407608 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070426621 seconds)
  done (took 2.318635396 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257606426 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078104678 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.290830633 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162313519 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110480792 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143649187 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131186788 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139288895 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.171756723 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128366094 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22017046 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195917874 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132920716 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163859286 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113761617 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.099688987 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208917051 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189755234 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12981718 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191853888 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171219517 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152544041 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173884533 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127520646 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132269094 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149423934 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071352663 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105232462 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223861644 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160667354 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173584628 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13792087 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119399765 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229840432 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223891607 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169453287 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15995614 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084941998 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.152584192 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.160638362 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25390023 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113580457 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194578311 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133913358 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105505312 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167840549 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14653887 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.145730631 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.132793326 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090173362 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198362841 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210220734 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.164705328 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088144259 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139209456 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141292689 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.142180121 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129477367 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236008481 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188507268 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152163361 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.095509718 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10034229 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20453223 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15793116 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.135205716 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.153607273 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118670293 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160556625 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181270369 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145698331 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169891642 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.180839795 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088650327 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14378898 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190262226 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155141254 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19723376 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150334434 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.097431361 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151280642 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129100375 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082724034 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.165325675 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075618243 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226793021 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12316792 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.108433266 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13946732 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134772464 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135110916 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190631841 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197461707 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128778857 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066883717 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129589727 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.145455035 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177574993 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113283343 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109674264 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141685076 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.103167857 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16587963 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.099244258 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123296364 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.074152749 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15278333 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15614407 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100561703 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150694765 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101863722 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.125814585 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160686758 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211625559 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089533433 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108585418 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194188754 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14770196 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.13009412 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195224212 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.184129619 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.124174441 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104779079 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177142487 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235230181 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089254053 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215338021 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133251422 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083670363 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.112570728 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151518936 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139230257 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.148636719 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08251442 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.145868379 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221352135 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075509397 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120439051 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160316138 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104564105 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08152709 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129862507 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126821877 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095345883 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.125482097 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.131488159 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166238523 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149877318 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131097128 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152343102 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124535098 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223605165 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113608175 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101263993 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102182004 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.06892557 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.190813014 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186466125 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103840042 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193926261 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.149969105 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131060077 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145159911 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082284612 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191050062 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080032112 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070061422 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198262481 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135137123 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110634243 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.202319279 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104591715 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.177884487 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.146937369 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163374727 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158765402 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.154989259 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131486069 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.086983669 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137677216 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177765893 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.075232928 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.117096679 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080695866 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130483628 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121087459 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083937822 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193648736 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15365532 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101008931 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135898359 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123155948 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173388561 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.102298622 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157327063 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.145639125 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119385246 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.180791782 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179374991 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180586792 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101709717 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198325766 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071255346 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073878317 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.116292965 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14893362 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108708207 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084164657 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14335269 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.198378563 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156853379 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166348472 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136935925 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14806934 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181393273 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069210396 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.13992406 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174944947 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170773448 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.126433908 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115163557 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.100963498 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168829054 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135146849 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236156918 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140966478 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150306789 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207275361 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100447518 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105976542 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130429709 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162963001 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132148316 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171167102 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125743319 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113279808 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135934442 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.075488061 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100192996 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155426241 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147530217 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161446435 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.139290148 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157904538 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075807214 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145101164 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150236162 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149419265 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064042637 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145197144 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214352879 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119877247 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144919254 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181666835 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105879222 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.150791719 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231896699 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174990281 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084054231 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108251598 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146455541 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154602662 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11680246 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167223327 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138314395 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161991643 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110535711 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.11109522 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11197518 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098840801 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130794236 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.119422018 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.135913662 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.14071026 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095102712 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157646108 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128890505 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134940172 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14439383 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.121071302 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.091583554 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123582743 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201993168 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146036608 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224966353 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.125067152 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.1718797 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218364129 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075115145 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105350567 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078208508 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165711614 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109922006 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158227575 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.124512206 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131158284 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15117966 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171367812 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120459075 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069791818 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134304527 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163665687 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137805877 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123133829 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.107182957 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216685765 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.125357634 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081937921 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140536621 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104954761 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102041655 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230581727 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064638961 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123317747 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07601145 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1064473 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154451834 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206369048 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084024484 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.148377605 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146231157 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137987958 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155089259 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102810881 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125858607 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141291718 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176880326 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180357657 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.091564094 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139104985 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157068738 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21017704 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131813892 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.09598421 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225210582 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178284986 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.21462055 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.114339794 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141165845 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114992232 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133900994 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193469555 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084132023 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219292275 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082339649 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191377408 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130702246 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09097797 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182778975 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.099125773 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130115421 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175343008 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144070173 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109488818 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078117702 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144134623 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146533393 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132681184 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.100857876 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16810481 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072297813 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159028378 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19675057 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108128867 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129727526 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097806448 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106151434 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135674187 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129560614 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088958266 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.120173543 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202801381 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.114908136 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204134766 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171182527 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141217342 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164660479 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126132301 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.662628654 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.103097225 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182793112 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146850625 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228647806 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122384486 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119186757 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136297282 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151137067 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199581355 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131982071 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.17645711 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185484868 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.143908347 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081394023 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129797134 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129475482 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.090434891 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131638243 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140725347 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144108643 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.119936425 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.143463 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152747066 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.08170994 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121508189 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183286568 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143469541 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198997304 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168344781 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084253162 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144087068 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194436017 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079346966 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.175582796 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182711485 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134131425 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125066516 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081947774 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.129201227 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224549762 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074104431 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218328477 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148056915 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135623476 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113630841 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.168020197 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16045713 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135743795 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149313392 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094107775 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.136096474 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115020152 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110519555 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077475227 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132122714 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140048622 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.123302473 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125928898 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.120793103 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180195938 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.097964367 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121729186 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104942508 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200141269 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203954491 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.115230469 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083108243 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146351784 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140021388 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.111090117 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150378585 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.106092654 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106695589 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.084802861 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.10396682 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.132594889 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139134225 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130715511 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137735187 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193418953 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081925968 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.247702251 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097407502 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131852664 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069340922 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.104819886 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096205458 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125022108 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135464504 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12695916 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198139679 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.121178546 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.116533067 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094095053 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.099473149 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083317962 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155301061 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137128598 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146659273 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124984204 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062402713 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135486168 seconds)
  done (took 68.869571108 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.131703093 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.105953158 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.120331846 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.173617102 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.147627077 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.238003492 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.180875078 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.224714064 seconds)
  done (took 2.422269203 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070614659 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.11767118 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099703361 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.108047322 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067624757 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.093461009 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.275354413 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081384094 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.091607763 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.089295222 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.105047145 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.092798512 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.458204911 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066499805 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.092535925 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.06456693 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.091620633 seconds)
  done (took 3.160904999 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.421077141 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.595761025 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.423101348 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.100049231 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.697082849 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.090183803 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.110127632 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.159012659 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.072091909 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.417157271 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.743810263 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.129577862 seconds)
  done (took 17.05747539 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076164944 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069099778 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.109051033 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083641031 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071562055 seconds)
  done (took 1.518446123 seconds)
done (took 111.489168725 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081285014 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.353433379 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053934739 seconds)
  done (took 1.544889851 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.084419687 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083443842 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.110760373 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.081689775 seconds)
  done (took 1.474121586 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.075240842 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075687971 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109583929 seconds)
  done (took 1.368444622 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.281737306 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.138384671 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.115015147 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083539801 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077476035 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.10253419 seconds)
  done (took 1.370520997 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073462695 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074402343 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098271841 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076522676 seconds)
  done (took 1.42527173 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077604335 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054129065 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054983938 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.08287717 seconds)
  done (took 1.378818843 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.087514843 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.077820393 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104127227 seconds)
  done (took 1.373006121 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107194318 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.110060393 seconds)
  done (took 1.322196353 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082860388 seconds)
  done (took 1.186345181 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.10064475 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.139431926 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.155842222 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.136449747 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.165125232 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.135529806 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086221627 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.115086373 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.103405691 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087737676 seconds)
  done (took 2.337530192 seconds)
done (took 16.504888259 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079681271 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.381381025 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361706568 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089670621 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.695393652 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355818862 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.994715254 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091088934 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.14691998 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.092696737 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08440624 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648048239 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.985603905 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.313761662 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.943357132 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.313018705 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.675589277 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069644007 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067207745 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093701669 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.954154304 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066938223 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.09356297 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068441538 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.672620698 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371836923 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067904847 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.341230873 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.0679725 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.093415832 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.35584259 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067848016 seconds)
  done (took 15.805230601 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070903455 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.141825715 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074746379 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082901249 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.096682746 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069159535 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.096684957 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.07049548 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123721768 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066421137 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11080987 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068819978 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072019573 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095195666 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087265901 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067667595 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067752334 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067312657 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.096236368 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069024268 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085884405 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093682451 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.0687674 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093357665 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069335422 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079150132 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094332835 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068499916 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06814179 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096736721 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07129645 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093402147 seconds)
  done (took 3.796005818 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115288893 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.1501667 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073677195 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127768576 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112992681 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.096958732 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142371587 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.120162918 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153944268 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067836186 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110592896 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068766618 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125547776 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069757399 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086359132 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094171767 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069183769 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093280107 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069056734 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067528528 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112170816 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067789193 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066950593 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.066828919 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.066566248 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.10867876 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069010678 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067657722 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094704334 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069812409 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.096459708 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069305615 seconds)
  done (took 4.084935076 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073271561 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.073671658 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108550798 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083273734 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068794784 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.098213674 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.07265541 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.094869589 seconds)
  done (took 1.796522238 seconds)
done (took 26.596405098 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079144885 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068580471 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.097137431 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080582244 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072741481 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.104360175 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.06668386 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.099200261 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073101314 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072284269 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.100756346 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068242349 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.069863282 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.093256974 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073709655 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067133844 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.105688906 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071187248 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.104497351 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079228043 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.068925559 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.099423644 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074012751 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.104272982 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078648382 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.10416957 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.07810962 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.071459212 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.094824102 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.07021315 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.075124639 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.110030417 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.06755918 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104652962 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067917453 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.066987356 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.097203763 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067766219 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.103768875 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.078162147 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068706945 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.102504282 seconds)
  done (took 4.608735154 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.088316796 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092256325 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.112766917 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061439011 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066130928 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.091472001 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088146952 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.085559488 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060512551 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087189902 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.081655087 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060483454 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062348319 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053595243 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.086154454 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057301569 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061411477 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.081658856 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059818257 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059637409 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057549024 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.080051597 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060688457 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062378286 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.08199941 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062672952 seconds)
  done (took 3.02036858 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075260683 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083951845 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113617417 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.125584538 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.131369057 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.07672004 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.105040685 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.088001706 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.111439809 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068480169 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070606455 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.120388401 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088291801 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.099737575 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068539251 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.08543258 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.118000605 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069345666 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.099507416 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091514087 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.08329409 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.104879305 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092217029 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.107765254 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067896844 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069091574 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070036339 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.079877854 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.099966614 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077461977 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071247678 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.098498413 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069774558 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104666052 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072800447 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068995438 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.116530984 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077360948 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.103762656 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069007849 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070535802 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.095612111 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089347451 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.14029953 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.06752513 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.09946231 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.077130585 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076472647 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.093986616 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086074763 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078141785 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.094413974 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071066959 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066399099 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066418562 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07879736 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.097806686 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070950766 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076025705 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.097496448 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.080492785 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.096589335 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084275805 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066160299 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.101714326 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067518896 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067819034 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.092719842 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092182849 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094453528 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.10977142 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.096510109 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069595382 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076196507 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.102249398 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074147766 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.066867472 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109149638 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077224213 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.096510751 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076859403 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070473354 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.097488905 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088274914 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.068904676 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068258823 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067248584 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100923713 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071439376 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.06767885 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.106613418 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067830212 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069763877 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.111170956 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066976944 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.095350633 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074046578 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071572508 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.093611896 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078312809 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098812245 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069230612 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076259054 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.094306893 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070127369 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103326094 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074966514 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066787044 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.098725598 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074726126 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067758765 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.096503581 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070898287 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.09457483 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.07775348 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073788426 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.098947759 seconds)
  done (took 11.166576648 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.185459936 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.152884372 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.097505696 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.170661258 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.07698051 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078130017 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.174034748 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.121031066 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068830294 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067281836 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.096321002 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.11427176 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.133975164 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.148492495 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078501845 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.094618612 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083645415 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.143678509 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.17408678 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142771272 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.11145123 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075735557 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.097038638 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.06922332 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073981785 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.109927132 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090068966 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.102637911 seconds)
  done (took 4.262255074 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082455661 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.12526011 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074707685 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088136621 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.117676123 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067492487 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.097331047 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069385228 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.078779669 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.106371697 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067216689 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.100526201 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074770939 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.099306853 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069495884 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.07386533 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.102062317 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069831871 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070120208 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.100608984 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077078922 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.108135712 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071951556 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066313718 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.102065574 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066658084 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.091321789 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085462659 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.094645456 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.089864834 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065373347 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.102782665 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081298249 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.095593292 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068208019 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067293737 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.094226741 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068412878 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069290511 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.093507612 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066681523 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057601008 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.09359607 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080587167 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.099555828 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057560895 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072428126 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.100547729 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072950113 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064741962 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097168751 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070331181 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070290585 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.101614174 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071894456 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.097882525 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069958191 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065822243 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.101901096 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068316243 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064225702 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.092093795 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.07358553 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066104654 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102787219 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071529478 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091793986 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068423506 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068963889 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.101221853 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.069130358 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070016303 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.093386904 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070524575 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.074184251 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.1003238 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.071535226 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.068346645 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.096225051 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069762415 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.057399908 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.096766077 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.056271624 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072667021 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.094544013 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066344026 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.09232831 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074803794 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079098297 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.096409445 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073515153 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.093881667 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068200142 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070297676 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.086717423 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071943821 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083247 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.110299598 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067577702 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.09228603 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082673088 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.097823256 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068197852 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056562343 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.100749465 seconds)
  done (took 9.714902211 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.093948284 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.087301742 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.096881524 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083229436 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.116835328 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087929657 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.073966954 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.101454846 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068930398 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.105578089 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073935338 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075377983 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.094034505 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077009981 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.09323523 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103071044 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069316743 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.103043552 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072276156 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.100248327 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.1101222 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081413708 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.101585766 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068885278 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.072249723 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.106699407 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089676751 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.106202185 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.078960692 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.075015536 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.106577801 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089743941 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.100807874 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.072457305 seconds)
  done (took 4.181507854 seconds)
done (took 38.061468804 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.210549867 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.4047366 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.197565887 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.072433463 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.230055234 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.207271625 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.201858809 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.191718658 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.369212523 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.189245204 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.440829403 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.722011998 seconds)
done (took 58.576460671 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.205218817 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.335775903 seconds)
    (2/2) benchmarking "String"...
    done (took 1.473564815 seconds)
  done (took 3.946353697 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.608283537 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.029421003 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.451873661 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.194709981 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.196107407 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.497082787 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.701601876 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.977972555 seconds)
  done (took 27.186868394 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.196998159 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.524470686 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.22631256 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.219109792 seconds)
  done (took 17.304499719 seconds)
done (took 58.393216635 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.208658523 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.225704046 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.233751989 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.178731389 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.293810852 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.240227967 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.468506155 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.441382804 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.195312601 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.184565516 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.194098165 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.194128539 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.210107192 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.486414874 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.195012125 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.195090931 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.22801381 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.665543824 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.543138008 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.21130866 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.205493928 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.1976957 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.196440345 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.196576187 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.242220977 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.193879805 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.193701461 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.205476581 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 3.972051644 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.201589513 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.277317637 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.641861944 seconds)
  done (took 190.651564407 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.198573613 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.269371333 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.371023921 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.254717471 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.682823347 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.404060417 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.33264344 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.754449468 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.212638746 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.221481796 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.520216699 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.198865722 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.579260397 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.170717527 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.209091507 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.301433499 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.381754483 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.543445906 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.208523043 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.47213951 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.206744499 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.469453394 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.483350532 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.451195594 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.200958005 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.284964069 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.230698538 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.202354255 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.383496037 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.31883266 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.259550989 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.220049249 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.695607987 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.061259026 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.21498292 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.217466999 seconds)
  done (took 150.32648824 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.453806514 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.196275108 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.20096883 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.199196851 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.222940941 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.200513511 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.659660795 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.662564628 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.696990153 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.630320876 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.263373604 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.338056014 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.196082905 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.288263495 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.214080209 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.20351748 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.213871312 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.220193478 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.196559932 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.196085772 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.657961059 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.207804462 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.373338782 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.208506221 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.201900377 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.224723407 seconds)
    (26/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.203333917 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.590975649 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.19752793 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.222655829 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.506517481 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.241314489 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.198513278 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.415729934 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.464831214 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.299371352 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.201238565 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.227895082 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.201061317 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.462452713 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.199818688 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.201724704 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.202410792 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.200647389 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.701614028 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.203065789 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.661881105 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.205716127 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.030500204 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.203535221 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.202054524 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.573951707 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.50190859 seconds)
    (53/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.198716434 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.199088807 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.199671884 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.203932848 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.199509679 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.202666159 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.226681131 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.59908566 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.294636005 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.198211612 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.203658094 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.22428614 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.203510044 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.40367914 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.20415777 seconds)
    (68/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.203791871 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.255774219 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.419028927 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.70592769 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.663143484 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.202463036 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.292060705 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.315968749 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.200366988 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.200841423 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.200005783 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.199345934 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.302818024 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.200308533 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.548766762 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.210135302 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.204342402 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.261534998 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.292485362 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.201118833 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.446584609 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.204819972 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.204956927 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.83650634 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.291942616 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.198554339 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.203508287 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.200260812 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.55696636 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.665938011 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.303339074 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.207009109 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.549879632 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.205296257 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.570287237 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.657125919 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.702377275 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.206939724 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.306516567 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.207728416 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.206704586 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.205570738 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.235969457 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.207301231 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.260557551 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.207249258 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.597909398 seconds)
  done (took 344.035935317 seconds)
done (took 687.607071571 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.910030603 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.943046425 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.002792054 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.887054391 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.871594902 seconds)
  done (took 10.762063926 seconds)
done (took 11.906611449 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.378957377 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.381887311 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.25847927 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.380693508 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.232618403 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.399492006 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.36058717 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.226112309 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.304419656 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.276947147 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.303985201 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.254452914 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.232307836 seconds)
  done (took 18.13845284 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.508638438 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.492295684 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.27266675 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.506172285 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.248475297 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.501558556 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.394940165 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.405078215 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.394721194 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.22130344 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.220810049 seconds)
  done (took 16.315163341 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.507312376 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.508267974 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.277599689 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.509056963 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.244579959 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.504538978 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.396151423 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.40912511 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.395375997 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.225319413 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.220438645 seconds)
  done (took 16.339175665 seconds)
done (took 51.940103054 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.217121555 seconds)
  done (took 2.36481759 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.246179754 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.40946579 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.230691443 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.221222786 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.220296028 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.217283708 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.223769699 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.218522023 seconds)
  done (took 11.134385854 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.213319787 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.215145448 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.215192018 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.209930195 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.216709524 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.213342784 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.216207166 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.216008975 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.217569257 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.216176078 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.216803687 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.213887179 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.216769156 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.214762466 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.210418484 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.212952048 seconds)
  done (took 20.584231432 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.212367017 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.214617377 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.214091346 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.213601566 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.214826273 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.215625212 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.214573509 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.212493951 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.214356679 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.212929485 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.211926169 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.215674179 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.213745078 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.212557875 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.213753937 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.213855045 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.212744166 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.213799303 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.219384004 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.2131769 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.212131941 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.215025713 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.214508679 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.215390806 seconds)
  done (took 30.289740398 seconds)
done (took 65.519185211 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.051533736 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.711134588 seconds)
  done (took 8.910020178 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.218413591 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.215526037 seconds)
  done (took 3.586565604 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.21719562 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.218886104 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.218998974 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.21798194 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.219898855 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.219231504 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.218604267 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.218324797 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.218410656 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.21908785 seconds)
  done (took 13.338168378 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.217854357 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.217592625 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.216883102 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.21960609 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.219029548 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.216779557 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.2173431 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.220257368 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.21756347 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.214440155 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.218515952 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.219560262 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.220967917 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.216639566 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.219155651 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.217638877 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.213269017 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.215894166 seconds)
  done (took 23.071053723 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.220455733 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.219836451 seconds)
  done (took 3.593554799 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.216908655 seconds)
    (2/7) benchmarking "second"...
    done (took 1.214193327 seconds)
    (3/7) benchmarking "month"...
    done (took 1.215309818 seconds)
    (4/7) benchmarking "year"...
    done (took 1.215572974 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.214888238 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.215108412 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.215641251 seconds)
  done (took 9.662077869 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.219290559 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.391219127 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.467341287 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.908580691 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.212520601 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.215345205 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.150052071 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.216859514 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.207612687 seconds)
  done (took 14.137679646 seconds)
done (took 77.451440114 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.173035787 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.194640631 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.014499148 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.199005833 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.20791961 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.539010856 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.236667961 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.461234703 seconds)
done (took 38.163447929 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.208717626 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.92125462 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.914753676 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.188268794 seconds)
  done (took 11.155253038 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.181090104 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.030556963 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.17893343 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.142481709 seconds)
  done (took 17.659265486 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.747912369 seconds)
    (2/2) benchmarking "read"...
    done (took 1.516567655 seconds)
  done (took 4.388628507 seconds)
done (took 40.545233457 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.188760468 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.188361172 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.18536982 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.186686969 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.188095062 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.188362248 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.187295074 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.183862546 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.18610869 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.186140079 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.186252291 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.186739374 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.182580149 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.184995037 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.187084891 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.182587514 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.183438968 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.185329577 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.184093637 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.183949949 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.184479241 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.185864685 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.184825002 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.18425966 seconds)
  done (took 29.57732888 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.186678173 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.185285667 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.186198 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.18642255 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.183812007 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.184470714 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.187693704 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.181630223 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.183926524 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.184834803 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.183163097 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.181730568 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.184669014 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.182777272 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.183937459 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.18171848 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.183574815 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.179192315 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.182542884 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.179513131 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.18185361 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.179532373 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.180259732 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.184639552 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.179477528 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.179633489 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.183340626 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.180560749 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.183187495 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.179131677 seconds)
  done (took 36.607583334 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.18705525 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.187087274 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.179034748 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.178721995 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.178845604 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.178918012 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.178651975 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.178937074 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.178559699 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.179833465 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.178591389 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.178649221 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.17996803 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.178691478 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.178777456 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.177486226 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.179902283 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.179719968 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.179420427 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.179859669 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.178825205 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.180458764 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.179149013 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.180265689 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.178091306 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.178089746 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.179100979 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.178741535 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.180015075 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.179942222 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.178840146 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.178698518 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.180673443 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.179577852 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.18075395 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.181012118 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.18280041 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.18612868 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.180336421 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.179979843 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.178626205 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.180349935 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.181073641 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.179694332 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.178767723 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.179821698 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.179767778 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.181145061 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.180774279 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.180261793 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.179751312 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.180242965 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.180311347 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.179982863 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.179820849 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.179663152 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.180130836 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.180140549 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.180421024 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.17997845 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.18102389 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.180317981 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.181594693 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.182374407 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.181334575 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.180775212 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.181486031 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.181347689 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.181622304 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.182930034 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.179408289 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.182472153 seconds)
  done (took 86.093696181 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.180463049 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.178288575 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.177502543 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.178353749 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.179009432 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.181608941 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.179156728 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.181448376 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.178694192 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.181995868 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.181650237 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.180142618 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.179039291 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.182187873 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.18267356 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.179306265 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.183212577 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.180751496 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.182276933 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.183334071 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.183017715 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.18014767 seconds)
  done (took 27.091254759 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.18282533 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.182495703 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.179032458 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.182197097 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.178650784 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.182434822 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.183034905 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.184209891 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.182006843 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.180435708 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.181502182 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.183037541 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.1796414 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.178838095 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.179823407 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.180307309 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.182112538 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.181094166 seconds)
  done (took 22.380093257 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.180619621 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.179699735 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.182763394 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.178779298 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.181139804 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.181854551 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.179285123 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.18242248 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.182457386 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.179846935 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.183691893 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.183368004 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.182634533 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.179730631 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.182109371 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.181048866 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.181833442 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.180627967 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.182805757 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.181155618 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.180166017 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.182867696 seconds)
  done (took 27.107918241 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.184226901 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.183829322 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.181071188 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.181104285 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.180907078 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.183845616 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.184072976 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.182090431 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.184193279 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.183419265 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.181993303 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.184157647 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.180441651 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.181003751 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.180847021 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.181674925 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.183817562 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.180838156 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.18293513 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.182515119 seconds)
  done (took 24.766820449 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.185876777 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.185925959 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.185983457 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.186114697 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.185273925 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.186151672 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.184909592 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.187625144 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.187307385 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.187547074 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.187010853 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.186987686 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.185950251 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.186257174 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.186493843 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.185982618 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.186003013 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.186167883 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.187120753 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.186296194 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.18696136 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.185798528 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.186281573 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.185713721 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.186756895 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.187390268 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.186135957 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.187196412 seconds)
  done (took 34.338039534 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.186750117 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.184548838 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.183080782 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.182489794 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.183461434 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.185528915 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.183628481 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.184488962 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.185595269 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.18320859 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.185601663 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.186225443 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.185710294 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.187981757 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.187134957 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.184815736 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.187097162 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.18318103 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.184436199 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.18374902 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.185889168 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.185114764 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.186617406 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.183266923 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.183461866 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.186056101 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.184631611 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.185115719 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.186964189 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.184486298 seconds)
  done (took 36.671952293 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.205828158 seconds)
    (2/2) benchmarking "in"...
    done (took 1.206576114 seconds)
  done (took 3.534544036 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.184617283 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.186995254 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.187080539 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.184491908 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.184944788 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.187729338 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.188181713 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.18521374 seconds)
  done (took 10.611006462 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.189002128 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.187181648 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.187328801 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.187534494 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.188554015 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.188306711 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.197676898 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.202421002 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.17968958 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.181472423 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.187019484 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.184756118 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.183444529 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.181958905 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.182047173 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.188196055 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.172255677 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.168860271 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.175463637 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.172770868 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.173199858 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.177237837 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.179085948 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.171761171 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.176906303 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.185212532 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.182075759 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.173168974 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.172825476 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.179080534 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.174548365 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.17013365 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.173179278 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.171324282 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.171561251 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.171958823 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.185381342 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.19222217 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.18104856 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.173789882 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.172889447 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.168873238 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.173799887 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.175168515 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.174199026 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.173179891 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.171904231 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.169637358 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.171930133 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.175412776 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.17505825 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.17180771 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.170088591 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.179114449 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.175525752 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.18192399 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.190341214 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.175622618 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.17944965 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.184935281 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.189702335 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.181160894 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.175089804 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.173463057 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.180377097 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.194751183 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.182356357 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.187560258 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.170189872 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.173120569 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.181706317 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.18999507 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.18237537 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.174101541 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.173097886 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.174341133 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.173828592 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.173433448 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.182998279 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.193889103 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.173997357 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.174075795 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.182715567 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.192573202 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.172279155 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.17444935 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.174649849 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.174889426 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.174422543 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.185014399 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.191520929 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.173921232 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.174732999 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.175371695 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.177674739 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.175343461 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.173648626 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.176697861 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.171836176 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.174740852 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.175212359 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.174688548 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.18248068 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.175037874 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.173907509 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.185118213 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.174789634 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.173230385 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.186642508 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.17560691 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.175222713 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.175420734 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.182045569 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.172031703 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.177025266 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.182640317 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.176151945 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.177620264 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.17543168 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.175820501 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.184027356 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.199462928 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.175152102 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.175733975 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.180201692 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.184795639 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.176418528 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.180644614 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.176395585 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.173317305 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.173305937 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.17869905 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.176073916 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.178429784 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.176060364 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.178654279 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.174424918 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.176719726 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.176912192 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.179641324 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.179949661 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.177975662 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.178581942 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.181482209 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.178054069 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.179039143 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.186603311 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.177880566 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.17854788 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.179030764 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.174295852 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.177174134 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.178463571 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.176798022 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.178971362 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.177979654 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.177658589 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.177596541 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.179478152 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.178271294 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.177510486 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.1779316 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.18037044 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.176472775 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.182748858 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.177837695 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.180601856 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.177872759 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.178013757 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.178223164 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.17810705 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.176386339 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.179690592 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.181861135 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.178654998 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.178544113 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.183248961 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.178081463 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.178536649 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.178702411 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.181213884 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.187558583 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.178523326 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.18822487 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.180341006 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.178473238 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.179524841 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.179730694 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.180930536 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.179392449 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.182615043 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.184937809 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.193098291 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.189747945 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.179400745 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.181656421 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.179376483 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.180763343 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.185204204 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.17995484 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.17878794 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.179464935 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.179904745 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.180694496 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.183738748 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.180434866 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.183557888 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.180030317 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.18027809 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.180119897 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.180866301 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.1831887 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.182006728 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.177769871 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.181269986 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.181297446 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.179934075 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.177884469 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.179033061 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.180219532 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.181522963 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.180778633 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.19412181 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.177752366 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.182526142 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.18332971 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.182194065 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.180060472 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.181211634 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.183254283 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.181408836 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.190973668 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.200196804 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.182879059 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.190429607 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.197083787 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.18235477 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.184752237 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.181486033 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.178369322 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.184051567 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.188182534 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.182269309 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.182908366 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.182006745 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.18330421 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.181874826 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.190904988 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.180150856 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.181367716 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.181206688 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.183893929 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.178994089 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.183428901 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.182099012 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.182592579 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.184435127 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.179358771 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.182305687 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.184581028 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.18215023 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.184026026 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.181580215 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.184349221 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.187512171 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.188672808 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.183320181 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.18579697 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.183460855 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.184336536 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.182076554 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.18099814 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.182146694 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.195745139 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.1897793 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.190651565 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.186410333 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.181215592 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.188615634 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.184758092 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.184886567 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.182701957 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.183366811 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.183175591 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.180785773 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.178868961 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.183625992 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.18287717 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.183088117 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.183717607 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.184914977 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.182249489 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.182826342 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.183004464 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.182766753 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.182886368 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.18401608 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.183217279 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.186872007 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.184832838 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.18513913 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.182892784 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.191707502 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.200806077 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.18347889 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.18205443 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.183662886 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.184447324 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.184135874 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.182663874 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.185434161 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.18823758 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.18537727 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.192343979 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.182767226 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.194371156 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.183717877 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.186463577 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.19045009 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.181407579 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.183314225 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.183752334 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.18327584 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.193249115 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.200783583 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.183258667 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.18657918 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.183243264 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.183309646 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.184240999 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.184105671 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.184104189 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.184032355 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.196919708 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.206103518 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.186765023 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.18716698 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.181345221 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.183183309 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.184343245 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.182591835 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.190289597 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.184724701 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.187023012 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.184494762 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.185181143 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.183903228 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.184422716 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.184547961 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.181514933 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.183850879 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.192989659 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.2014142 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.18652956 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.18563166 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.197255257 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.18687491 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.196759717 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.202297397 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.186241581 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.186371202 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.185086189 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.18794173 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.185271851 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.187357214 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.186283165 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.186225966 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.187881682 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.186850561 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.189900122 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.187333804 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.18647144 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.186518443 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.194566783 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.205526802 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.187810813 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.189189485 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.183837397 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.187847559 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.189495058 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.185703868 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.186028713 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.187744366 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.195174375 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.192957951 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.188064345 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.18600382 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.187740189 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.187081872 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.186896614 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.186784904 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.186396417 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.186867612 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.189370737 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.186880921 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.194562905 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.187254532 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.188389313 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.18923887 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.187915942 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.198841987 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.189234134 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.18824869 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.187620787 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.187300936 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.187819903 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.189096745 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.186739786 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.189237814 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.188436787 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.187409708 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.193033944 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.19242521 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.190827144 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.186588563 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.187622493 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.188605123 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.189509888 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.188554946 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.188063214 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.187945984 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.189859525 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.187520934 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.190914338 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.186788021 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.188480571 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.189791993 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.188030992 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.190366753 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.193392683 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.190041243 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.185546699 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.189013096 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.188075726 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.187319094 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.188688931 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.200523129 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.192580104 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.197258445 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.196071827 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.192014821 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.190140713 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.190714554 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.195771447 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.187275503 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.190798607 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.1891357 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.193197284 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.189688497 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.193025179 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.189554431 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.199026979 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.19169467 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.190811975 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.203020996 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.210757126 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.190435553 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.19038561 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.194860915 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.190462402 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.188336262 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.19035194 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.18986607 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.199671178 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.209217884 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.190036366 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.193058463 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.189205084 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.191444174 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.192789776 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.190556572 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.192975551 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.187498885 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.190819327 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.189924018 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.191384638 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.187750069 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.190565653 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.190733074 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.192509581 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.196531688 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.189347485 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.193159777 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.190742613 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.191217535 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.191817191 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.19199831 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.18818908 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.188702183 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.192304563 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.190748609 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.192046476 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.194248468 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.19381999 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.193108994 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.191676272 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.192608693 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.194955776 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.200730127 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.197092523 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.18958065 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.190386888 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.192800731 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.196026202 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.193336297 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.192690167 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.192313189 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.195295882 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.191310676 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.192237834 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.191817657 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.194215631 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.20968915 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.212401234 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.192894714 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.194940011 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.19978462 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.1920566 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.189902411 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.191416216 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.196204522 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.195691114 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.198275424 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.193370357 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.201115815 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.210103727 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.192689024 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.195681568 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.195012517 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.198943629 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.196930989 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.192930418 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.19272454 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.197660287 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.209235218 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.193549935 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.202045647 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.222587444 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.210837766 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.194357465 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.194182628 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.193862234 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.194084192 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.195848547 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.193487277 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.194303593 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.193816756 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.193867564 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.195235001 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.198905776 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.195892628 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.194354206 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.19349859 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.194282778 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.198049364 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.191481691 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.193736297 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.19537893 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.1940613 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.195012409 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.195138717 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.195526625 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.208966929 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.207064514 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.195802491 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.195905888 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.192872462 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.200008711 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.197208167 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.203533988 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.200250295 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.195150706 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.194999691 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.197890863 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.194885492 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.193105179 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.196790471 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.195647598 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.195430323 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.19209718 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.210349984 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.202764578 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.202467639 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.196758436 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.195582882 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.195549485 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.197882979 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.196120025 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.195765162 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.19897953 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.1963035 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.197529849 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.19625735 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.196090083 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.199055473 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.201893473 seconds)
  done (took 708.128323643 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.193569378 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.192976754 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.193888271 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.193459546 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.19267818 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.192880813 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.193502548 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.192883698 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.193324164 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.194287839 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.194484544 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.19331751 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.195031662 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.195058317 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.193803743 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.194662683 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.193696515 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.194449237 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.195086589 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.193938827 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.194916582 seconds)
  done (took 26.204817697 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.197683341 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.194679714 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.19551893 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.198178506 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.194672878 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.197135319 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.194640479 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.198078678 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.197298238 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.194893524 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.197441001 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.197792612 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.194706425 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.195435155 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.195617071 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.197936758 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.197819879 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.194898325 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.198362144 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.196200152 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.197800246 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.194554605 seconds)
  done (took 27.454674563 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.198601269 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.198996957 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.198667168 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.195416227 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.198945419 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.19653366 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.198224407 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.200010885 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.198480893 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.199908294 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.197645113 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.1987728 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.204189943 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.202766185 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.201950415 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.198122871 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.342205395 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.198771767 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.200559439 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.198948069 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.19658831 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.207106834 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.197641104 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.196377834 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.19953489 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.200840651 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.199212754 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.199501089 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.199933287 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.200767418 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.2034954 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.199648966 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.200009398 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.201636988 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.201223271 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.201826437 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.202301502 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.20173319 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.197719014 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.199417864 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.208827394 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.216322395 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.201496146 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.210214122 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.202207729 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.200780591 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.20261207 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.2073365 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.199179272 seconds)
  done (took 60.119325082 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.200971579 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.201937957 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.196949023 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.20294869 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.202001659 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.200807829 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.201236902 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.200453054 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.199361737 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.19929318 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.201319917 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.198005391 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.199604891 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.200606988 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.201704783 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.199428477 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.199230776 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.199454356 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.200574223 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.199162942 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.199154218 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.201046244 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.201510693 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.199525679 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.202547517 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.19937658 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.199833502 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.203064437 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.199323557 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.199498429 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.203230304 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.204009218 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.202908647 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.200851937 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.200556188 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.203056928 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.202838421 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.200378719 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.203337913 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.200740643 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.202592044 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.202617026 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.202970271 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.203175842 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.200126861 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.200611283 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.200289954 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.200400562 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.200130717 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.202372935 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.202775026 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.199927281 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.202746593 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.199863858 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.202893098 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.20294474 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.200029907 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.200314773 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.203085758 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.200308638 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.200481493 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.203058197 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.201390954 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.201627525 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.203573044 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.2007437 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.200828541 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.203348998 seconds)
  done (took 82.815632355 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.203900692 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.203245034 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.203091345 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.204913552 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.203836562 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.20419637 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.204489691 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.203116089 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.204092125 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.204615789 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.204477253 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.206291584 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.203742412 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.2049003 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.20418074 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.205047633 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.203820062 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.206223486 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.205887471 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.205702384 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.205348315 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.204525019 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.204404805 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.204876977 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.206934439 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.205846316 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.205782098 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.205088611 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.205766634 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.205324072 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.207588611 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.205736818 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.205368715 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.206462441 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.206613797 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.205237161 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.205914299 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.205715442 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.205527263 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.205641941 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.205174065 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.206060012 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.205900514 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.206899951 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.206965429 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.206384038 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.205445991 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.206113536 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.205894632 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.205964995 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.205534082 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.205777121 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.20687795 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.207012127 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.206380896 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.206704152 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.205946873 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.206457068 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.206975606 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.207129802 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.207226484 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.207624185 seconds)
  done (took 75.88500475 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.206615027 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.206094963 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.204026521 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.204901398 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.206928713 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.20407884 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.206715609 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.206836526 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.20623653 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.207644841 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.207004451 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.204157664 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.204405393 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.207067472 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.205368965 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.205203971 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.204326374 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.204971377 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.207170727 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.204848252 seconds)
  done (took 25.257406577 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.205686069 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.207207899 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.205718509 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.2056951 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.207522151 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.205321925 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.207718973 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.207931912 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.205496787 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.207541202 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.208565314 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.207884594 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.204899293 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.205416879 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.208089838 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.206006468 seconds)
  done (took 20.44907046 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.206381596 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.207971047 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.207788996 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.208495064 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.205367449 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.205784826 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.20826491 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.204953265 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.205892934 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.208745875 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.208720322 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.209159256 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.209789959 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.209103511 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.205823384 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.209728346 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.206993641 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.206130304 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.209502923 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.208284534 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.207164263 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.207410929 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.210044295 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.2095267 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.207652047 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.207363399 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.207309966 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.2071632 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.207124715 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.210286665 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.207686815 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.20824833 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.207901714 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.207882907 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.210229523 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.209488926 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.210995718 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.210935702 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.209963302 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.210149557 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.211220059 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.207765108 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.210272047 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.21009861 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.208412099 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.209789406 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.208116962 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.208749431 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.208129298 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.208428067 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.211337094 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.2113852 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.211282604 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.210810234 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.211034305 seconds)
  done (took 67.619574174 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.211846583 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.210926206 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.209591879 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.210753764 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.212016108 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.208319665 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.211012454 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.208431595 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.208609044 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.211642085 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.209122396 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.21067455 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.208487575 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.211204857 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.210234298 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.211686719 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.208410349 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.209399695 seconds)
  done (took 22.929437717 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.210008527 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.209390213 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.212025024 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.209493805 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.209060565 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.211476498 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.209398998 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.211354169 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.211998372 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.210342247 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21058679 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.21336325 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.212461273 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.213090144 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.210394162 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.210255141 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.212313439 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.211968433 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.209934587 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.210374251 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.212996486 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.21225791 seconds)
  done (took 27.792753735 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.212816398 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.212554861 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.22929397 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.252959498 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.238937562 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.211562256 seconds)
  done (took 8.50647437 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.211765559 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.212934524 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.211205802 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.214046201 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.213453857 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.210791922 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.210231802 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.211026816 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.212993674 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.211206323 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.21034249 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.213484201 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.214226049 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.210621548 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.214100364 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.214097262 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.211464161 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.211756596 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.2115121 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.213928825 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.210958191 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.213764369 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.210832866 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.211200112 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.211300357 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.211201189 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.214347197 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.211441057 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.211361358 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.214941243 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.214080296 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.211071593 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.213896699 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.211953044 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.214884538 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.213847331 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.21152956 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.214743848 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.214669926 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.212087301 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.214832972 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.215199651 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.214769524 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.212748565 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.21441764 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.212960885 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.211074862 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.212240781 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.212507454 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.215539082 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.214528558 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.212372656 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.215425972 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.215322381 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.21665367 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.216175454 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.213965287 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.212802108 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.215742744 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.213576939 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.212864333 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.214853083 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.213120992 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.214183319 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.216070169 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.212784601 seconds)
  done (took 81.217810098 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.214210019 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.213836374 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.213781086 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.215764942 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.21412776 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.214006855 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.214244832 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.214493206 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.213935108 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.213937794 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.217835581 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.214116958 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.215064906 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.213739514 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.213865865 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.215100379 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.214315015 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.21404059 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.215099544 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.217519351 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.21447016 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.214568636 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.214876817 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.214958732 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.215921818 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.217621174 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.215973854 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.214963931 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.212320711 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.215291233 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.215695108 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.215281256 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.215630856 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.215520968 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.216551476 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.215935976 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.216531698 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.216190411 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.21569753 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.21742536 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.215804871 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.217842127 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.215663454 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.215466706 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.216187643 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.215129134 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.215665814 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.215624796 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.215839713 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.215864086 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.215970511 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.216258909 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.216605067 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.217990381 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.215999713 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.216694367 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.215559192 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.216933524 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.216297836 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.218726112 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.216358243 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.217054804 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.219605709 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.216453372 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.216504739 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.217544242 seconds)
  done (took 81.388087697 seconds)
done (took 1655.671500912 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.19968746 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.224997135 seconds)
  done (took 13.579435599 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.380533995 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.333243177 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.217081357 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.254651274 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.21774137 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.215176477 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.221424961 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.218050331 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.218263873 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.21893508 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.218676268 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.405521648 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.214099689 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.21826757 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.218023616 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.311955682 seconds)
  done (took 41.238522523 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.255300696 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.226367012 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.335068449 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.239420083 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.257997816 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.400741647 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.275752145 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.227804982 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.374901507 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.269007401 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.622815818 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.258392865 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.226543217 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.216372927 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.24421259 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.40254256 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.455316706 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.633677822 seconds)
  done (took 28.078837642 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.605585296 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.221960656 seconds)
  done (took 8.987299435 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.231787922 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.265757113 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.236520139 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.227377892 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.225515114 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.220801605 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.224382143 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.236052792 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.23512472 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.282181863 seconds)
  done (took 63.549871914 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.24335063 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.228240579 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.226630094 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.224181058 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.217703178 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.216675865 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.225193574 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.221134254 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.311287701 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.338145432 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.246088859 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.233686571 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.227869399 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.226289974 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.225766561 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.258994248 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.360571704 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.222910464 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.221533294 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.230982172 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.225008134 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.30786519 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.264191097 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.225962183 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.33401138 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.332203189 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.231774314 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.232614297 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.355565657 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.223514563 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.225168279 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.226564028 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.227969642 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.770876018 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.699119624 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.23313736 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.246560287 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.235901517 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.223586299 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.338155651 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.226660205 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.232794459 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.217891672 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.668791349 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.375238924 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.330065225 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.369035067 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.230608815 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.227538405 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.282798169 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.229546677 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.228030972 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.255063237 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.980986905 seconds)
  done (took 104.08462635 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.252797366 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.70736204 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.387659088 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.238844322 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.715473019 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.658299268 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.221991661 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.467306002 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.282676102 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.674584052 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.495881563 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.552167602 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.222911884 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.221030253 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.223253635 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.219984641 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.468251041 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.501504955 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.222666081 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.224074157 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.269621847 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.704591986 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.44390121 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.393326677 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.258822878 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.650072447 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.444129641 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.548565155 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.223027261 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.221153984 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.489275859 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.231472024 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.223445723 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.221489 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.482948484 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.541519576 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.524546221 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.223724118 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.25205326 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.22322173 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.251036219 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.644932079 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.526350357 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.452999339 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.577844374 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.66259494 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.224464833 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.220329748 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.226433632 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.4274285 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.466565981 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.702500606 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.445771462 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.234797874 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.478690989 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.221372248 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.300176202 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.671437219 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.551942406 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.546153573 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.265853457 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.222611882 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.221293211 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.743193596 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.229027514 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.535284146 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.597432748 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.222111981 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.536298917 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.540241842 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.549260044 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.676734821 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.265471821 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.251897426 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.260948873 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.706606089 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.494703884 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.678574126 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.271132783 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.222979827 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.520344433 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.227919008 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.496247428 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.758042607 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.694681462 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.276966318 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.243408014 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.22383727 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.678312602 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.677075425 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.471503874 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.582267079 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.496677869 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.241399374 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.223092991 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.22256326 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.230934627 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.45428312 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.238297447 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.585191385 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.672313008 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.993746898 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.268563765 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.745919266 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.460256123 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.238307274 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.224365365 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.226588635 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.443955132 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.297255781 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.244913199 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.225285703 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.679439432 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.0963969 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.355165784 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 4.928876744 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.495614284 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.22706349 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.698218789 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.232917458 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.67821702 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.257395591 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.743590425 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.559212119 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.281694754 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.447225132 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.585224454 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.238729915 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.693384004 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.744377753 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.446950228 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.690863481 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 5.989611803 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.225954495 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.724188756 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.260891762 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.234987616 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.409165053 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.243204658 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.489063936 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.248173604 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.702465057 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.264978004 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.496252785 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.554322705 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.715981222 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.283960683 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.495191742 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.260158805 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.373522807 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.246085224 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.247475753 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.423342973 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.475204038 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.226618797 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.771545151 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.227911552 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.388800113 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.749072417 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.264721147 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.503590418 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.228496953 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.227517387 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.528098412 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.268327174 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.866657624 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.230235267 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.498422538 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.226856279 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.679099009 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.227057594 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.745611599 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.450803302 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.246702453 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.233049024 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.029513872 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.227500155 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.372616413 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.399766824 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.413122846 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.22734269 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.653086901 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.231121734 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.452532857 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.232083902 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.224816807 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.568266635 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.279040162 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.223956719 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.232954491 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.215188092 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.216164266 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.652056777 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.257088863 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.936916718 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.368096911 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.686332171 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.52657274 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.694481059 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.275565846 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.236161845 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.687264503 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.280283847 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.48560688 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.212051902 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.254366673 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.668063615 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.219175136 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.651705614 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.714609488 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.231603573 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.466725741 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.220622853 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.29981182 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.217941935 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.454974371 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.53712274 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.22021869 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.219727827 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.433647615 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.44799263 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.43493994 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.233039618 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.231260005 seconds)
  done (took 824.499828371 seconds)
done (took 1085.174211497 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.218450495 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.222112814 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.20463365 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.21995085 seconds)
  done (took 26.01717702 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.226439934 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.223436327 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.224164039 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.221751209 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.224318033 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.223916165 seconds)
  done (took 8.503830598 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.249908527 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.218814618 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.219877798 seconds)
  done (took 18.848198714 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.426313883 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.369575333 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.559046547 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.128774249 seconds)
  done (took 9.645775569 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.225997342 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.225633646 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.225246821 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.226764909 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.228685446 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.229119206 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.22705679 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.224765724 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.228833385 seconds)
  done (took 12.201866082 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.71136902 seconds)
done (took 81.083343203 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.233239779 seconds)
    (2/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.231032081 seconds)
    (3/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.312370252 seconds)
    (4/309) benchmarking ("sort", Int8, false)...
    done (took 4.26327406 seconds)
    (5/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.332589807 seconds)
    (6/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.904904188 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.460220449 seconds)
    (8/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.014941879 seconds)
    (9/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.799178533 seconds)
    (10/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.726298519 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.270936166 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.254046187 seconds)
    (13/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.254556918 seconds)
    (14/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.228301315 seconds)
    (15/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.248781395 seconds)
    (16/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.227264934 seconds)
    (17/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.270281688 seconds)
    (18/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.806252219 seconds)
    (19/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.207591491 seconds)
    (20/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.991097994 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.055961056 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.193700392 seconds)
    (23/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.306377716 seconds)
    (24/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.463792052 seconds)
    (25/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.308973684 seconds)
    (26/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.238198474 seconds)
    (27/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.464205616 seconds)
    (28/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.344267733 seconds)
    (29/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.255755676 seconds)
    (30/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.356316502 seconds)
    (31/309) benchmarking ("sort", BigInt, false)...
    done (took 6.229361019 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.570072991 seconds)
    (33/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.238359558 seconds)
    (34/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.231947697 seconds)
    (35/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.635318871 seconds)
    (36/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.381378958 seconds)
    (37/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.911108523 seconds)
    (38/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.899706623 seconds)
    (39/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.739134544 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.278446962 seconds)
    (41/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.809799731 seconds)
    (42/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.223093863 seconds)
    (43/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.018573935 seconds)
    (44/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.380217712 seconds)
    (45/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.316038012 seconds)
    (46/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.222090461 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.356557838 seconds)
    (48/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.016961452 seconds)
    (49/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.253715897 seconds)
    (50/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.59991253 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.458587601 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.506545782 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.018124529 seconds)
    (54/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.246458015 seconds)
    (55/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.6183295 seconds)
    (56/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.425413444 seconds)
    (57/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.731167201 seconds)
    (58/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.335689161 seconds)
    (59/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.313726642 seconds)
    (60/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.28891759 seconds)
    (61/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.040195728 seconds)
    (62/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.232100667 seconds)
    (63/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.533808265 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.917416025 seconds)
    (65/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.723835406 seconds)
    (66/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.033825967 seconds)
    (67/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.453083145 seconds)
    (68/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.361183999 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.303271401 seconds)
    (70/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.22495498 seconds)
    (71/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.559140959 seconds)
    (72/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.231076526 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.645268306 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.737820505 seconds)
    (75/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.273580855 seconds)
    (76/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.923393121 seconds)
    (77/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.246256038 seconds)
    (78/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.463500383 seconds)
    (79/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.243880077 seconds)
    (80/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.675730606 seconds)
    (81/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.529794836 seconds)
    (82/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.335716565 seconds)
    (83/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.340087456 seconds)
    (84/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.242005286 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.340138612 seconds)
    (86/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.316025914 seconds)
    (87/309) benchmarking ("sort", Int64, false)...
    done (took 5.338730811 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.284461057 seconds)
    (89/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.369514287 seconds)
    (90/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.78842587 seconds)
    (91/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.361288443 seconds)
    (92/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.983638079 seconds)
    (93/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.214414465 seconds)
    (94/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.220871842 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.91751514 seconds)
    (96/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.727459716 seconds)
    (97/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.34155337 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.732487155 seconds)
    (99/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.634416096 seconds)
    (100/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.541070707 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.341214469 seconds)
    (102/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.386544321 seconds)
    (103/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.261381308 seconds)
    (104/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.231617699 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.934630787 seconds)
    (106/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.632265101 seconds)
    (107/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.235255766 seconds)
    (108/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.235429583 seconds)
    (109/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.247656579 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.254381163 seconds)
    (111/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.558980866 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.051073563 seconds)
    (113/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.954736812 seconds)
    (114/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.732242108 seconds)
    (115/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.602056821 seconds)
    (116/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.776665891 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.629159247 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.840972737 seconds)
    (119/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.29930557 seconds)
    (120/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.202116197 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.443931317 seconds)
    (122/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.256518178 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.236777691 seconds)
    (124/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.24545065 seconds)
    (125/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.330165933 seconds)
    (126/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.46793696 seconds)
    (127/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.473265611 seconds)
    (128/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.43182358 seconds)
    (129/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.227398116 seconds)
    (130/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.228549831 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.800662553 seconds)
    (132/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.246203011 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.309949073 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.620510924 seconds)
    (135/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.243448342 seconds)
    (136/309) benchmarking ("sort", Bool, false)...
    done (took 1.735386824 seconds)
    (137/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.259915968 seconds)
    (138/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.566943524 seconds)
    (139/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.336655821 seconds)
    (140/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.410623333 seconds)
    (141/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.22194708 seconds)
    (142/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.515672108 seconds)
    (143/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.31566062 seconds)
    (144/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.239058295 seconds)
    (145/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.237268571 seconds)
    (146/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.664969005 seconds)
    (147/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.241490595 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.907306693 seconds)
    (149/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.142110859 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.82744053 seconds)
    (151/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.495593115 seconds)
    (152/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.235651457 seconds)
    (153/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.669781888 seconds)
    (154/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.372346946 seconds)
    (155/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.338851393 seconds)
    (156/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.480703715 seconds)
    (157/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.541495627 seconds)
    (158/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.275872914 seconds)
    (159/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.261322809 seconds)
    (160/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.448997286 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.083656769 seconds)
    (162/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.90610765 seconds)
    (163/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.259838595 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.333183406 seconds)
    (165/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.233181374 seconds)
    (166/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.259418351 seconds)
    (167/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.754364028 seconds)
    (168/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.59457125 seconds)
    (169/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.584502545 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.570042603 seconds)
    (171/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.247930981 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.580211854 seconds)
    (173/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.413371443 seconds)
    (174/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.531657091 seconds)
    (175/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.270685621 seconds)
    (176/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.300225062 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.071853993 seconds)
    (178/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.22198104 seconds)
    (179/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.272725349 seconds)
    (180/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.263729496 seconds)
    (181/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.261424286 seconds)
    (182/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.452542635 seconds)
    (183/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.400231618 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.349961991 seconds)
    (185/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.752859435 seconds)
    (186/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.247548183 seconds)
    (187/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.249270025 seconds)
    (188/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.261939852 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.463133774 seconds)
    (190/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.686783372 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.262877444 seconds)
    (192/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.374348276 seconds)
    (193/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.236187631 seconds)
    (194/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.227057396 seconds)
    (195/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.752360831 seconds)
    (196/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.27315383 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.060661933 seconds)
    (198/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.570795388 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.504756581 seconds)
    (200/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.24503458 seconds)
    (201/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.221050387 seconds)
    (202/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.433368946 seconds)
    (203/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.286939271 seconds)
    (204/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.262366845 seconds)
    (205/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.668206594 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.678995646 seconds)
    (207/309) benchmarking ("sort", Float64, false)...
    done (took 5.452476504 seconds)
    (208/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.543880264 seconds)
    (209/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.981410938 seconds)
    (210/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.313915516 seconds)
    (211/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.366260656 seconds)
    (212/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.219541829 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.077238285 seconds)
    (214/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.234307663 seconds)
    (215/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.781223384 seconds)
    (216/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.298347018 seconds)
    (217/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.76470742 seconds)
    (218/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.233127306 seconds)
    (219/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.795488703 seconds)
    (220/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.042601768 seconds)
    (221/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.449520628 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.779304023 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.454997032 seconds)
    (224/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.255477855 seconds)
    (225/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.25117884 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.219910819 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.347843825 seconds)
    (228/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.342380683 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.237555954 seconds)
    (230/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.573645452 seconds)
    (231/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.943284603 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.260093007 seconds)
    (233/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.347405755 seconds)
    (234/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.237440914 seconds)
    (235/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.003690734 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.389179249 seconds)
    (237/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.359764058 seconds)
    (238/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.361893119 seconds)
    (239/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.655919414 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.342122618 seconds)
    (241/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.279807807 seconds)
    (242/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.775771107 seconds)
    (243/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.268410458 seconds)
    (244/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.92869813 seconds)
    (245/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.99748281 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.239536686 seconds)
    (247/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.403971523 seconds)
    (248/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.221942468 seconds)
    (249/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.256622763 seconds)
    (250/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.794886537 seconds)
    (251/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.236004016 seconds)
    (252/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.236108648 seconds)
    (253/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.229797294 seconds)
    (254/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.535385946 seconds)
    (255/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.256327535 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.019220547 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.639854955 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.235959478 seconds)
    (259/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.681759031 seconds)
    (260/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.5273603 seconds)
    (261/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.243127235 seconds)
    (262/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.413663868 seconds)
    (263/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.375673767 seconds)
    (264/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.495612338 seconds)
    (265/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.275828836 seconds)
    (266/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.260291176 seconds)
    (267/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.434614593 seconds)
    (268/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.253840131 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.547340713 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.614206852 seconds)
    (271/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.015475705 seconds)
    (272/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.225703102 seconds)
    (273/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.295521475 seconds)
    (274/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.267961013 seconds)
    (275/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.325689844 seconds)
    (276/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.29741609 seconds)
    (277/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.326896915 seconds)
    (278/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.622545672 seconds)
    (279/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.290896662 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.314617539 seconds)
    (281/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.455382828 seconds)
    (282/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.241427129 seconds)
    (283/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.81966346 seconds)
    (284/309) benchmarking ("sort", Float32, false)...
    done (took 5.230473292 seconds)
    (285/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.702258891 seconds)
    (286/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.308043988 seconds)
    (287/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.435107999 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.336792021 seconds)
    (289/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.550621419 seconds)
    (290/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.243466204 seconds)
    (291/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.32431582 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.226642771 seconds)
    (293/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.55745997 seconds)
    (294/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.42303069 seconds)
    (295/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.359081707 seconds)
    (296/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.2415578 seconds)
    (297/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.244033328 seconds)
    (298/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.391456019 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.592238529 seconds)
    (300/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.560009454 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.294087754 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.283502092 seconds)
    (303/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.913057136 seconds)
    (304/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.34757541 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.265193102 seconds)
    (306/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.255969113 seconds)
    (307/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.672223794 seconds)
    (308/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.350887325 seconds)
    (309/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.939909162 seconds)
  done (took 883.652702235 seconds)
done (took 884.821528912 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.275786971 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.27053026 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.253630648 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.272102638 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.365290577 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.282887011 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.263255662 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.256097499 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.301711073 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.302913198 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.252589103 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.281111577 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.255490828 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.255165369 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.250302185 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.268302465 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.17753568 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.258964933 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.271192225 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.263959229 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.270429193 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.253129721 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.303518948 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.27941575 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.256285963 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.258275994 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.254200121 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.27403843 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.365924244 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.258021125 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.256916148 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.266320614 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.177819705 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.255649203 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.25048101 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.274809137 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.267200452 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.264869679 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.258550421 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.287285694 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.535944679 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.257811136 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.257035291 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.256239199 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.256298273 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.260121501 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.256786447 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.261189156 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.268808542 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.270538011 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.541123892 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.273290909 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.259067784 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.256525246 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.265863679 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.256027884 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.260107452 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.272686384 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.273215616 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.27211832 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.175828476 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.264338143 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.259308162 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.273537513 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.264395929 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.580792425 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.255135958 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.25816671 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.53970419 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.264369017 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.587244421 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.268445365 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.25875258 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.271886469 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.290186315 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.185724788 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.255687494 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.25818171 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.265212165 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.256894566 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.266887573 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.271314562 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.26248503 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.257376148 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.271965079 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.286960292 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.26805902 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.259369884 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.267099006 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.276866923 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.265881373 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.269028508 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.260988339 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.254216471 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.266062312 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.262088147 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.260159163 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.261197918 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.263161744 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.26865662 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.543368881 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.278365881 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.253082789 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.250624189 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.258383711 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.27320024 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.54576826 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.262045064 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.280170534 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.305877542 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.259817424 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.179940758 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.265949356 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.274864943 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.269131937 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.260269968 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.252773643 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.181064289 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.558583834 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.278963626 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.26280677 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.261648641 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.276062944 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.261732729 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.256298503 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.192380896 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.263949488 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.270683414 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.381577183 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.270218998 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.292013844 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.258921324 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.263513229 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.2883567 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.275895918 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.292108811 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.263621168 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.275464578 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.277245187 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.25630623 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.271313026 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.270694295 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.262907947 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.26441266 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.25518901 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.292754173 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.274011973 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.273328444 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.282395507 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.38227606 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.259295124 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.182481108 seconds)
done (took 211.811868216 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.320583294 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.255748846 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.360561388 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.254798711 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.353694839 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.35280039 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.253136595 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.255795459 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.255255745 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.637160786 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.257115806 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.255765643 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.257989357 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.255884082 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.340289276 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.258351715 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.255213376 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.600767884 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.258291534 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.331844135 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.255316993 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.256765274 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.258987914 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.642914867 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.255623088 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.256702366 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.333695968 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.260368712 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.606905767 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.256781943 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.255495176 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.60690611 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.348790496 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.275777181 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.26906528 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.266580562 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.358546274 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.2730739 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.341048613 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.340503189 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.359809086 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.298473185 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.256525422 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.259813318 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.265275613 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.263234525 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.259321014 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.287597199 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.258463125 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.259338188 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.603801628 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.27130432 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.268068466 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.258116722 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.259099636 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.28105634 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.258310434 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.2614149 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.348313749 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.260558028 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.322460898 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.642084029 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.641444032 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.261282442 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.259299394 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.25902965 seconds)
  done (took 143.507545982 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.328864173 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.334935356 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.365828093 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.263150521 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.313749897 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.37082006 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.265382431 seconds)
  done (took 10.437599666 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.268201065 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.262120067 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.311604646 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.312536167 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.261335491 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.413490548 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.262784303 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.27330119 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.25901588 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.316202633 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.262346822 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.263657886 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.268718123 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.261069116 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.310397116 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.273070165 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.376981584 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.263524661 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.262356714 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.414745096 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.260351065 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.269795459 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.313813684 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.274729277 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.263150732 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.269092174 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.847325284 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.262875904 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.261614244 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.263092914 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.260247911 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.302369469 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.265246717 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.258535866 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.261332023 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.379399886 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.263165833 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.261104424 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.263939274 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.260260491 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.263571661 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.263973592 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.263586119 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.262036897 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.263617591 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.287892457 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.263918094 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.263697168 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.263972125 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.263918012 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.31465307 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.264681053 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.261293573 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.26176855 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.319838073 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.270723476 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.264263695 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.261648591 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.265358782 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.26176054 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.416329352 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.312986043 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.264372518 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.312412738 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.264253647 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.264851454 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.264478943 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.265067215 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.319808476 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.264652349 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.312352401 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.262607374 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.424072291 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.287798518 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.26621439 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.267567392 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.267054262 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.265196603 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.260626671 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.27194652 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.262322146 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.266714659 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.271018858 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.262954112 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.262805457 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.372400578 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.375557577 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.263660807 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.278415467 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.276117043 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.264235483 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.318759667 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.265416319 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.263058633 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.317786062 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.381392912 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.320267479 seconds)
  done (took 146.421694396 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.269717227 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.273794768 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.267621405 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.281821246 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.26678284 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.267029494 seconds)
  done (took 8.826940728 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.270390702 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.266297442 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.267297429 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.266922167 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.267364521 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.266701478 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.266390047 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.269027712 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.268088963 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.266386604 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.266081616 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.267003563 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.267023254 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.26713499 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.267182913 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.266058679 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.26757248 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.264916304 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.266825052 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.266663755 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.362779707 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.266790159 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.267209245 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.267858367 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.269738613 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.266775906 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.274613388 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.267469514 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.266816587 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.274353135 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.271823437 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.268334463 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.268678712 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.272663428 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.270410658 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.268972792 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.269120978 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.269366245 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.677451335 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.267840527 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.268870233 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.268154524 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.267341856 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.269387139 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.271136748 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.27227079 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.270898932 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.2765994 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.26865881 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.270013033 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.26980867 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.268849693 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.268650564 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.269927387 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.272187724 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.273853978 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.271879708 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.268736616 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.268065352 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.269741819 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.268806885 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.27017573 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.270414747 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.272819422 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.276258386 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.270258081 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.27033101 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.272021366 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.269021465 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.273821248 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.270861643 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.267795258 seconds)
  done (took 94.091263663 seconds)
done (took 404.478044768 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.67979386 seconds)
  done (took 7.883059764 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.458084547 seconds)
  done (took 7.663703024 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.500512521 seconds)
  done (took 19.705038246 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.336051793 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.348222552 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.266905433 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.272869749 seconds)
  done (took 26.427613991 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.793738249 seconds)
  done (took 7.99567549 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.269828658 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.269740355 seconds)
  done (took 13.744189248 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.505281482 seconds)
  done (took 7.707594898 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.068110968 seconds)
  done (took 8.269446914 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.286138173 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.301306595 seconds)
  done (took 13.805008874 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.250995627 seconds)
  done (took 7.458301291 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.914844295 seconds)
  done (took 8.122939653 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.274082557 seconds)
  done (took 7.482977684 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.275641229 seconds)
  done (took 7.482758879 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.414647479 seconds)
  done (took 8.621393755 seconds)
done (took 153.573586827 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.266746162 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.267033269 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.268561358 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.267534802 seconds)
  done (took 26.277087915 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.308504229 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.3073525 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.308372893 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.318914181 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.310123016 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.307738004 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.299688857 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.299330653 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.318332155 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.310646637 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.309189536 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.311000982 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.30825632 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.301097686 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.309989657 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.309642135 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.318139149 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.309261519 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.301560199 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.311426842 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.275530321 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.32000503 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.311868958 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.275741733 seconds)
  done (took 32.570390754 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.47035624 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.346110212 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.428399789 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.327287795 seconds)
  done (took 6.779817446 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.326753263 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.328189202 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.340415074 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.378734889 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.407977593 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.33766035 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.30209701 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.297024225 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.282866688 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.328145504 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.401085021 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.344775514 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.428244777 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.274924821 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.462674276 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.274488151 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.271930344 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.327379488 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.379044636 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.393945729 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.276707535 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.327777139 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.330892167 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.345086324 seconds)
  done (took 33.378398633 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.274658861 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.283411371 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.28192546 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.275388736 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.272445392 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.276226373 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.281901437 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.276220182 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.296207753 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.277163654 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.275169538 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.276061307 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.274807267 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.276517554 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.275651526 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.288722669 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.290156256 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.27595459 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.279711637 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.282518921 seconds)
  done (took 26.80216721 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.269769792 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.220077231 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.622803318 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.526770776 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.271323531 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.272663273 seconds)
  done (took 28.394556073 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.340089112 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.454126432 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.278865804 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.591259361 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.670235689 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.281321237 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.278623744 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.485597945 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.749643069 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.759462447 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.329175858 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.325314026 seconds)
  done (took 18.756406693 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.274540338 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.274321026 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.273644329 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.289629402 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.326132423 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.281265724 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.284564414 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.270553947 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.328635163 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.330038744 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.282162461 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.327393986 seconds)
  done (took 36.755615946 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.359949756 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.31691752 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.10275864 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.071552266 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.649463317 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.483827277 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.084904337 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.728827301 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.277201205 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.547085248 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.107389998 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.384319486 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.530638275 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.273406483 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.276455065 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.211791786 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.505138218 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.713439139 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.279353042 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.986545696 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.303475242 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.275741349 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.150416643 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.302590188 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.484844848 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.406622439 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.534314626 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.2736779 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531784906 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.288615597 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.284380552 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.273552424 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.549384272 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.900856141 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.365827629 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.284523853 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.038683471 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.98396783 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.26247509 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.081053565 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.827309152 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.279248322 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.285300876 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.274837721 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.208503767 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.282963089 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.736880236 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.279798852 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.985655307 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.273521673 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.28601033 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.369270635 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.277967806 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.089548838 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.38750466 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.276130672 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.272032111 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.280419225 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.846198818 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.462585352 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.281127065 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.213675466 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.380753983 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.05946212 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.862634939 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.381963183 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.279306343 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.280040129 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.209900135 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.041576082 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.296913527 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.605003218 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.297770839 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.925994964 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.944736709 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.126611955 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.226862146 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.777496665 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.285609241 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.212768137 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.503617152 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.275695066 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.21253885 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.221122709 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.211407114 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913115524 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.285001227 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.572103153 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.283591862 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.731722514 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.287035627 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.294324196 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.299463978 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.501465768 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.160142884 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.275852159 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.886932121 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429371583 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.298084239 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.729815407 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.211671066 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.282064692 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.534793905 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.489029405 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.276605493 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.207020792 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.491160108 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.289194457 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.296530726 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.284669655 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.291100224 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.802793404 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.293368375 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.474908093 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.29706358 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.277720627 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941051352 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.28610624 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.381238459 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.133003412 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.526884633 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.979104368 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.280118216 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.360383265 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.28033184 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.278296219 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.080110065 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.796238095 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.277739905 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.280532435 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.281263262 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.291294348 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.279079474 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.225414578 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.27860351 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.155259215 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.284529835 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.502646396 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.282226644 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.557206081 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.21290501 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.60734695 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.334163128 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.500614241 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.417316727 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.280798768 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.537960484 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.291666623 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.287080447 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.292758773 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.297900606 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.377792033 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.301641676 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.2784215 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.539595949 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.283619303 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.283232064 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.095789836 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.284973581 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.285954329 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.285817679 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.176851281 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.805542605 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.261602753 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.289592428 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.170640329 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.29435923 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.345016893 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.286093029 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.290322019 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.917183414 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.156657602 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.283655638 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.277820925 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.507638417 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.290621023 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.082464622 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.365400699 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.485664257 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.808960662 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.297224224 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.215896237 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.991300516 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.973835048 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.28148323 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.216256405 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.282041401 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.290510298 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.29208221 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.506160307 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.811847027 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.287536702 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.013499082 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.291873999 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.292046588 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.286179742 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.282444504 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.889857907 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.495132956 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.297316988 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.295353963 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425371532 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.296862817 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.215732944 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.286048871 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.286871218 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.283569668 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.280969904 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.314761298 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.016452126 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.765972357 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.542288131 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.041290596 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.294008366 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.180855267 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.31562881 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.282828176 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.926602614 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.315744296 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.299875594 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.295016181 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.293314975 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.071673008 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.946772288 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.851124622 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.963606122 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.77059574 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.193365275 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.296061086 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.287882598 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.742800395 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.217379662 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.841143434 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.455186194 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.744337586 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.228382295 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.492030951 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.420189673 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.984970466 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.295818631 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.508665067 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.164764197 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.933484767 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.316615168 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.495596461 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.317417348 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.287739394 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.215413158 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.569692664 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.558159415 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.877651105 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.36909159 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.744410177 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.935428012 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.307829841 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.280577844 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.528941341 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.447993672 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.994347578 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.452622355 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.285817144 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.179664065 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.778778739 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.289156667 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.506451898 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.856464082 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.282124372 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.490679794 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.216936971 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.29016385 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.291565885 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.280592131 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.408399009 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.255915958 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.549221253 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.290722265 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.213740402 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.291631199 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.772787194 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.137818351 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.285960113 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.280278074 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950630397 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.287720983 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.543729017 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.298017951 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.905141705 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.279550605 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.215038276 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.215284815 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.973966706 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.288165072 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.255356567 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.728974535 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.36859626 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.337832862 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.302800026 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501297033 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.538662312 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.294944391 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.823381071 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.511610143 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.144781825 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.30372009 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.381577232 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.984689834 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.286220892 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.28228917 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.517508015 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.184055879 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.505324658 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.1375394 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.189806722 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.280167715 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.493302558 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.281686069 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.200705368 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.521996508 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.996610945 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.302992058 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.964947278 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.308569497 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.206293121 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.217086692 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.385681597 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.288637522 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.361987867 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.292304006 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.293601542 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.293775111 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.447430585 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.20536149 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.302641691 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.29653802 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.376523131 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.517328415 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.892443682 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.289285431 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.826241333 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.966734129 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.825097923 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.297679784 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.283320838 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.283713207 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.218072575 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432545912 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.50971694 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.557605913 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412416106 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.4260758 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.306766446 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.000126615 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.303629987 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.49834989 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.559270277 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.179530297 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.284172933 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.301535919 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.283412539 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.295628539 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.49663446 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.722246121 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.789496049 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393787144 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.284826128 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.741357398 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.558345089 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.287389985 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.283904421 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.875072785 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.290092214 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.53943594 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.290874305 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.237155147 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433633946 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.294772308 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91709574 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.294681271 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.440982059 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.059054755 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.047164896 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.544778353 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.625802048 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.298447867 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.821435982 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.936239933 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.551021856 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.353469739 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.297827497 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.397876645 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43356342 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.29247819 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.28938786 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.286709275 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335315092 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.997275882 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.296241874 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.82656138 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.551836036 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.284161397 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.291980265 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.31122597 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.296812554 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.510478243 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927676556 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.511028881 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.296095495 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.294194395 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.103020931 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.826502044 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.301527975 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.221865119 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.290719896 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.508797535 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.526815185 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.311419098 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.740929418 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.999275267 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.793021645 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.260741814 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.311053633 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.292649327 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.938277402 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.832874733 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.901215256 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.725586651 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.847506685 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.293694592 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.565447894 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.293813476 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.288284046 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.568897946 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.293231209 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.289832635 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.30188351 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.821329852 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.98996455 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.299213607 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.086735158 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.226297371 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.629979422 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.993188572 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.224220577 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.297845962 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.467970008 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.28882969 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420066642 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.301067093 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.297224212 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.297770244 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.051515166 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.561881425 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.294879485 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.279529702 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.046048064 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.301640706 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.298285784 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.56521553 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.297036275 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.965355307 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.640328799 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.546331418 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.299584745 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.277488472 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.293169928 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.289922781 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.277886245 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.487266475 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.513427157 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.788577034 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.302612547 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.303259898 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.294253346 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.506764555 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.50263857 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.248021729 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.321355668 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.296246029 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.309529473 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.196480608 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.793310566 seconds)
  done (took 1556.796858386 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.317050776 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.308550597 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.306935708 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.360600331 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.303386595 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.391141556 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.312963695 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.373543002 seconds)
  done (took 51.905884315 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.29962386 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.523249662 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.321322232 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.292455301 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.300642525 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.298726992 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.695011994 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.302231309 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.301269529 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.302481276 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.292764045 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.306823094 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.883852002 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.301654821 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.30038961 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.283855572 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.302317945 seconds)
  done (took 64.541324069 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.291658948 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.497815192 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.368389296 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.305430806 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.949533782 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.293365372 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.439858796 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.310048964 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.292222298 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.299909647 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.940643101 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.305612701 seconds)
  done (took 82.528368726 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.299166771 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.298715142 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.300257652 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.29952033 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.299309275 seconds)
  done (took 7.730432875 seconds)
done (took 1974.427727999 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.563246593 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.925726951 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.890990115 seconds)
  done (took 5.050523524 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.440320583 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.4903389 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.610133178 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.615193779 seconds)
  done (took 7.389526103 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.581349629 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.679926278 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.502502978 seconds)
  done (took 5.997768475 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.555904383 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.298275969 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.369161474 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.293379317 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.295093657 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.296713746 seconds)
  done (took 20.120961778 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.298239444 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.300396568 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.29743021 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.301230805 seconds)
  done (took 6.431074752 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.279308181 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.021287559 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.279739197 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.297441083 seconds)
  done (took 18.11173561 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.044346894 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.057610848 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.043629999 seconds)
  done (took 7.380533996 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.293608197 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.142311714 seconds)
  done (took 9.670489117 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.601243025 seconds)
  done (took 2.835641402 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.430724559 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.562681479 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.229239693 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.139377176 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.259074482 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.689332052 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.74256902 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.372955823 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.133701217 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.23476865 seconds)
  done (took 26.030296744 seconds)
done (took 122.038860713 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.797546885 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.535829124 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.497710334 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.767429902 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.514346328 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.49884389 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.510269423 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.735645141 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.312258652 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.272319907 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.769716765 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.520409033 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.457842329 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.535429669 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.458193983 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.534836552 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.517374538 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.824024127 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.457279818 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.650317158 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.508419449 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.406008739 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.595560389 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.419396057 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.515800723 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.449467519 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 4.984228587 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.534968668 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.627380887 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.005782885 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.449274887 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.82607976 seconds)
  done (took 187.725893097 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.306208818 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.300201218 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.297038138 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.295114321 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.301216958 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.295978943 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.29709614 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.296082939 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.296372262 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.30804903 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.29578631 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.296555088 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.297770084 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.311608563 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.295577157 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.297009827 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.300364285 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.296878744 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.302124706 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.297101963 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.308880566 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.296969257 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.297140189 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.296553934 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.307827063 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.298558363 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.313237675 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.29717138 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.311538331 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.297602327 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.301469619 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.319563789 seconds)
  done (took 202.868699409 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.296996258 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.2980826 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.297866667 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.296798642 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.305028607 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.298788138 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.29925883 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.306112207 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.298210574 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.298151202 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.298511103 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.29810048 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.297932805 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.301345436 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.298519111 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.300425429 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.308070204 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.298650529 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.298964269 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.298183041 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.298708275 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.309569439 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.311841746 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.298563975 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.300977407 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.298916072 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.311282754 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.298462074 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.298787133 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.299521713 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.299356131 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.312633805 seconds)
  done (took 202.872292327 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.494355047 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.305822057 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.306705599 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.243330617 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.307066738 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.306235307 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.302449895 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.503607781 seconds)
  done (took 14.009488809 seconds)
done (took 608.711241849 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.485307073 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.206658813 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.500801872 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.327522638 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.984233063 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.330223626 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.32609717 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.481545221 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.767669737 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.470111264 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.484235272 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.327196496 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.604667976 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.325233237 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.558736862 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.419669241 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.151446301 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.258083263 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.61402742 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.7823172 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.567290606 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.791795837 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.478718433 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.809992153 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.610533604 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.817663918 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.99127807 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.150436084 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.326228665 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.616929756 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.846422652 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.21370831 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.377337357 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.360486444 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.416134788 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.397714487 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.23346617 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.361776538 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.49794423 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.5737983 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.768275633 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.551779739 seconds)
  done (took 90.40675085 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.297264773 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.296253537 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.296810256 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.297040007 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.298209574 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.296820059 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.296398793 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.296450519 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.297709227 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.296870498 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.296531999 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.298159542 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.296335739 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.297528454 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.296545941 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.296970325 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.297466292 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.299324377 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.296993614 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.296489892 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.297663395 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.296751094 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.29805656 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.298216235 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.298116641 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.298026366 seconds)
  done (took 34.974101179 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.311361033 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.527561345 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.689482483 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.316413774 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.309757597 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.314470587 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.379393473 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.310990657 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.314222834 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.313131017 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.457354937 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.313912424 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.341979933 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.699318149 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.313049651 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.312512195 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.314754962 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.31110092 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.536375632 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.319825672 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.396298121 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.314284351 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.379333842 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.320343534 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.329589409 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.311037839 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.316087211 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.833602901 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.314558046 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.458936107 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.994590014 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.380708419 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.795976822 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.701286895 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.992421058 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.315797164 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.312366901 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.462112975 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.313545262 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.312016228 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.379446193 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.313547059 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.699919283 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.920535069 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.32668838 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.312337349 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.855044487 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.462406251 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.529205525 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.321855928 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.719305027 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.316149952 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.314294972 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.313769407 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.528139428 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.322323723 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.312328982 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.868139517 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.334919482 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.380107462 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.313942134 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.313271967 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.542223699 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.31290329 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.531329413 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.314543764 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.321549739 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.314758685 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.70288421 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.318964608 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.938123279 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.330172668 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.314677313 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.459830555 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.532887009 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.882065947 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.317501485 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.547425168 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.808885296 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.380598349 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.319031712 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.825670841 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.383793421 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.31779163 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.316191503 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.315820051 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.314879048 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.358026118 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.380784946 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.865442225 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.926024817 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.88220561 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.401164325 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.329847105 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.315437706 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.867184644 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.33031527 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.314935678 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.698561539 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.942710591 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.330485586 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.323284654 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.922971961 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.332373265 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.383913393 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.324223146 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.707072088 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.316203608 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.359164282 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.315813165 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.321656485 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.319331292 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.383938938 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.322893348 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.316149431 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.908771192 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.482689572 seconds)
  done (took 172.315732654 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.30846413 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.310254 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.310156104 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.308921388 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.309816244 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.315806286 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.309156642 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.31010962 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.315326562 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.308817092 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.308299322 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.310804697 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.311240142 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.316676803 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.333936069 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.316992094 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.923114693 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.312726949 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.310420956 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.309820447 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.08194618 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.313127886 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.310077994 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.311739692 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.311251915 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.312398548 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.317241325 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.331357452 seconds)
  done (took 151.400258928 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.317851949 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.819494541 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.320843303 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.432390173 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.338878201 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.315436367 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.430946108 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.369812036 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.318186734 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.315361407 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.315702398 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.587524292 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.321703712 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.777120431 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.484944356 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.438140532 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.778702 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.319173215 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.315442392 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.317061308 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.434265787 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.326327769 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.588103808 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.826718626 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.322678795 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.82464124 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.310663391 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.318345146 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.316926779 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.827049808 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.319726943 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.589661718 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.388432798 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.372673595 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.828204984 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.780738574 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.778999011 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.449304777 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.321163832 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.316315776 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.317303345 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.30636622 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.8275236 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.323338066 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.319266982 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.818339733 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.335110825 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.319904399 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.327575992 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.316860684 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.371433472 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.371344672 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.592150875 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.835770595 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.390400872 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.342459122 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.435972151 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.67094718 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.324101548 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.778656175 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.30685617 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.827926261 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.326358728 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.307948817 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.319485859 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.324752532 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.450592609 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.441639528 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.782812542 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.321321108 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.781899822 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.454660577 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.321909592 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.318638817 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.322281488 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.832737815 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.786205369 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.451868255 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.440202782 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.49399712 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.309102108 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.320230093 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.309698263 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.388357266 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.323779607 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.831947394 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.791062982 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.325375933 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.321896261 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.322970954 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.321983576 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.476992185 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.83437019 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.391920959 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.782626892 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.610895903 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.599120311 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.325832886 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.374086094 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.320955226 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.598611413 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.326288003 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.373444203 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.728393273 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.601261791 seconds)
  done (took 155.981394747 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.536496545 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.417655502 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.404528329 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.423801225 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.810025006 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.873547024 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.372700016 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.438124566 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.421036253 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.545889837 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 1.939644608 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.415954511 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.489904093 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.394669123 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 1.958791016 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.384964191 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.4083438 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.449548089 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.42261417 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.297075555 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.863643916 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.599457001 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.457023368 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.120131642 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.405932399 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.031043258 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.040102223 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.824635405 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.472677549 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.367149144 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.794600376 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.431405991 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.002617436 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.909228548 seconds)
  done (took 61.983323265 seconds)
done (took 668.301843761 seconds)
SAVING RESULT...
DONE!
