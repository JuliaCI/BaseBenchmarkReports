cset: moving following pidspec: 15343
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.269565398 seconds)
loading group "string"... done (took 0.580237089 seconds)
loading group "linalg"... done (took 6.799355474 seconds)
loading group "parallel"... done (took 0.155075371 seconds)
loading group "find"... done (took 1.184337716 seconds)
loading group "tuple"... done (took 1.720018491 seconds)
loading group "dates"... done (took 1.179272529 seconds)
loading group "micro"... done (took 0.220797536 seconds)
loading group "io"... done (took 0.977309726 seconds)
loading group "scalar"... done (took 38.201413164 seconds)
loading group "sparse"... done (took 13.043273165 seconds)
loading group "broadcast"... done (took 0.946756469 seconds)
loading group "union"... done (took 12.410123488 seconds)
loading group "simd"... done (took 4.248559279 seconds)
loading group "random"... done (took 8.515990043 seconds)
loading group "problem"... done (took 2.013857868 seconds)
loading group "array"... done (took 20.619684725 seconds)
loading group "misc"... done (took 1.78088522 seconds)
loading group "sort"... done (took 3.236543703 seconds)
loading group "collection"... done (took 17.103183872 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.508711719 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.140206724 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.131531126 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.134339693 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.170995718 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.128809314 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.14022794 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.099720586 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.076178239 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.163814643 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.133683292 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.464661255 seconds)
done (took 5.186685 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.203221379 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083466903 seconds)
    (2/2) benchmarking "String"...
    done (took 0.096626057 seconds)
  done (took 1.01889623 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065770074 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121929709 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065128928 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.082990555 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067069337 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065108702 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.082736178 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065757005 seconds)
  done (took 1.396054396 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073911751 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068148959 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.084703373 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068311937 seconds)
  done (took 1.141913834 seconds)
done (took 4.679543317 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.83693355 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.243934891 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.18684805 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.447711503 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.146990707 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.182171771 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.662402998 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.330341746 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.201137561 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081734919 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.12047023 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.356558533 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.124257648 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.668220959 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078677497 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.10718724 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.160507102 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.427808031 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.069324702 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082106908 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104145421 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.129064513 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.101351241 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.091266245 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.159047917 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.082661435 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.146149284 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080671172 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.083508211 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.226066743 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.18900701 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.680955671 seconds)
  done (took 10.474176649 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096780781 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.113399205 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068669468 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.13944033 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096041872 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.086366339 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071857859 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066885924 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.104084739 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.143550719 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089385649 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.099018977 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.063991012 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.087990577 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084729146 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.22156086 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079952406 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.09806728 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070253839 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.090909401 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.106649394 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.094724572 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078491354 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094754387 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128991297 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.208537084 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097643054 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.112988348 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068240499 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.097077192 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.130405306 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.12783326 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065301145 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083339833 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124194683 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.111650856 seconds)
  done (took 4.563024708 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.026897857 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.155407986 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090859186 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.150005575 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067664265 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.124877359 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.082405354 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084748399 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.232513182 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.139946988 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.465686507 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128377365 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101439508 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068039205 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067639097 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.083449632 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.520383225 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.143522552 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102749887 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.102043668 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073894209 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.08634491 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.365589217 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069545955 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06786751 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08611881 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058646879 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.141969975 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068665509 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.142207155 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.08620827 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066164122 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12171461 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.186885025 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.101094335 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088470532 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.154151588 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.065514384 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.084878793 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.165820092 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073424538 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.082912845 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083795896 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118589117 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.103138146 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.084392169 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067280101 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.176955853 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066833547 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.100698428 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.848608559 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.168052848 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079017528 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065210554 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.280841872 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.083753801 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084643333 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064392049 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.251851174 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.1512431 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067424264 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.083150755 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066276241 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.067355694 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.366154744 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083758771 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.73848032 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071507443 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078175415 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085987523 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067217448 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090020721 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072538632 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.101289758 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067848586 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.067390299 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.084088405 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.06597348 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067179148 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.102582726 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.206977249 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.06571415 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.081897767 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066658455 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.081156277 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.091582192 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.084961956 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114377425 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.086236666 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066671567 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064086006 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117167798 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068061001 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.084675737 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.101078029 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085510848 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084316363 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.086847883 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.129356286 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.069891754 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.135417953 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068721357 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.114852892 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.071783528 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115524576 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.095124373 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06840749 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.148833053 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064705773 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064250963 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.085879883 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.068222426 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.084242515 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068938818 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078809918 seconds)
  done (took 20.901460785 seconds)
done (took 37.812331455 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.288984715 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.094614005 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074560654 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.094455674 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.093008895 seconds)
  done (took 1.563648863 seconds)
done (took 2.455237291 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.118548685 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11753747 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063846358 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114421194 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063531849 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.118536722 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.097683778 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.098584547 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115335232 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064414662 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094848735 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082200355 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063892014 seconds)
  done (took 2.134409536 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082157558 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.081841166 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086347438 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082683562 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06274027 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098874926 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080027316 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104400123 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080890472 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.070662521 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.081090329 seconds)
  done (took 1.800010743 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081953906 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082679407 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086775531 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080771587 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063651873 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098222111 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080371129 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103121868 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080611131 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089373259 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064534404 seconds)
  done (took 1.798942245 seconds)
done (took 6.615340442 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078682268 seconds)
  done (took 0.960490226 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.64525362 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.020956534 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.079884992 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.1335738 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.200515329 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.138811694 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.339427358 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087215206 seconds)
  done (took 9.724371699 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.088320298 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.100481902 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070993545 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.08947109 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070567384 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071048921 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.089997222 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069119379 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.084765115 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068366605 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067699183 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.087084483 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069282376 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.087946359 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071202243 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.087532127 seconds)
  done (took 2.223097728 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091270915 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.110140402 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072562027 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.093880551 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.070873043 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.091656376 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073766358 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.092582401 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070043607 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.089312544 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075024836 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.091014532 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071721928 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.082763124 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074092436 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.093124757 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.07207693 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.090105733 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075930342 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091350971 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075462481 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063820025 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070038495 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.072327472 seconds)
  done (took 2.930747515 seconds)
done (took 16.727373371 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.112155766 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.088848195 seconds)
  done (took 1.08962206 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081998862 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.100228021 seconds)
  done (took 1.074170411 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082761551 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.082101898 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090728464 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.095096736 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065291905 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.084204401 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.105315665 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.06715808 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065244108 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.084605458 seconds)
  done (took 1.716479745 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069409211 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094424769 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071904274 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097415564 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074636185 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.081424066 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074507668 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.083660906 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.08064557 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062605536 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.089171521 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.099752397 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071981092 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.100546362 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073477375 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.086063089 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071252935 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.085226702 seconds)
  done (took 2.36152808 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066322609 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066944335 seconds)
  done (took 1.02709054 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068407071 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063197899 seconds)
    (3/7) benchmarking "month"...
    done (took 0.084643771 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066979942 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.08129567 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063553791 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079404506 seconds)
  done (took 1.403581492 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.407881018 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110230593 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.332121619 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071103462 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.101490402 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.287892727 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066550633 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070452047 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.089980767 seconds)
  done (took 2.472937053 seconds)
done (took 12.041271068 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080643339 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084382254 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111584114 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.414413245 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092564229 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.084476551 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.132827175 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.229466683 seconds)
done (took 2.130253254 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.125560893 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.617619153 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.406385886 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.212178665 seconds)
  done (took 2.139336019 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.314665274 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.110754395 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059972906 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.084320777 seconds)
  done (took 1.47448001 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066792549 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070533577 seconds)
  done (took 1.039370411 seconds)
done (took 5.681711309 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.084019846 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065905764 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.085843481 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063646977 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.084347542 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.065067559 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064107477 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.085493863 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067005455 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063770608 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.083535437 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.06899273 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.065862306 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083783498 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0644139 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063429679 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084637973 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064621979 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0636457 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081409285 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066102898 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063128256 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.081446062 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066201247 seconds)
  done (took 2.670291035 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084130882 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.083846231 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.07304415 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070547024 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.088815251 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.073036133 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.090091192 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066043973 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.089793958 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068584195 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086340836 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071377551 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067197213 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.088527808 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06797354 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.088313811 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072640182 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083907149 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068837119 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.087020909 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071838298 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066313941 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.088301876 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071161814 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.088091873 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069544734 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.087643212 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067090854 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088713123 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071646721 seconds)
  done (took 3.247528744 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070420026 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063082651 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081845822 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070664842 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063101645 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.083826025 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064469803 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063301292 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.083524834 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063329389 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064644288 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.082272684 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063485436 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.08241831 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065370344 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067456688 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.097528207 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064815146 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063126578 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.083086434 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067006097 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063501572 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.082729587 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063339063 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.08147515 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064741389 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064823599 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.080930531 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065142568 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063228964 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.08491812 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067468933 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063354861 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.089497233 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.06770005 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063205047 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.086204617 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.06402046 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064101022 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.08134892 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063514777 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.080390546 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064845897 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070226553 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.081699899 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065809463 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063148564 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.083382865 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064433436 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065812193 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.081819634 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063534477 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.082998001 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.06641736 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067254871 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.081933643 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.065377368 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063102974 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.083573232 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063760339 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062875942 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.082275074 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066309578 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064210641 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.076990092 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069324704 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.083074725 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065890801 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064753306 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.0844009 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066096742 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075887371 seconds)
  done (took 6.065811791 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091434869 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106857351 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065105239 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.084003011 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061434417 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.08193619 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068563434 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06370609 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08330533 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069802749 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082510797 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066869358 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065471179 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095204519 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063984925 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.082894331 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070689475 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061367677 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.191997002 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067770858 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081988363 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068714766 seconds)
  done (took 2.691048286 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.175428697 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069959542 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.124630343 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072801445 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066569726 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.093246887 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070928707 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068962888 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090180706 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067986075 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086701042 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07037256 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.086348196 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068226428 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086489217 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069331008 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087172607 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069407741 seconds)
  done (took 2.440921542 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078316957 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065811462 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.105517424 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065322801 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.085274686 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069231647 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089774508 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075413181 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086527775 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067492342 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073748742 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087209328 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068509025 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084247058 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069046065 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066014419 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.087583446 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065911946 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09294765 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071806205 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.090113444 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074645963 seconds)
  done (took 2.639424843 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08117683 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067672043 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.101442838 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067686474 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081582246 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06479474 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.088848462 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066996215 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070014321 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.086391598 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066008409 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.081917 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070916587 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066121392 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.087761573 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066479405 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.086384966 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066504815 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067518033 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081142464 seconds)
  done (took 2.436519722 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087682585 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086037364 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068783821 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094092543 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068071013 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.085660842 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077311049 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.085057203 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06848464 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.105271186 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069095515 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067772875 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.095191889 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091114626 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069513223 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093398156 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.0761786 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094738262 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067636201 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.0859968 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087332527 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067293788 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073616503 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.088497155 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068179875 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086515341 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068342003 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090547394 seconds)
  done (took 3.18527604 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067342539 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065962328 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081509582 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064391519 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063614404 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.081996468 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064593517 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063375155 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084715164 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064625928 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066292132 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.084205972 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.0665523 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065580955 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.084977329 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066617349 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065741139 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.082183742 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064270994 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063088155 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.08559975 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066709633 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066054445 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083245032 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064012861 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.083986333 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06473192 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064048076 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083603371 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065008712 seconds)
  done (took 3.05909648 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075998347 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072067099 seconds)
  done (took 1.071886971 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.06474899 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079600305 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.083018377 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069893983 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088238105 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067165309 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.0738715 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090422398 seconds)
  done (took 1.542207292 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082736005 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076946724 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086195358 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079576465 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.095576338 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082258331 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.154642671 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.085855655 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073640698 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063734118 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.099796256 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065059544 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090833901 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067819332 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072353459 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092391741 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064819751 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.090881764 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069573533 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064684491 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086689977 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075147542 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087335888 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062884741 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066863857 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.107861884 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095117438 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067521454 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068408678 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.092749215 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072155381 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.077911538 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068338628 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066808966 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.083343775 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.07757819 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099879799 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069668827 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.093144131 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069288097 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.09496066 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063384686 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071595974 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092307246 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077065722 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.0853179 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068159337 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061639864 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.083345762 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069573121 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061148599 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085334307 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061938548 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091744522 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.070547661 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078590367 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.085223328 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067891002 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.088260166 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071100127 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072909962 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.08741296 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068810873 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.084167116 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076701635 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071006293 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094042254 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06171399 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.079712795 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.065650121 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.074733021 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108147083 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071782473 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065457691 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066031299 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.084467305 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070715032 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067125257 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091621937 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072622892 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.085704541 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072601692 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091556048 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067572155 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068224194 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073730094 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063353012 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068106117 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063131597 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.106029036 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065674166 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06452429 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.084426325 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076040475 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088328128 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067014164 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063320408 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092226799 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060943587 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.084969204 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.0688248 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066865958 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075884484 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06979859 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.0938383 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.075422565 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.093177939 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066778446 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069367932 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062113193 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066616665 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.085988543 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.073850014 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060903683 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089416296 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.068142161 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.085169502 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.07672959 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.063881328 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.085343207 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074064619 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.091238563 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.066010171 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062900068 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.088817597 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067394914 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089024183 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074931678 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064493775 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.081635664 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061647822 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.088099831 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067289519 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.06934429 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090999232 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069672665 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.079723167 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065642104 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.089380313 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076204623 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066069274 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.086646239 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.071858718 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.086675732 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066211872 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.071510617 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088518141 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066111677 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.090766551 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068522195 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061115108 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088817908 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069320771 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.083275557 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071325561 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069429139 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087704142 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066983716 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083312363 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.075522722 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085285792 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066643083 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065928801 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083886527 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077896742 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068113839 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.081763355 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064176559 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.094891046 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065144872 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065800405 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064159692 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067305949 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.088372132 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066008869 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066019962 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.087824404 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077146058 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069542738 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065651389 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.092622148 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078467563 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066394641 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.06797667 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.064697907 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08927435 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068087746 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.09408789 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073399133 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070932205 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.089136916 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063975729 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090497607 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074910107 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065861708 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.083723155 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065672102 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.08950022 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073236386 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.089296841 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068706984 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065036094 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085957211 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07020393 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087105188 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067653034 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065543078 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.092973775 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064799262 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.093364841 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067853378 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095318266 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07033732 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061423577 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089500045 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064412154 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.090180175 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062967118 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063910104 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.084522374 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069075688 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064687046 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088740542 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060661855 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091427638 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074529611 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067409796 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.085572897 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.067063975 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091618238 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069361825 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070652557 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.089213728 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.071997445 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096669367 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.0664811 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069498502 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096614572 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067049883 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.080465457 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072754482 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064686315 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.085319116 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065043009 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.083776342 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07023012 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.094143016 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.07434159 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060440721 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.088895964 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065802966 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065317925 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.082487156 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071234117 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.088230741 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068491335 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072877526 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08688792 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067194198 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088688028 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067038001 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067314195 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.08769798 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.06925805 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.066246437 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068121644 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065062317 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.091885728 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065281673 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082898858 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069161512 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067028843 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.086624324 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071907093 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.083807931 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068068506 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068786421 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.087234077 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067848405 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.065506123 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.085878108 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069614832 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085997645 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067840283 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068559596 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.08167778 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073844733 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.085265595 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074192385 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.06637455 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.083158543 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074636414 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.088319889 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073524324 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.085412749 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068566434 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067108529 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.085972137 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069104147 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091480705 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065955542 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077193713 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094813488 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067197377 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.088534591 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067078885 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068532716 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065210392 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.06631084 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.08786018 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068120476 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066607441 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.090853577 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069720192 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066497861 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06733859 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067026263 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.088664661 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068338773 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060799271 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.086676172 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067319668 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.085197411 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07801806 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066536586 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.087628231 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.066425021 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086930369 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.066597 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063277527 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073710338 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074597983 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.089470405 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073667288 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.086145407 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.06824989 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09537644 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062493011 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065010738 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.083546574 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065525051 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072880283 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.086983315 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075432558 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085688325 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066939335 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063685525 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.087401178 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.06624915 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061403565 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.085256507 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070724825 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.085749801 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06617544 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066370875 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.088196507 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067622496 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095952286 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066374768 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066778689 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.086967083 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.06414447 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.084716832 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066886085 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070062554 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.087054723 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065129672 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06352455 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.086208678 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067664599 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.086824099 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066988076 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067620745 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071812444 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065521707 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.090281024 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070851914 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063839166 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.089988212 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066930299 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.08538302 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066902849 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070019965 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089814193 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068266801 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.094228849 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067365695 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067037372 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086956849 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064960048 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.085402359 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067813649 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066234283 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.086000248 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068614102 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092567802 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066391776 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069673574 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08634925 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067806803 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.091055853 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069346265 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069622344 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.093706835 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067049597 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.087757095 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075556747 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070296927 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069010154 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066307079 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.089956599 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071988939 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065446571 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.071264035 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.065652451 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.088878747 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068761441 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063500875 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087063558 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066321114 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084504328 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074174236 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067431009 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.085896364 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066505248 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.082773467 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068526659 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070468925 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094177473 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069106665 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088757477 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062832805 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063819696 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087739714 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064656434 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067480703 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.08934371 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071669617 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.087989012 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067889012 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065159318 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.095720661 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071959284 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.090183148 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065071242 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069817159 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.087858474 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068713646 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.086760343 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067878681 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06699843 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.090018765 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068413774 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.085231159 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074371418 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069494721 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087046988 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068244867 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.086918214 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068003011 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061582387 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.087421499 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069213616 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09068641 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070393971 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066597762 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097281402 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064657719 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.086046537 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071258617 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06595528 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.091040854 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062342542 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.086660816 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068552563 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066850763 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.08225532 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066135272 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064155379 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.08965015 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066073725 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.081359794 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077674229 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.0944607 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070881389 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064938546 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064948708 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060415533 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061090888 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.088869113 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068075517 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.088133782 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076885474 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065635424 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.086077793 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062373573 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08567613 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07084408 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068832494 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.083678957 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063060557 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065135019 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.089956834 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072136571 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085174193 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067037817 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068802938 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.067758765 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063038533 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.091062412 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064414171 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069553167 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100488788 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067078102 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087762974 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073126318 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093491645 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067669567 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061510101 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.087156312 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.06973479 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.086342442 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068456801 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066951626 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102006107 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.06878239 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.085843843 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066817535 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068141233 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.086681154 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.073647557 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087488453 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.06807687 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.089461506 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069297203 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07565896 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089476462 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073506756 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068955089 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068174525 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.08621634 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067764435 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064196552 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.085512594 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068247098 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067056231 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.092682566 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.07506572 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.086064739 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076795779 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.096031427 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068470522 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062746906 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.086800818 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066074721 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.081446085 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068712464 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064123094 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.085133182 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065175853 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.06476656 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066517724 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070649516 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.090095822 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068112675 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066453086 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.081857409 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068996602 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.087852578 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06879143 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063830287 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.086414657 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.068433904 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069818298 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091516491 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06394949 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.087542433 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068752083 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067133752 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.082588267 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073178918 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084577459 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069580711 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066095239 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.0875442 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068358514 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.06920533 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.092752652 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067236253 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.089457249 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070734034 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089219528 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.065308411 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063981767 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.09217925 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064994499 seconds)
  done (took 46.186569743 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100238363 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084151851 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063201653 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062448287 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095171109 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063328879 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08312169 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063688677 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.082029422 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066810303 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062523052 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081897569 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072306137 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.098457327 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074286692 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.088367647 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061480087 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.083419006 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063028043 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061934759 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091800686 seconds)
  done (took 2.576665217 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074341795 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069156102 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.070921022 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.073666076 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065669725 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.095410694 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073336861 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091901065 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076203114 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088723598 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076203095 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091457284 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066857307 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.088329377 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067424553 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090949275 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075831182 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088999663 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070165509 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.093507648 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070347772 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.093991572 seconds)
  done (took 2.724448687 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068628911 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065832995 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.087142089 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06187334 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.06521637 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.082173086 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069707517 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.06383696 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.076347741 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064421442 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.087272662 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065298533 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067397152 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.082242842 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066367988 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.06312572 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.128720143 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.090637501 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065495894 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066257194 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060229586 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066696654 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.08452926 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062997798 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064493955 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.091302474 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067137652 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.083818775 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066138879 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064835884 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.085524174 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.065223485 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067518465 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.086832158 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065484757 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064611638 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.086364765 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065828671 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.080907134 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065344443 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066480635 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.082521171 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067219164 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067086855 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.084982402 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064604104 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.087160876 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.067120539 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061184475 seconds)
  done (took 4.555969426 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081204988 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.128772477 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066867746 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088682044 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.102464642 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072852799 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.091390988 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109784463 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064724407 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064528638 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.079707294 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080056763 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064606389 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.095783438 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.073367713 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.087579222 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068368717 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064985029 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068993543 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063870892 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.094641675 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071192102 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.101711448 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.09922681 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070361332 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084748408 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066565884 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069629513 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.100627787 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.091061452 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071289739 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091607469 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080895388 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.088067752 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065474147 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.088027975 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082744964 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.08612635 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069534065 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.083498122 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.069592376 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069982485 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.07122428 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.104225188 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067342669 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.09151831 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06747382 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063090572 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.100060827 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067568493 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.095267712 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.100559271 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071979818 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065517684 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069148093 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.102736709 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067204286 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.084515509 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070254638 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.098558581 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065244961 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069794743 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078167496 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.088924932 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073946158 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.101024089 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072119731 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089836378 seconds)
  done (took 6.636351321 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075855135 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092380002 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081950974 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10215475 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07222088 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.070706542 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093595353 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.07347562 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.093780619 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078423826 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093075378 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115312894 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068731354 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.09594363 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074607347 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093078772 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073548862 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093732352 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074262088 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.093697548 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072642827 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.101507442 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092236687 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082032367 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.096056976 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066060734 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.094967052 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072069876 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102442093 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.092124683 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.081270779 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.093070419 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073900449 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.10168605 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078542468 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.093407958 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065646885 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092894559 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072035872 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.070882045 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06606276 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104216503 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.092754593 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.068587571 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092318197 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073216179 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.10144758 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078890487 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096110968 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097278352 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074242998 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101551674 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072053319 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093661829 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.100536409 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.105069907 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101301487 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101076237 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073078781 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101743489 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10060065 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.08774143 seconds)
  done (took 6.370127392 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08426743 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096256718 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.075919354 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.082932134 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064533481 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068788932 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062854885 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.062956236 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.09871417 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074033972 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098499755 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089763732 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074104029 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097079813 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070623309 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094338902 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069954151 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.091205476 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074528796 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091612002 seconds)
  done (took 2.609004541 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.07558665 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082080133 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.088666274 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071753232 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.089871609 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071404974 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.089540992 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069681105 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086391609 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070213634 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076137885 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.097477403 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066410242 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093418213 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.095483657 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072829268 seconds)
  done (took 2.283529452 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.076490328 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.092859535 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080674992 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086592806 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065270701 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062492956 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.087860058 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06296403 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062207183 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.099846828 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.0660961 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.090624471 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066270279 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.085709802 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063988935 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069108481 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.084292034 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063990451 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.08580619 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079611873 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096887279 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066675722 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067304486 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087785191 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066602633 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.092742101 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066079019 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.084896629 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064664692 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.0664189 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.08846191 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070685277 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.08434288 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065258081 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064852643 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.085538453 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066545178 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086743239 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070150526 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065208185 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085653044 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066356253 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086427758 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068071558 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062080967 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.088345088 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062176905 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.089509323 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064874044 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086372746 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067857616 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068887611 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.088329449 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.073042749 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.090425443 seconds)
  done (took 5.178935556 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080283221 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068563658 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083743087 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064440881 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.067775957 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.090110294 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069286692 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089100043 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069156366 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083799176 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06872804 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068624775 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088932379 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069588865 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066724341 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068125282 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061171051 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.091329472 seconds)
  done (took 2.337844888 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072077454 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066053391 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094204661 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066830324 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065361099 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.090259806 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062035563 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.085753941 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066016145 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065234158 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087731678 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068393311 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084456045 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069239687 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066047154 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086999506 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068320836 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063867046 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.087868497 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062380006 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088371795 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065803447 seconds)
  done (took 2.623801779 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.073083529 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.091627034 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.159675383 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.10512623 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.082341732 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.077603653 seconds)
  done (took 1.583857335 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091622932 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099816837 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067090008 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087232269 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096542438 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067093208 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090186398 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067118398 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098704591 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09832874 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068259468 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097671982 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077395683 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097319899 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094243481 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075249567 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087792151 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069132535 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066839252 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082369694 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090270156 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076810325 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089851091 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067910939 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089044945 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077086683 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098010366 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097876198 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069610931 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097647671 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074370714 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088403731 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078191545 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097174583 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06922464 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097637712 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06874869 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107112996 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094079893 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07686699 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.090143739 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075614397 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097834445 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07288238 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098752468 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067761874 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094504696 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067496922 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090506597 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107657683 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074279415 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097963781 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074238382 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098762619 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097792087 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087262514 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09875075 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096506775 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074278488 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096991524 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076400084 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095761164 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096475095 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077742139 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095419766 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078615823 seconds)
  done (took 6.665654896 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083202373 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107058938 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068373692 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098570264 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075722984 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090579263 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068274727 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089728819 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069202752 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089020266 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129801717 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070323294 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097260847 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077710151 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089512731 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068595015 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089708454 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075940369 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089804533 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108025116 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069545178 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097963913 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075984662 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098779033 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098572438 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074543567 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088875146 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069203516 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088948194 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069217978 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094995074 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068653335 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098066654 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067684265 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098185912 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068283375 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090394419 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073485894 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090611548 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073435638 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099063124 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105488584 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068321095 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090250349 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077043799 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090816256 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068376559 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089805489 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0684141 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089772465 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078410698 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075413854 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075194777 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074038694 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092918806 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069657395 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089912684 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068895938 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08888845 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07505971 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098474374 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068898567 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109287222 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068024406 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090827525 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097737029 seconds)
  done (took 6.562838678 seconds)
done (took 130.8499959 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.200828922 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.18704539 seconds)
  done (took 1.382018982 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.06999795 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096344243 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.099488893 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128545186 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.088604969 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100884692 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099074138 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.100939286 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066927815 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087775826 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.06793168 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067671706 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.152670787 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067587605 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066365242 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.090565327 seconds)
  done (took 2.452615375 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102159632 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.196348572 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110276524 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066639642 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100287028 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079349741 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065322029 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.097964796 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071066805 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.087399518 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.078557659 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096744552 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066349708 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.073438077 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.069862689 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.098704743 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066345368 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.077466501 seconds)
  done (took 2.607772204 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101554853 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.144172924 seconds)
  done (took 1.252647658 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.183027762 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.139299914 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.189389347 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.423104832 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.205892477 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.264434554 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.179097653 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.176852078 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.160259309 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.174815365 seconds)
  done (took 3.093968089 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099048519 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.171522551 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.303537715 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115876917 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.095095319 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.115235092 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.11859153 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.10024327 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.078727946 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.100062133 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.098861063 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.077556686 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.118154863 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074862492 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.095264265 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077688654 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.12107473 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.073374855 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.097098018 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075308134 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.118871624 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066898051 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073728006 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.095855381 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.075998013 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.098193242 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066705941 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065361619 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.073122112 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.096493169 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079267069 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.113855683 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.075936772 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.127831115 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.093205026 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.129419358 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.077152851 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.095269074 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075143861 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.093485094 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077107075 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.098171482 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072378551 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097126241 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067126735 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076210814 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.088577161 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.06605479 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.100267816 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067486128 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.100214353 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078608179 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.128824768 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.088194378 seconds)
  done (took 6.208128451 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.708565582 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.126553791 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069993552 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.130799639 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116781754 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073972981 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.706761029 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112779221 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.199153513 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.094050127 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.108728169 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071742927 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.101588321 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08484496 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.130813748 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.101138957 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.115296999 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071164761 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.12325621 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.120898733 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068701911 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114968781 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090958134 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.399021157 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067752462 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092345371 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069002479 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069448798 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.133869952 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.099811164 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069598753 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.166150363 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.086034075 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.143455194 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.089146984 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068104496 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067542958 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.102309821 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.179711447 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.18378144 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.15315913 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068039613 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068086217 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.091387955 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.089241687 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088999208 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.135178428 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.081440669 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.142038164 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092102108 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070146589 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.088688807 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.07057866 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.101053779 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.079256328 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.102307758 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.255797356 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089749943 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069322326 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071337901 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.224881426 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080054071 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.101460268 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092587899 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.178848652 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069579396 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.73902413 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.087295041 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068235241 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.092858177 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067911854 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06926602 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.06804626 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.115804092 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.365221636 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071333919 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070264236 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091479595 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.187835886 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078796926 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067363062 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.136226562 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067274873 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.090981666 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070528872 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068966022 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.139641091 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078728444 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069004704 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.092440997 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070044084 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.089342215 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068586758 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.185431963 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.101401481 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080630361 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.179969406 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.090683436 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.136216097 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080545016 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.091171834 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.080521866 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.089504063 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07161104 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069086898 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.101298037 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.117264204 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080038029 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091785585 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069603991 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.12018771 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081050669 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.089954704 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078854235 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.424040689 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.10215017 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067216363 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103351938 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068372832 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.135667888 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092088125 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.176782504 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067957312 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.103299487 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068829451 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.089803624 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069250339 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.135116415 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.09155226 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069562463 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068579979 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.09184449 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079587193 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.180335663 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07144288 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.182359427 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.157903555 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.090932522 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.143870249 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068918381 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.139882354 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069207497 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.091556618 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070516264 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.745797131 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069526081 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067863124 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092413888 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.160525666 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069463251 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079137076 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.100337949 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066990658 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.741625396 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080771872 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.100697183 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080024487 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092710852 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068878219 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.089742706 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07125894 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.133774792 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.192371222 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072121337 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067797781 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.099712627 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.135580561 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067634847 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.10063825 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078598069 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.101484769 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068512226 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.092284098 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080899075 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.140561078 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.101921278 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.160706161 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.560644301 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069949676 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.09840222 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.169437314 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067491943 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.107264215 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067993092 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.105104407 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.136975193 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.09812077 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.254588869 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.13693423 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.13767232 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.078355419 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.10706078 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067478805 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.09032778 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079677064 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.08985524 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070837208 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.099679035 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071123136 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.06872366 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.107259382 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06854738 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.198104795 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.090100452 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079506672 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.088880845 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071140383 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104715984 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069415545 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069795432 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.102760941 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069601751 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.105803916 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.662512609 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.100679553 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069636085 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069951847 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.185760083 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.136572985 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068178007 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.090808455 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070943136 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.132762432 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.180312306 seconds)
  done (took 30.544414346 seconds)
done (took 48.541278746 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.258672623 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.173403018 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.225825804 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.114476189 seconds)
  done (took 1.873756027 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.145376956 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101482119 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.117791653 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064813556 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.125556392 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086728953 seconds)
  done (took 1.675011336 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.409505377 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.263291358 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.227630867 seconds)
  done (took 1.92883288 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.219635992 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.235398584 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.413134443 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.299333712 seconds)
  done (took 2.302497517 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.166538931 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.113308837 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068214869 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.107470958 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.160362565 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.209263927 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.124766514 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.17228093 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078338282 seconds)
  done (took 2.275244018 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.191597236 seconds)
done (took 11.269842377 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.098808225 seconds)
    (2/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.197374228 seconds)
    (3/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.10984567 seconds)
    (4/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.195831415 seconds)
    (5/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.231447279 seconds)
    (6/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.097863796 seconds)
    (7/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.081665753 seconds)
    (8/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.221164484 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.112797965 seconds)
    (10/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.204597875 seconds)
    (11/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.112028134 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.105377805 seconds)
    (13/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.198942848 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.10570511 seconds)
    (15/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.21683323 seconds)
    (16/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.076854398 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077567423 seconds)
    (18/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.194754362 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073243176 seconds)
    (20/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.171820828 seconds)
    (21/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.20603884 seconds)
    (22/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.16918503 seconds)
    (23/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.1438176 seconds)
    (24/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.116347221 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.094733594 seconds)
    (26/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.119613575 seconds)
    (27/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.173058143 seconds)
    (28/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.221346934 seconds)
    (29/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.071430495 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.113160593 seconds)
    (31/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.15706263 seconds)
    (32/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.103110348 seconds)
    (33/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.193879954 seconds)
    (34/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.069264974 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.092816761 seconds)
    (36/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.097848334 seconds)
    (37/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.225285008 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.07283588 seconds)
    (39/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.207395265 seconds)
    (40/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.194746871 seconds)
    (41/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.076096534 seconds)
    (42/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066031695 seconds)
    (43/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073765864 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.142704766 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066570581 seconds)
    (46/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.162445458 seconds)
    (47/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.082522315 seconds)
    (48/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.2014034 seconds)
    (49/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.070886265 seconds)
    (50/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.198267525 seconds)
    (51/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.181435344 seconds)
    (52/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.105612606 seconds)
    (53/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.204725109 seconds)
    (54/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.173276605 seconds)
    (55/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.076937771 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072955735 seconds)
    (57/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.095355333 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.091303827 seconds)
    (59/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069778303 seconds)
    (60/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.166462222 seconds)
    (61/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.098991458 seconds)
    (62/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.150096102 seconds)
    (63/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.163958393 seconds)
    (64/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.171847371 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.06767213 seconds)
    (66/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.05278091 seconds)
    (67/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.097828096 seconds)
    (68/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.11130739 seconds)
    (69/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.170160285 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.076582399 seconds)
    (71/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.204013649 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.147458511 seconds)
    (73/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.081533753 seconds)
    (74/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052470598 seconds)
    (75/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.19117608 seconds)
    (76/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.134755942 seconds)
    (77/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.102255694 seconds)
    (78/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.101561553 seconds)
    (79/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.19030088 seconds)
    (80/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.100641602 seconds)
    (81/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052965982 seconds)
    (82/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.097099707 seconds)
    (83/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.136662487 seconds)
    (84/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.095628487 seconds)
    (85/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.073370622 seconds)
    (86/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.117548265 seconds)
    (87/309) benchmarking ("sort", Float32, false)...
    done (took 0.150495045 seconds)
    (88/309) benchmarking ("sort", Int8, false)...
    done (took 0.163160185 seconds)
    (89/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.158899007 seconds)
    (90/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.077179367 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.113981637 seconds)
    (92/309) benchmarking ("sort", Int64, false)...
    done (took 0.067805516 seconds)
    (93/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.172113991 seconds)
    (94/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.14840981 seconds)
    (95/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.09802149 seconds)
    (96/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051906272 seconds)
    (97/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.09515448 seconds)
    (98/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.053708053 seconds)
    (99/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077030747 seconds)
    (100/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.052257851 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.119696999 seconds)
    (102/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052161563 seconds)
    (103/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.169908331 seconds)
    (104/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.074550959 seconds)
    (105/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.097215005 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092552762 seconds)
    (107/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.150245785 seconds)
    (108/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.114801882 seconds)
    (109/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.102271368 seconds)
    (110/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051570926 seconds)
    (111/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.071999408 seconds)
    (112/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.114309882 seconds)
    (113/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065521854 seconds)
    (114/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.088053448 seconds)
    (115/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.069016557 seconds)
    (116/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.065309722 seconds)
    (117/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.07324256 seconds)
    (118/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.053899603 seconds)
    (119/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.069792295 seconds)
    (120/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.186740182 seconds)
    (121/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.076805848 seconds)
    (122/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.099705382 seconds)
    (123/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.052170409 seconds)
    (124/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.091121169 seconds)
    (125/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.089564132 seconds)
    (126/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.068832739 seconds)
    (127/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.380260059 seconds)
    (128/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.051584594 seconds)
    (129/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076974893 seconds)
    (130/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.095644873 seconds)
    (131/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068126754 seconds)
    (132/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071751358 seconds)
    (133/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.166678204 seconds)
    (134/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.065171727 seconds)
    (135/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.126325137 seconds)
    (136/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.051234783 seconds)
    (137/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.093989268 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090098018 seconds)
    (139/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.159812571 seconds)
    (140/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.075124707 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.156970916 seconds)
    (142/309) benchmarking ("sort", Bool, false)...
    done (took 0.158522428 seconds)
    (143/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073226658 seconds)
    (144/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.173811004 seconds)
    (145/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.07226137 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.089933112 seconds)
    (147/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.073995497 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.094793784 seconds)
    (149/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.069740441 seconds)
    (150/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.07190948 seconds)
    (151/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.15734677 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.097928505 seconds)
    (153/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.097204417 seconds)
    (154/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071675386 seconds)
    (155/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.104824567 seconds)
    (156/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051959256 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.116568515 seconds)
    (158/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.067131569 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064994015 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.137186686 seconds)
    (161/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073216846 seconds)
    (162/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064386508 seconds)
    (163/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.090299389 seconds)
    (164/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072987628 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.098862559 seconds)
    (166/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.137238047 seconds)
    (167/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.132796326 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.088516823 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.132882188 seconds)
    (170/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081974186 seconds)
    (171/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.077377454 seconds)
    (172/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075038778 seconds)
    (173/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052073308 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.089876442 seconds)
    (175/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.068226074 seconds)
    (176/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.067483317 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.163983943 seconds)
    (178/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.062783715 seconds)
    (179/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.089995262 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091981482 seconds)
    (181/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064328747 seconds)
    (182/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.076871009 seconds)
    (183/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.05296675 seconds)
    (184/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074382051 seconds)
    (185/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.124427892 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089576166 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.091305036 seconds)
    (188/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.146089892 seconds)
    (189/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.104531945 seconds)
    (190/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051646724 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.06517814 seconds)
    (192/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.192625596 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.088747397 seconds)
    (194/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.07530214 seconds)
    (195/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072197754 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.136246547 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.149095237 seconds)
    (198/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.068061317 seconds)
    (199/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.07520731 seconds)
    (200/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.074898739 seconds)
    (201/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072764743 seconds)
    (202/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.108235876 seconds)
    (203/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.093493165 seconds)
    (204/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.087778825 seconds)
    (205/309) benchmarking ("sort", BigInt, false)...
    done (took 0.20994676 seconds)
    (206/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.075714763 seconds)
    (207/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074806767 seconds)
    (208/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068775153 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.118238323 seconds)
    (210/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.051523926 seconds)
    (211/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.064996791 seconds)
    (212/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.09710137 seconds)
    (213/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.074395565 seconds)
    (214/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.050501511 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.090825013 seconds)
    (216/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068918341 seconds)
    (217/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.076064566 seconds)
    (218/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065667799 seconds)
    (219/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068144271 seconds)
    (220/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.05223837 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.142269889 seconds)
    (222/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.051588384 seconds)
    (223/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.092121913 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075044625 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.095661185 seconds)
    (226/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.067600639 seconds)
    (227/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051269039 seconds)
    (228/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.051946124 seconds)
    (229/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.051731874 seconds)
    (230/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.049955717 seconds)
    (231/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.192699041 seconds)
    (232/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066607583 seconds)
    (233/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.068865728 seconds)
    (234/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.069419532 seconds)
    (235/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.066871505 seconds)
    (236/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.097903788 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088458182 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.111352568 seconds)
    (239/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.06468589 seconds)
    (240/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054363611 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.111462211 seconds)
    (242/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051760306 seconds)
    (243/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.063889659 seconds)
    (244/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.050879336 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.135161286 seconds)
    (246/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.098383078 seconds)
    (247/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.052055976 seconds)
    (248/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051762241 seconds)
    (249/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.076595047 seconds)
    (250/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.053457248 seconds)
    (251/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066873771 seconds)
    (252/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.050629027 seconds)
    (253/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.167658197 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.090964214 seconds)
    (255/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.052384512 seconds)
    (256/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.051052903 seconds)
    (257/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.053512112 seconds)
    (258/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.091305539 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.111909745 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.113565429 seconds)
    (261/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051961124 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.114356337 seconds)
    (263/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.060285883 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.086765605 seconds)
    (265/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.122756577 seconds)
    (266/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065878119 seconds)
    (267/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051622401 seconds)
    (268/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.111470037 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07278911 seconds)
    (270/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052135894 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.090771414 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.074795631 seconds)
    (273/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.051754646 seconds)
    (274/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.077591596 seconds)
    (275/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.062444421 seconds)
    (276/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.071049343 seconds)
    (277/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.159051198 seconds)
    (278/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.088316277 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.090570125 seconds)
    (280/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.073886572 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.161672665 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090837476 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.151382642 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.131882255 seconds)
    (285/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.084617803 seconds)
    (286/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.052777474 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.09541198 seconds)
    (288/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.050669976 seconds)
    (289/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.065932288 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072043507 seconds)
    (291/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.113552406 seconds)
    (292/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06423545 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.088895092 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074278488 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07086024 seconds)
    (296/309) benchmarking ("sort", Float64, false)...
    done (took 0.15151898 seconds)
    (297/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.05319364 seconds)
    (298/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.097415253 seconds)
    (299/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.053160246 seconds)
    (300/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.053035947 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065866659 seconds)
    (302/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051572596 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.064796463 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070230514 seconds)
    (305/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.091232534 seconds)
    (306/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.067041545 seconds)
    (307/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051012284 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.115724247 seconds)
    (309/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079368422 seconds)
  done (took 32.812737498 seconds)
done (took 33.845967121 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082300674 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115069823 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.07628897 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.091262714 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.104946591 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076158716 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.096256368 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078892775 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.07821979 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080165007 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.104314967 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055322341 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.07304674 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.098937592 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074142089 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.115273884 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078332577 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.095655239 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073854665 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065066867 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.097323597 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066197304 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066928693 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.07899654 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078449782 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071591895 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.096354142 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073898463 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.089202483 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.067679656 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068899634 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.0973984 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066316653 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077115224 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.096111376 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073430607 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097320258 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077045458 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066986699 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.089221791 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07545565 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.064826409 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.097237992 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074189833 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070868341 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.095462965 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073427943 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.101427054 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091240553 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091637041 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075016855 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076269553 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.101340231 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.07242071 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.094099979 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074943052 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070247426 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.116314185 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073514392 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067307838 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073224289 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.072417902 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.069815927 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071346795 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.071493777 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.103820408 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075124522 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.095544315 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075311611 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070843628 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.089817702 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073318076 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068185046 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065121556 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074556877 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075336925 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063994115 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.069965732 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.100958858 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072406924 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065152935 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093478605 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068785127 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.07077718 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092288297 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055757321 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068599125 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.096258144 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065309857 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096180618 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073484434 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072268066 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.091059252 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076718469 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065008176 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.094916712 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.06698308 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066028719 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.092540769 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069981504 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064897221 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092121414 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075029846 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066632761 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.09648809 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079597233 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.089702902 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073071883 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064993813 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064373108 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078502149 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.099938393 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066977308 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069021037 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.089776022 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074306977 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064756722 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.089905297 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066417457 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065340831 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.096409927 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066933702 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067687632 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.097274893 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078622128 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.088770842 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070362179 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068348847 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.089407277 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072614761 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065683431 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.089816468 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.068117425 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061668883 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092372174 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067478784 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072377342 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092282282 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073340642 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066817175 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.098298969 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.07034955 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.094859152 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072425956 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065273535 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.081614439 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069695985 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068584527 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.09066097 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.067104097 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.068006686 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.089424989 seconds)
done (took 13.150777963 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067463852 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.169056274 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.122569579 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.097193643 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.110428654 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066559354 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076067574 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.127089505 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.091252665 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.103567283 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110983589 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085749695 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.137659403 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064667527 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.090827826 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070905714 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067155604 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.112121508 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.124348153 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087606809 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.135297695 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064732117 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.119527955 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089929203 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.11321112 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.116351932 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067781843 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070229438 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.094074795 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.101465431 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.110039762 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070476318 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066455668 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.123694593 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.116567593 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.084916098 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.089538283 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.084579432 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.06596081 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.090134064 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.088550542 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.123859914 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.104215106 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081852291 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070954947 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.093808606 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067562524 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.109050532 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088739593 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.104835132 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.110540016 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.105170035 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.093860424 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.081151445 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.088653107 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.08728005 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.105120759 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068535197 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.06643894 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.09328851 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066143309 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068613836 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.111389141 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.088145967 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068751558 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.106041543 seconds)
  done (took 7.288222076 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084739886 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089194812 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.108220159 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082659396 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064883563 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065195234 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065533026 seconds)
  done (took 1.656613536 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068208746 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087677469 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.113570071 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089223804 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.109758127 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087331221 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.101357086 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.06725944 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.082369322 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.094287593 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087655666 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.126667223 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067971756 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.097588808 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092054522 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066406255 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116287011 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066761859 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094478856 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091250172 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093431901 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.087393245 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.068572988 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.092105052 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081699082 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066591685 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.109855802 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097022968 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069715345 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.07060289 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090655052 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.105988171 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105227463 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074627239 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066334162 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.106645449 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081059327 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06420511 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.080906445 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.070918389 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.108955687 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067628245 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.093271201 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066091654 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070963369 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.10287166 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068653725 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067270866 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.095420975 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08694489 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.092428741 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081457281 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.066326043 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.095415345 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069184119 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096226952 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078229817 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067817139 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.111120237 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069368564 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.107828311 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084568198 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080532724 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.108725695 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.0694208 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.105090303 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082049486 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068997666 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09447542 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070838961 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.107606762 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065855738 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067817187 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.103025176 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069527843 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.114537675 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090666491 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068100838 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.103412062 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067757033 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.092266982 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.068446529 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089458658 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095933998 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067514375 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.09527039 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071073257 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.06559163 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.090341069 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.07233898 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064766333 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.092963098 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070582822 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.067262516 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094529312 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083836591 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.091905686 seconds)
  done (took 9.359000885 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069329807 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068588667 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.094208409 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068719193 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067766553 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.093155134 seconds)
  done (took 1.571726683 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.095348795 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.093326657 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081892443 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072701309 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.130277247 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.081144577 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.108231047 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.103058886 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085829056 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078540981 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.107082169 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.082208051 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.112852948 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072913764 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.106702022 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.073073263 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.1059693 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07757851 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.10324125 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074661918 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.112674511 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.074673793 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073098383 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.106785575 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.07049083 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.097543718 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077926646 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.104048007 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.08072084 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.103559552 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.074098156 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071030005 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095525168 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079045004 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.107219943 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070706838 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071435322 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.070082506 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102043586 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.072173669 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.080715376 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.099278151 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074959655 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.097199873 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079048566 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.095849941 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.071995912 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100937718 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082419868 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.09571407 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.07287347 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.072137557 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.096168438 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.072454638 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.095239121 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079963664 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095160001 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.083022312 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072558861 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096857735 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069509113 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.096583846 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.079645555 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.095810314 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.08078534 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.095175984 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.071845241 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072947086 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098425699 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.07235793 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.095820815 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.070943017 seconds)
  done (took 7.388377921 seconds)
done (took 28.355573024 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.674681023 seconds)
  done (took 1.783427615 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.745946207 seconds)
  done (took 1.856820387 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.053078152 seconds)
  done (took 17.16693443 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.59709427 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.773937209 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.846905878 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.157162517 seconds)
  done (took 3.483633371 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.902043575 seconds)
  done (took 2.030800397 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.23697169 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.224482458 seconds)
  done (took 1.57594703 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.774108198 seconds)
  done (took 1.896455319 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.274861401 seconds)
  done (took 2.389788078 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.318167596 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.177825002 seconds)
  done (took 1.621917256 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.486156627 seconds)
  done (took 1.610445632 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.185019255 seconds)
  done (took 8.314736365 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.203209104 seconds)
  done (took 1.342184326 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.267265362 seconds)
  done (took 1.400875354 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.341812913 seconds)
  done (took 4.469747298 seconds)
done (took 52.065429245 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079040049 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082038234 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.106280186 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078126069 seconds)
  done (took 1.467585951 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078178429 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071746982 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10262712 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072753329 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.102055142 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073294398 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073526032 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.103170392 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07208947 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.098226144 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.07336517 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071335255 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.100913366 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074911433 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.095346743 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075852969 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.10066314 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.074712118 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.07500391 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.098001908 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071519598 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073807113 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.100632481 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071906711 seconds)
  done (took 3.140603224 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078876485 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072082647 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.100398952 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072024396 seconds)
  done (took 1.460309587 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078614199 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091140772 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.114693578 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076680319 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.090094728 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.113562273 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.070554765 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068473858 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.096810173 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077721125 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067875896 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.122544901 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.112179069 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.07759366 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078308814 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.091597141 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068914114 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.112781529 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.07769495 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077328561 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.098605389 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076842468 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.092031731 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089680528 seconds)
  done (took 3.258762585 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078733916 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.101187555 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.103559508 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.086784748 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.116250797 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065294983 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.100294014 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089862386 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.149472884 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065380767 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.095424455 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066955354 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072456566 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.091487396 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.077631743 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.128940866 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.109727406 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067457482 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.121393951 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065086537 seconds)
  done (took 2.993383013 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073574493 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.06961253 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089586131 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069105321 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076743063 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.097685855 seconds)
  done (took 1.620397928 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.06927168 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066802122 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091718205 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068310209 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071592566 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.091931922 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067699382 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066836623 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092481738 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.06861963 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066229024 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.091446813 seconds)
  done (took 2.050816883 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.408470397 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.096096374 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.093917562 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067793418 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070846807 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.09183134 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.08148533 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067918071 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089074432 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065360815 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.093230752 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070697657 seconds)
  done (took 2.436061638 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260576277 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077279142 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.292406108 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163546653 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14024159 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143400013 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102512859 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141004311 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.173787207 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130526674 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223753207 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196155409 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134766906 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165423142 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115264072 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.098711411 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211833308 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191053143 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132060833 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219728886 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173984383 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152043253 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174498689 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128954827 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133408379 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150237038 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070990718 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106440292 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226426131 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160444797 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174020044 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138489977 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121548086 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230862948 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22592118 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17198024 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162092218 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08404663 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.156105316 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.16189203 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256838759 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115559126 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193902757 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135208445 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106603349 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168590107 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147571085 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.145971029 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.133298638 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091540376 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200343196 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210135314 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.193033401 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087054105 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137245666 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142116083 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.142301474 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129112325 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238133037 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18958704 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153116118 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.096124688 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09952391 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206727258 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158002993 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.134935813 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.154606277 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118438523 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162981708 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181615943 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146088933 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169050084 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.184008314 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088127408 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14529364 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193842834 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15599926 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197004998 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150826842 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.098635148 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152507795 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129511604 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081751387 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.166551878 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074964129 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229688977 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123711331 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.107029016 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13944651 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135186359 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135179174 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191146126 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200189856 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128304153 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066407663 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12997756 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.146438397 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176000033 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112529588 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10717153 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142220321 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.104864168 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165423819 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.100830417 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150152564 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075612667 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152178603 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155923818 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.101889838 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151357929 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100294879 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.126807745 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161229714 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216082963 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088515756 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109026617 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194608839 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149481254 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.130800032 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197452725 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.184999515 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.124604745 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102897603 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205729885 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236854113 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088429713 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218673886 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135392996 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083128263 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.114190463 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152299913 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139790377 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.149624943 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082251013 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.147195562 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223303668 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074523402 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121675775 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160444036 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105574644 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080733664 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130902015 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127699484 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.120724022 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.102171422 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.132509973 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167517752 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175680608 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107878101 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152670142 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126064836 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226332199 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115427498 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.099991677 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130912557 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.06897481 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.192754574 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186829495 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106192765 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193185364 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.150995234 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131850801 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145501551 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082266685 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193751804 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079431968 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069306645 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200201686 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136944307 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136365124 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.180690139 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130741264 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.155694028 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.147520387 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16271219 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158931281 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.15698877 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133651711 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.113593432 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112339971 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180112075 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.074309102 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091338203 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079034541 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13277259 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122918179 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084063965 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197102054 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153926878 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100123366 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137684227 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12420931 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173992265 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.104048799 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156741379 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.145998469 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120657847 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.181745056 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180428113 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18634984 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100585427 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201630595 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070995752 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073060507 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087757222 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152695434 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111222424 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083629112 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145470881 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.201952374 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157647014 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167746194 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140213686 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148727881 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182836313 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068933989 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.112802069 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204923189 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14906976 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.128834111 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118012958 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099463159 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169126539 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136131094 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238849682 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142121416 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151557068 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2104568 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.124420563 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084963747 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131018406 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164494571 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133703836 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142351282 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129801994 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115977623 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109334003 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.072951515 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129671923 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157067809 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148440596 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162647676 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.141731505 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188510707 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077877126 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145413377 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148046332 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15519479 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.06321112 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14546252 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195262103 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121990855 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146924185 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180345446 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107092104 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.15263863 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235497209 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176038112 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111300537 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138141773 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120145876 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154575735 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146134442 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171201502 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139362323 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163793301 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13475543 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.087339937 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114126813 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098068847 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133028949 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.122084642 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.136989167 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.141993251 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094562724 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186801146 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103596384 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107057181 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148201259 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.124507384 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089701073 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125314173 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201737259 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147252857 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227604012 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.12592778 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.174458326 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191190228 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074215039 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110244898 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077807814 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19486838 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085884814 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129007187 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.127339307 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132679926 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152992371 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172429245 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121629523 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070087377 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136338992 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163735569 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139130803 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125410191 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.106008061 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220812727 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.127229004 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080417331 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142426038 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131966536 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104609028 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229864678 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.06119886 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.0961743 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103580949 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082369665 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156802243 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210275623 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.083334957 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.152458261 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120131783 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138096014 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15770001 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128682621 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101866083 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143091257 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205523916 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158357344 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090288031 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14033466 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157169975 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213859176 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133866753 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.09552449 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228701778 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179663425 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.189844058 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.117440053 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142440076 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141155256 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109140502 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197262081 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083000388 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221912457 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108636512 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168126824 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1331687 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117178008 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160325308 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.099309718 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133238992 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144808531 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147889817 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110751511 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077311624 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173583047 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147611861 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109226777 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.103133558 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167948864 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.099429585 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163831996 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19808792 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109475477 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131758124 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09750031 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078311813 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1379498 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130862029 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0882571 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.147219621 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232779473 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089670365 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207636985 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171380296 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141599477 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192838638 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101070823 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.663773659 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.105956088 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18492589 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14457743 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231848675 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125098408 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145991537 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109631923 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153095394 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203011106 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133569092 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.17440132 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189693713 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.145820037 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080325412 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130334291 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130608232 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088757933 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132915258 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141546176 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14543448 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.12245588 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.144469583 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153478452 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081190801 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124747495 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212901321 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116966597 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173099855 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170741381 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112790549 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146486363 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169697117 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106363101 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.152629035 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181886912 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135585479 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126130336 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081421306 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.130532666 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227085962 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074442111 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221228434 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149666311 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137701398 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141186137 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.145043642 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160230739 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137165652 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150226019 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121062055 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.138771887 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11413732 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110934725 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.104161079 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105959215 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140987181 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.125353752 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127344075 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.122436022 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207687269 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.073438988 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124125966 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104688887 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203901493 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232435787 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.089233883 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109909953 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148562425 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142078842 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.142003829 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150728118 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.081558108 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109411411 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.083312957 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.104710463 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.134683339 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140301838 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13259654 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139500408 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193400099 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.111364184 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.248483255 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095765087 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133167908 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069884757 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.107127458 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123244381 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099210542 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137065615 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128741636 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196305321 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.096293181 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.120038834 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093159487 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.101813325 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082772947 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156370957 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139543548 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147541068 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125933642 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062095552 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137269618 seconds)
  done (took 69.506721716 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.133960456 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.107310701 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.124012443 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.175962014 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.149399957 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.240094831 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.182539771 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.226981762 seconds)
  done (took 2.557221026 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070082116 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.121153523 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099573796 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.109444608 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067027955 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.096322249 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.280020653 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.08122413 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.093830437 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.08921208 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.105953236 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094531616 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.458408907 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067041795 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.093232279 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063770142 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.094601241 seconds)
  done (took 3.294885199 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.422754539 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.658225216 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.426590493 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.101931176 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.986218921 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089522006 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.610472768 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.167375959 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.072103045 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.450045469 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.746314335 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.133692166 seconds)
  done (took 18.076440632 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075301031 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.068835999 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.109833353 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.0836049 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071534351 seconds)
  done (took 1.632445869 seconds)
done (took 114.618606108 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080526103 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.35456534 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053213069 seconds)
  done (took 1.66111446 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.084706191 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.08335538 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.112721748 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08186692 seconds)
  done (took 1.593441711 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.075501299 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075837903 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.110816624 seconds)
  done (took 1.487364314 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.283076332 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.13945555 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.084503008 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083268225 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077341564 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.104413437 seconds)
  done (took 1.497163671 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073837719 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074246464 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.100446181 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075833662 seconds)
  done (took 1.548273255 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077111073 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052980159 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.053942737 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.083225959 seconds)
  done (took 1.49757547 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086651401 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.077558766 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.105933485 seconds)
  done (took 1.495157382 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106485586 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.112106169 seconds)
  done (took 1.44679852 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082814405 seconds)
  done (took 1.308717727 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.099852081 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.140443291 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.157186087 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.137401256 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.166059212 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.136204271 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084632843 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.116228713 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.105036357 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.08793851 seconds)
  done (took 2.462373564 seconds)
done (took 17.809211461 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079189216 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.386922301 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361532883 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089247888 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.695322887 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.35601484 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.003748896 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091115988 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.148851621 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095256128 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084760525 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648127091 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.030920312 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.323435331 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.018312434 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324503335 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.675419149 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069292055 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067349558 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094061983 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.963486188 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066917292 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095355394 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068151375 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.674927522 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371898271 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067368079 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.345526781 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068077488 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09506009 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357003736 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068123652 seconds)
  done (took 16.105481596 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07152392 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.142935674 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074508945 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083248111 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.099394082 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069216253 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.097550304 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070088479 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122816915 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067151496 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112608113 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068776629 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071135509 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.097513788 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087325841 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.066954226 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068076115 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067456275 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.097237802 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069166258 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085034053 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095947154 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068600517 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094752976 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06923228 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078381502 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09632286 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068122322 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067392699 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097821679 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070848154 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096647431 seconds)
  done (took 3.931342759 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115354843 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.15204768 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074326026 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.129461133 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11234367 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098442638 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.141484506 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.121494712 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.154853625 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068127758 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111417484 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06870076 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127482316 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069712798 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08715582 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.096466988 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069139884 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.095091749 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069613219 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068278833 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.114994601 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068304887 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067487225 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067088872 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.066663158 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.110217462 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068361496 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067644286 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096527243 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069485211 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098348132 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069438126 seconds)
  done (took 4.225220006 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073021436 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074529871 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109384074 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083989944 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068265549 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.099893481 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072492327 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.09570114 seconds)
  done (took 1.914699487 seconds)
done (took 27.40940412 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079821456 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068421231 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.09926574 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081086438 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.07144557 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.106864211 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067110418 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.100594115 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072978632 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072550119 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.102528962 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068027896 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070139815 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.09528505 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073417994 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.066839543 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.108572961 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.070913406 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.106515475 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079167423 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069578855 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.101216985 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.07394198 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.105646167 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078657999 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.104461073 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078912658 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.071898861 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.096182508 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070670595 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.074825362 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.111356451 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068212614 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.10654222 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.06886108 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.066997163 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.099684151 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068065767 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.105528096 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.078100005 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068439773 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.074442819 seconds)
  done (took 4.729107372 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.088186459 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090240399 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.113076103 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061660951 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066236173 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.093471947 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087918816 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.086600211 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060549094 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087273012 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.082913609 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060123806 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062018077 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053203561 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.087736485 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057432194 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061461428 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.083188515 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060003666 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059624974 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057092026 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.081522589 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060772136 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062024097 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.08392794 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.06322368 seconds)
  done (took 3.152956517 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075844058 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083480215 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.115769357 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.125938714 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.132401538 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076198977 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.107011668 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.088310666 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.112633395 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068174689 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070764573 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.121635771 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08824337 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.104110191 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068373917 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083155678 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.119882713 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068792381 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.101431861 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091628972 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.082700175 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.106654795 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.091498325 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.108790132 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067077195 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.068614337 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.069206794 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.079150845 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.101408724 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077503723 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.07053556 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.100183559 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068921198 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.10542238 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071580538 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.06821149 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.118030764 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076874023 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.105488458 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068831558 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070273503 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.097110281 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089180884 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.140821349 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067711725 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.072799695 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072885221 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.074510651 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.097048556 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085987403 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077293772 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.096692785 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070603691 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06546726 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067135998 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078537947 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.098743078 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070751822 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.07513323 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.099663318 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.08010965 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.097216147 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083724254 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066029188 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.103856803 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.06684436 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068702773 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.095330785 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092147473 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095983682 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.10892749 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.096267395 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069331616 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076185582 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.103370247 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074169104 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067414799 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.111995549 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077694416 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.098328498 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077026718 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070768401 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.099267353 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.089016234 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069231023 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068210882 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.06688453 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.071840861 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.068892984 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.067363938 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.113721177 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067890096 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069136618 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.113603895 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067573484 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.097338283 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074059922 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071359324 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.096699793 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077921243 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.10061423 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068819368 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.075842198 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.096457664 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070811474 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.104884111 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075129048 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066100658 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.100240697 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073834418 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067974192 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.097791597 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070957879 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.067905654 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.07520437 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.072171043 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.10262901 seconds)
  done (took 11.2447454 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.185528314 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.151846098 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.099356486 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.173404009 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077640585 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.077413688 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.175111765 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.123038827 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067902478 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.06752956 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.067477936 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.113316198 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.137664927 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.152040959 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079072048 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.097297091 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.082915484 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.14639099 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.178461668 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.141522535 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.113971203 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076859403 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.099131046 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069428184 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.07401883 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.112088602 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090026658 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.104830408 seconds)
  done (took 4.37990161 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082164603 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.127567712 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075129269 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088180329 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.120278316 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.066933891 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.09851238 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070241627 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.078717473 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.10841582 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066760398 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.102167499 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074185602 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.10055554 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069713289 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.073551723 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.103604329 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069385923 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.069927771 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.102369389 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077155845 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.109611567 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.07184706 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066165436 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.103300275 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066591206 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.093314586 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084142934 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.096247204 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.089530733 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.064541012 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.104041628 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081221384 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.096801105 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068351683 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.066801793 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.095229052 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067659521 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068366713 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.095338931 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066358245 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.056854454 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.095617798 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080427665 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.101731014 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.05702698 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071706659 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.101567642 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.07319072 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064934355 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.098937781 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071032754 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070227804 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.103275497 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073079333 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.099851065 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070265104 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065461627 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.102883945 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068065297 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064876981 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.093794478 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.07328538 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065595962 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.105145914 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.07240377 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.093633767 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068921832 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.06963128 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.102350692 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068989905 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070688155 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.094359826 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071416706 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071593896 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.098942826 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069001019 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066001752 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.096728042 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068243425 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055296094 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.096826109 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053598927 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070988102 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.095686122 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066675197 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.094157412 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074373294 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079233732 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.097892641 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.074093537 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.096488001 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067957397 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070640831 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.088378503 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071492858 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.081681846 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.111908052 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066651387 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.094159613 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081735622 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.099412069 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.06829214 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.05670794 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.101967315 seconds)
  done (took 9.866852523 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.095158514 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.086466937 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.098259441 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.082952128 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.119098181 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.088222315 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074091066 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.102706372 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068819803 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.107064974 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074449158 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075494634 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.096604202 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077841552 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.092486678 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.105094963 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069822171 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.104943699 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072780764 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.100257651 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111397864 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081626513 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.103281372 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068857056 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.072713152 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.109702357 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089662289 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.108352815 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.079451167 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.075209377 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.109256082 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089858601 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.103099005 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.072692308 seconds)
  done (took 4.323111551 seconds)
done (took 38.927569972 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.33851433 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.550869375 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.311267889 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.324145465 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.365019469 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.339182815 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.320932395 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.30534952 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.734169286 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.30930078 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.530732993 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.01900704 seconds)
done (took 60.702659255 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.30882053 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.442939467 seconds)
    (2/2) benchmarking "String"...
    done (took 1.573115923 seconds)
  done (took 4.257258261 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.730496882 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.193012392 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.556305779 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.299278896 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.310302818 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.602549821 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.994746854 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.168744046 seconds)
  done (took 28.362742361 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.309145384 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.673589269 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.732617731 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.726071905 seconds)
  done (took 18.679926145 seconds)
done (took 61.579742733 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.315702467 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.352083996 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.327181105 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.28541937 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.424694799 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.320768364 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.577495805 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.502954805 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.298144851 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.285091478 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.298534524 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.301307006 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.308691393 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.56742631 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.30124746 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.302003452 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.345747893 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.73780766 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.693871426 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.329147541 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.313982892 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.376432832 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.315401577 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.306118533 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.331670065 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.302877575 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.303323348 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.311107747 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.493251539 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.305938888 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.395507909 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.719724831 seconds)
  done (took 194.588139489 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.302588963 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.261426954 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.382349852 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.328865887 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.678942812 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.499736339 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.437212611 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.756504861 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.317712075 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.32571826 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.53709575 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.301710682 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.592094066 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.267501504 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.312513886 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.302226886 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.532415902 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.585152504 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.322096216 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.576793856 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.329739401 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.41878553 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.340331091 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.50024291 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.319788868 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.347088194 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.318721914 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.30930916 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.489709766 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.469099495 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.336833821 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.3182998 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.857355705 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.157707583 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.299972485 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.316691684 seconds)
  done (took 152.994028057 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.576012751 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.299865118 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.298843663 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.299673051 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.328566976 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.300367218 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.801991004 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.804474797 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.792901729 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.664621647 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.362648456 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.504804015 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.303214841 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.389264469 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.313429977 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.301774038 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.31386783 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.322835424 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.299882539 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.299274277 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.801568455 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.313298451 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.329074302 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.306800771 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.301017737 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.328583777 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.690712838 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.301598802 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.32782451 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.611458028 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.345348536 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.299369192 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.543197234 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.646713301 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.30098994 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.404994321 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.301149994 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.328958478 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.299829869 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.563969245 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.299639991 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.301582442 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.303815734 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.823803712 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.298620032 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.798608447 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.303315658 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.14373887 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.299649449 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.299537611 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.87550872 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.638413953 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.300845108 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.298883082 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.303577505 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.300957223 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.300739125 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.328682848 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.807686665 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.395178204 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.301052961 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.301999675 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.325723257 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.298755028 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.440802363 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.300091751 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.18432588 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.350392236 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.517032719 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.777005722 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.301355215 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.387275446 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.41407852 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.298498033 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.297952605 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.299519328 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.299522392 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.401659626 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.298300744 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.661517802 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.304657242 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.30105876 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.298517069 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.354918607 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.388932391 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.298419072 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.299059389 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.548468288 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.300125766 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.297843425 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.297319401 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.947518232 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.38719019 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.298365058 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.299045959 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.298350107 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.662800442 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.773355929 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.401740784 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.300714511 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.865580122 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.299901473 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.676901988 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.763368165 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.837213989 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.300171439 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.402033686 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.303277785 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.299083653 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.297755989 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.328976012 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.299264274 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.358976929 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.299038481 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.69213096 seconds)
  done (took 356.554245381 seconds)
done (took 706.953915337 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.98100112 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.977073424 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.076364181 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.971137203 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.954957536 seconds)
  done (took 11.19565827 seconds)
done (took 12.435873205 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.473000554 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.478260016 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.356137947 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.478008838 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.329109564 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.492711617 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.456331355 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.321359878 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.397300583 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.375263534 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.397088283 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.35022628 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.323774551 seconds)
  done (took 19.467315878 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.601615592 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.600046871 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.364000317 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.601126504 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.340631391 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.606463902 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.490349771 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.498282058 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.485699698 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.312870946 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.311076012 seconds)
  done (took 17.453505684 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.615559929 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.606593907 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.365785386 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.610926536 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.340274302 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.604550493 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.491407273 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.499561948 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.487563996 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.31284282 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.313190162 seconds)
  done (took 17.487051782 seconds)
done (took 55.64796499 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.309316855 seconds)
  done (took 2.549830534 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.340022673 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.49871149 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.324092951 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.309817399 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.312069931 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.309117486 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.312736839 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.309673183 seconds)
  done (took 11.957218648 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.304048587 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.306620329 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.307261354 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.305596336 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.306204951 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.304434997 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.306186181 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.304588493 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.302858521 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.3015315 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.303037162 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.304578069 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.303776358 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.306022878 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.308378043 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.30634094 seconds)
  done (took 22.122616866 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.307433825 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.302682957 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.304185176 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.30697711 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.304993219 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.306298072 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.307464493 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.306757883 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.302851748 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.304884977 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.307329283 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.30627467 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.30708851 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.306652533 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.307589964 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.303801759 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.306611463 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.306476788 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.311727096 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.301706903 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.306460872 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.306316011 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.307751851 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.303632475 seconds)
  done (took 32.587391204 seconds)
done (took 70.457092281 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.170162836 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.76514408 seconds)
  done (took 9.169898382 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.308357562 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.30699228 seconds)
  done (took 3.858407277 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.309042391 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.306008483 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.310115233 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.307841233 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.308879906 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.310158689 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.307541216 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.307072712 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.305815008 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.310958049 seconds)
  done (took 14.322988161 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.306666581 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.309990093 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.307793742 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.308794925 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.31096231 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.307568958 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.311500599 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.310318936 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.310832042 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.308018827 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.306651592 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.308444691 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.311170023 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.309029784 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.311255511 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.308762171 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.308390528 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.307085171 seconds)
  done (took 24.803490344 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.311270072 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.310917516 seconds)
  done (took 3.865852117 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.309687738 seconds)
    (2/7) benchmarking "second"...
    done (took 1.308504133 seconds)
    (3/7) benchmarking "month"...
    done (took 1.309689953 seconds)
    (4/7) benchmarking "year"...
    done (took 1.309030343 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.308823797 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.309326049 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.308873489 seconds)
  done (took 10.403703091 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.313226205 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.487687834 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.568111145 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.995956335 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.31384966 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.31593252 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.259377189 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.314824547 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.318031505 seconds)
  done (took 15.130735758 seconds)
done (took 82.796233703 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.286148155 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.304355105 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.263415168 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.325307352 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.31920453 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.647709609 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.328788774 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.563757765 seconds)
done (took 39.281000322 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.312697828 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.028446483 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.034023437 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.30561017 seconds)
  done (took 11.614892995 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.300431315 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.168829721 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.298628099 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.289407587 seconds)
  done (took 18.304535165 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.889765837 seconds)
    (2/2) benchmarking "read"...
    done (took 1.625870858 seconds)
  done (took 4.763164062 seconds)
done (took 42.241557296 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.311368471 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.313242257 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.313181088 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.310837499 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.313166503 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.308657734 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.308922354 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.312421592 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.311407329 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.310181076 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.313655977 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.312794658 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.312335149 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.312627258 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.310980158 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.309932213 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.31356867 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.310458448 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.308756443 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.311444541 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.313584951 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.310975215 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.31072178 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.312556012 seconds)
  done (took 32.726229648 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.312984332 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.311758595 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.312906457 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.314051488 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.310590348 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.313391031 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.312348948 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.311440249 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.313775892 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.314039459 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.311143047 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.311588755 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.314115732 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.311549102 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.31356424 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.311436565 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.314278569 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.311175698 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.314380649 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.311935414 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.313874014 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.311905916 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.312590025 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.313415046 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.312660155 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.311018858 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.315637222 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.312466715 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.314641438 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.312373052 seconds)
  done (took 40.630227495 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.320101053 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.322516216 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.313919002 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.315397081 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.315533554 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.314623627 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.314465025 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.314891599 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.315573403 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.314936221 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.315444069 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.314927065 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.314936497 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.315953611 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.315798966 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.315117326 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.315508905 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.316241397 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.315989473 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.316424427 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.315995011 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.315533819 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.316385277 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.31617853 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.315930866 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.316171055 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.316961735 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.315924164 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.316321301 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.316754903 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.316588151 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.316390447 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.316813979 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.316678939 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.316516663 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.316719015 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.321208741 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.322931555 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.317577727 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.316778614 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.316151235 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.3163564 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.316848844 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.316359775 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.316961981 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.316504592 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.316940249 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.316137704 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.317025965 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.316520093 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.316846298 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.317587119 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.316943593 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.317638154 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.317583792 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.317603061 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.317259504 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.316720307 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.317046642 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.317421667 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.317342373 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.318415775 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.31759333 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.317715607 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.319172063 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.3182657 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.317775964 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.317962405 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.317957897 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.317980506 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.318058303 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.318891244 seconds)
  done (took 96.065429954 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.319130515 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.315384984 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.315101148 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.315312214 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.315841076 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.318468674 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.315262828 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.318397566 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.315279172 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.31849867 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.318882071 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.316390712 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.315519005 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.319473697 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.318199979 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.315857841 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.318757707 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.316732827 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.318676033 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.319963952 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.319142417 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.316294877 seconds)
  done (took 30.233670387 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.320017727 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.320098019 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.316618821 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.319043091 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.317946089 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.31959653 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.319840705 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.319570233 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.319397386 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.317057674 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.317364473 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.319993572 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.3171821 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.317693786 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.317009919 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.31695635 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.320657357 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.317400552 seconds)
  done (took 24.987786105 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.317645492 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.317805918 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.320443659 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.317232406 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.317854409 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.320353756 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.318108968 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.320069074 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.32026536 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.318518584 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.319674012 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.319976105 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.320325211 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.318385457 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.320074564 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.317938527 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.320599417 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.318039932 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.321287338 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.316175425 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.316944075 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.3187886 seconds)
  done (took 30.271036753 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.319086638 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.319119038 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.3168333 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.310986235 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.30926366 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.311947149 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.311305188 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.309223212 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.311308699 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.311374146 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.310479572 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.310385933 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.307642256 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.308609612 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.307593126 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.30807549 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.310431794 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.308817224 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.30971604 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.306436202 seconds)
  done (took 27.472857562 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.311889828 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.314194246 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.31428125 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.314591863 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.314576898 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.313993233 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.312301736 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.312645966 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.31328327 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.312231914 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.313403035 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.312733647 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.314725526 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.30952909 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.309900573 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.30925699 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.309538902 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.310027415 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.31013362 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.309854745 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.309641369 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.306374006 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.306943175 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.306984153 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.306588133 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.30796782 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.306823317 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.308132362 seconds)
  done (took 37.947723229 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.300181229 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.300473863 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.297356445 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.297909289 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.298540216 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.297740973 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.29920629 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.293724421 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.296507176 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.293263206 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.296654957 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.296790282 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.296832244 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.296499246 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.297106307 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.293428256 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.293690795 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.291022869 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.291198982 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.290793691 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.294394766 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.294078527 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.292403442 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.287251631 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.287869725 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.29008995 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.288278818 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.287733363 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.290769239 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.289901766 seconds)
  done (took 40.058479814 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.305461785 seconds)
    (2/2) benchmarking "in"...
    done (took 1.305637673 seconds)
  done (took 3.835519116 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.284749461 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.287706984 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.287918868 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.287022271 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.282407954 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.28515458 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.28465633 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.282316204 seconds)
  done (took 11.506204184 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.285473357 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.285480367 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.284411593 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.281167786 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.284574695 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.283776665 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.29065059 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.297989618 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.28627908 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.283316855 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.286754861 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.2876066 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.284576397 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.281625595 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.280304106 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.282418025 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.279071914 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.281660797 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.280664858 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.277972855 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.280148455 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.280430132 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.282537081 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.274654289 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.279312515 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.295637595 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.282348556 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.274947148 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.274701031 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.281027998 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.275817962 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.271946582 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.278372158 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.278326269 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.272313423 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.276006507 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.284924238 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.293155417 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.284744166 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.275741031 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.27352893 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.270183142 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.273267455 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.274661642 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.273068292 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.273957501 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.271653772 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.268362996 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.272446031 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.274378686 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.274062414 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.268812876 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.267270761 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.278527111 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.272109707 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.280572435 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.288340116 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.272835824 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.276731827 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.284326559 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.285751079 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.276060418 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.272028848 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.272096224 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.27870898 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.290086262 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.27985187 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.283423052 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.267139158 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.269763792 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.282461797 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.284950669 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.279455591 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.273466649 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.272867741 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.270152597 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.272187052 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.270367351 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.281836591 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.291551844 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.272932788 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.273248096 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.280127803 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.289994455 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.270087908 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.273530261 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.27325773 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.274151314 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.272153973 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.285053521 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.288884196 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.271304468 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.271570951 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.271680832 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.275089243 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.274938068 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.271056096 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.274352282 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.268942285 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.271759141 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.275158475 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.275462156 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.279607805 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.274633224 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.275201811 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.284535169 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.272300083 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.2718736 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.284919584 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.272150615 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.274557705 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.272731204 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.279588062 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.269509693 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.274444107 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.279991162 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.275219277 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.273984441 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.274961389 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.272541025 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.281748189 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.296704667 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.272687376 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.272870571 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.276967924 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.284976938 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.275595739 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.278178113 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.272973839 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.269827128 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.269694276 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.274789921 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.273057384 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.274340407 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.275520843 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.275660623 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.270729137 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.273461207 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.275506777 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.275086665 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.276783158 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.275295483 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.275207815 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.277800992 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.276019005 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.276178686 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.285498882 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.27451588 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.275684032 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.276483265 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.272034259 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.274212543 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.278736405 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.277540902 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.277060872 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.276908557 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.274279388 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.276333608 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.274398061 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.275968065 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.275117392 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.275257281 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.281527958 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.276897736 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.281108625 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.274955926 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.271557044 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.274837908 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.27479283 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.277633133 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.275214611 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.274285082 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.27815783 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.284087134 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.275146589 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.278868695 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.281976507 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.277376299 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.277881498 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.27790806 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.278785818 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.284503954 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.278911975 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.287692419 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.278917362 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.281242463 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.278831772 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.281616329 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.278824153 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.28142066 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.282770482 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.285832697 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.293843441 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.287419372 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.281859943 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.281927709 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.280385564 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.28505934 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.287237153 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.281748219 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.279372304 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.282330122 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.279205028 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.282239588 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.283057734 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.28254429 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.279794212 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.280654701 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.27950327 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.282428586 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.280951881 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.281336205 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.282713946 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.277045357 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.279594451 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.282619579 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.279496532 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.277921808 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.279659171 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.279953758 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.280268891 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.282784311 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.293026128 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.278079558 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.282069449 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.281911266 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.281429389 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.27963142 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.281090562 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.284368041 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.281774505 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.290950033 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.297921008 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.282855848 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.291189473 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.297403431 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.280677997 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.28639656 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.281369926 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.278109364 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.284336939 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.287194381 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.280625148 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.285012621 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.283674538 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.281859654 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.281425111 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.293214937 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.279869945 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.281129781 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.282475287 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.287440064 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.279543 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.283599794 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.284018284 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.283489337 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.285651946 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.282710326 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.282833005 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.286085036 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.284640822 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.285059518 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.285202283 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.285473133 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.291754024 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.292792411 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.284704775 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.286984848 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.284463082 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.286333096 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.284124161 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.284668333 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.28416229 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.297832947 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.293401184 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.294139743 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.288693776 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.28243257 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.293243749 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.284711327 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.288685856 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.283753864 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.285180751 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.285423711 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.282356888 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.281049909 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.285085752 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.283394029 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.28507474 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.285412825 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.286793323 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.283965836 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.283431284 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.286541113 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.286550235 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.285003861 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.284357828 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.28407971 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.289419504 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.287489475 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.284856103 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.284434587 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.294460916 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.300994066 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.288994436 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.284206903 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.285892674 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.285522131 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.287945787 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.287335678 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.287835092 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.294024014 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.28744245 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.295389708 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.28578299 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.29811565 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.287808358 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.288436792 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.294045469 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.282725988 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.284516544 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.287648102 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.287520075 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.296265007 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.303636055 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.286140469 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.291560906 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.28929636 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.289419138 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.287636688 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.288000217 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.285923356 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.289073494 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.297585567 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.307193848 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.289695566 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.288234884 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.283350099 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.288531319 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.28632129 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.28619379 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.294622864 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.288700478 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.288399285 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.2861525 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.288565817 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.285600829 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.289601094 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.286860028 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.283764707 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.286447255 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.297040669 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.303200076 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.292525183 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.286958308 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.302339276 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.289855523 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.297755502 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.305335908 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.288372214 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.28857864 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.287243869 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.291950011 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.288705195 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.291311315 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.289923503 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.288294266 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.289878738 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.290749746 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.291527505 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.287719885 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.290936873 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.289438137 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.296855133 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.309563704 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.289551489 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.291838697 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.284773076 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.289135663 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.294563543 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.291056452 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.287902729 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.291096319 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.297276743 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.294596401 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.290464591 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.290830625 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.290566185 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.291742772 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.288478518 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.289134179 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.291549527 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.289065477 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.292100612 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.291483312 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.297407836 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.288446355 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.289871436 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.292763657 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.291373378 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.30315021 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.291604528 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.293409113 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.291426594 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.289089999 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.2905708 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.290199349 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.292133629 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.291157574 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.289878161 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.291836721 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.295539367 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.295563867 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.294740208 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.290533144 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.292847321 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.291735252 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.291908774 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.293029704 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.292631795 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.293816429 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.292338823 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.292604225 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.293684851 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.289534232 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.290000086 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.29171158 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.290353545 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.293259242 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.29680108 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.292766278 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.288451499 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.289646389 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.289464611 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.290245172 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.291715355 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.304224607 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.292718338 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.298920172 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.296434776 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.295364329 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.290564284 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.292138736 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.297263162 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.288223027 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.292418836 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.291216544 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.293309935 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.288892376 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.291220548 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.291325831 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.300565267 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.290364089 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.288383389 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.301409126 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.30933337 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.290043336 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.290416785 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.29172359 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.289397588 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.28523301 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.29018945 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.2862568 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.297842969 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.307800096 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.290176046 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.290241875 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.285498875 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.288727022 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.294507099 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.286623858 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.287933483 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.283434405 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.286820206 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.28895651 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.285903442 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.283739461 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.289793761 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.286851023 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.288058877 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.291965043 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.282595163 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.288897789 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.287753538 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.28654787 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.288978768 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.285402966 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.282104309 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.282286443 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.28704498 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.287586237 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.286366261 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.289797567 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.286837935 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.286827111 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.28485537 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.287377986 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.287395167 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.293329796 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.291775747 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.283516254 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.283676627 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.286153463 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.288883187 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.28655293 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.286959493 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.286373951 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.289047326 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.285445304 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.286475436 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.28466701 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.286322005 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.303094484 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.303174714 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.284946588 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.285257566 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.292778493 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.283987138 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.281500513 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.284398344 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.287872379 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.286561342 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.292835176 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.286690336 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.295626922 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.299030018 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.28427294 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.286646536 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.285343167 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.290858224 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.289364147 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.286966921 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.285498397 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.287662697 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.301346794 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.283307417 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.291996549 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.311963524 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.299629315 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.287819122 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.285640804 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.281879919 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.285229405 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.287525215 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.286359967 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.283625803 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.282400947 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.287243479 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.283452495 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.288661459 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.283645791 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.281982551 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.281937141 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.282802631 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.286374686 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.280018051 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.283479336 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.281407488 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.284592297 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.284324374 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.28458332 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.284336764 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.298796319 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.294248123 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.282882683 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.285669193 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.280089977 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.288718192 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.285216797 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.291383736 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.2898004 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.286017884 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.285796629 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.284805796 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.285518777 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.281072914 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.284293335 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.284703277 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.282867205 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.281052713 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.299142381 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.293374989 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.293327611 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.285383089 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.286797027 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.283992173 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.288172302 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.286254377 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.285474794 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.286808448 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.284744164 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.288147904 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.283714366 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.282808116 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.286843649 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.288770671 seconds)
  done (took 767.038188783 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.281035755 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.279847101 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.280584888 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.280019984 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.280756673 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.277984695 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.278350192 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.278582163 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.278675169 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.278519087 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.278587549 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.278845886 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.279447389 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.277810303 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.277838098 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.277241171 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.278681794 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.278755942 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.277643161 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.27825994 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.278669125 seconds)
  done (took 28.077116338 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.281450047 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.278577633 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.277996852 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.280884735 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.277648175 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.281196992 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.278057117 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.280773028 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.281125307 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.279087622 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.280993905 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.281551827 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.278359871 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.2789849 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.278738048 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.280398606 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.281139356 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.279546352 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.281901321 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.279191476 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.281508665 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.279141389 seconds)
  done (took 29.377668351 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.284355741 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.284823674 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.281302848 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.278708857 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.281922811 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.279135998 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.284790716 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.282096849 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.28166308 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.284592981 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.282148734 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.283026271 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.288821397 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.286530028 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.286575638 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.283198028 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.427427822 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.28499475 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.285287551 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.286104007 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.279854498 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.291171321 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.280701597 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.279786726 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.282569851 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.285542965 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.28267646 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.282176297 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.285345933 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.284176299 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.288932095 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.283234639 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.283144554 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.286464358 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.284664499 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.285309448 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.286838266 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.286215999 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.280905472 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.283484944 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.292343654 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.300213352 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.287376212 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.293675995 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.284065763 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.284045836 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.286648058 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.2928544 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.282310224 seconds)
  done (took 64.324877052 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.284318225 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.284105694 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.281724468 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.283776883 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.283674025 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.284327272 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.284693119 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.283777352 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.282886886 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.281342832 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.284166828 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.282269831 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.281941393 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.284037564 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.284499528 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.282244035 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.282635244 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.282392096 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.282852186 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.282843499 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.283120717 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.28511436 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.285859065 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.282875657 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.284794268 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.283084325 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.283140551 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.285174958 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.283719804 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.282711962 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.28680205 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.286031351 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.286307451 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.2843212 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.283590095 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.286032372 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.286564283 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.283827495 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.285759583 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.283006639 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.286049881 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.28617206 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.28592461 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.28600988 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.283269004 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.28287259 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.282845076 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.283332187 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.284424763 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.285911086 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.286520555 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.283712348 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.285965692 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.283581405 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.286098577 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.287170541 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.283891659 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.283621886 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.287534382 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.283681498 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.283812308 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.286765954 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.284457823 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.286046583 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.286161916 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.284309057 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.283706075 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.286787768 seconds)
  done (took 88.560577674 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.2899605 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.290140426 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.290140929 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.289771163 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.290435809 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.290086572 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.290747014 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.289610128 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.289801197 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.290109431 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.289919732 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.288433018 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.288987095 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.284348852 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.287038565 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.286684075 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.287065192 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.286972937 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.287161083 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.286901071 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.28752131 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.284945348 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.285542412 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.285520204 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.28550711 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.285040047 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.28554945 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.287184956 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.283389287 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.28363468 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.284263128 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.283122496 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.282930629 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.283682623 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.28451436 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.284520038 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.282254338 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.282625404 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.283930399 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.283060285 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.28355972 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.283164635 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.283092863 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.283638733 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.283267279 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.283837228 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.283299834 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.283936808 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.281362808 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.283242378 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.283443965 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.284188736 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.282549343 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.283499205 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.28427865 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.282082461 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.283746055 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.283984893 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.284315041 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.284040545 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.284000096 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.281935835 seconds)
  done (took 80.923784664 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.281605719 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.280526474 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.278749123 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.278684605 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.281710939 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.279634193 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.281224108 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.281315502 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.281759553 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.281323882 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281549473 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.279490756 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.278996644 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.282267125 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.280299304 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.278786075 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.279595273 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.278935291 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.282230946 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.279397593 seconds)
  done (took 26.827405389 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.279880513 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.282396747 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.280034263 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.280249218 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.282142519 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.280080065 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.282731648 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.282385349 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.279838222 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.28236745 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.2828277 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.282702468 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.279902385 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.280157329 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.282604252 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.280309234 seconds)
  done (took 21.720476594 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.28065247 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.282826936 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.285776743 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.285207735 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.280566816 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.280774939 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.283453747 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.281075514 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.28073113 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.283225013 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.283394391 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.283511674 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.283466198 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.286194041 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.281773941 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.284209605 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.281720862 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.281298282 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.283923648 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.286499643 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.282047274 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.282051463 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.284426481 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.283903738 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.281675494 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.282567028 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.282481217 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.281558097 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.281932616 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.283795635 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.281993339 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.282517192 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.281888074 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.282379986 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.287744324 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.282043796 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.284951786 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.284357795 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.284208609 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.285260949 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.284913778 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.282349617 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.28467415 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.284808733 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.282215065 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.284973557 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.282538653 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.283220045 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.282987916 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.282507941 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.28438899 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.287570698 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.285003815 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.28535819 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.285490538 seconds)
  done (took 71.808798108 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.286035606 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.286221356 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.282015588 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.285072313 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.285563618 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.283359101 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.285834976 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.282892468 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.282936167 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.285571127 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.284241907 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.28653206 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.283579047 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.286311836 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.284013789 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.28593103 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.283859282 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.284179264 seconds)
  done (took 24.347401513 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.284939074 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.284486025 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.286051449 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.283913141 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.284190619 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.286595706 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.283682997 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.286770574 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.286882441 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.284827857 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.283750694 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.287217154 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.28747781 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.287448604 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.284952303 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.284217406 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.2881016 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.287044455 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.28490986 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.28447531 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.28792025 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.287497053 seconds)
  done (took 29.511539749 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.286294869 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.286487847 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.303250455 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.328129468 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.314010659 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.286728501 seconds)
  done (took 9.029628296 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286254303 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287237754 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.285607575 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288379696 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288172003 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285284998 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285031614 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285347891 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288110582 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286468119 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285962037 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287411665 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287770691 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286602302 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288369519 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28873818 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287163987 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285496114 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286721683 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28928977 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286232076 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288986909 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286013895 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286197783 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286233492 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28585269 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289048162 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286772298 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286407529 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289248836 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288972012 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287017345 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289566385 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287108895 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290106973 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289265448 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287070868 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28991836 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289763804 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287203008 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.289495332 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289686538 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289871942 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287293223 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289424733 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287725592 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287420613 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286872074 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287022753 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28982757 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289546998 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287196969 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289954335 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289786754 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289840217 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29108084 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287673273 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28765215 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290098686 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287714993 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288213353 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290671543 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288059722 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288778505 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290529292 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288455982 seconds)
  done (took 86.23320479 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28876417 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.288433358 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287990983 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289677204 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288372882 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288766745 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288956205 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28827703 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288485479 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288984987 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290672303 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289089277 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288922673 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288345683 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288900495 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289200724 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289077307 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288927008 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288968064 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292212846 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289082414 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289105743 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289588971 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289844815 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289309101 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292290358 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289372595 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289045237 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289031265 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289889259 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28952005 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289717355 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289816215 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.289000977 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289667804 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289507651 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289715752 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289880895 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290527521 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292416358 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.2896732 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293018003 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290100637 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290734051 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29110399 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290587187 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290515463 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290279357 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29071211 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290548569 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29161783 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290479773 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291570239 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290606985 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291471466 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290413001 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291066239 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29129292 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291486437 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29347967 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290917694 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290868834 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293644541 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29076039 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290771922 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291328598 seconds)
  done (took 86.376190369 seconds)
done (took 1791.138813911 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.285252611 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.34617955 seconds)
  done (took 13.861434288 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.456323381 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.408067409 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.292501471 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.33512593 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.293757359 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.292141816 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.30965409 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.292871282 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.292573408 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.293353768 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.2927508 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.481277924 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.345153674 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.293363835 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.29384657 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.385834378 seconds)
  done (took 42.591589512 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.326986695 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.298992899 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.413334466 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.313591309 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.330281062 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.48168677 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.35092285 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.301082035 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.456572155 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.343848559 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.765178101 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.331772496 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.298714221 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.345161236 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.318096945 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.482195106 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.538763559 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.770933634 seconds)
  done (took 29.700480038 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.69913669 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.317347976 seconds)
  done (took 9.249470092 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.332909702 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.339743779 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.342363603 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.333836036 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.304818324 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.354008738 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.354238879 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.358628928 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.330779363 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.289293319 seconds)
  done (took 64.57591198 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.317326608 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.299471767 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.298695792 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.296876313 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.290747724 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.30545777 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.29833222 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.294016899 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.51672739 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.414831448 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.319016033 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.304134757 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.298560283 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.300355185 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.296276183 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.332228973 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.431475857 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.295638182 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.29567323 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.30357061 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.298359604 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.38361033 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.33689069 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.298714835 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.41287197 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.543736631 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.303721957 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.304236773 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.427008541 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.29645445 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.298724169 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.299740109 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.300902751 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.856512986 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.776164222 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.305827563 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.321027169 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.306893029 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.296947786 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.408120045 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.299922399 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.304926532 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.291376234 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.753921273 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.450436633 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.404667844 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.476658777 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.30218039 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.30075329 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.356233632 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.300036665 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.300933264 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.327333283 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.053850453 seconds)
  done (took 108.445395027 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.338644028 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.780687475 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.461299132 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.309250204 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.797732771 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.739510237 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.29607108 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.549824528 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.342281535 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.757937216 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.574036462 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.635069786 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.295664676 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.293609308 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.296957214 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.293862966 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.545240185 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.586711651 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.296525444 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.297618865 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.34496821 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.788644535 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.520894462 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.491800601 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.3333032 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.727277637 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.517815412 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.633392189 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.296582846 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.294018655 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.570893391 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.297923845 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.297733528 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.294299802 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.561013211 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.620374564 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.599933588 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.294551954 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.306359086 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.29862299 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.328393121 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.724604382 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.607980998 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.532069118 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.656473138 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.741328136 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.29514156 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.294081745 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.302792439 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.50637448 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.539196106 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.773601727 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.521370045 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.309038359 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.559914663 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.295986966 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.3828959 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.756283674 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.626490982 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.627907361 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.298664035 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.29733995 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.294717476 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.822724532 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.299078678 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.614076712 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.612821511 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.299264697 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.615813697 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.619834675 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.628708669 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.757760243 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.340138252 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.301646485 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.336828672 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.792115275 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.573482097 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.753696751 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.335573537 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.296609954 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.598916922 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.299164169 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.573311949 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.833229405 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.768147757 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.34953887 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.319436186 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.297875941 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.754136842 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.752005969 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.544379194 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.658412366 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.575166255 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.322770136 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.296964215 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.297322726 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.318969412 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.532929156 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.310268104 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.659975809 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.754861786 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.076437926 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.343268942 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.823243657 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.534185092 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.310962871 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.297265276 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.297964318 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.517646976 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.369525615 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.315161291 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.299464607 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.755645066 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.166185326 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.444598378 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 4.998387254 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.57472631 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.298902494 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.774214928 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.301018639 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.75698273 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.34217163 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.821303173 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.647480503 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.357036599 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.519935683 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.660390526 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.310736221 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.774549043 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.820827208 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.521876715 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.767013267 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.056899062 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.302402354 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.802916636 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.339229004 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.317837119 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.482525554 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.32117747 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.560648599 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.315971527 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.780507525 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.336125001 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.57058123 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.495782237 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.786923221 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.355751302 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.577143431 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.327753679 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.447088446 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.317364906 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.306222592 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.496008095 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.498126471 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.301651679 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.842705826 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.299969335 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.462061126 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.827326072 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.337943259 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.580498792 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.300421465 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.301488662 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.605884306 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.339516411 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.026610661 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.300812425 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.575514513 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.298296173 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.753405146 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.300312644 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.821958064 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.523102036 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.319345494 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.300917928 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.101299729 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.300894751 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.441509295 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.474568973 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.989825242 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.301441863 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.731687032 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.301373696 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.536059331 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.312892695 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.300757571 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.652764543 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.308076615 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.304648221 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.340873048 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.302787566 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.301775753 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.741630707 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.341914668 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.027787714 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.455231594 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.777736466 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.611651605 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.777944895 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.361660131 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.321553398 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.781160317 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.358248953 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.58168551 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.302311014 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.341996994 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.758097298 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.304678438 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.746370104 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.799751692 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.322742746 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.564954113 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.306904035 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.407177043 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.30258914 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.546550811 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.624391366 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.303383876 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.301935008 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.522948989 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.540204586 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.519755115 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.319275495 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.332835141 seconds)
  done (took 842.238255337 seconds)
done (took 1111.893650084 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.30507712 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.306683782 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.29166633 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.305035118 seconds)
  done (took 26.455523895 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.311885731 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.31031521 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.313419426 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.308717361 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.311698409 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.309719507 seconds)
  done (took 9.112749657 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.350592213 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.305449914 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.30596306 seconds)
  done (took 19.209425459 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.519713015 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.538257866 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.656407669 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.401249725 seconds)
  done (took 10.362246043 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.313797372 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.313819683 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.313847606 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.312412949 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.313368811 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.314864295 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.311737764 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.312366762 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.31464062 seconds)
  done (took 13.066872691 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.922104712 seconds)
done (took 84.37624735 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.358571727 seconds)
    (2/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.304236504 seconds)
    (3/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.333554987 seconds)
    (4/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.303005068 seconds)
    (5/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.331055791 seconds)
    (6/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.432052363 seconds)
    (7/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.717981809 seconds)
    (8/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.541465826 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.469598277 seconds)
    (10/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.654044019 seconds)
    (11/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.366972322 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.111440004 seconds)
    (13/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.892023463 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.550773802 seconds)
    (15/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.783328802 seconds)
    (16/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.455815981 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.345101501 seconds)
    (18/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.307535702 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.330567568 seconds)
    (20/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.82316429 seconds)
    (21/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.64383613 seconds)
    (22/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.690193545 seconds)
    (23/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.308516281 seconds)
    (24/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.015956662 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.191756836 seconds)
    (26/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.529577779 seconds)
    (27/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.875837159 seconds)
    (28/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.767886252 seconds)
    (29/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.544176124 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.613195666 seconds)
    (31/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.646440685 seconds)
    (32/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.435291728 seconds)
    (33/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.117277602 seconds)
    (34/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.883781789 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.709526629 seconds)
    (36/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.053343109 seconds)
    (37/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.31844208 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.412666022 seconds)
    (39/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.599749687 seconds)
    (40/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.299357007 seconds)
    (41/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.416479927 seconds)
    (42/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.402881901 seconds)
    (43/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.332831914 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.355518599 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.167198309 seconds)
    (46/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.487037584 seconds)
    (47/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.309020891 seconds)
    (48/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.321181379 seconds)
    (49/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.395128059 seconds)
    (50/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.719791813 seconds)
    (51/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.302853072 seconds)
    (52/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.65420622 seconds)
    (53/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.740028142 seconds)
    (54/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.670187703 seconds)
    (55/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.334311027 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.416252405 seconds)
    (57/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.003676556 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.58997129 seconds)
    (59/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.388777305 seconds)
    (60/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.338741765 seconds)
    (61/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.613367736 seconds)
    (62/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.895224218 seconds)
    (63/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.223268267 seconds)
    (64/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.46483857 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.364995186 seconds)
    (66/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.910745019 seconds)
    (67/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.500907304 seconds)
    (68/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.500975368 seconds)
    (69/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.603393044 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.696169311 seconds)
    (71/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.31699298 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.384349381 seconds)
    (73/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.385143792 seconds)
    (74/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.801385206 seconds)
    (75/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.310450977 seconds)
    (76/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.325261172 seconds)
    (77/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.328344854 seconds)
    (78/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.413135368 seconds)
    (79/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.915934263 seconds)
    (80/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.657742508 seconds)
    (81/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.303549844 seconds)
    (82/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.337307057 seconds)
    (83/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.439215888 seconds)
    (84/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.335144639 seconds)
    (85/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.040244351 seconds)
    (86/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.484925635 seconds)
    (87/309) benchmarking ("sort", Float32, false)...
    done (took 5.284518753 seconds)
    (88/309) benchmarking ("sort", Int8, false)...
    done (took 4.324464621 seconds)
    (89/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.830452027 seconds)
    (90/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.311186475 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.136427001 seconds)
    (92/309) benchmarking ("sort", Int64, false)...
    done (took 5.442403295 seconds)
    (93/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.294059729 seconds)
    (94/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.852872669 seconds)
    (95/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.337761963 seconds)
    (96/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.516073701 seconds)
    (97/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.39095372 seconds)
    (98/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.890212829 seconds)
    (99/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.337208028 seconds)
    (100/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.595256804 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.078158892 seconds)
    (102/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.307073684 seconds)
    (103/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.580567968 seconds)
    (104/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.324175278 seconds)
    (105/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.0807663 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.494847111 seconds)
    (107/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.312503017 seconds)
    (108/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.554759315 seconds)
    (109/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.410096361 seconds)
    (110/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.568089689 seconds)
    (111/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.61480322 seconds)
    (112/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.316616304 seconds)
    (113/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.598840501 seconds)
    (114/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.017010928 seconds)
    (115/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.45947781 seconds)
    (116/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.748053807 seconds)
    (117/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.507849152 seconds)
    (118/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.872796344 seconds)
    (119/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.803602274 seconds)
    (120/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.076926764 seconds)
    (121/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.410133041 seconds)
    (122/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.389139965 seconds)
    (123/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.510431016 seconds)
    (124/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.525722506 seconds)
    (125/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.520735746 seconds)
    (126/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.312430688 seconds)
    (127/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.014368532 seconds)
    (128/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.647579677 seconds)
    (129/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.333120429 seconds)
    (130/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.336336673 seconds)
    (131/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.414780095 seconds)
    (132/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.335775485 seconds)
    (133/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.310756403 seconds)
    (134/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.002302418 seconds)
    (135/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.702093708 seconds)
    (136/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.633364043 seconds)
    (137/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.329527208 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.080412603 seconds)
    (139/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.303233186 seconds)
    (140/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.311423025 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.353037051 seconds)
    (142/309) benchmarking ("sort", Bool, false)...
    done (took 1.816004998 seconds)
    (143/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.334536565 seconds)
    (144/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.297380611 seconds)
    (145/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.569374886 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.511219781 seconds)
    (147/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.370000079 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.012360553 seconds)
    (149/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.422625992 seconds)
    (150/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.571548814 seconds)
    (151/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.766018923 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.868436439 seconds)
    (153/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.396948829 seconds)
    (154/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.413678478 seconds)
    (155/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.969816626 seconds)
    (156/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.913208058 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.727523077 seconds)
    (158/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.350205607 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.715760351 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.401280333 seconds)
    (161/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.338495885 seconds)
    (162/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.039742566 seconds)
    (163/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.326972669 seconds)
    (164/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.34015318 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.926934544 seconds)
    (166/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.849018393 seconds)
    (167/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.316822102 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.630816222 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.300998352 seconds)
    (170/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.551324315 seconds)
    (171/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.300800415 seconds)
    (172/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.412103775 seconds)
    (173/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.132404996 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.715938229 seconds)
    (175/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.377727295 seconds)
    (176/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.397391703 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.31198433 seconds)
    (178/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.323847397 seconds)
    (179/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.339321099 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.12025873 seconds)
    (181/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 4.141035778 seconds)
    (182/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.673091281 seconds)
    (183/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.5144801 seconds)
    (184/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.355025536 seconds)
    (185/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.11386516 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.632139097 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.800813077 seconds)
    (188/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.313056824 seconds)
    (189/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.615144432 seconds)
    (190/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.582311893 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.865995861 seconds)
    (192/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.313175837 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.12767475 seconds)
    (194/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.414722923 seconds)
    (195/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.339997083 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.312288975 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.421389177 seconds)
    (198/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.44058725 seconds)
    (199/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.314254145 seconds)
    (200/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.55238379 seconds)
    (201/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.340815383 seconds)
    (202/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.503592128 seconds)
    (203/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.380783405 seconds)
    (204/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.313102307 seconds)
    (205/309) benchmarking ("sort", BigInt, false)...
    done (took 6.329000299 seconds)
    (206/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.889150146 seconds)
    (207/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.358373889 seconds)
    (208/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.378002452 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.363840955 seconds)
    (210/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.298631564 seconds)
    (211/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.318748211 seconds)
    (212/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.324914971 seconds)
    (213/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.368508271 seconds)
    (214/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.590651614 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.868763429 seconds)
    (216/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.335809704 seconds)
    (217/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.300891617 seconds)
    (218/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.372961733 seconds)
    (219/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.378879088 seconds)
    (220/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.837489871 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.303337585 seconds)
    (222/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.497860593 seconds)
    (223/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.379022575 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.943457274 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.54844557 seconds)
    (226/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.324590442 seconds)
    (227/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.589574004 seconds)
    (228/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.304023206 seconds)
    (229/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.3191174 seconds)
    (230/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.755693406 seconds)
    (231/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.402479789 seconds)
    (232/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.331081973 seconds)
    (233/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.495517593 seconds)
    (234/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.33792071 seconds)
    (235/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.346208973 seconds)
    (236/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.316577565 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.636217069 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.669576819 seconds)
    (239/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.374609666 seconds)
    (240/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.303649093 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.619079092 seconds)
    (242/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.106592693 seconds)
    (243/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.442394832 seconds)
    (244/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.095281945 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.316078515 seconds)
    (246/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.345110268 seconds)
    (247/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.843312429 seconds)
    (248/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.310569318 seconds)
    (249/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.605716825 seconds)
    (250/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.803543155 seconds)
    (251/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.330185112 seconds)
    (252/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.039594034 seconds)
    (253/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.320016753 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.181613671 seconds)
    (255/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.518918895 seconds)
    (256/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.601594887 seconds)
    (257/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.323928363 seconds)
    (258/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.093165147 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.393249793 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.365840328 seconds)
    (261/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.471120889 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.440847511 seconds)
    (263/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.657812018 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.680155868 seconds)
    (265/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.520307946 seconds)
    (266/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.519616226 seconds)
    (267/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.10192254 seconds)
    (268/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.336059047 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.345554248 seconds)
    (270/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.306008078 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.662877501 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.721260117 seconds)
    (273/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.888069291 seconds)
    (274/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.30861721 seconds)
    (275/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.030481398 seconds)
    (276/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.410560506 seconds)
    (277/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.322787583 seconds)
    (278/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.421623423 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.668738162 seconds)
    (280/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.343981078 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.341565751 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.152875512 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.428557503 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.421061231 seconds)
    (285/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.660454781 seconds)
    (286/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.704986697 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.32098053 seconds)
    (288/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.791655943 seconds)
    (289/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.323972617 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.409421332 seconds)
    (291/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.337069728 seconds)
    (292/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.403651435 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.437937752 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.468366345 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.362284168 seconds)
    (296/309) benchmarking ("sort", Float64, false)...
    done (took 5.566797995 seconds)
    (297/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.885124017 seconds)
    (298/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.348423785 seconds)
    (299/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.929442671 seconds)
    (300/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.318436239 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.191612009 seconds)
    (302/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.371135262 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.94680543 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.34669402 seconds)
    (305/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.403986025 seconds)
    (306/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.331487439 seconds)
    (307/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.727252229 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.345729026 seconds)
    (309/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.050450044 seconds)
  done (took 912.78778406 seconds)
done (took 914.036123402 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.355409247 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.349634527 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.331630389 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.35355807 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.445010027 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.363040497 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.343509843 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.334429558 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.38068626 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.382414311 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.332048304 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.361376748 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.335899737 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.334533271 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.332865407 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.348757648 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.271001042 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.333739028 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.350891654 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.343461415 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.35088368 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.333198507 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.382825248 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.360865536 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.337598351 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.335955493 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.33726769 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.354171059 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.446570687 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.337822801 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.337276561 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.345567745 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.270788822 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.333873835 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.329627609 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.35437502 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.34700196 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.344069468 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.337910938 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.36739209 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.641277058 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.33507332 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.336950304 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.335177127 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.334644494 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.33940053 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.336767733 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.34131762 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.348756851 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.350061098 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.636105817 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.351308219 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.338688363 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.335641146 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.3461854 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.336188261 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.338481502 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.352463403 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.355655801 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.351886639 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.26477105 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.340973806 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.337692709 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.354028568 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.343895592 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.67247482 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.33196473 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.339568248 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.646046975 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.341701698 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.673533236 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.345482174 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.337273135 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.351686962 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.368752713 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.276150271 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.331921032 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.336574132 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.345073022 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.335612775 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.346782994 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.350409438 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.34315185 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.337551295 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.352398987 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.366987872 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.347547133 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.338848236 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.34646639 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.357397437 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.345133671 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.349890787 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.341640881 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.3335732 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.347214325 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.341506008 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.341745383 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.341815541 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.343684611 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.348726678 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.647200974 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.355400923 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.335550599 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.335507052 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.337961337 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.352745612 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.661177692 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.341241953 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.36089729 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.385404206 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.339229456 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.270353401 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.342638972 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.354908555 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.348774906 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.342115302 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.333793832 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.271295728 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.667379984 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.356471217 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.340712429 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.338215184 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.355283099 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.340210765 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.335591934 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.28191727 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.340504166 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.353732386 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.460713698 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.349660809 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.37173967 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.338659693 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.342657971 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.369870779 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.355646261 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.371989203 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.342548286 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.356031389 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.35605862 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.337110966 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.350405935 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.351043861 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.341573851 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.346093309 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.334241764 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.373228744 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.353264352 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.3531715 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.362202757 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.461364392 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.338086961 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.271021135 seconds)
done (took 224.255446853 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.400427217 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.330421258 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.441903231 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.336588741 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.436149594 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.435677477 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.334134233 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.334986457 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.33360705 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.716190107 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.334553156 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.334546261 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.330250549 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.334630889 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.420882581 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.337099938 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.334368592 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.678877123 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.340505625 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.408819498 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.33948421 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.335116513 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.33750933 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.719124334 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.339515643 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.33753351 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.408857674 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.338320358 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.684046264 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.33535875 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.329402681 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.683117265 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.428155343 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.355063488 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.347879731 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.344513774 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.438023383 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.35376455 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.420515451 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.419979828 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.444276768 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.380257992 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.33617919 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.332460982 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.340185926 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.341232229 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.336045875 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.365620504 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.333515391 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.33662415 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.682093828 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.349097316 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.346779364 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.337674598 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.336660186 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.36225688 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.337894167 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.34311633 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.43000203 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.34343927 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.402979287 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.720809454 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.718881519 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.339981868 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.339676667 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.337125307 seconds)
  done (took 148.799265955 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.408215688 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.414149044 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.447274729 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.340891903 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.391835499 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.451156207 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.340730241 seconds)
  done (took 11.069329239 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.346379874 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.339949816 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.390265738 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.389666729 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.343621786 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.487796721 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.340549894 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.351714461 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.337810576 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.393313454 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.341077821 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.341761214 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.346290864 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.333999166 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.389577792 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.352588909 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.456756971 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.342113696 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.343514424 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.497769386 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.338390658 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.34772915 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.392962856 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.352777573 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.342141319 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.3486188 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.922547452 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.34427396 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.339166881 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.342375744 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.339202883 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.381026129 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.343179082 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.34164151 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.33940134 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.457821279 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.34522317 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.339589032 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.341803701 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.3422326 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.341385275 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.341863323 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.342456903 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.339871516 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.342226758 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.366769187 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.341377072 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.341809249 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.342277421 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.34288777 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.393334904 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.342391109 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.339727181 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.339937804 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.398348529 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.349220935 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.345759043 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.339528595 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.343260426 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.340146914 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.499547939 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.390885488 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.342328406 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.39109655 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.34254636 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.34327567 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.342814938 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.34286419 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.398315578 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.34309036 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.391956103 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.340768662 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.497790442 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.367642474 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.344322553 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.346794546 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.347100343 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.345709707 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.337868518 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.350354178 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.341626521 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.345025422 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.350482383 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.341493585 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.341858651 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.446876393 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.453654872 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.342282864 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.357084296 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.351665041 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.342404706 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.397498815 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.3452529 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.342931311 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.395887856 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.459657504 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.398797717 seconds)
  done (took 154.123492082 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.350028078 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.353069901 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.345693604 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.360807517 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.345529069 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.345282184 seconds)
  done (took 9.380441945 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.348181985 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.346724174 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.344854555 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.345130053 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.347297125 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.346590272 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.348568152 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.346904148 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.350521353 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.345057331 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.345890928 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.347427601 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.346590376 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.348581563 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.348499252 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.345864908 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.349133456 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.343571973 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.345982173 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.349341301 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.451302409 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.348385727 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.348730224 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.347959588 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.348964118 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.346275982 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.354616908 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.346308137 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.345333585 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.354264928 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.351479688 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.346323981 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.348588366 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.352655769 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.352565151 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.34817773 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.350377497 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.348203271 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.344405793 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.760293892 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.348160239 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.349888204 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.346315315 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.348672851 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.349803008 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.351595254 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.351942337 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.355407958 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.350152961 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.349032935 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.348884396 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.347646318 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.348321894 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.349155567 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.351753215 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.352794679 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.352895439 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.351644805 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.350352702 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.349438762 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.348173621 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.348704047 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.350991826 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.354896105 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.345951918 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.349749942 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.350327737 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.354213177 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.351697806 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.348926972 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.349570727 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.346451651 seconds)
  done (took 99.922148083 seconds)
done (took 424.566811762 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.806826771 seconds)
  done (took 8.091014662 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.413831667 seconds)
  done (took 7.698540736 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.871375536 seconds)
  done (took 20.157289896 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.393986773 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.404774476 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.347856475 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.348220223 seconds)
  done (took 26.779246173 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.483666779 seconds)
  done (took 7.767802553 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.341722726 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.352954688 seconds)
  done (took 13.979280134 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.879304322 seconds)
  done (took 8.163748779 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.140783151 seconds)
  done (took 8.426058077 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.341242087 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.371912049 seconds)
  done (took 14.005975508 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.327746861 seconds)
  done (took 7.611993733 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.065562382 seconds)
  done (took 8.349587001 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.344191205 seconds)
  done (took 7.629368583 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.427632474 seconds)
  done (took 7.712151063 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.73195206 seconds)
  done (took 9.016174639 seconds)
done (took 156.672929249 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.342372228 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.346784298 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.34510758 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.345980662 seconds)
  done (took 26.665394099 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.383003538 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.383259272 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.38552108 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.394301248 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.385788543 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.384323521 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.37463862 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.37554533 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.394094325 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.386826242 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.386024421 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.385799437 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.383885181 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.376149394 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.386428776 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.385374329 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.395064992 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.384579174 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.377198179 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.387047005 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.351259011 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.395508249 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.386525561 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.351918601 seconds)
  done (took 34.464579894 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.549608043 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.421944236 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.504647937 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.403778385 seconds)
  done (took 7.166128887 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.40266002 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.404203981 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.415904957 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.455425526 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.482393351 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.414150912 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.377867196 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.372538001 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.358825501 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.404700582 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.47941098 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.420236766 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.48817077 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.351293185 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.53249514 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.351720558 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.351176198 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.403152277 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.455028149 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.470456777 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.352364375 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.403352903 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.406868004 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.420728531 seconds)
  done (took 35.262128033 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.350264335 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.3597756 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.358509264 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.351889944 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.351454739 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.351160154 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.357643156 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.352226371 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.372658838 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.353179166 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.350730214 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.351867229 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.351741279 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.352757478 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.351523086 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.365146903 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.366042825 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.352744012 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.355560122 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.357991449 seconds)
  done (took 28.403024647 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.346902427 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.281761933 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.699689749 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.602143481 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.345881123 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.349743689 seconds)
  done (took 28.91425432 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.420068736 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.536364045 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.353402138 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.683416885 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.758487705 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.35491197 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.35420026 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.573140818 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.856707749 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.862517574 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.407693822 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.404653938 seconds)
  done (took 19.853588356 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.347179845 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.34936002 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.351826487 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.366271463 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.405044232 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.357526025 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.360620373 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.346784994 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.407619675 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.409730557 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.3579239 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.406603295 seconds)
  done (took 37.75699675 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4354444 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.393003682 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.213362376 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.155479814 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.724827523 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.559951556 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.169273598 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.808256947 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.352345004 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.623163483 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.323452385 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458477048 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.604676842 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34920023 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.351099616 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.313774518 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.578189919 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.822155298 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34997495 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.192017795 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376282111 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.356019275 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.296482634 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.376945943 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.561335453 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.479311077 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.609908193 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.349712144 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.615184524 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.363916268 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36073661 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.349837042 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.623782837 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992047003 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441503952 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361222807 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.122757725 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.063884805 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.352334233 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.209560747 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.085529033 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.354983358 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361638627 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.35044946 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.284400009 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.361023746 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.815069136 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.355088441 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.062191957 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.351880889 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.361882112 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446423172 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.354265143 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.16975978 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.442254647 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.3511665 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.348483275 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357991944 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920098476 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.676631041 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.357219985 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.28851203 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.458783662 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.202031767 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98049579 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.453133321 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.355701969 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.355207156 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.286924608 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.208984759 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.371465822 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.680875995 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.373682571 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.001585446 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.057765329 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.332118663 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.303204373 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.885359689 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.352358219 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.290241574 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.580199217 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.352414737 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.288219769 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.297007675 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.287362881 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.024636932 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359856635 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.687701555 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.360183866 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.811245242 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.363581773 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372527823 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376698327 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.577286017 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.237378153 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.352432866 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.095424851 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512705928 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37460491 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.814182939 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.287995823 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.35736475 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.611551737 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.565535769 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.359763084 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.315903057 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.568694292 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.35423002 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.373222236 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.355645492 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.366226371 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.943286395 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.364686042 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.692883031 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373095603 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.354232195 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.066775807 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.358589402 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.458672608 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.354949674 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.593756436 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.09274381 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354692601 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.436259103 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.357910174 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.355024086 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.301938207 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.872461954 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.355203598 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.357247391 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.354511592 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.368826121 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.357753239 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.302349813 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.35192002 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363043901 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.35931255 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.578365793 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.355543533 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.633229805 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.289468905 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.704374936 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.447582073 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.578551835 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.525714565 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.356279189 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.616046795 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361622644 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.36435127 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.368690625 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374074514 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454247684 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377774786 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.357306399 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.615912732 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.35917183 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.359608999 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.275510128 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.359997517 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363772561 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.360769956 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.260700669 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.946251386 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332071809 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.363049746 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.244958819 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.370362667 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.419560228 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.361031102 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.365684454 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.061260609 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.256161537 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.361060753 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.35769264 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.582823852 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.370403749 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.192489761 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.437466029 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.565056943 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.948279379 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.368616234 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.290375456 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.0671479 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.050334464 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357204942 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.293786388 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.35631965 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367285486 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.367386023 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.584492074 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.949631104 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357406044 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.198795421 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.365275875 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.367847679 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.363163831 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356928258 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.0335869 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.68457955 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.368054275 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.369800421 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.500488777 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.371301048 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.292331146 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.361842215 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.362975895 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.358491273 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.35813126 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390280428 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.212447758 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.851138362 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.617702898 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.119665744 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.368634628 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.298572568 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.390333258 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.363657424 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.141223991 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383854678 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.366396323 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369094686 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.36952919 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.210427537 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.032050315 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924662376 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.082098478 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899303092 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.335766891 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.363218179 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.361245024 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.825867081 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.292834742 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.916404836 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.535735485 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.824041276 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.303752984 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.569262651 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.528163325 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.082297978 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.370653562 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.586548737 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.315893724 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.150393896 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.391087127 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.571068415 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394115318 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.359432298 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.307288844 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.646356156 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.624534269 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.123491228 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.440181652 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.821464016 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.142130796 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.381347793 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.360084743 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.641091416 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.529984741 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.072887384 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.531811059 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.360768446 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.376531599 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.847008855 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.36801882 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.58609746 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988206037 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.360422487 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.575284272 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.29547028 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.371287323 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.371434806 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.362318647 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.552769888 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.365535637 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.616465667 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.371984249 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.295709319 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.364944804 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901272373 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.217576451 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.367028302 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361865136 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071805514 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.374527344 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.632908118 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.371495643 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.038182414 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366950693 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.295090989 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.295677627 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.054428195 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.368522524 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338168104 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842241964 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.44754382 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.460466524 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.390234259 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412596121 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.617943471 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.375955668 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.954361599 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.589452456 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.229087353 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38364821 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.462848074 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.185070189 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.369562716 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.362836524 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.598698731 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.26861319 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.5863295 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.229076247 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.261507938 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.361942495 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.574813098 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.363089794 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.371189859 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.599055582 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.077245136 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.37751038 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.075280578 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387336523 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.369936495 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.281180522 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.469307308 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.370119064 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445004443 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.374328982 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.374162929 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.374555164 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.532254306 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369899909 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.368309486 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.377955638 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457328279 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.714867523 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.035564606 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.369993605 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.962310163 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.093592295 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.961003092 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.375683974 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.36456641 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368720841 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.298357598 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.512850491 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.590249046 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.637435068 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493864098 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.508956093 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386299419 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.210936746 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.385418726 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.59270086 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.640031083 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.259388393 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36427712 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.379912322 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.364082973 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.375662989 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.576873295 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849812745 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.90163052 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477814371 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.365158397 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.828851705 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.638668661 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.365561052 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.365878546 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.940373315 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.370263822 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.666951569 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.372703742 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370552518 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.515916494 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.375418549 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016524946 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.375214611 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.521181335 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.136558861 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.219552699 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.624283002 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.787932825 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.377620207 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.96248404 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.094365481 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.629768844 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431549426 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.376328346 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.478677354 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.511851184 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.372515362 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.367536429 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.364948335 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415093561 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.076014188 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.374668836 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.96473474 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.628003624 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.362394166 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.372614013 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391413565 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.376015164 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.590419062 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.05282605 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.590648773 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.376264972 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.373234741 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.181238179 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.964975467 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.377589886 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.301521176 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.370459555 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.598850195 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.601896188 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.390083961 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.819958832 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.077416842 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.912774764 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.338227615 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388230804 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.372995367 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.097395345 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.964259993 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.051886673 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842514202 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.924983921 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.366282034 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.65703561 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.371615143 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.376190304 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.646057955 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.371492069 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.373695083 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.381044611 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.961715602 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.09572049 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.391898903 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.246197927 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.306612504 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.708513373 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.07818895 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.30443828 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.376636381 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.552397372 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.367656146 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498797081 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.379346934 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.37403969 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369573835 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.13639462 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.645363357 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.373357309 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.364863867 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.227553905 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.382974092 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379012228 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.637658627 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375590884 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.044420779 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.719677768 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.625443461 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.377830093 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.356633812 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.371985471 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368821713 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.356240299 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.568280213 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.596212288 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909418253 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.379512855 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.381916302 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.372223264 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.585095283 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.580982917 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.375759759 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.38454082 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368386486 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.388900062 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.275642477 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.877781323 seconds)
  done (took 1600.959021557 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.371878374 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.379391643 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.382887166 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.415070534 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.38785976 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.396364845 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.443531988 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.376286269 seconds)
  done (took 52.463976403 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.37046754 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.603443647 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.398784359 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.377900972 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.382289801 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.374003987 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.790922313 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.370156633 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.380101082 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.38086814 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.378220025 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.374151126 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.982640434 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.380179658 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.370479344 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.361258145 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.37955055 seconds)
  done (took 65.967358055 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.370920729 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.73270888 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.451339513 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.384009598 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.165757055 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.381387153 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.831497749 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.431634428 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.369972493 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.536560282 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.022518753 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.40941863 seconds)
  done (took 84.401521007 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.377757283 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.377628939 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.3776705 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.37811692 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.37940594 seconds)
  done (took 8.203213591 seconds)
done (took 2031.767214701 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.625673444 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.05583074 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.985631106 seconds)
  done (took 5.353660501 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.524023302 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.570372671 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.691654787 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.697680669 seconds)
  done (took 7.798542172 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.659209222 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.764723504 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.58664362 seconds)
  done (took 6.325233365 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.688075561 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.399329209 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.452065541 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.372329292 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.377183354 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.37600314 seconds)
  done (took 20.442509702 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.378429637 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.380772012 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.377876366 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.380933491 seconds)
  done (took 6.832825521 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.360632408 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.107456067 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.361756897 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.375414146 seconds)
  done (took 18.520708499 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.127197986 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.137294419 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.122608194 seconds)
  done (took 7.702963641 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.380032567 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.216942397 seconds)
  done (took 9.913116726 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.682798127 seconds)
  done (took 2.998956874 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.51056886 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.641856436 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.443526106 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.311043873 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.468053395 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.892451 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.883772175 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.49389808 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.302561984 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.373721466 seconds)
  done (took 27.637895711 seconds)
done (took 127.004375823 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.988952641 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.616376913 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.575679657 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.958475506 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.595213288 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.57591128 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.584909415 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.929622211 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.466642965 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.458196522 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.959943533 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.59546698 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.743799062 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.612343471 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.742657506 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.612032273 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.595704041 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.025863531 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.649266853 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.872726993 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.584507491 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.596216367 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.789594707 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.613369828 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.598989499 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.530940618 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.17700306 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.617548681 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.822737455 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.236614482 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.531646732 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.051148673 seconds)
  done (took 192.628159215 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.377528174 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.377828352 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.378828023 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.379320728 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.376553615 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.39174934 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.378678693 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.377500601 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.391355088 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.394817532 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.376730798 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.37723454 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.377313144 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.377804998 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.391188903 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.377936984 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.378621271 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.378122895 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.380717282 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.377794102 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.392703094 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.382480165 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.380561015 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.378089004 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.38049206 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.378113965 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.381662764 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.377531168 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.377537065 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.380045801 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.381910448 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.384128657 seconds)
  done (took 205.512590422 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.377551721 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.379022334 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.384348885 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.377858625 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.378759292 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.383336588 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.379764773 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.378090185 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.392002934 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.386071795 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.378164092 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.379426767 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.380930395 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.37925964 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.397609608 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.378996634 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.3798385 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.381853625 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.378734181 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.379346971 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.379701365 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.382010775 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.37998375 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.37944064 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.381586023 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.379216878 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.378740011 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.380084131 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.396092213 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.390710423 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.383675881 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.382355015 seconds)
  done (took 205.545417058 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.574881594 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.38664433 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.386841146 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.320635002 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.387965836 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.387090694 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.381104021 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.584441047 seconds)
  done (took 14.73093742 seconds)
done (took 619.732732858 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.586006207 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.317122879 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.583058082 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.407530089 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.099269887 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.410734596 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.407333692 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.566757791 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.859305344 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.556753979 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.613891407 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.405891469 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.756358192 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.40568549 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.645953208 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.503167752 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.250326847 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.36152665 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.705247319 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.863502547 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.657033655 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.903484599 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.567883441 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.912985179 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.757151346 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.926443465 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.098510021 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.252766017 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.406782084 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.706183099 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.912041726 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.33260538 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.462581441 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.444200951 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.497686043 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.482169476 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.318182873 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.444519057 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.586418525 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.670640535 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.878954414 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.663892124 seconds)
  done (took 94.511547289 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.378060539 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.378177804 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.377272148 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.378267122 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.378071618 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.377746612 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.377759824 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.377432098 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.378072595 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.377485969 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.378232002 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.379638096 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.377960183 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.378681024 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.378122705 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.378292751 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.378628338 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.381317286 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.378463175 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.378100315 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.379322742 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.377353796 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.378861512 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.378409618 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.378668869 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.379048987 seconds)
  done (took 37.161714014 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.390499818 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.62182519 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.779650132 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.396895829 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.390660821 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.3954307 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.463614393 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.391312986 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.393635386 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.394374884 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.543924563 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.394248126 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.423568212 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.791529057 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.394253073 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.391704543 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.395513643 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.391435372 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.633444489 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.400586754 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.481346005 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.392512627 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.463630598 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.402094732 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.410778947 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.3933628 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.396020141 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.915538804 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.394550416 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.543220465 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.129850785 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.465314461 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.879993641 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.798952915 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.127893639 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.397114447 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.392580594 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.548141727 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.394541765 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.393535402 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.464225266 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.393161168 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.788898336 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.001779724 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.401806509 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.388160386 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.930598375 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.541531677 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.614263623 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.397833878 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.805720094 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.390253108 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.38912598 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.388458871 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.61440522 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.397466625 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.385749288 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.952528098 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.406401315 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.459281232 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.389776065 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.387445177 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.622973184 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.389019146 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.614281303 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.390829959 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.39680308 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.389612168 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.784307731 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.392139006 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.016974576 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.403510239 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.388670949 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.538182811 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.615853876 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.959230072 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.392166366 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.62587429 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.885857684 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.458063061 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.392788479 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.907556555 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.462098393 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.393426651 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.392207454 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.392145918 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.390156264 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.433686629 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.45870941 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.943557261 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.020388307 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.970148352 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.4783782 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.40284305 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.388884349 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.954146997 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.404850174 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.390247062 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.780979683 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.020473863 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.410003731 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.403059656 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.012119141 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.412375575 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.46827837 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.401123358 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.795654943 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.389627754 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.433753642 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.389440541 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.396246429 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.393606062 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.462740587 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.393931312 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.389818651 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.994393986 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.56480854 seconds)
  done (took 181.870016835 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.397858607 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.382242852 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.382813996 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.397982625 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.383359425 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.390635367 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.383372162 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.382722478 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.389245529 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.383286312 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.384579991 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.38877488 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.386606435 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.383870441 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.393349944 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.391905596 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.994135405 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.388453339 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.385642628 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.386806637 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.164576939 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.388551118 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.386023807 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.387196396 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.384990419 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.388854906 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.385277035 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.386989493 seconds)
  done (took 153.555562609 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.394013117 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.918993034 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.398828305 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.514047744 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.414962567 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.388836305 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.513703883 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.449186495 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.395141118 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.388871957 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.389429692 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.674351594 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.396010288 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.87390074 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.571624333 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.51467638 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.872837794 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.393134423 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.389539627 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.389896297 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.515779659 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.401179008 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.673061032 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.916855047 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.393071809 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.917468716 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.38140257 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.392702227 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.393397027 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.919917013 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.39015453 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.673218097 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.465471657 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.449439297 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.920350013 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.872806032 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.873105461 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.529966187 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.394516654 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.391320094 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.391034881 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.381092607 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.923663477 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.396828325 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.394678395 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.918385015 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.410460309 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.392969398 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.400965397 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.391066792 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.449013274 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.450438917 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.680471641 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.93139857 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.466908828 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.413569228 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.517470651 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.751752419 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.400671615 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.877968344 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.386606147 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.924267195 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.399005629 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.381802192 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.394884626 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.399124319 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.533663316 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.518749874 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.880187983 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.398155086 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.874446047 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.535113075 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.394719883 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.395509386 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.396962519 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.927616999 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.87829274 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.535023505 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.519528805 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.574674029 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.3855782 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.394324443 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.38518151 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.46612737 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.396337401 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.928278929 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.875566635 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.397972487 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.397248071 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.397361108 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.39754976 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.558403791 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.925808579 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.466581317 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.872196179 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.692997656 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.679771936 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.398342873 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.451958855 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.397621697 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.679758228 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.39914383 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.449908194 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.814227052 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.683388024 seconds)
  done (took 164.517491371 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.620150948 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.526901807 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.485624953 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.502325049 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.891298117 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.953958178 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.451245799 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.516347921 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.50134948 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.629255309 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.021528569 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.488053428 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.573334137 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.46464599 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.048593432 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.458353637 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.483544897 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.535029604 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.50243751 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.373244928 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.949909487 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.675938566 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.53674718 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.212537897 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.485130573 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.127712457 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.127063355 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.905384039 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.555753594 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.471634921 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.875642905 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.506477804 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.075501423 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.994701498 seconds)
  done (took 64.859206959 seconds)
done (took 697.797199323 seconds)
SAVING RESULT...
DONE!
