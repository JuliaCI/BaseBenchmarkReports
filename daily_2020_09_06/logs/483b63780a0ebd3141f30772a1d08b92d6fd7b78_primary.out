cset: moving following pidspec: 32169
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.62962208 seconds)
loading group "shootout"... done (took 1.245710725 seconds)
loading group "string"... done (took 0.412230559 seconds)
loading group "linalg"... done (took 7.765612697 seconds)
loading group "parallel"... done (took 0.157347893 seconds)
loading group "find"... done (took 1.383091795 seconds)
loading group "tuple"... done (took 1.949571792 seconds)
loading group "union"... done (took 12.47916723 seconds)
loading group "dates"... done (took 1.344711851 seconds)
loading group "micro"... done (took 0.201007259 seconds)
loading group "simd"... done (took 4.383210393 seconds)
loading group "io"... done (took 1.022492273 seconds)
loading group "random"... done (took 8.762889381 seconds)
loading group "problem"... done (took 1.526454218 seconds)
loading group "array"... done (took 19.28777629 seconds)
loading group "misc"... done (took 1.495315571 seconds)
loading group "scalar"... done (took 39.434407505 seconds)
loading group "sort"... done (took 3.096030703 seconds)
loading group "sparse"... done (took 11.711506121 seconds)
loading group "collection"... done (took 17.196037973 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.543504516 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.129404763 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.131373929 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.123002867 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.153062525 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.121491028 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.128672848 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.089690297 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.828902513 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.136839894 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.110406853 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.411488302 seconds)
done (took 5.22936034 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.163932286 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.090421215 seconds)
    (2/2) benchmarking "String"...
    done (took 0.082822861 seconds)
  done (took 1.26240779 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.061963924 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.130070672 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.063030508 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.064668796 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.064592086 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.064064409 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.063939025 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.063945692 seconds)
  done (took 1.605067916 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.068831617 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.064620337 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.062137628 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.064102838 seconds)
  done (took 1.352885668 seconds)
done (took 5.556727375 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.232545519 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.096934663 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.277421109 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.437050844 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.590837371 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.088182385 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.070972104 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.066633639 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.126362705 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.313361032 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.1005253 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.176889613 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.086930654 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.169726298 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.986956543 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.115782137 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082370329 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.119272781 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.090092401 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127477417 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.383222888 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.074289834 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.070159537 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.066944096 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.067935539 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.639898321 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.665253691 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.124396691 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.0802506 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.159717244 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.113026354 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.633509132 seconds)
  done (took 10.560334025 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.089630709 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.087343843 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.065137656 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.120296718 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.089202133 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.06629165 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071153414 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.064309886 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.08466076 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.123254644 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.086709175 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.094478819 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.062626967 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.065344034 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.071271463 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.19232448 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.076227395 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.078228617 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.064620632 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076931574 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.101875104 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.074421453 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.074843783 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.074623125 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.124863952 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.165121948 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.092865861 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098640684 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.063607735 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.076096786 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.113792181 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.121980742 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.063325376 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.062123945 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.116151467 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.091817317 seconds)
  done (took 4.387542095 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.94148345 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.089816607 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.097770412 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.604917844 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.062871188 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.145912901 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.238942072 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.07076534 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.306701618 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.141924106 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.13409736 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.142144185 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.112122124 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.065946027 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.182090698 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.113365392 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.466956227 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.066029773 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.064941383 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.062818327 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.066329557 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.065765883 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.060469345 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065762844 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.090759432 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.083207179 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.166827886 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.734662616 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.229332156 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.062694833 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.155338834 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.080587598 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.347930147 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.064138369 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.076170567 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.385725577 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.116792313 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.060037418 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.154240719 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.110071343 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.05957097 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.10893015 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.072554453 seconds)
    (43/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.063428933 seconds)
    (44/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.063628136 seconds)
    (45/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.062912633 seconds)
    (46/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066230537 seconds)
    (47/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.072579435 seconds)
    (48/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.09619858 seconds)
    (49/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.078108371 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.062428763 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.060526709 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.15505235 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.05976034 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.061692127 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.061854121 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.146036156 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.059126401 seconds)
    (58/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.060192339 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.128898044 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.058827226 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.062920999 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.093468354 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.062380241 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.079304238 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.087223235 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.3224953 seconds)
    (67/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.058584358 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.019202252 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.063584532 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.900322759 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07302141 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.059916883 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.063994751 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.059489276 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.061454425 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.060342745 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.064734903 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.062844888 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.062776934 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.100860839 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.060208665 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.063611091 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.059954321 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.064420695 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.0902309 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.05901197 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.443598105 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.090212372 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.059831817 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.069280388 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.09813157 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.060244217 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.064409722 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.060966016 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.06051561 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.059668858 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.060210654 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.063516092 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.088026232 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.06425634 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.106728641 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.253709975 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.070120895 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.067763685 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.072437648 seconds)
    (106/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064181881 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.071143027 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.073050033 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.067981185 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.07059879 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.069866168 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065931467 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.110343509 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.067639802 seconds)
  done (took 20.690431288 seconds)
done (took 37.670690201 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.257175764 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.080872588 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.080270636 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.080973877 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.081834077 seconds)
  done (took 1.804610316 seconds)
done (took 3.032609942 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.108993562 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.064545592 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.101746059 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.100566231 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.064423347 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.065763952 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.098158921 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.064108113 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.097845495 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.099808381 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.10121544 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.100365147 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.06350955 seconds)
  done (took 2.352009892 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.067707296 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.079679133 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.082755799 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.061656573 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.071121762 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.080887592 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.062931606 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.080043921 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.086596077 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.081248043 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.080790741 seconds)
  done (took 2.046147965 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.067621463 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.079731766 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.085505517 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.061192527 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.072391325 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.081103816 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.061366993 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.080427021 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.084095902 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.081313573 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.080461115 seconds)
  done (took 2.033742792 seconds)
done (took 7.631789259 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.064712555 seconds)
  done (took 1.248089007 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.518322285 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.246798559 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.066316011 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.08597479 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.190948979 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.093839162 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.212208319 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.069963851 seconds)
  done (took 7.847879209 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.093778606 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071465796 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067569761 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.068006533 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.066590928 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.066907854 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067211197 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.067028177 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068038152 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.066566001 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.067991587 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.067875437 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.068705627 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068821433 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068430925 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.066820877 seconds)
  done (took 2.394475375 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.09611837 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095049145 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.07074022 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.071846052 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.070558832 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.070184114 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.072270414 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072090965 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.069087704 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.070530288 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07226519 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.071212288 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.069155629 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.060888152 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.071240759 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.071602496 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.067333187 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.072730933 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.071139447 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.072347595 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.070883709 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.060477891 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.068864209 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.070144293 seconds)
  done (took 3.033659057 seconds)
done (took 15.722637269 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.111166888 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.073003397 seconds)
  done (took 1.371594688 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.066387076 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.06757046 seconds)
  done (took 1.336944709 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.07277354 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.058789886 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.078647326 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.06885075 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.059219687 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.059112433 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.076877519 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.059976121 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.059193792 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.059155756 seconds)
  done (took 1.858918762 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.061783641 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.068214418 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.06549608 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.06747814 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.065508165 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.060436049 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.063252153 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.060667928 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.067515097 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.05964573 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.064415655 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.079842306 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.063417745 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.081101911 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.063129639 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.064232105 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.066135152 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.063411477 seconds)
  done (took 2.393408648 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.060133825 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.059959729 seconds)
  done (took 1.340385839 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.063018193 seconds)
    (2/7) benchmarking "second"...
    done (took 0.060044342 seconds)
    (3/7) benchmarking "month"...
    done (took 0.063454984 seconds)
    (4/7) benchmarking "year"...
    done (took 0.063230904 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.059915329 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.059316451 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.060167491 seconds)
  done (took 1.642751372 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.405605731 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.117675099 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.332260357 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.066213802 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.075264256 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.24582914 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.061696109 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.066452865 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.066388337 seconds)
  done (took 2.6943663 seconds)
done (took 13.851755632 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078443423 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08084831 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.086199354 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.411647004 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091638593 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.064798981 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.111180546 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.170438409 seconds)
done (took 2.329479131 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.217360319 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.358204655 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.902334454 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.066927579 seconds)
  done (took 3.543558215 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.327063347 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.076561523 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.078063759 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067380324 seconds)
  done (took 1.778132737 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06339114 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070537569 seconds)
  done (took 1.359442796 seconds)
done (took 8.124743244 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06171914 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.089783151 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.062218001 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.06322548 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.062745382 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.062820929 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062558719 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.06258371 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.062406578 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.062128012 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.062291837 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062664198 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062936803 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062668524 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.062609734 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0623242 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.062635562 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062561675 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062798253 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.062609055 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062609097 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062742814 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062476507 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062789632 seconds)
  done (took 2.78247763 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.078560467 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.063802576 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.065819515 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.065967563 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.066798702 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.065448276 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.06614182 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.064774811 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.066394106 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.064245513 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066128166 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.066715529 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.064231348 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.066410857 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064290615 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.066745209 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.065852622 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063886828 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063173773 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.065039053 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.064549437 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06305914 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.065113851 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06406664 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.064621902 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064879919 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.062771567 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.063165296 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064424554 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.064714995 seconds)
  done (took 3.210491261 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.063448097 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.058829432 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.060445407 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.068716214 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.059657879 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.059393513 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.059557366 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.058487739 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.05921541 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.06057346 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.059707611 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.059121141 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.060429463 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.059159584 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.059069335 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.059403904 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.06288833 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.077338084 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.058923561 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.058829535 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.063271344 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.059133572 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.058979927 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.059038826 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.059564002 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.05904524 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.058425153 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.059232726 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.059228106 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.059796629 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.058939609 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.070001999 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.063089681 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.05933039 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.068591837 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.062182246 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.057417815 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.061689672 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.058704829 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.057260179 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.057317971 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.057893902 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.05873307 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.05896199 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.068409552 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.059451223 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.060140054 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.059915195 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.058928943 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.058837623 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.059014149 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.061298275 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.065700158 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.060804697 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.059062429 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.060253424 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.058968967 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.059845251 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.058989567 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.058926308 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.058999987 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.062294073 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.060965607 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.060109736 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.076921844 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.060896529 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.068782449 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.061487037 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.060087962 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.062254669 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.05967891 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075152642 seconds)
  done (took 5.651584947 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082867327 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08458437 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.062768907 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.062595502 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.058883528 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.058298618 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.065951436 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058613847 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062428985 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077149274 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058415352 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062636979 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062996802 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.063300293 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.059993132 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06312746 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.066755007 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058596451 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.058434123 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.062471128 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.058624573 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066062709 seconds)
  done (took 2.675939707 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.136447968 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064315778 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.100228305 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073529074 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06644472 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073565956 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.063859906 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.063875505 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064238566 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064650954 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064377679 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063578151 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066622249 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064439821 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064171428 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064155752 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063713002 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064584699 seconds)
  done (took 2.538112097 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.074573104 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.063520208 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085310137 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.063713203 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.064005753 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.063361257 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067072228 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.068073029 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.063254785 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.063522131 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.067812605 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063023261 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.063093795 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063784318 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063092119 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.063489083 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.06278042 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06325461 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06746383 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067141968 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067232915 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067529961 seconds)
  done (took 2.710149908 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072892609 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.063071498 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07631307 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064009059 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.058693837 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.058734554 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.063287422 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.062759935 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.063237465 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.062198899 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062824974 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.058319907 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.064585023 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.062585819 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.066057352 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064487838 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.063399488 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.063985483 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063029411 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058227752 seconds)
  done (took 2.527336231 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084195267 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.060967245 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.060874933 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079500802 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061612887 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.061137242 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07963373 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.06153046 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.062906266 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083896623 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.060948802 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.060672368 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079392654 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080867183 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.062000583 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079942947 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079220711 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079395244 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.061104814 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060773361 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.08198839 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06073884 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079477381 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.060933552 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061273357 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.061043179 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060846274 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.081438868 seconds)
  done (took 3.204180464 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06174412 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.060716033 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.061477751 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.061682436 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.061251012 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.061164071 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062229773 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.061816067 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.060988052 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.061885192 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.06128795 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.061298771 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.060933149 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.060732552 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.061018725 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.061225807 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060929395 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.061336424 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061560852 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061100014 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.060733933 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061084221 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.060749005 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.061303213 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061463481 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.061325458 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061344941 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.061624936 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061993836 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.061410477 seconds)
  done (took 3.101119696 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.071599462 seconds)
    (2/2) benchmarking "in"...
    done (took 0.069945591 seconds)
  done (took 1.402430949 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.061329251 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075962707 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.059776068 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069967704 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068112031 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.062704545 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.068738596 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068418454 seconds)
  done (took 1.78992748 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.064643632 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.086905784 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.060303292 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.06173584 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.064719814 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.118021284 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.074050055 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.072455898 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072319271 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063197498 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.061670866 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.073076602 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.060792188 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.07303683 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.062832888 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.071965489 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067384154 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072759458 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072793925 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.059817 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072746604 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.061765895 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.059991278 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.062155372 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.061019271 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066966894 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.075696794 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.07259607 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068617823 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.058593597 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.079090921 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.060096434 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.060984709 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068779555 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.064548521 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.060031731 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.095845832 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.060653831 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.065948687 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.059733258 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071683529 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079687783 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073556785 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.077649825 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.061858827 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.062038292 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.059503499 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.061781467 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063361472 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068857977 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.059685029 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066731919 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.059217396 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.061764269 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069963415 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.060403949 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.06621439 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068814935 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072928485 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069890158 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071698521 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074428423 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068321661 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.069090776 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.06066995 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076856156 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.060451042 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070712761 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.072663067 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.060232591 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071649611 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.058604566 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.057591375 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.058566924 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090309428 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.060365915 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.059615706 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.059521526 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.059964405 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.061636552 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069502181 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.066162731 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067101369 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.063594837 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075333769 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.06891321 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.060167223 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.067454432 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.077596488 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06293392 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.059955712 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.075619768 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.062953943 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.059434733 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076861907 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068883652 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.061328133 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.060588215 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063397023 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.072624264 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.061285721 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.058263304 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067705263 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.061383992 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.062490361 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.0642766 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067297381 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.059241068 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069175244 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.064887533 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.061267878 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.05813478 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063092381 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.060445174 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.057714555 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067721639 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.058768955 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.073678705 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065201546 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.072709188 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072874879 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.069003054 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073842996 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.059003615 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.057617704 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.075949866 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.067330967 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.060080518 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075936057 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.193322953 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070215343 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.059944687 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.061765506 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.068438684 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.058924286 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.06157833 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.060441744 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.065887016 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.062326436 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.061147414 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.063349384 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068112299 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072486022 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.062439357 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069035201 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.061037439 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075532333 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069610557 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.064441691 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064277558 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.061073356 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072375845 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066658769 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069159833 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.059666297 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.060857425 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.059431123 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.068667731 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.068686947 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.060889312 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.067130419 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.063167559 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.060048401 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.058855035 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.060247822 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.062791831 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062881779 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.059863535 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066591031 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067448119 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.074631096 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067403707 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068210559 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.059591827 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.059879155 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.062360565 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.05979083 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064163194 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068861646 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.074756873 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071506846 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080034496 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.060166332 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.06931403 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.061805839 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.076090715 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073201672 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.060926708 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.06540779 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.059001105 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061610801 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068700932 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071574181 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.074157647 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.07469199 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064188581 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064313226 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.060313547 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074465188 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.060145555 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066615102 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.067783178 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.063271294 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.058572431 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.060426533 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.067176139 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.063134173 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.059101627 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.073595274 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.065167982 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.058166624 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071900115 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.05888501 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.069179566 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.058179796 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.061895846 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.063393038 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.060566827 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067901713 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073306579 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.058219182 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.059415545 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073281314 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.060743826 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061372777 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067631913 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.073995424 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.062917179 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066236629 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06928885 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067734497 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.062764298 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067642824 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.059423238 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.067097354 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.062044738 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.069494996 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.058150624 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.075096578 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.057325783 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.072414924 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.05894197 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.068982748 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.05874102 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.066802596 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.059091094 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.073916019 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.059350606 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.058623365 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.068807224 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.056446953 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.066556197 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.057249084 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.062808588 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.063578235 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.065958314 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.059153123 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.066263425 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.058992188 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.065616695 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.06176871 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.065942625 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.066811389 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.201489355 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.059671402 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069833827 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072486309 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070029618 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.063146761 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.062596488 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.0617554 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070057623 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.062318078 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.062242284 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068240726 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.064969391 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.06589727 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.06233169 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.062210272 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.062437669 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068629519 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.0700077 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.078146612 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068945125 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06669165 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068324297 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.059628306 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073935844 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.059472082 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066755663 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.057909153 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.065335163 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068086541 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.058880969 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.078390242 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.060360395 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.066769427 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071044741 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067038038 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.062563464 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.075983755 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.063135522 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067028114 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.066470971 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065321358 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066625838 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.062888183 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066909587 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068406476 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070180029 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.061221401 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065472525 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067149694 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.060972034 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.067268179 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.060572987 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068934227 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.060693334 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.058188417 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.063046516 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.069417145 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.063106831 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.06343788 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.059020419 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.057452004 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.058950893 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.065869818 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.063080286 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.06676424 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.072970474 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.057612279 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.059555486 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.058421023 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064272714 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.075636838 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.068409077 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066293599 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.063685397 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.057902073 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.060537913 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.06073834 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.058735089 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.062422242 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.057892478 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.058372477 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069294133 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.060536562 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.062697606 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.058790869 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.059650038 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067616956 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.063817932 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.059011874 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065067549 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.058599588 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063335452 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.058253131 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.060072291 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.063095154 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.0580999 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.061997556 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.068704963 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.074216636 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.064898709 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.066874475 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.059698611 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.066090769 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073079672 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.066475469 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059487252 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.067419317 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.058247227 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.075933138 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.066805355 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066273426 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.067694547 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.059225327 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.0736796 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.062570963 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.067646832 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.072530716 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059157002 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.065146748 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.057427574 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071902087 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.06187441 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.057252389 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.064899001 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064913706 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.062838876 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.068063009 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.058185503 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.064695442 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062665086 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.060324934 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.058555164 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.058579054 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.206532467 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074803191 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.060559367 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.064730935 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067568951 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066787034 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.063438647 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070488043 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.066518706 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060775704 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.060642212 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.062432665 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.059668012 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.070627852 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059928848 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.064753538 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.064355674 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.059617962 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.065485405 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074406963 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.06811975 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067706077 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.058500294 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.057975879 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.076107485 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.062309663 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.063140683 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.066889716 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.06776133 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070747011 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067718912 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074685226 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.059833842 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.064792237 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070809112 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.060219976 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.058337293 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.062215014 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.060471967 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067634183 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.068765963 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.065874672 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.061300154 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.065453462 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071155686 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.060379397 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.063036982 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.063885848 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.059390467 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.068467322 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.066052106 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066563387 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.05975303 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.057953902 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.061479682 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.066729936 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065463021 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067249675 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059981069 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.065649705 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.071722675 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.065921777 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.062141756 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.058318403 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061927281 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066893843 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.063987305 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.058260219 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.063194704 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.061982463 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.06605231 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067161072 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.063718855 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.058668917 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074700302 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.066312667 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.067650418 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.060445592 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.061172666 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059283251 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.058545853 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.069420365 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.058723804 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.060385584 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.063522896 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.060597702 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.075590934 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.066801841 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.073692962 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060138314 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.063342083 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.058888591 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067845202 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.063303375 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.058802068 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068443464 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.058096828 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.073543317 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.070532353 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.067267021 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.058399953 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.063320969 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.066071365 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.07219421 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067696075 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.067541865 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.062599405 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.068096329 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.060333829 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.069038972 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.058748364 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.057730863 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.067972407 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066075884 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.070242737 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.058050799 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.067676266 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.060054458 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.065510363 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.065372853 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.05940132 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.059410515 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.059803831 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.066561634 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.0619541 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.066525036 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.062340064 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.072867363 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.058356076 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.067246465 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.065677275 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.067489755 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069915683 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068648661 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.203380772 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.060608733 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066752356 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.067355242 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.060714679 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.063726683 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.062982817 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.079704421 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.061176527 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.060921487 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.07297534 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.066531184 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.059001825 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.06621091 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.063894648 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.068656581 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.061230634 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.07030691 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.064766115 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.061728576 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.064780001 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.064711982 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.058544737 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.058576641 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.058890525 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.068154707 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.064640166 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.060301067 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.07963514 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.062422122 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068968666 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071675547 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067080575 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.06291967 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059576229 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.061959684 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.072336315 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.074891945 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064025994 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068358653 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.061953448 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069642521 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.059608892 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068436958 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.086512663 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068267057 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.059800713 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060806745 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073672994 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.074586392 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.063781605 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.07075187 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068819158 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.061426251 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.081019098 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068302759 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060747852 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.068885542 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060936033 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.057729365 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.05776457 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.060421236 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.06951154 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.058214044 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.061312034 seconds)
  done (took 40.764964441 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.09644932 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.059807937 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.058542628 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.059248928 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069647596 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059452663 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.058185741 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.059544211 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.059538336 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.061571523 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.058428934 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058823499 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069281054 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.071871295 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069006715 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.062731534 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058361868 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.059175946 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.058395575 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059291714 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.068987224 seconds)
  done (took 2.705341337 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.066199131 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.073889002 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.070551046 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075241127 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066640335 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.062977297 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069837532 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062801367 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070258945 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067832431 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.070748953 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062889958 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067958967 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.068813323 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068338558 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063128183 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070323348 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066254285 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.062629345 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069318631 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062939428 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069285545 seconds)
  done (took 2.834181828 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.060299835 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.059361318 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.066756974 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.05823875 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.058565984 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.062425547 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.057844594 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.062125955 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.061872827 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.061709157 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.06639139 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.058715482 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.057559949 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.063057133 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.057710791 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.05837632 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.099136744 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.059005289 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.058929944 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.058308106 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.06334055 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066457082 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.057841977 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.058289733 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.061725453 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.061883909 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.058115295 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.061176975 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.06030713 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.06275262 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.059173901 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.057526746 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066793046 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067172411 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.063905082 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.063521149 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.061198649 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.060297061 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.058427029 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.058677464 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066387717 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.059758151 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.05797019 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.059554085 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066507971 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.058008201 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.057980624 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066198325 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.057640156 seconds)
  done (took 4.375974875 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.069754132 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.107892099 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.064301973 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089264686 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.071446797 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.065651163 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.064152106 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089899501 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.05922396 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.060314287 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.072166053 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.072620645 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.061580492 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.062995878 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.065396793 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.061243435 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.061988736 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06037415 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.063954619 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.060564218 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.064219171 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.06478593 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.071233505 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.071617442 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.062283262 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06015521 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.060510001 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.062547755 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.071289096 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.065332737 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.062971252 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.063209228 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.071750791 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.063844412 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.061085231 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.06085739 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.072466977 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.061539424 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.061125492 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.059884032 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.060761352 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.06245075 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.065291661 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.072772319 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.061803239 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.065778222 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.061515184 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.058927387 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.071945983 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.061402989 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.065835417 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.072983584 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06252088 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.062036448 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.063110788 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.072018291 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.062048449 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.059949586 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.061694427 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.071604734 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.059313858 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.061977916 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.072309778 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.060631969 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.064787428 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.072271482 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.06594028 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.062179114 seconds)
  done (took 5.983656216 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068651119 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.089834014 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069971278 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069766937 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068845503 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.069093562 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068402714 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.068539068 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.068950051 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069274295 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06914056 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106719258 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.064636254 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07352252 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.068601563 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069048945 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.068826005 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068589219 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068604005 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068727258 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.068787936 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.069348169 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069118838 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.069021654 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.071513274 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064818426 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068568325 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.06851318 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06930722 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.06883122 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.071338065 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.068543747 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.068754401 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.069084422 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.071618079 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.069143083 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.058960401 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068774712 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.068515218 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.068890624 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064943475 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069202402 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068559538 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.064902598 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068473974 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.068530277 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.068998217 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.071504565 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076289942 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069380469 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.068743564 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069648426 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068850225 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069033541 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.069606138 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.076365266 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069595841 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069568131 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069301751 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.069890021 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069404192 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.079119661 seconds)
  done (took 5.733953227 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0738112 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066344181 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.078041768 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060493045 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.058544633 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067466902 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.058006218 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.058087674 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065806769 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.066053633 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067725637 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0677659 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069752055 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067373443 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067553536 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070159175 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067822958 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067751838 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065486496 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067541924 seconds)
  done (took 2.710212449 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.071478601 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.075593865 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.064046494 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067847476 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.063368516 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067681474 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.062782941 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06344106 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064769868 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063836937 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069482152 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069163383 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064315516 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068071183 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068690726 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067865339 seconds)
  done (took 2.43607447 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.064991764 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.066293138 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.065274553 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.059597841 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063203105 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.058786522 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.059926447 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.057775839 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.058606275 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.072641117 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.059182386 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070651738 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.059333902 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.058370259 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.059062313 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.065060571 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.058641895 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.059474526 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.059201811 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.064774566 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.066423991 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.060289319 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.063178666 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.059005237 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066759506 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.065945681 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.060785121 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.062862622 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.059355903 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.059593805 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.064939669 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.065781866 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.058947633 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.060399993 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.058355336 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.059182457 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.059064908 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.059962002 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.064472724 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.059603954 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.05806818 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.06386593 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.059038579 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.060153741 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.058718863 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.059911959 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.05878405 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.064809998 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.059575903 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.064789917 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.059066168 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.061296404 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.060120398 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.066371345 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.061476665 seconds)
  done (took 4.760009876 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073353981 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.063794067 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.058402799 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.057880878 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.063088619 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.064072651 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.063439302 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.063258256 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06409567 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.058327673 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.063964886 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.062935105 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063597243 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.063597197 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064182078 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06362791 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.059002696 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.064950724 seconds)
  done (took 2.511969144 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.069912227 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.063475993 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.068104804 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.063468895 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.062879506 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.062922939 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.05855956 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.058140542 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058062181 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.063054328 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062992271 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.062206735 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058539308 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.062916917 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.063380954 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062847067 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.062987519 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.058387191 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062836552 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058254682 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.062309235 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.058710593 seconds)
  done (took 2.73414304 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.085543706 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.081387071 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.121227274 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.076500122 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.084652333 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.068369986 seconds)
  done (took 1.887184922 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088097144 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100513449 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063141256 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.063338311 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073229394 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066395898 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066110312 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066218449 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072504366 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070540764 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066904501 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072259526 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072632783 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068157027 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072520416 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074980834 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066560689 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066229818 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.063065389 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074662424 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066564127 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072365509 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070268872 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066281861 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066506645 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068080025 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075222364 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070588826 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068379508 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072790645 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075151686 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06713935 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07267252 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070850013 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.063206272 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072520568 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066988935 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075077143 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072470294 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068156694 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.062856832 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072763664 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072720046 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068124077 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074973618 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066865236 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068337307 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066842474 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06676563 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07755941 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07289895 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068732196 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072622042 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075476825 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075461914 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077579803 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070949464 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068777173 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072459896 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070701136 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068910979 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073002513 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06855989 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07074828 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075329663 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068496856 seconds)
  done (took 6.049368749 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096068567 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063858718 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068309308 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071638155 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068877806 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06628846 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066891081 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066550595 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06645763 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.063873799 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101271088 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067658312 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068527139 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068580734 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066915293 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067361313 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066619919 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068550118 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064133156 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077174333 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066372227 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06832768 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06827174 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068152152 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07090169 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075163744 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066394212 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066162418 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066727474 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066394851 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068586781 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066891378 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068749093 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.0636677 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068211304 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066623709 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066403105 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068620424 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066451311 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072532399 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06845372 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075251958 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0663794 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066473475 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070806067 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066574195 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066358677 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.063892501 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066587634 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.063730421 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071044834 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070882528 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070498893 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068652491 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06680084 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066421508 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066599132 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066510878 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067032136 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075605283 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068049128 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06635646 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077518187 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066770449 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066409407 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068288003 seconds)
  done (took 5.941418338 seconds)
done (took 124.251609023 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.206013791 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.181996617 seconds)
  done (took 1.736395288 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071845074 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.093514464 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.072197139 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130955745 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.068922547 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.10223683 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.101260216 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.072370454 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067992763 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.068042933 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068160722 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.071038739 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133163321 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.06856839 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.067888611 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.071133494 seconds)
  done (took 2.699734271 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104029247 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.175790536 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108320701 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066444266 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101962829 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072869811 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.066479143 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076867075 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070291257 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.069863577 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073762637 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071656068 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.069688096 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071615696 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.069709435 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073035438 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.069366844 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072995637 seconds)
  done (took 2.861995989 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.091752822 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.084414883 seconds)
  done (took 1.555196121 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.158337076 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.103769892 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.142294958 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.313959297 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.129642748 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.126101765 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.129608674 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.125635182 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.111891706 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.120476241 seconds)
  done (took 2.835088444 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101025934 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.171287437 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.303354473 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.118208979 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.074640152 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.100209717 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.118894784 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078426817 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.076995515 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.076258285 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.078438866 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.073831863 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.094108283 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072765259 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073096202 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.073386608 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.09754122 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072249512 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.071563828 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.072301064 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.097078723 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067208592 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072928077 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072129097 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.07414678 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.074519876 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.068550213 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.067220211 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.072639961 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.071558037 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.075150111 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.094973608 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.074541974 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.096991591 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.071003768 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.098080563 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.071815885 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.070327801 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.072029064 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.070765537 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.073621318 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.073719783 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.075369261 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.073254227 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.068226627 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.071514593 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.068313179 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.06709111 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.07562416 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067891946 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.075836748 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.074650315 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.096997252 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067992932 seconds)
  done (took 5.965742983 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.106779965 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.102132506 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067449818 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.108991413 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101059344 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070019381 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.100244387 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095001869 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.104224298 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.0662189 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065932596 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.066048335 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.073861152 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.076174661 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.110721456 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.103607828 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068602527 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.06655961 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.103497006 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.103327856 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065502833 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096995777 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.095030359 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102484788 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.064988238 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06673011 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.064874716 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.065804046 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.071585701 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.072194682 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.065675209 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.073276139 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.077661941 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.072245376 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.064738108 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.065229993 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064810698 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.072951429 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.073708971 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.073682117 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.072196068 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064726286 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.065580352 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.065913665 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066274486 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.064951267 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.072601811 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.072968125 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.072216282 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065583429 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.065967059 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.065544464 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.065971358 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.072909058 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.071981475 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.07379121 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.073155643 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.065493838 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065463282 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.067004953 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.074426511 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.073657215 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.073278853 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066307809 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.074146866 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.065301045 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.07458151 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.076981788 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.065243286 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.065785113 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.065330713 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065288338 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.065574155 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.071728457 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.071491929 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065830433 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.065155422 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064610442 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.074127107 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.071887022 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065052088 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.071060399 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.0643879 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.065490261 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065564123 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065646916 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.071566044 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.073237801 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.066117696 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.064982884 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.06537845 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.065440176 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.064604808 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.071639854 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.072521909 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.072744559 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.071789855 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065727214 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.072151889 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.072401518 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06538723 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.071243616 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.064496449 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06508298 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064844939 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07150173 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.070502048 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.07221907 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.064312321 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.064048791 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.070139152 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.072745057 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.064034124 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.203712019 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07544842 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.073763867 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.065800339 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078270854 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066073793 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.074615272 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06599198 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075006645 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066368105 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.073120941 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.0660486 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.06571094 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.066326583 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.073092342 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066399597 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067864678 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068207669 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067632843 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.075784704 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.077923226 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066308608 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07312488 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.073709207 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.066400277 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.072369972 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06556235 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.073943638 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066585177 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066706649 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067593041 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.075282963 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065958576 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.065833043 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.065561116 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.077285483 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065763019 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.074713341 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.071819222 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.064801096 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.075636676 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.075001609 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.07244516 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.075234839 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067026471 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.066130468 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065377253 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.065577551 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.071719933 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07294327 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06601508 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065841851 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.071623294 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.074125267 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.065174659 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.071807245 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.072027206 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.07227612 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.066076293 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.065452031 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.075034403 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.074382234 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.072459215 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.071958727 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.072801129 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.065521596 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.072314176 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.072598149 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06560046 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077643729 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06590611 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.076409311 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07278916 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07162309 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.073134001 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.074259575 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.074876992 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.074852947 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.07667138 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065494496 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.065382197 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.072934393 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.065324038 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065697671 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.072279925 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.065833259 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.065726306 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.076923424 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065686863 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.074413122 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.065047213 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.073163537 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065439659 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06589001 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077022469 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065746538 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066039922 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07219943 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.065798996 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.071803399 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.074439044 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.071845384 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065029174 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065913662 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.072526238 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.072190046 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.064576011 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.064368384 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.064671312 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.070192659 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.06987765 seconds)
  done (took 17.564425618 seconds)
done (took 36.610871327 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.199113684 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.154512312 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.188426087 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.111391611 seconds)
  done (took 2.130844587 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.093357242 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.094416609 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.075087875 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.062204945 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.07929827 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.062133269 seconds)
  done (took 1.89009085 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.266257383 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.186453847 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.168514956 seconds)
  done (took 2.032486927 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.210722211 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.190689571 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.466131277 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.286299964 seconds)
  done (took 2.666924262 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.128155596 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.075951379 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.061006781 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.071028899 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.104696408 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.133841497 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.084839782 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.107039815 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.071661596 seconds)
  done (took 2.312947884 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.126380861 seconds)
done (took 12.602845024 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.101557179 seconds)
    (2/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.219056617 seconds)
    (3/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.20526806 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.094819505 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.156562416 seconds)
    (6/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.199122896 seconds)
    (7/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.243344474 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.065177536 seconds)
    (9/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.225372739 seconds)
    (10/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080287198 seconds)
    (11/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.184409705 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.072858472 seconds)
    (13/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.226974645 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.11890784 seconds)
    (15/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.180224125 seconds)
    (16/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.073331378 seconds)
    (17/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071060417 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.088696061 seconds)
    (19/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.065986434 seconds)
    (20/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.203771243 seconds)
    (21/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.375555395 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.08847657 seconds)
    (23/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.066233326 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.088757975 seconds)
    (25/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.069327435 seconds)
    (26/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072539314 seconds)
    (27/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.062161268 seconds)
    (28/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.076462334 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.128551342 seconds)
    (30/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.164380649 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089954708 seconds)
    (32/309) benchmarking ("sort", BigInt, false)...
    done (took 0.245795768 seconds)
    (33/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.069930192 seconds)
    (34/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.180155459 seconds)
    (35/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.214885043 seconds)
    (36/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.073561327 seconds)
    (37/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.061309247 seconds)
    (38/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.112676842 seconds)
    (39/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.155798731 seconds)
    (40/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071030444 seconds)
    (41/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.175909669 seconds)
    (42/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.082338143 seconds)
    (43/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.1680053 seconds)
    (44/309) benchmarking ("sort", Bool, false)...
    done (took 0.140646041 seconds)
    (45/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.194889762 seconds)
    (46/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.076493011 seconds)
    (47/309) benchmarking ("sort", Int64, false)...
    done (took 0.064126264 seconds)
    (48/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.073689033 seconds)
    (49/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.184523443 seconds)
    (50/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.153344294 seconds)
    (51/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.062067294 seconds)
    (52/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.071222958 seconds)
    (53/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.166099855 seconds)
    (54/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.081474439 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.061206517 seconds)
    (56/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.088275381 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.117777755 seconds)
    (58/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.181573884 seconds)
    (59/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.073061906 seconds)
    (60/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.068672884 seconds)
    (61/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.205702701 seconds)
    (62/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.064757352 seconds)
    (63/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.062623268 seconds)
    (64/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.160921264 seconds)
    (65/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.180577022 seconds)
    (66/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.154588256 seconds)
    (67/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.18399616 seconds)
    (68/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.07354241 seconds)
    (69/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.135736843 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.086412251 seconds)
    (71/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.08883638 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.082977422 seconds)
    (73/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.061019228 seconds)
    (74/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.088707073 seconds)
    (75/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.060962775 seconds)
    (76/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.18941099 seconds)
    (77/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.059822313 seconds)
    (78/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.296390654 seconds)
    (79/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.213903185 seconds)
    (80/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.064637455 seconds)
    (81/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.145088801 seconds)
    (82/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.0641382 seconds)
    (83/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.071028803 seconds)
    (84/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.063451091 seconds)
    (85/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.0701419 seconds)
    (86/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.063792454 seconds)
    (87/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.074331977 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.137827284 seconds)
    (89/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.062113443 seconds)
    (90/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.06886062 seconds)
    (91/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.070722212 seconds)
    (92/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.145400652 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.08533348 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.06304353 seconds)
    (95/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.141275206 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.090677698 seconds)
    (97/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.067207537 seconds)
    (98/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.063839804 seconds)
    (99/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.153678097 seconds)
    (100/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.074222949 seconds)
    (101/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070099417 seconds)
    (102/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.155464288 seconds)
    (103/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.229858536 seconds)
    (104/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.072552547 seconds)
    (105/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.061631365 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.081735184 seconds)
    (107/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.070659786 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.13898195 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.07797651 seconds)
    (110/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.177892019 seconds)
    (111/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.168415851 seconds)
    (112/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072176802 seconds)
    (113/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.065428295 seconds)
    (114/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.151934964 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.091243183 seconds)
    (116/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070973824 seconds)
    (117/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.21698161 seconds)
    (118/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.061631603 seconds)
    (119/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.06650069 seconds)
    (120/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.061432747 seconds)
    (121/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.14157947 seconds)
    (122/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.144500655 seconds)
    (123/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.068876258 seconds)
    (124/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.139822505 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.108877797 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.062418896 seconds)
    (127/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.072240108 seconds)
    (128/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.063906338 seconds)
    (129/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.14171202 seconds)
    (130/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.062042359 seconds)
    (131/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.183213192 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073751859 seconds)
    (133/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.064127263 seconds)
    (134/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.069787991 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.062518918 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.062765189 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073661495 seconds)
    (138/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.140173107 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.088373779 seconds)
    (140/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.07961432 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.125982928 seconds)
    (142/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.062193474 seconds)
    (143/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.06991688 seconds)
    (144/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.069616202 seconds)
    (145/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.06171464 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.085103338 seconds)
    (147/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.061789722 seconds)
    (148/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.062532484 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.082423427 seconds)
    (150/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.22744773 seconds)
    (151/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.061788034 seconds)
    (152/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.061979994 seconds)
    (153/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.088908272 seconds)
    (154/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.063536332 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.116889718 seconds)
    (156/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.061439692 seconds)
    (157/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.070046278 seconds)
    (158/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.063142931 seconds)
    (159/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.061451182 seconds)
    (160/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.062224977 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.062353913 seconds)
    (162/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.147998705 seconds)
    (163/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.062044033 seconds)
    (164/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.068934638 seconds)
    (165/309) benchmarking ("sort", Int8, false)...
    done (took 0.162953114 seconds)
    (166/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.068840767 seconds)
    (167/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.062763801 seconds)
    (168/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.090533177 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.118436518 seconds)
    (170/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.144837041 seconds)
    (171/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.062839378 seconds)
    (172/309) benchmarking ("sort", Float64, false)...
    done (took 0.129091153 seconds)
    (173/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.06469756 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.127677371 seconds)
    (175/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.064816688 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.146368474 seconds)
    (177/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.069245922 seconds)
    (178/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.063892241 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.084791096 seconds)
    (180/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.061147394 seconds)
    (181/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.060973416 seconds)
    (182/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.068666548 seconds)
    (183/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.061978291 seconds)
    (184/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.135239534 seconds)
    (185/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.062460231 seconds)
    (186/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082278855 seconds)
    (187/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.071965891 seconds)
    (188/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.072907847 seconds)
    (189/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.137867598 seconds)
    (190/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.23589602 seconds)
    (191/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.14143395 seconds)
    (192/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.066044828 seconds)
    (193/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.072132768 seconds)
    (194/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.063995698 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.086973445 seconds)
    (196/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.064322901 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.120577906 seconds)
    (198/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.074423193 seconds)
    (199/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.063123542 seconds)
    (200/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.063820532 seconds)
    (201/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.06286483 seconds)
    (202/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.165414595 seconds)
    (203/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.169634283 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.063159806 seconds)
    (205/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.063060047 seconds)
    (206/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.062768212 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.084436633 seconds)
    (208/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072609895 seconds)
    (209/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.064707449 seconds)
    (210/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.069934861 seconds)
    (211/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.06339298 seconds)
    (212/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.075329781 seconds)
    (213/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.070533614 seconds)
    (214/309) benchmarking ("sort", Float32, false)...
    done (took 0.131782589 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.127624633 seconds)
    (216/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.064106815 seconds)
    (217/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.062051316 seconds)
    (218/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.069878924 seconds)
    (219/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.071805236 seconds)
    (220/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.062008296 seconds)
    (221/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.070618577 seconds)
    (222/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.062037189 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074593791 seconds)
    (224/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.061453218 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074960406 seconds)
    (226/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.137899797 seconds)
    (227/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.06369343 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.141113785 seconds)
    (229/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.063764399 seconds)
    (230/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.071235123 seconds)
    (231/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.069808227 seconds)
    (232/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.070357574 seconds)
    (233/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.061707421 seconds)
    (234/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.063073859 seconds)
    (235/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.061936143 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.084951673 seconds)
    (237/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.06156855 seconds)
    (238/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.063206898 seconds)
    (239/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.062531847 seconds)
    (240/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.063323632 seconds)
    (241/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.062132919 seconds)
    (242/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.066971099 seconds)
    (243/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.063071549 seconds)
    (244/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.061845683 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.141471904 seconds)
    (246/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.076320767 seconds)
    (247/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.063078588 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.062687115 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.083399074 seconds)
    (250/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.073298553 seconds)
    (251/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.06113136 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.086772632 seconds)
    (253/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.061884329 seconds)
    (254/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.064351493 seconds)
    (255/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.063179959 seconds)
    (256/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.061897597 seconds)
    (257/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.063218847 seconds)
    (258/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.071607579 seconds)
    (259/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.063646848 seconds)
    (260/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.064497491 seconds)
    (261/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.062369524 seconds)
    (262/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.063700437 seconds)
    (263/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.072130429 seconds)
    (264/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.06662407 seconds)
    (265/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.09071353 seconds)
    (266/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.175137909 seconds)
    (267/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.063123048 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.119284424 seconds)
    (269/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.061934945 seconds)
    (270/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.211273826 seconds)
    (271/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.062063877 seconds)
    (272/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.065963951 seconds)
    (273/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.07148499 seconds)
    (274/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070972256 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.06304935 seconds)
    (276/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.062189274 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.062732995 seconds)
    (278/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.061801064 seconds)
    (279/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.063143795 seconds)
    (280/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.121969307 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.110379888 seconds)
    (282/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.073608672 seconds)
    (283/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.063588257 seconds)
    (284/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.066229444 seconds)
    (285/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.173174055 seconds)
    (286/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.063092592 seconds)
    (287/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.063050913 seconds)
    (288/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.062605369 seconds)
    (289/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.062341148 seconds)
    (290/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.062302714 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074222696 seconds)
    (292/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.069223656 seconds)
    (293/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.06980402 seconds)
    (294/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.063362154 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.144428357 seconds)
    (296/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.163954712 seconds)
    (297/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.06930673 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.062665874 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.070001269 seconds)
    (300/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.064357494 seconds)
    (301/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.063985637 seconds)
    (302/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.091580806 seconds)
    (303/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.176122454 seconds)
    (304/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.064068141 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.088681179 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.062962751 seconds)
    (307/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.062655042 seconds)
    (308/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.069559625 seconds)
    (309/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.062554017 seconds)
  done (took 31.995009014 seconds)
done (took 33.427750223 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084069371 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.087193883 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.070704009 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.082292271 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079127049 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.098292035 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071438949 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.076000885 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078055941 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.077196485 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.076062403 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.070208121 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.072540773 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.072239487 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.070191779 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085484466 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077959001 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.071193884 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.071322718 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.061991801 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.071350039 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.062966877 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.061883746 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069711937 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.074061793 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.069505175 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071597072 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.071507063 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.062796906 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.063550517 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.067667053 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.071318353 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065157279 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.07477575 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.070604893 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.0714605 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.072269123 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075428389 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.061554497 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.062784357 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07263152 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.063104011 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.070766578 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.068983464 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.067381512 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070099347 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.070494248 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.073864473 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.084355492 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066806052 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073012677 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.073379081 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.073795075 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.067926328 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.067718864 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.07094633 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.068859185 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.084608654 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.071438419 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066900043 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.072610345 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.071563529 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.069035654 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.070775564 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.070699448 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.073652295 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074327249 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.069502062 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073100938 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.069626083 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.062429251 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.071079389 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.067273774 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.063023575 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.073645722 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075940588 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.06101482 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.067242428 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.070248512 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070717293 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.061984972 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066863112 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.061390328 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.067620527 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066768741 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.068771304 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.067971202 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070553296 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.061516051 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.071121065 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.069986945 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.070356717 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.061357918 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074811861 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.061949995 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070862455 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.062724139 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.062544837 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.061348958 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068089602 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.062441956 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06676202 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.070999902 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.061468774 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.067070079 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.075808099 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.062810006 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070123496 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.06136859 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.061878875 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.073030091 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073220972 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.062742116 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066288791 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.061916361 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.06793601 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.061957932 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.062611393 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06256891 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.062525198 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.067156531 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.062582704 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066443957 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.068001563 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.074813861 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.062259356 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067219916 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066729722 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063192461 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069063474 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.062672274 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.062423053 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.061656591 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.075366329 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065803646 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.062017145 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.067422742 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066145602 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.07000832 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.060402843 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.070113116 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.067214693 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.065870491 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.068008307 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.060586431 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.212653128 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067601218 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067708876 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.06263663 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.063419968 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.061858686 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.063097528 seconds)
done (took 12.205178625 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.065139345 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.089146072 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.071198233 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.078338624 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.074683484 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06396616 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.066450276 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.078776786 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.06583883 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.08153977 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.084736844 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.083563606 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.089355499 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.062165122 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.064351035 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.065331831 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.062940535 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.071976953 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.079537165 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087303302 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.094225692 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064632928 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.073518794 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.080740615 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.074989733 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.080491241 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.065504959 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.065761035 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.067431663 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.082255963 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.088169022 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.062831035 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.063978001 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.076619641 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.076252362 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.069270023 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065574351 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.068407982 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065914828 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065394858 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067048091 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.079312583 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.072165394 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.069368984 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.065776578 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.065643693 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.06517756 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.068677217 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.078476028 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.068425376 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.073126166 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.076855018 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.06693699 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065335913 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063811517 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.06918615 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064461967 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.065138106 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065545841 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.06446009 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.06499087 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.06720071 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.065701619 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.065917676 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068250957 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.067771428 seconds)
  done (took 6.198364062 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.081574158 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090781541 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.079831282 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.080460075 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.063204487 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.064022321 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.063808035 seconds)
  done (took 2.059989798 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.0642947 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.076101245 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079132432 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079552958 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.071623452 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.080721124 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.063938562 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.093208953 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06288194 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.075073294 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.107940689 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080620652 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066952024 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.075098355 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.064316893 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.070897937 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.063724601 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071756675 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071364683 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079811853 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067569199 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.092012726 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.077546871 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.063998848 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.083458109 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.067587936 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.062464549 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.064296357 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065059686 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.064753809 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064649865 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.102318459 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.06794955 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075583032 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065479513 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.06295083 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.069563229 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066949241 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.066446824 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.072262558 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.069124394 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.064789218 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.061935643 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064688103 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.066091279 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.067345042 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.06237934 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.064869997 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.064918781 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.074908299 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.06253222 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.067260657 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.066765307 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068456321 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069759243 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067871234 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.071881853 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.064803112 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.075733193 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.071602022 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065840876 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.10689408 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.073867391 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.071174848 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.073628236 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.069479223 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.069618883 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.0724701 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.066485166 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.066772283 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.066141708 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.071788589 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.063117038 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.065860657 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.067190787 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.06507999 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.067697316 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.079746483 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.079730746 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.07600647 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.065441335 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.064766707 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.06715958 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.079789314 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067680438 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064648167 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.066955807 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.062611571 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.067652684 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064816615 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.069897441 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.065128159 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.071817045 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.065952287 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.067365475 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.071651117 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.063503458 seconds)
  done (took 8.37686878 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.067070431 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.065267994 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.065639396 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.064858903 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.064456883 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.064644943 seconds)
  done (took 1.959997678 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.087382463 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.064326211 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079163893 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.06477801 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.099923034 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.070335658 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.070451857 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071861073 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.076947868 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.076602533 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.070469023 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.073042089 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.070278612 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.065855559 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.070072763 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.065299501 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.070119023 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.067153559 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.075851575 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.065553091 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.076533812 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.065738531 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.065582536 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.075241278 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.06673291 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.064758379 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.06476508 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.076631049 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077711593 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.072156288 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.065306331 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.066245955 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.071447254 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.072040515 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.070231292 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071666104 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.06366716 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.069446739 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066083739 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.066458556 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.072531034 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.065879595 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.066204897 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.068974653 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.071650308 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.071381843 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.069198428 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.067726118 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.069946155 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.06895379 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.069136192 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.064402024 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.066512554 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.069331033 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.071834025 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072256572 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.069482723 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.070287766 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.065502528 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.071730845 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.064808499 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.066824238 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071702439 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.068349939 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.067124244 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.06912355 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.071735758 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.065617898 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.065575126 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.063535116 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.06886229 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.063815106 seconds)
  done (took 6.564629121 seconds)
done (took 26.67824795 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.56454972 seconds)
  done (took 2.072416623 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.555829615 seconds)
  done (took 2.104738755 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.703389848 seconds)
  done (took 8.25017471 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.280142505 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.337242377 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.708671747 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.127821744 seconds)
  done (took 3.036824558 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.715218713 seconds)
  done (took 2.271151645 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.230402704 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.220871927 seconds)
  done (took 2.015647954 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.342665399 seconds)
  done (took 1.891403446 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.124304695 seconds)
  done (took 2.667990194 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.218831769 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.155534497 seconds)
  done (took 1.92915057 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.483882908 seconds)
  done (took 2.031684582 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.015829276 seconds)
  done (took 5.568009766 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.229358644 seconds)
  done (took 1.806667474 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.232505689 seconds)
  done (took 1.784481463 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.717381079 seconds)
  done (took 3.265191665 seconds)
done (took 42.255357594 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080376843 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082275476 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.08250581 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077185752 seconds)
  done (took 1.842214752 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.071406917 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.065991337 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.069498294 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.070153483 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.06851531 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.069218715 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.069311281 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.065958121 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.067853485 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.066073145 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.066253954 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.067891322 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.071152987 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.067943635 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.070974247 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.072063437 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.06808496 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.068282438 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.071506904 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.068210403 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.070312129 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.066381857 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.064705155 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.066001883 seconds)
  done (took 3.190990564 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.075699357 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.070150204 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.073141009 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.069969676 seconds)
  done (took 1.843462811 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.071827835 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.080279096 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.081684948 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.089614421 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.072327187 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.072300525 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.078845675 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.080254976 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.062101915 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.082375946 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.064375831 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.06339148 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.063189197 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.082962688 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.078862928 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.059717121 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.061113723 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.072503523 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.071769309 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.073961526 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.066024655 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.063822841 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.074679093 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.074121614 seconds)
  done (took 3.299370681 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.076399384 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.062691897 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.075876278 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.08880857 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090954287 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.06370692 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.076515088 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.091080829 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.126115031 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064296808 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070548809 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064344924 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.105372094 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064421127 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079744815 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.106620202 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.109673923 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.06831915 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096758828 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064022258 seconds)
  done (took 3.209688734 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075200368 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.066447963 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.067971135 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.064747845 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.07525399 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.070220243 seconds)
  done (took 1.984994773 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.065941592 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.064395904 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.064514194 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.063503979 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.068648509 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.064547759 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.063649012 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.064396564 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.064828229 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.064816683 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.064044457 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.064157219 seconds)
  done (took 2.335885401 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.165252879 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.065787415 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.067351186 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065459555 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.068517787 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.063733083 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.077737473 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067447677 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.08390787 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065738294 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065619272 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067976881 seconds)
  done (took 2.484122105 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.093150401 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.090258307 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.126497551 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.107182685 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088145703 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.091080724 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.141537899 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.130289637 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106837261 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.066089617 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079422575 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099884709 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096143767 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.132761212 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.10605269 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.069052128 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.096248199 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078028497 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100544709 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108540796 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105130166 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108201947 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.085383908 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097402905 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099922033 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108833596 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.068203343 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.067485416 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.131676284 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.094354106 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.085967707 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.08903538 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10555778 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.065530273 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.082508463 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.095331299 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080951128 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098512209 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.083677942 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092225513 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073704768 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.120189355 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.096724653 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102073616 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.117098226 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089633617 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.101126502 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.096702206 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.079961486 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.111912899 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.094079624 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089647844 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073294379 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.15008537 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.087675774 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.101172794 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.107928956 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.07808948 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.084408617 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.089191689 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.117603087 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.093180974 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.248262085 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101299033 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.086145211 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089145296 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.129933338 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083445755 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.102812564 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.127125818 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.089539205 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.075740282 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.091191475 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.069082918 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.098443249 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100800359 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.0923361 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106762111 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.076778652 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.117512652 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.104228509 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.070222162 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.108740793 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089126263 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.151282874 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095794606 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.098702608 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09017749 seconds)
    (89/481) benchmarking "5d"...
    done (took 0.143547636 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082699262 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.076897852 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091244654 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.128644871 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087360526 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.093583824 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.122164097 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086879693 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.080189764 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.071821134 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.081875813 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091293627 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106002775 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.094604803 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085938509 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.079846453 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086269658 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.071915688 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.078221759 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.093423283 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085421033 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.114860088 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.100217163 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.110205943 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.074928341 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105119475 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.089822015 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.128806152 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.114798311 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.082504106 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107243076 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134694034 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.108457802 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.084968819 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.099214272 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111406489 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100886245 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.084911056 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.130303434 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108154257 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.233715068 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.089379234 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091126567 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.102952332 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.15018026 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091056736 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.107135259 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.138306855 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.106264661 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09532745 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.083118798 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.09107145 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106881211 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.137862696 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.089563577 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.067513376 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092185853 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.126663076 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074258901 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09288773 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.086375864 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.081609112 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.07874083 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.065303821 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.099490676 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.132197849 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.111699754 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098330089 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.092176686 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.066805832 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097338701 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094477124 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.144696875 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.113047353 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095834129 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.089514517 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09774075 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.07774786 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.127790698 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.127033295 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091234909 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089511226 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.123120084 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.087294162 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.099120707 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106332248 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103986907 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.094636197 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.136856986 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.120120442 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.114093815 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102744956 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.122330778 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.0780319 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105242076 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.070805718 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099853446 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.073657537 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098818631 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.074961488 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.107088303 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.230011075 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.099152032 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.067507111 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.073969831 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.103390619 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.087525647 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08354778 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.130016484 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.120514578 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.079269111 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.091866775 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.097768721 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095294784 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.104662418 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.084424158 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090865601 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.075370428 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.079443858 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089129873 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093421141 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.102073794 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.075661107 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.072802843 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.138297598 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101671644 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089459503 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089197623 seconds)
    (218/481) benchmarking "4d"...
    done (took 0.114836103 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.081425859 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.079834909 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102852512 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.134088256 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.116082368 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.078024994 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.088472564 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.066043825 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.081402023 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.072854705 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107858406 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.071427421 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.110691021 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.065442032 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.12780576 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085383545 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.099392262 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090732247 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.121552402 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.083077077 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.122059524 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084954235 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108181308 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093090327 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.087648611 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.104364298 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.089153938 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.096187315 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.101552851 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083970111 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087224884 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.120190516 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104571753 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.113523808 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.106467268 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.134297313 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105382127 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.071449712 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100846786 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.088212102 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.147077561 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.246358781 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.083105993 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.087765274 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104867686 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.082944323 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.142698526 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086845944 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.082305685 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.115927802 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.093316284 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.089704178 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075703946 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.102927116 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.087849051 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111590292 seconds)
    (275/481) benchmarking "3d"...
    done (took 0.095501073 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 0.092837341 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104336363 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10450518 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083663913 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084189822 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.122355494 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.126880015 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.09937027 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084660156 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085745404 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.097364854 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091430687 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.108507039 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07881779 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.073722241 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.066130562 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.069102103 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.115996199 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102866945 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091973421 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091867889 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.100105048 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.068665842 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086820219 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088564254 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.080638672 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.087476115 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.111172843 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.103213368 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.130320957 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.101336477 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092854089 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.140358526 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.129989544 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091201944 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094542492 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097182602 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.073750216 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.147590149 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.116814657 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.077785513 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.082263016 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.076977454 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084709424 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.070164725 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104953817 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104897491 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074299347 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.098861438 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093596741 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.116287023 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089019574 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073606186 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.077105082 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.070522349 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.070789283 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.245242321 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.075424417 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076168615 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.125806541 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10307104 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104397842 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.078959865 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073947249 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.131301302 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.069661458 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.135792272 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084603126 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.109549322 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.081231171 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080126939 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091607868 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.103046315 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105664438 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.11241559 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.068315519 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101788234 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.14947302 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074742531 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074093625 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.071736369 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110245458 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085878208 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.14536325 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087966675 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086606979 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075431473 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.122887765 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.102006175 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.080769562 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.122109988 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.077428389 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.069051279 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.079890751 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.105966396 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.069696458 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.072126043 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.110623466 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 0.6214427 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089199241 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.074593348 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.081835413 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.120843894 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080089243 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107426539 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.115612158 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105141362 seconds)
    (383/481) benchmarking "6d"...
    done (took 0.17774323 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.070989978 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090382854 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.104355479 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.095993252 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088800086 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.077414446 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.085294266 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086129089 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.077883155 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104523141 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.078789085 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.084794815 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.077678383 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.102425648 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.128434391 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083911393 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.101581756 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.236243002 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086277494 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097718182 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106907879 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.101495458 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.085177 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086653421 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.104295838 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.080775264 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.077296987 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098133877 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.07469654 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075338158 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.11196636 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.083633677 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.090554582 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102758859 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.082527382 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109027525 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.117725067 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111634681 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.096843193 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076814705 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.083876781 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.085394732 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.071657725 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077783955 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.073642531 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.06757147 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106410168 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083833249 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.079395583 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.100908641 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.106776466 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.098396994 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.106795266 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090675298 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096273398 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.101194491 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.128287141 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.151988222 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.097646309 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.117116547 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.131415425 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.075538261 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.073977915 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.078541292 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.133766689 seconds)
    (449/481) benchmarking "2d"...
    done (took 0.080588398 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09231337 seconds)
    (451/481) benchmarking "7d"...
    done (took 0.232617899 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.077937167 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.080985004 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.093559706 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108918685 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.080625932 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079120617 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096781937 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110495984 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082352003 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080078242 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091569857 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.102583516 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.128066927 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.086153502 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.073525208 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.108249061 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.100406819 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.121132138 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.070492965 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078937429 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.124292439 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083239255 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.249901949 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.078513444 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.119428957 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.131881766 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073339026 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.089035139 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.068523856 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.087315584 seconds)
  done (took 49.633557947 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.156493688 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.147694092 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.079633392 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.094475027 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.189850162 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.207456498 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.116350008 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.091449836 seconds)
  done (took 2.762478497 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.066657132 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.079729497 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.09954028 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081106135 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.063906374 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.065551501 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.194161998 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080373732 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.063330045 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.103037798 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.072764536 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.065468937 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.35589574 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.06551879 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.065456073 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.071653943 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.063981767 seconds)
  done (took 3.319551014 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.352721037 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.609735502 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.321654393 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.071775792 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.946272842 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.086192002 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.134911634 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.136373678 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.078801085 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.545726695 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.365421712 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.12966044 seconds)
  done (took 18.45476174 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.072902928 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.072165558 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.075115451 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.075231795 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071442502 seconds)
  done (took 2.038882043 seconds)
done (took 97.994435982 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079144191 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.165343771 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.065074694 seconds)
  done (took 1.937515259 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.080258594 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.078129678 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.077901997 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.075556604 seconds)
  done (took 1.992199694 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.07196998 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.073197021 seconds)
  done (took 1.819305967 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.237077323 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.159338612 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087621014 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.079924785 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076599282 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.076611836 seconds)
  done (took 1.914662971 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.069341053 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.06909465 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.069288218 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.069618534 seconds)
  done (took 1.943430118 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.06566549 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.063862042 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.065992107 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.067937286 seconds)
  done (took 1.931971833 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.080064582 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.080660968 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.075176167 seconds)
  done (took 1.905221024 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.109138547 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.096531331 seconds)
  done (took 1.874677903 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.076683719 seconds)
  done (took 1.753017542 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.086365969 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.091859186 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.145779932 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.106885681 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.142782626 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.127180082 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.074388073 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.075449815 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.071480317 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.069960324 seconds)
  done (took 2.662943134 seconds)
done (took 21.968797364 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07580254 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.358808641 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.356195826 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082624562 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.666489652 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.353058894 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.965688784 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.087198107 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.094700217 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064893458 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.081530306 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.645756828 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.95685036 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.320292313 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.942415797 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.319727921 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.64709852 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065303115 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064258107 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.065418918 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.950296484 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064737418 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.064903667 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06528639 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.646697771 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.36976489 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065987566 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.31952528 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.064693431 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068204485 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.353509133 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.066829018 seconds)
  done (took 15.964349448 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.067187081 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.117786242 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.069649486 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.080219289 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.067575412 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.066780557 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.068031291 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.065553514 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.105408372 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.065260463 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082011792 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.064990829 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.069616404 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067356045 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.085354117 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06597276 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067443833 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066276893 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068562169 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06705944 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.083502684 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.065202998 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066494719 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.066381066 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.066266811 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078613719 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067224063 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066194279 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066495559 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068609137 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.069304576 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06737913 seconds)
  done (took 4.001342905 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119435759 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122795345 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.070207701 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.104551716 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11500605 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.067141924 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.146258204 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.08726245 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.110061078 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.065670024 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.081609081 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.065870372 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100149944 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067407964 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08542808 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.066240261 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067521081 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066579783 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.0660785 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067191427 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.084136646 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.065370366 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066524291 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.066382744 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.066664556 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080841657 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069973943 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066063495 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065776675 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068685318 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070066587 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067113254 seconds)
  done (took 4.276111965 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.066487163 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.069398353 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.076748649 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.077618799 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.063787874 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.066189962 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.067557948 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.064018461 seconds)
  done (took 2.251750799 seconds)
done (took 28.183829201 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.075800651 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.065968966 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.068509145 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.084120247 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.070376381 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.067858218 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.062257692 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.070867096 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.068374362 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.068211371 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.070102804 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.064235382 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.066721127 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.062067264 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07020611 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.063519877 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.06954157 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.067571622 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.068852764 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.070027323 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.06559699 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.068909879 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.072095931 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.068161691 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.068443625 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.068263026 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.072490667 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.069289423 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.064379616 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.066963611 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.066092311 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.077749024 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.070121561 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.070767699 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.063865488 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.063950681 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.0676733 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.065808211 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.070006861 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.072453899 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.066286248 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.072847896 seconds)
  done (took 4.552734808 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.085338721 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091352503 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.082436052 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.079416886 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.100854453 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.079284422 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087687327 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.075630575 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.074574022 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086121907 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.070293915 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.075133184 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.076060235 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.070366969 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.074992069 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.071361624 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.076874108 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.070705328 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075982382 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.075198457 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.087777157 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.068844557 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.075954681 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.076660981 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.071588113 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.07708229 seconds)
  done (took 3.740755949 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.069648395 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08379163 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.089053807 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.150971315 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.107406203 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079265824 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078448313 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.097947891 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.096244312 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.065455033 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.068863791 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.091540751 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091651558 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.071767429 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.104049928 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.08204297 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.076158055 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.066838217 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.072104413 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097355148 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.086914852 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.082831337 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.096094896 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083688689 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.064502706 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.073326938 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071176669 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.078772792 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071724095 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076122705 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.06867562 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.067983786 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.06559673 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.076315818 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.069176784 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.062842206 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.085830791 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076528563 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078075815 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.106195519 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.074339085 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.066263474 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093837432 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.126190648 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.064357591 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.067277398 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.068710293 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076875675 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.065683598 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092658302 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082759735 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.064513311 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.082375694 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.065905919 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066153759 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080178945 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.06614407 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.066655286 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076146346 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070735451 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.084151928 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.068822793 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084062523 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.064407899 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075180055 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.065946299 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.066174981 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.063656245 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09839608 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07162455 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.11393933 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.06570323 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.062746394 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076159831 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075138268 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.070536225 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.064212186 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082125291 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07527896 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.06813319 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075770137 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.067596121 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.068208898 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.098191382 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.064164261 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.062740191 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.062803365 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.067128183 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.067552763 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.064986209 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.07767433 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.064382511 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.068159683 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.079022652 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.064641486 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069065453 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.067251602 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.066086149 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.064010747 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.075373611 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.068732296 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.06636039 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076684691 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.065466677 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.068250626 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078563727 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.07356678 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.064061839 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.065791255 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.067408013 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.066513425 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068611955 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.067957344 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.066348817 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.070333972 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.071758516 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.070186235 seconds)
  done (took 10.576340318 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.163545434 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.153939699 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.066515974 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.14861718 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.07285517 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.069960978 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.150203272 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.084066488 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.065383661 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.066771933 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.064840561 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.092379223 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.087422463 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.09870988 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.069983292 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.065810657 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.08793685 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.097058801 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.152076637 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.145665752 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.088220879 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.072485552 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.067306163 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.066895794 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.066706183 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.073165348 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.080258503 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.07313562 seconds)
  done (took 4.332897257 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.073613025 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.09019575 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.068756363 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.076804247 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.084709646 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.065455688 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.067267201 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.066181042 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.078916425 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.073022798 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.064898817 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.069600454 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.068756795 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.067818057 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.066215816 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.071689472 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.071895837 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.064210753 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.068972602 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.069682802 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.074850222 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.090596633 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.069485144 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.064935318 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.067562765 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.065247476 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.073182801 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.075835254 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.064765663 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.07901657 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.062449202 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.06920101 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.078631366 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070007353 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.064709145 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.065683669 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.065095242 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.065099928 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.065370333 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.063579345 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.062765294 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.070022386 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.064072261 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.072143461 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.078774318 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.071931001 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.066360006 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.067365813 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.067252488 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.062399874 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.06806041 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.068123914 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.067898545 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.072798438 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.068615521 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.067325057 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068898502 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.093850947 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.070666511 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.064750719 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064266909 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.06381604 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.066070306 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.074546799 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.081519839 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.066228351 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.063544629 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.065386045 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.070094518 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.078449503 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.064751052 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070105409 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.062416715 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.065256084 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.067329045 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.067722324 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.066067331 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.0639233 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.06494101 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.065634512 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.065440087 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.064993629 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.065045326 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.067926765 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.062875138 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.063341371 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.065749892 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.065948203 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.07213259 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.063803434 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.067911485 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.065907143 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.064089971 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.068033131 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.070253979 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.068040479 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.078939809 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.074573585 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.06569755 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06303252 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.078828215 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.066938577 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.06428322 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.071146277 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.068756606 seconds)
  done (took 9.001277455 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.086831975 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.066513929 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084722123 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.089412215 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.075140729 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.07039717 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078148402 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.066719457 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.080231927 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.064531116 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.073932503 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.063836014 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078681417 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.074401676 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.067062855 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.075332584 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.068165716 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084046682 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.079252007 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.063667355 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.073286041 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.076785214 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.077381628 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.081187551 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.081219787 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.082661078 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.07684707 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.069306001 seconds)
  done (took 3.862263987 seconds)
done (took 37.756948809 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.770261693 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.9464488 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.770514039 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.978637277 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.856667161 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.898710114 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.875874155 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.76609557 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.926103728 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.797017059 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.102155337 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.202789834 seconds)
done (took 66.652169292 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.845367027 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.938676936 seconds)
    (2/2) benchmarking "String"...
    done (took 1.998231762 seconds)
  done (took 5.640364279 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.929177092 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.531823292 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.037464477 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.777383039 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.782267215 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.172519699 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.563646469 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.221934405 seconds)
  done (took 30.792900576 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.883693477 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.00231045 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.448894182 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.490518881 seconds)
  done (took 15.573260195 seconds)
done (took 63.57644638 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.815187106 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.770824854 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.796824233 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.800046421 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.783544175 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.775620129 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.774219702 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.775220224 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.79269052 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.803040857 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.773338054 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.784242952 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.773162112 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.784142624 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.500971513 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.834106236 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.786872121 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.781944045 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.789762292 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.785700887 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.779873718 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.781054794 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.236472726 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.956389634 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.37598341 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.117854648 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.38511461 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.169848636 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.779661091 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.780578746 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.864818341 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.101358154 seconds)
  done (took 204.512191219 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.78015722 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.587514773 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.671252974 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.782508258 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.07829298 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.959448181 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.881813566 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.155605912 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.781877247 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.804550994 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.916559044 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.781509416 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.941037246 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.757810736 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.806790541 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.795431954 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.932644831 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.960569585 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.815220499 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.929775391 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.808373485 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.819414537 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.757711075 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.901803422 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.790753032 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.849779742 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.792952953 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.810908841 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.963017821 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.886497587 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.822367392 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.793324355 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.939605937 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.650019058 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.799856877 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.788409892 seconds)
  done (took 169.002138754 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.957586291 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.787820157 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.784145329 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.833863582 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.902206844 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.786022443 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.421323329 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.786705911 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.208038903 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.779812194 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.785601141 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.779606055 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.775013804 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.792404138 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.852463956 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.778611684 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.793163763 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.786255111 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.808898403 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.784221131 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.779144861 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.780785417 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.780097886 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.779608697 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.783742049 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.780772777 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.296745193 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.020687211 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.784559274 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.785588654 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.271097558 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.793983295 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.992636808 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.779784533 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.875880881 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.835550586 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.89077501 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.787130966 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.998680755 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.841788456 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.782857992 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.787582711 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.850084065 seconds)
    (43/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.796350931 seconds)
    (44/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.77958218 seconds)
    (45/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.777224806 seconds)
    (46/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.789217089 seconds)
    (47/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.852115229 seconds)
    (48/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.026930022 seconds)
    (49/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.785217852 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.785374394 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.907969922 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.262608653 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.786202728 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.783651214 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.785163957 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.348732119 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.78373901 seconds)
    (58/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.784854844 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.782877993 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.789041282 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.791038518 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.786013051 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.775909969 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.186262149 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.860319419 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.276537573 seconds)
    (67/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.790890599 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.383011651 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.781097022 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.97048908 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.863242189 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.777029124 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.775938151 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.776612035 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.778273319 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.779134048 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.778635628 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.899024027 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.784078022 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.880410895 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.858286804 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.900696702 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.779876452 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.786473441 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.604971535 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.847961869 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.813724461 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.602667247 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.779177437 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.151958328 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.53493953 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.778059741 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.778250781 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.79187545 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.779303912 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.779059349 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.781819725 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.85834774 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.778704815 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.899512529 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.510883154 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.413131993 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.996592857 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.77961405 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.785083787 seconds)
    (106/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.780740338 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.870809137 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.966408929 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.779778076 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.845410415 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.786281452 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.783770239 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.919272279 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.783081137 seconds)
  done (took 402.203573932 seconds)
done (took 779.44145691 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.359921798 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.339549402 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.456938898 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.355074765 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.32548229 seconds)
  done (took 13.543036693 seconds)
done (took 15.252210749 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.793677103 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.785542093 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.842997392 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.866428577 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.797139545 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.798153786 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.861223992 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.799731252 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.8304383 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.835341677 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.864173148 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.86391774 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.804263665 seconds)
  done (took 25.449842305 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.789001061 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.923072953 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.995172164 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.821375145 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.788559945 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.001260436 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.846319046 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.9339019 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.916909038 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.999785936 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.0231729 seconds)
  done (took 22.748481192 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.788906957 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.926468227 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.000828687 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.824109454 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.788993522 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.001007144 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.852443493 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.915702574 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.922821161 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.004144314 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.004717339 seconds)
  done (took 22.74700837 seconds)
done (took 72.654814679 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.781317271 seconds)
  done (took 3.491260096 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.793059849 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.918443344 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.77696783 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.7801529 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.781021641 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.77812434 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.78224698 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.778911312 seconds)
  done (took 16.097792101 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.78336734 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.783596316 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.783461611 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.783475248 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.783088119 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.78473622 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.783830837 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.783808569 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.784700967 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.783438689 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.786027646 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.783901128 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.783733009 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.783823808 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.784502198 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.784030058 seconds)
  done (took 30.258926401 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.788473619 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.783181157 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.785187176 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.784820308 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.784590169 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.785102227 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.785514823 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.783475613 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.78609149 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.785188054 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.784759415 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.787128484 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.785029579 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.784755627 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.784889511 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.786574085 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.787003613 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.785136871 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.789339957 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.786331106 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.787016047 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.785819569 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.78481942 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.786081209 seconds)
  done (took 44.568888608 seconds)
done (took 96.137642107 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.541627665 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.525476123 seconds)
  done (took 9.778765165 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.785456175 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.787868222 seconds)
  done (took 5.289883792 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.785598444 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.787761369 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.787254927 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.785691874 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.787374857 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.787748203 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.78535316 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.788000858 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.786310634 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.787181284 seconds)
  done (took 19.579410709 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.786577211 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.787180301 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.7875841 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.786914181 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.787185782 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.78730086 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.788921132 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.78868083 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.78618506 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.787698667 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.787716758 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.786702773 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.788700871 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.78787304 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.788112832 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.786848896 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.788434117 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.78841079 seconds)
  done (took 33.889697521 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.787979739 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.78814752 seconds)
  done (took 5.291188467 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.789002831 seconds)
    (2/7) benchmarking "second"...
    done (took 1.789206092 seconds)
    (3/7) benchmarking "month"...
    done (took 1.788601054 seconds)
    (4/7) benchmarking "year"...
    done (took 1.787559306 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.788827861 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.788083003 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.786847453 seconds)
  done (took 14.231207683 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.788359999 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.936453919 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.984472593 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.603305938 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.790565548 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.791514675 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.075198084 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.790980202 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.792587901 seconds)
  done (took 20.267742129 seconds)
done (took 110.042422731 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.5829597 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.781396154 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.044166846 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.8432329 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.802167251 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.118473991 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.799173136 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.425735844 seconds)
done (took 42.11504845 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.810529538 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.787515941 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.835779408 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.835790178 seconds)
  done (took 22.173906498 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.788997671 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.120319348 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.814107804 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.655792403 seconds)
  done (took 22.111280315 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.170220308 seconds)
    (2/2) benchmarking "read"...
    done (took 2.136511457 seconds)
  done (took 6.027087587 seconds)
done (took 58.840416782 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.791313471 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.789393039 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.789238165 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.789552376 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.789364093 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.789577577 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.791346306 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.790821738 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.791027125 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.78928559 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.789533558 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.789516064 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.790019447 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.789367205 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.791212623 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.789960185 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.790175333 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.793897347 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.790139534 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.789884844 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.790875741 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.791095697 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.790421843 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.790690726 seconds)
  done (took 44.683426603 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.790674262 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.792649987 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.791251825 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.792623031 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.792213094 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.792603855 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.793630522 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.791805975 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.792869243 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.79271936 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.791633591 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.793073592 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.791632631 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.791138062 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.79144981 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.791745495 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.791060234 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.792420268 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.792460895 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.79381404 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.792868989 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.793551588 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.791218014 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.793604863 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.794175862 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.793036168 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.793879542 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.794209253 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.796426334 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.796145814 seconds)
  done (took 55.501641579 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.796836885 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.796053794 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.797069093 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.796717118 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.797497514 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.795337263 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.795878723 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.795671697 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.79643834 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.796160004 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.795503758 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.79624425 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.796774737 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.796056602 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.797766315 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.797115672 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.797141866 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.799636624 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.797452747 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.796227075 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.798204169 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.796262897 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.799589656 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.796251901 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.798506261 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.798016099 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.797729324 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.797506485 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.799507355 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.79839474 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.798869918 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.798663212 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.797841882 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.798399303 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.797167186 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.797936906 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.796855845 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.797895948 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.798253536 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.800698883 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.799468996 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.800269794 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.799598895 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.79893398 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.799172579 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.800961798 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.799470414 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.799272327 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.799429218 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.798324541 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.799284713 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.799928901 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.79981491 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.798698695 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.799304247 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.799149838 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.79929441 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.799511307 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.798798424 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.800415559 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.800133477 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.801375138 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.798192584 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.800626347 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.798712647 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.800302383 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.799674561 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.801421889 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.800293581 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.79933711 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.798185391 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.801239556 seconds)
  done (took 131.210042849 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.79934191 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.800855224 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.798565891 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.799844972 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.799065319 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.802824246 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.799250808 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.7988091 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.80096662 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.800535076 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.802256348 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.80230458 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.800086123 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.800912372 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.800957529 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.800692692 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.802432789 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.801854896 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.802665665 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.801527842 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.802440964 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.80104678 seconds)
  done (took 41.344956472 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.799921282 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.802790746 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.804250057 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.800992991 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.802574803 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.802459212 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.803950994 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.803229481 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.801756822 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.803531787 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.8041584 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.802777507 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.803887259 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.802872565 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.802628503 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.803788633 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.80229381 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.802048741 seconds)
  done (took 34.177878889 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.802442103 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.803039558 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.80446936 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.802134338 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.803126825 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.804465408 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.803338759 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.803451136 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.80393988 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.803611598 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.804262887 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.804291303 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.803427003 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.803003883 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.803637162 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.803324239 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.80434318 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.804037108 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.803939253 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.803663863 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.804459237 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.804018127 seconds)
  done (took 41.408672079 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.804484164 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.80347908 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.802925065 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.805367954 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.80449688 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.803716441 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.805662504 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.805140064 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.804039314 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.804026257 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.804512701 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.803620679 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.807312689 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.804227685 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.80415954 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.803917469 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.803555124 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.807669188 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.804787525 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.805470382 seconds)
  done (took 37.821258614 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.803290145 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.802071175 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.80081522 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.801717133 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.802103432 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.802198209 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.802490152 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.80257101 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.801791633 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.801677861 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.802550254 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.803675492 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.803315232 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.803939403 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.802798284 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.802649561 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.803359043 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.803299726 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.802533596 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.805539494 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.803402691 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.803961292 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.804295444 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.803807561 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.803438331 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.804365159 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.804266638 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.803339302 seconds)
  done (took 52.21698404 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.806022461 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.806955793 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.808149322 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.807104655 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.809452296 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.808060345 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.805769922 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.807114506 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.807992167 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.807124154 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.808139914 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.806084959 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.807055394 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.806567552 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.80826976 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.806494409 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.807902715 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.808349542 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.808633824 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.8081507 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.807869774 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.807884379 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.809408829 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.8095972 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.808978399 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.807220161 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.808143243 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.808725784 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.808281828 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.80970254 seconds)
  done (took 55.966662794 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.830069444 seconds)
    (2/2) benchmarking "in"...
    done (took 1.828092869 seconds)
  done (took 5.388450038 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.808696258 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.808539175 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.808319783 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.807774831 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.808768631 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.80890693 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.808527302 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.808852512 seconds)
  done (took 16.201244048 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.808682654 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.80799884 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.809566809 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.809383744 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.805455307 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.812387141 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.813871488 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.805221741 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.808223012 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.813234812 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.812306194 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.807665259 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.81573757 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.81053782 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.809688909 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.813202901 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.805705951 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.808495397 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.806496044 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.811167677 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.80833349 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.806710778 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.810650193 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.807597532 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.809948491 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.809305277 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.815091579 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.806758761 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.808148187 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.813470992 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.813333346 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.812588173 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.810000166 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.807121866 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.809202774 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.810238417 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.812894383 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.809123627 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.806695327 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.810677391 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.807919127 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.809701711 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.80918909 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.816067084 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.8097365 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.811206711 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.811076846 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.808973271 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.813882679 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.809705186 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.819663588 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.807152398 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.812255691 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.811075088 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.808542572 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.808054553 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.809222099 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.808390961 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.813380809 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.816415818 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.811848951 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.826666068 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.815734129 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.80869185 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.808134699 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.817185688 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.831051987 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.81005846 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.809189498 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.812858171 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.816080646 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.813184074 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.812138949 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.813921155 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.821342893 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.817484526 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.80974961 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.813023027 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.813004449 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.809772748 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.810777202 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.81215084 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.808987344 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.810380445 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.816968424 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.831558901 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.809688382 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.811261571 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.810728597 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.817649327 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.814429756 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.811896305 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.816301299 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.81553162 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.809525072 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.820306608 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.811434374 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.810624013 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.815930052 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.818505243 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.814134862 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.814069941 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.813309646 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.818910608 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.814531182 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.813287656 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.809219786 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.812923766 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.818068766 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.812020142 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.812092865 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.815287285 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.818492827 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.816263955 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.815997529 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.813168951 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.819929635 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.818871059 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.820852698 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.814483065 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.815217647 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.814417069 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.820117244 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.833758531 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.817819708 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.814858252 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.815341962 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.824337286 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.815875401 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.818021442 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.813657034 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.816250172 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.816209841 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.813175429 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.817683897 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.814577642 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.817297695 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.81359526 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.816078092 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.81313838 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.821563762 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.813014331 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.816412289 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.813750172 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.816625299 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.813551279 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.815386135 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.819952037 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.820745085 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.814717489 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.817109477 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.81533342 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.822104383 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.814452033 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.817337575 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.816848079 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.816032403 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.822447313 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.816371785 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.814449507 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.817903709 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.821894751 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.822916802 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.815532651 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.814481215 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.822509703 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.813802202 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.815271469 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.81358376 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.813974619 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.817485077 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.814126041 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.819078232 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.817964358 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.819172114 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.81514599 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.818419104 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.819390329 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.816835253 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.824184687 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.817281551 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.823359594 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.819789008 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.821590633 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.819333606 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.814588292 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.816897767 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.816922511 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.814922384 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.820229793 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.82049744 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.81709647 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.834762174 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.825917723 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.816365876 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.823237827 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.827963671 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.822569715 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.82060365 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.820386255 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.81499024 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.816544728 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.818720289 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.817949911 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.820193198 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.819943599 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.82412103 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.82008734 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.820980508 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.818813078 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.822029057 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.81598247 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.821792164 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.817357998 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.820662169 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.824173705 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.823776905 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.820343879 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.82469052 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.820103496 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.820991592 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.818394005 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.81867375 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.818391131 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.821750489 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.818175377 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.821128237 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.823538669 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.817239625 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.825889757 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.825204208 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.824152945 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.823712051 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.821802934 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.819321539 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.820686026 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.82045168 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.830030921 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.820639832 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.821560353 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.822825912 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.821325243 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.820715494 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.819581571 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.818259763 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.820328507 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.820305156 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.819951268 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.82324499 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.826076733 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.823483523 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.818361355 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.823953737 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.828685501 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.826697104 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.818852776 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.819019717 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.822903507 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.828092007 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.824923714 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.826725905 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.829035569 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.820340218 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.828197481 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.828559235 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.819360852 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.830871069 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.828648299 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.82451228 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.824137605 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.820372416 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.821575764 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.824431386 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.821748018 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.827393768 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.828601926 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.82826552 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.827360435 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.820798994 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.820600579 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.825399654 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.820269635 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.821472551 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.820865894 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.820732956 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.82031014 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.825111956 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.821225854 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.821007063 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.821227543 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.828406911 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.825194956 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.821334321 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.823670611 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.829941856 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.826717175 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.821208943 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.82922674 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.820851318 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.826563938 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.822240345 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.82473434 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.821955004 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.821841854 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.827672126 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.829625403 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.82267711 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.824472488 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.831372925 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.824629926 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.83457524 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.823570479 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.831466962 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.822546648 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.825954257 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.823113265 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.825876734 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.831878519 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.826738769 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.828953429 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.830480319 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.83208942 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.82990968 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.82751617 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.827202236 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.823498404 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.824249898 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.829756816 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.827382936 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.824991917 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.827351653 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.822985304 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.82765006 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.830763232 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.824729715 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.824080239 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.823324955 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.830369274 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.827882199 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.825527886 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.823563772 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.823648996 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.825132301 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.828811333 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.8284347 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.831285528 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.825285349 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.831463083 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.830198746 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.827423738 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.834948369 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.825609427 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.826850262 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.8321535 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.828811517 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.833052693 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.828237675 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.826883899 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.832209146 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.82902185 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.832321063 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.837344634 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.832708549 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.836642509 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.825376809 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.826589872 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.825505013 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.834024084 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.851079409 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.825883725 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.826824865 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.833246746 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.832131171 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.827199667 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.829625955 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.828435137 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.832986768 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.827089247 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.832469473 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.827904087 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.836480073 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.827632856 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.831677646 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.828558823 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.828058004 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.834608245 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.83023908 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.832303046 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.828409825 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.833516569 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.836713015 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.830198793 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.835276458 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.826405253 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.830142531 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.827890947 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.830648816 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.826700657 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.827727768 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.828112106 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.827496755 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.827588433 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.831444266 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.832113053 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.829670589 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.833960473 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.829364575 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.827043198 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.835652229 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.8278282 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.827970506 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.829858292 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.833480436 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.836562848 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.831634041 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.834987951 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.83036337 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.83538731 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.82998428 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.832255883 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.833444395 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.829947999 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.834145036 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.830528239 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.828538833 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.838572901 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.831351539 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.83791036 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.835351027 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.830234009 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.837116948 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.835565516 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.837587685 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.829644696 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.834394711 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.829524568 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.829678281 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.829944916 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.829246693 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.829322308 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.837656308 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.833548706 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.834381885 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.837397341 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.830942961 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.832209367 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.832420038 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.831253559 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.834119603 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.833556249 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.833977163 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.836745227 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.829470978 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.83061684 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.831117177 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.831764203 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.83402727 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.830911892 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.830898636 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.838590616 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.834573152 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.834327516 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.831452532 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.834967063 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.835086549 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.838010582 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.837543894 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.834548146 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.833401345 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.845965666 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.835653387 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.830470046 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.839902438 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.835155369 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.832106637 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.832602704 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.833499944 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.835286846 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.838984669 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.837386049 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.832891065 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.83891334 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.837081569 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.83763572 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.83150782 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.83567927 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.832194961 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.83934299 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.836991479 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.833710109 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.846569425 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.837739209 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.833676946 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.843570531 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.836420799 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.833005839 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.83677617 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.836319722 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.83932104 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.840333214 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.835689442 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.833382573 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.833414514 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.83394483 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.832425927 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.833098892 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.834429521 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.837555144 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.836853077 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.837310408 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.840487219 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.843268915 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.837446032 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.833920846 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.835016812 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.836732354 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.852915655 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.834231588 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.835538766 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.835026558 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.833155871 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.842751138 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.841501703 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.849552997 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.837679448 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.836153736 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.839041603 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.85120925 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.835722804 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.84319109 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.865167957 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.845158301 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.835023712 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.831819054 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.843006038 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.83712888 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.845362185 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.83617819 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.842359017 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.837574278 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.8398271 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.843299054 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.840301375 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.840316154 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.835692922 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.843811914 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.840687324 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.836902821 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.843825169 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.837335928 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.84052386 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.842783528 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.845872749 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.840614507 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.840363772 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.840173325 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.836168835 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.838963841 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.836838126 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.846874559 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.838952661 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.836237469 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.849426749 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.85439829 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.836259003 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.841548425 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.837945223 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.840943404 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.837856612 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.841525358 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.839991959 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.848554323 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.840162476 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.847210866 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.837481107 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.838030103 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.837806138 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.840442678 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.839057088 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.848490278 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.84931702 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.84356441 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.844650062 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.843043006 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.840907643 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.842513225 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.843881857 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.837614395 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.838621483 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.838889029 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.841874798 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.842016024 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.842489562 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.840325861 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.848391522 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.840324606 seconds)
  done (took 1089.922672896 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.843822585 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.841404363 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.842618809 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.843996275 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.842192905 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.841318334 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.8415107 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.842589502 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.844445013 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.843831186 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.843059474 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.842375641 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.843464565 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.842324832 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.84410751 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.843420349 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.844439763 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.845483075 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.843615976 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.843095713 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.844344783 seconds)
  done (took 40.473507189 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.843204625 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.843285581 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.844839429 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.843873508 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.843824327 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.843403734 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.844302427 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.844101452 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.843862322 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.845134643 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.84465474 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.843646414 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.845173921 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.845303951 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.845576897 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.844824422 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.845060471 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.845159253 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.844516686 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.844707878 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.844661882 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.845385182 seconds)
  done (took 42.346571059 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.842418418 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.842306334 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.840466256 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.844691923 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.845203867 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.842989449 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.843849543 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.850643446 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.848018873 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.849100605 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.847732921 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.852565197 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.84509537 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.851168857 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.844586189 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.844190428 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.994074023 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.843181796 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.842856308 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.846246556 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.8428015 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.848729455 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.844951008 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.846539157 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.849129198 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.842873933 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.847983427 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.846437542 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.846836276 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.849571092 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.848187319 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.848239273 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.842013572 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.844087426 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.848838046 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.849932908 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.849575374 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.844005996 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.846024073 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.846402172 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.850416767 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.869058828 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.846845291 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.845714058 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.850737396 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.847327154 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.847541793 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.845967804 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.855418028 seconds)
  done (took 92.423605508 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.8484915 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.847806042 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.849627907 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.849449338 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.846814339 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.847601962 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.848210263 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.845942387 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.847623945 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.847024022 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.848994256 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.847018162 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.848088562 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.849318984 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.846910215 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.848897717 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.848665878 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.848516443 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.849039699 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.847256451 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.848154612 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.849568148 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.84870151 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.849286309 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.848299819 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.849654089 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.848470368 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.849287216 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.848718913 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.849220901 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.847726354 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.850079831 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.848794093 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.848710688 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.850419724 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.848911079 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.848723367 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.849626408 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.850434719 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.847962699 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.850653002 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.849978641 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.848426315 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.849397673 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.849660638 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.849207106 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.848719218 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.851365402 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.850261167 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.849708417 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.849994043 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.850234737 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.851079533 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.849689556 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.850251044 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.850846919 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.851258574 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.850776182 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.85129129 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.851103228 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.852157647 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.85135917 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.850147016 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.851929722 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.851321212 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.850641526 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.850553583 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.851323664 seconds)
  done (took 127.528733649 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.848773125 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.848310199 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.849090341 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.849395619 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.848479943 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.850146832 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.848718747 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.846946922 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.848965067 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.849826105 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.850803153 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.849656679 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.848440964 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.851040694 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.850373753 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.848726336 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.849181463 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.84920674 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.849238826 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.850399431 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.849362306 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.850007604 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.849503362 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.850363603 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.850337266 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.85091245 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.850361281 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.851029412 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.849392813 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.850952577 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.850458744 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.850511824 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.851003802 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.850708981 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.849403779 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.848482387 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.851601743 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.851366352 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.850899682 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.851057418 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.850535206 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.851543839 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.850321872 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.851651688 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.85151612 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.851162348 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.85278021 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.85338582 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.855435416 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.852108101 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.851629103 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.85186431 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.852065778 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.851532424 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.851126803 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.854347619 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.851763369 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.851865718 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.852810665 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.851793574 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.851263767 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.853149176 seconds)
  done (took 116.517481804 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.854892944 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.854799061 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.854257454 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.854294868 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.855199559 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.854136278 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.854990114 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.853505177 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.854952414 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.854475682 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.855274673 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.854610348 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.855787515 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.854820639 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.855016285 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.856679839 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.852820266 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.854336786 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.85591717 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.85546285 seconds)
  done (took 38.874066555 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.855821175 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.856134366 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.855990272 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.855113377 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.85706187 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.854350939 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.856168412 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.855854646 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.855149402 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.854506957 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.854973501 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.856296313 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.854367809 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.854712291 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.856066812 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.855459966 seconds)
  done (took 31.465342169 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.85535867 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.856473919 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.853097508 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.854544104 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.854745658 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.856164645 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.856752633 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.857072957 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.855528927 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.856898598 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.856902838 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.856191057 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.857638444 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.854364875 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.857071426 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.856762568 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.856142854 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.857509962 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.856952326 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.85480087 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.857083721 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.856914484 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.857341904 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.857369841 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.857618656 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.857802873 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.856710061 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.858086216 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.858566635 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.856450593 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.856953242 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.857625882 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.857113756 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.858398757 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.855079393 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.858110446 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.858111506 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.857763078 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.857436135 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.856274616 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.856845574 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.857696243 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.85800435 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.858208587 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.859714992 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.858855241 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.860126543 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.858221331 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.859216535 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.859535034 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.858451169 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.856782847 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.858366299 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.860060742 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.858937386 seconds)
  done (took 103.928886125 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.860872554 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.858984709 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.860047663 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.85730458 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.859552874 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.859030642 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.859712876 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.859110423 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.859459415 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.859581966 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.85965907 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.859424927 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.859993058 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.858963335 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.860442063 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.85965332 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.861592936 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.859889797 seconds)
  done (took 35.25694367 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.86044144 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.861026353 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.859978602 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.860417763 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.860224747 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.861258956 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.860706177 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.859758175 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.859129385 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.860535943 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.861015269 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.860014379 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.862052455 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.86086134 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.861244534 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.859393491 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.860590336 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.862254811 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.861755106 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.860202064 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.861916465 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.861181428 seconds)
  done (took 42.72011956 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.863640007 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.865239777 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.879535736 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.885617211 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.884033389 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.900381275 seconds)
  done (took 13.062555132 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.862063136 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.86134397 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.860906353 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.862469533 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.861584062 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.861549838 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.863419361 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.862159238 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.86321806 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.861533138 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.862604178 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.861520878 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.862444325 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.862684709 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.862268563 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.86251681 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.862219679 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.861787132 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.862952863 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.862496275 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.863435535 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.863203283 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.862672475 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.862505938 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.861952516 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.862289148 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.863550912 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.863011743 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.860974388 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.861754974 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.863711556 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.862352842 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.861011531 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.86479344 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.863277639 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.864558907 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.863453539 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.862970109 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.863618292 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.863130821 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.864201866 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.862337569 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.863439456 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.864204539 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.86381057 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.865865074 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.865221419 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.864795831 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.864585795 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.864334266 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.863667101 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.864528443 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.864380831 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.865243294 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.864989176 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.864784392 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.8645239 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.865032933 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865084394 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.864723139 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.864877354 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.863657956 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.86467456 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.864308551 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.864270746 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.864818764 seconds)
  done (took 124.765370718 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.865840961 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.865231795 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.864296338 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.864652934 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.863823441 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.864777099 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.865152347 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.86485237 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.864453371 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.865222908 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.864790284 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.866061335 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865932316 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.864152469 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.864839637 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.864070231 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865154656 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.866462445 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.865243835 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864821714 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.86556257 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.86588274 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.864837145 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865292805 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.867138893 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.865965783 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.866202069 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.865551381 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.86558581 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866616698 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.867720775 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866355453 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.866250338 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.867062045 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866641987 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.86610302 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.86692459 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.8654865 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.867801844 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866711781 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865920917 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866696458 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.866809978 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.866160595 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.867474303 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.866182159 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.866725062 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.86855803 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.868421171 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.86692341 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.869496209 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.866410707 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.868376951 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.867186063 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.867108089 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.867421216 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.865482675 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.867862991 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.867523196 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.868539105 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.868028021 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.867721298 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.868904672 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.869126124 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.86845443 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.867657966 seconds)
  done (took 124.97038734 seconds)
done (took 2541.90219679 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.867748894 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.963751266 seconds)
  done (took 15.622046006 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.028304111 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.980360645 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.865636401 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.896911259 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.867454646 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.889868715 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.888155549 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.866369496 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.866984206 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.868226613 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.866338484 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.051216796 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.920444108 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.866129464 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.867026166 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.959300425 seconds)
  done (took 52.341176097 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.871598989 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.866438546 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.882294812 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.866569897 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.871499302 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.8827497 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.894824161 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.875039662 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.909054138 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.884033709 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.942157138 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.882522478 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.873489833 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.921656107 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.886476837 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.886539436 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.970414889 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.949403865 seconds)
  done (took 35.904404387 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.948960563 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.881712612 seconds)
  done (took 10.623569988 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.884913612 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.900511024 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.875949487 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.889038214 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.870663876 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.893388012 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.875735101 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.872781879 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.878390975 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.886207934 seconds)
  done (took 70.616676936 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.867707454 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.867489744 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.868624549 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.863501932 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.86050956 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.867602306 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.86286626 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.859708999 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.556840225 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.908335694 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.879227673 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.872216919 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.864198933 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.865146679 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.86588024 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.889535584 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.96966528 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.86894465 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.866009955 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.870314227 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.866106606 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.913933216 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.876875835 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.869365629 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.902879138 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.561449329 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.880894472 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.869252419 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.971920104 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.865738182 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.864995594 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.07509943 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.873316957 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.337509712 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.180277087 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.87544774 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.877037424 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.870536063 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.866693633 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.974472236 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.865482227 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.869279531 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.807324249 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.157297496 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.973794891 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.913606389 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.2222147 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.868165614 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.865533422 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.898199368 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.869337941 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.865330456 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.88711705 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.383251944 seconds)
  done (took 132.807379904 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.873926449 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.220571573 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.037357857 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.871318028 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.15394117 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.077491684 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.872713696 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.91855277 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.872206693 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.100574349 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.124228318 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.975647424 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.873192501 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.871625185 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.870580862 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.870662153 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.016098279 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.940227724 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.873845954 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.870104048 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.898299346 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.110294331 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.990330117 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.874681098 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.89742122 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.076884315 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.992073037 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.974054214 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.638464784 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.870409358 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.932709149 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.875387907 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.874145556 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.871355454 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.024203227 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.964964385 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.954549587 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.873477752 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.872636962 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.872104322 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.617106588 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.069092924 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.966284097 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.998562149 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.12433839 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.075520147 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.649763134 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.872483517 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.601930967 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.034116796 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.098916527 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.103976963 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.993048407 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.875501112 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.204609566 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.872156657 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.871838658 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.119168822 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.093816497 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.969416158 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.875765493 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.873353125 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.872726485 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.160028165 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.87868063 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.967802438 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.877079857 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.874346628 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.96873728 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.973087192 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.105842518 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.085655632 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.903176718 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.210932106 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.386039374 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.118585664 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.938079572 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.122834488 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.87623505 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.874273793 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.952929157 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.714214815 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.127653625 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.154067148 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.117515215 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.909118973 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.595360233 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.875337013 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.09885387 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.094556079 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.123866696 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.116929212 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.114303764 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.195808194 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.875420766 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.874809991 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.133584502 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.994111293 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.879078461 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.214199591 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.105431023 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.419662501 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.90181852 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.18122408 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.005879533 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.879851766 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.510341126 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.877661369 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.099241636 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.916180988 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.877994034 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.87728578 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.092259365 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.847823904 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.87656476 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.526035533 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.935113503 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.877162657 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.105482314 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.880028606 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.136228553 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.878765117 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.104806176 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.96890821 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.90724686 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.050410734 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.121637558 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.879907288 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.118057554 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.1134555 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.989930616 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.095515592 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.495141765 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.877216636 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.162366696 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.88052741 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.877562686 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.044632099 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.878989927 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.020949284 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.883040832 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.158993499 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.899076755 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.114790036 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.881749683 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.135456931 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.91022852 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.928316632 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.881001767 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.007963969 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.880286824 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.703453651 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.033444211 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.879179438 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.879674366 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.430543801 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.878350109 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.025062599 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.100973513 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.899820701 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.94846797 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.543339614 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.878995771 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.962754173 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.902741884 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.263142736 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.879594688 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.130052336 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.88116582 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.878591418 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.878381912 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.159541851 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.061165244 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.882886169 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.880171088 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.775728513 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.878920055 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.879449728 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.059154984 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.252808118 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.879277835 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.079000179 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.882630502 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.005575028 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.884992556 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.953544583 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.210845782 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.88054047 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.879251759 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.879058563 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.881948966 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.881605237 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.085490504 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.903894607 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.395073868 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.016204903 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.147219467 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.188616649 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.118929536 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.921706222 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.885108581 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.134749049 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.884033289 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.943002276 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.883470828 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.899841005 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.110084472 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.884794294 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.089473072 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.150795058 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.884624822 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.929614666 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.885488529 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.881879428 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.882327872 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.021215267 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.969443819 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.885293839 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.883902568 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.994965564 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.001522695 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.094171902 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.882178262 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.94385913 seconds)
  done (took 904.812381738 seconds)
done (took 1224.522709862 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.880514647 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.880669996 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.884902904 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.884931778 seconds)
  done (took 29.331282592 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.873358941 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.882341699 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.877684101 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.881266636 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.873749015 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.882801679 seconds)
  done (took 13.072043377 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.948666055 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.881121384 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.882666023 seconds)
  done (took 21.512702696 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.957427651 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.285354691 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.021134807 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.309622159 seconds)
  done (took 10.376603572 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.881595169 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.877230492 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.877708443 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.874963378 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.874713372 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.87671056 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.873101615 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.873970569 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.875601058 seconds)
  done (took 18.688039753 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.63104671 seconds)
done (took 99.415087199 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.53109331 seconds)
    (2/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.188749828 seconds)
    (3/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.23176756 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.057597641 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.979133819 seconds)
    (6/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.07873595 seconds)
    (7/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.660910501 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.982106172 seconds)
    (9/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.197454812 seconds)
    (10/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.362950119 seconds)
    (11/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.643131892 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.896686839 seconds)
    (13/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.882498826 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.493142476 seconds)
    (15/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.009105701 seconds)
    (16/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.037482863 seconds)
    (17/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.902203866 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.196038562 seconds)
    (19/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.944305742 seconds)
    (20/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.878634633 seconds)
    (21/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.036318893 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.193551855 seconds)
    (23/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.946000434 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.272307052 seconds)
    (25/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.974621315 seconds)
    (26/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.895451708 seconds)
    (27/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.056546653 seconds)
    (28/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.8863526 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.09401902 seconds)
    (30/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.061643885 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.872045818 seconds)
    (32/309) benchmarking ("sort", BigInt, false)...
    done (took 6.889044962 seconds)
    (33/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.031246497 seconds)
    (34/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.12911932 seconds)
    (35/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.174471999 seconds)
    (36/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.281079488 seconds)
    (37/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.978383073 seconds)
    (38/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.892134618 seconds)
    (39/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.033572583 seconds)
    (40/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.911023047 seconds)
    (41/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.885531195 seconds)
    (42/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.304972986 seconds)
    (43/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.020873907 seconds)
    (44/309) benchmarking ("sort", Bool, false)...
    done (took 2.107908771 seconds)
    (45/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.10498306 seconds)
    (46/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.888316466 seconds)
    (47/309) benchmarking ("sort", Int64, false)...
    done (took 5.509846759 seconds)
    (48/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.152044322 seconds)
    (49/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.882651479 seconds)
    (50/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 3.826162228 seconds)
    (51/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.04702973 seconds)
    (52/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.906443074 seconds)
    (53/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.034018362 seconds)
    (54/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.764398535 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.975138622 seconds)
    (56/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.888926154 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.030578151 seconds)
    (58/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.053027009 seconds)
    (59/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.906493279 seconds)
    (60/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.02082842 seconds)
    (61/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.887533595 seconds)
    (62/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 3.977665457 seconds)
    (63/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.165296227 seconds)
    (64/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.323857248 seconds)
    (65/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.262951316 seconds)
    (66/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.073787547 seconds)
    (67/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.269081013 seconds)
    (68/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.047862293 seconds)
    (69/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.757047194 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.644594315 seconds)
    (71/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.46291727 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.86828164 seconds)
    (73/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.270911674 seconds)
    (74/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.890581023 seconds)
    (75/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 4.091663826 seconds)
    (76/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.330467549 seconds)
    (77/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.967581486 seconds)
    (78/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.986985353 seconds)
    (79/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.183069456 seconds)
    (80/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.301942594 seconds)
    (81/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.890203018 seconds)
    (82/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.890936148 seconds)
    (83/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 3.742303073 seconds)
    (84/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.125374631 seconds)
    (85/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.905582532 seconds)
    (86/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.098859266 seconds)
    (87/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.016501245 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.011549019 seconds)
    (89/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.191000304 seconds)
    (90/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.970371532 seconds)
    (91/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 1.969238553 seconds)
    (92/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.994821538 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.780084733 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.236643475 seconds)
    (95/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.058419576 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.863284522 seconds)
    (97/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.909013946 seconds)
    (98/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.888557169 seconds)
    (99/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 3.757201332 seconds)
    (100/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.388847452 seconds)
    (101/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 2.274031035 seconds)
    (102/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.247070186 seconds)
    (103/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.269160223 seconds)
    (104/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.569717255 seconds)
    (105/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.259007448 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.195330031 seconds)
    (107/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.909139715 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.011024022 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.200209472 seconds)
    (110/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.893672466 seconds)
    (111/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.354930398 seconds)
    (112/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.911142664 seconds)
    (113/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.890511697 seconds)
    (114/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.383999522 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.283547581 seconds)
    (116/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.0521468 seconds)
    (117/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.889691271 seconds)
    (118/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 3.92599118 seconds)
    (119/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.981776809 seconds)
    (120/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.984813878 seconds)
    (121/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.151874684 seconds)
    (122/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.989514935 seconds)
    (123/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.206743393 seconds)
    (124/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.356564202 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.014844047 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.128663259 seconds)
    (127/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.921375043 seconds)
    (128/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.987079156 seconds)
    (129/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.080543215 seconds)
    (130/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.028058597 seconds)
    (131/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.888329649 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.170387744 seconds)
    (133/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.888576668 seconds)
    (134/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.995363604 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.285751141 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.222765569 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.182679755 seconds)
    (138/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.891878193 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.568479046 seconds)
    (140/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.60895243 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.988993064 seconds)
    (142/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.589062097 seconds)
    (143/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.911046697 seconds)
    (144/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.910285685 seconds)
    (145/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.164479264 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.794047447 seconds)
    (147/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.201926382 seconds)
    (148/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.096415589 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.003906834 seconds)
    (150/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.109179226 seconds)
    (151/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.910372594 seconds)
    (152/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.137799182 seconds)
    (153/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.903715872 seconds)
    (154/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.202050456 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.694563895 seconds)
    (156/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.520615408 seconds)
    (157/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.970233753 seconds)
    (158/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.070954989 seconds)
    (159/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.268298253 seconds)
    (160/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.983645965 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.218145304 seconds)
    (162/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.896081933 seconds)
    (163/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.891899944 seconds)
    (164/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.907481311 seconds)
    (165/309) benchmarking ("sort", Int8, false)...
    done (took 4.8550365 seconds)
    (166/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.199687437 seconds)
    (167/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.526340707 seconds)
    (168/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.923650259 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.896871026 seconds)
    (170/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.970580577 seconds)
    (171/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.121940692 seconds)
    (172/309) benchmarking ("sort", Float64, false)...
    done (took 5.61975821 seconds)
    (173/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.988916687 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.015368986 seconds)
    (175/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.950177411 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.893246157 seconds)
    (177/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.918615706 seconds)
    (178/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.404141028 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.91211758 seconds)
    (180/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.009195717 seconds)
    (181/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.370094189 seconds)
    (182/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.104129708 seconds)
    (183/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.815879097 seconds)
    (184/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.146121373 seconds)
    (185/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.670350627 seconds)
    (186/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.713221523 seconds)
    (187/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.904569504 seconds)
    (188/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.971852352 seconds)
    (189/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.890934506 seconds)
    (190/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.510057744 seconds)
    (191/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.990619991 seconds)
    (192/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.841699183 seconds)
    (193/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.582781199 seconds)
    (194/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.991124369 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.252654569 seconds)
    (196/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.214482362 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.901852593 seconds)
    (198/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.632727606 seconds)
    (199/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.019941211 seconds)
    (200/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.221233418 seconds)
    (201/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.147528608 seconds)
    (202/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.899574961 seconds)
    (203/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.897679679 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.245370454 seconds)
    (205/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.61115039 seconds)
    (206/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 7.010889432 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.872987649 seconds)
    (208/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.912941074 seconds)
    (209/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.894201712 seconds)
    (210/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 4.143239522 seconds)
    (211/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.207550573 seconds)
    (212/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.917006345 seconds)
    (213/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.96313502 seconds)
    (214/309) benchmarking ("sort", Float32, false)...
    done (took 5.562928791 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.00116972 seconds)
    (216/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.166302653 seconds)
    (217/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.023874617 seconds)
    (218/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.130235139 seconds)
    (219/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.525843176 seconds)
    (220/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.994358847 seconds)
    (221/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.971935333 seconds)
    (222/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.969781098 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.502733706 seconds)
    (224/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.998061985 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.201438743 seconds)
    (226/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.052471855 seconds)
    (227/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.304026851 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.89952438 seconds)
    (229/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.382315233 seconds)
    (230/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.923869344 seconds)
    (231/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.896039986 seconds)
    (232/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.91685011 seconds)
    (233/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.165247263 seconds)
    (234/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.008574276 seconds)
    (235/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.103472667 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.784860137 seconds)
    (237/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.987982063 seconds)
    (238/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.004745066 seconds)
    (239/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.084006595 seconds)
    (240/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 7.003002408 seconds)
    (241/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.654111242 seconds)
    (242/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.041521118 seconds)
    (243/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.897440743 seconds)
    (244/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.08215007 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.929661634 seconds)
    (246/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.716809789 seconds)
    (247/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.901711613 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.327816529 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.022438241 seconds)
    (250/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.900129289 seconds)
    (251/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.07201927 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.502623394 seconds)
    (253/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.049799501 seconds)
    (254/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.873884447 seconds)
    (255/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.302846762 seconds)
    (256/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.303252226 seconds)
    (257/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.302457166 seconds)
    (258/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 2.035411629 seconds)
    (259/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.135875311 seconds)
    (260/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.861490586 seconds)
    (261/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.113247463 seconds)
    (262/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.895577636 seconds)
    (263/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.975757947 seconds)
    (264/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.031176758 seconds)
    (265/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.919856358 seconds)
    (266/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.898691851 seconds)
    (267/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.990353332 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.641550277 seconds)
    (269/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.30761073 seconds)
    (270/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.228866564 seconds)
    (271/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.30897177 seconds)
    (272/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.901559119 seconds)
    (273/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.951693658 seconds)
    (274/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.911663432 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.210070996 seconds)
    (276/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.014776788 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.165626888 seconds)
    (278/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.0880195 seconds)
    (279/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.983665443 seconds)
    (280/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.905814284 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.024563317 seconds)
    (282/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.375001489 seconds)
    (283/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.675122414 seconds)
    (284/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.142344846 seconds)
    (285/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.901849669 seconds)
    (286/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.976090468 seconds)
    (287/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.062637151 seconds)
    (288/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.90667239 seconds)
    (289/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.179125886 seconds)
    (290/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.13195279 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.753106765 seconds)
    (292/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.915879799 seconds)
    (293/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.919529556 seconds)
    (294/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.307619712 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.925822313 seconds)
    (296/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.23659423 seconds)
    (297/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.905810702 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.251629265 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.933436108 seconds)
    (300/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.897581132 seconds)
    (301/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.307751252 seconds)
    (302/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.902240396 seconds)
    (303/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.980623592 seconds)
    (304/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.091849458 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.68830329 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.128018132 seconds)
    (307/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.690406719 seconds)
    (308/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 2.042895972 seconds)
    (309/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.237311487 seconds)
  done (took 1019.967079348 seconds)
done (took 1021.849540973 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.923275476 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.912508784 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.895131782 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.91619551 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.007809017 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.93846555 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.909066095 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.899500322 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.945862087 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.945801351 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.893968871 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.937174025 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.896544275 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.897171023 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.896399499 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.912480124 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.208777878 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.931167182 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.914639036 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.907780772 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.91434779 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.89545046 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.946255902 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.936589346 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.899339268 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.901058217 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.899303932 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.916293255 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.010367602 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.900211084 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.901226633 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.909080835 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.20821503 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.929092027 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.895193433 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.916757387 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.909514415 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.908786089 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.900734688 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.929721102 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.358572248 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.903683167 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.898179654 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.897868946 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.897686953 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.904488747 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.897991193 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.907441531 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.913335602 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.915244264 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.353579564 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.921731223 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.901877023 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.899317401 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.912206402 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.899124101 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.901590477 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.915439271 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.91869487 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.915640336 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.197140421 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.938832746 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.901051334 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.91829006 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.907895459 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.388748926 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.903919313 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.905134821 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.359389572 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.91340098 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.387679404 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.916453378 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.902279719 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.914855027 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.932613138 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.210827414 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.929515822 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.897790609 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.909347734 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.898514083 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.912268089 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.914534788 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.90610474 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.902757842 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.91719239 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.943748026 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.91364486 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.900868845 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.91155983 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.920683197 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.910480433 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.913228041 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.904987427 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.899056666 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.91265158 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.904416028 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.903499816 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.903778122 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.905657189 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.914623883 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.358607821 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.924312968 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.898446247 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.898893958 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.900971581 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.915407645 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.35948765 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.908778803 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.925150568 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.951366879 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.902411469 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.201803882 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.937409367 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.91818892 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.913707301 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.905821757 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.899014764 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.20029673 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.387772214 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.925350887 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.903527227 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.897867186 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.918928836 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.901637682 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.899705735 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.215249956 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.938881098 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.920144119 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.026480603 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.914208787 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.934404741 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.900923445 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.906156487 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.945780751 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.919312897 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.9369931 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.905558287 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.919566023 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.920794972 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.898827376 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.914302725 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.915615207 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.901989493 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.910497931 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.899343559 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.949046637 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.918771635 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.91982148 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.924746695 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.024393534 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.900904641 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.201008144 seconds)
done (took 298.979821668 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.990942406 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.909151114 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.028668597 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.90914393 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.999259051 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.983165873 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.907751659 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.906374129 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.909963021 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.409066579 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.907252714 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.911926764 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.912534812 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.905516143 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.980190699 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.907541462 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.909396194 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.190440118 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.908887494 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.990692613 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.912000393 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.907858211 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.908469517 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.410319587 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.914753376 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.909900751 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.99071099 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.9086344 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.199673791 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.912169034 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.910342783 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.196770414 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.987623168 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.92147344 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.913546647 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.91314197 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.997302476 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.915851742 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.977015605 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.977850298 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.026967035 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.934555328 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.906757551 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.908944929 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.909113073 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.904413158 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.904845026 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.93473525 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.908412993 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.905739372 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.184155303 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.908446539 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.906962649 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.902059475 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.900492184 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.913848584 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.901498843 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.898888846 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.983669004 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.89730584 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.970095522 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.39980971 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.398330836 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.897238393 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.897518283 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.899986209 seconds)
  done (took 187.099588674 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.965006585 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.970533923 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.965813661 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.904534338 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.946445165 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.963587164 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.904948662 seconds)
  done (took 15.439203504 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.905794462 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.893555458 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.943246168 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.943460854 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.890444229 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.079689186 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.906045521 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.89554195 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.921302272 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.885285098 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.54336009 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.941439406 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.895405625 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.890059433 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.901574381 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.944809658 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.891412582 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.88462748 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.000180368 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.036103043 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.889484636 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.892103395 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.913936007 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.899647387 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.886155282 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.879437782 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.880779958 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.893355917 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.883208557 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.884798033 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.880651945 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.935079144 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.882361208 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.88388958 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.878913412 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.880055719 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.875324532 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.880077868 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.877187219 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.87931352 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.876066774 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.875347331 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.874950818 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.875441677 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.874370962 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.902436517 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.873553258 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.87354994 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.873807515 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.873944881 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.904777774 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.872603115 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.873038979 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.877600841 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.917786898 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.880825951 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.868715986 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.872247842 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.871674529 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.871474323 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.871938176 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.023348388 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.922251708 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.870449914 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.922579918 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.024915249 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.872238298 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.871237267 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.870496403 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.961601626 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.870776119 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.922318547 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.87037486 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 1.987309055 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.870476375 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.060394408 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.897592358 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.877148503 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.877124895 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.873334916 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.880492456 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.870818349 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.87601959 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.880280377 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.87590088 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.870547494 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.870707876 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.874721845 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.881535588 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.870803507 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.924295983 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.870716752 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.868733052 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.008056112 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.87170687 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.983383849 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.900692056 seconds)
  done (took 206.852142403 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.881979555 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.881507399 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.875966586 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.889804879 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.875979659 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.875702797 seconds)
  done (took 13.076596641 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.877834676 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.877038472 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.872221277 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.871879602 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.869145076 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.868591713 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.872012491 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.87657913 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.873735173 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.871462974 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.868329627 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.868541212 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.869672071 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.869725402 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.871661368 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.871996932 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.871917982 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.871614243 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.871497566 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.869393178 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.006852731 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.869655835 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.866710986 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.875062351 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.873208171 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.870684427 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.885331861 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.87034928 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.870624382 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.881479807 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.871116887 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.867196694 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.875472422 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.878816527 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.872610037 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.87307194 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.873479277 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.865387377 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.866542036 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.86395493 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.863042166 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.864465119 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.867517984 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.863051586 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.873876408 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.876823954 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.869630302 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.883491992 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.86878408 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.864872634 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.864614004 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.86686925 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.866851943 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.864065227 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.870166723 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.875969025 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.865208714 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.866368127 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.863019675 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.870076343 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.869850968 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.863721517 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.871411255 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.869209972 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.871083458 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.862911824 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.869088057 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.867244782 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.862751282 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.865770774 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.859111126 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.864370442 seconds)
  done (took 137.577601358 seconds)
done (took 561.896853487 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.172967891 seconds)
  done (took 8.958888731 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.110045651 seconds)
  done (took 9.042986576 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.825517131 seconds)
  done (took 10.664404387 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.93226085 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.941775997 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.920224553 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.924160856 seconds)
  done (took 29.571413336 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.160745837 seconds)
  done (took 8.997238255 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.9363851 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.921289413 seconds)
  done (took 15.769640013 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.925648349 seconds)
  done (took 8.767753941 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.35068857 seconds)
  done (took 9.203867838 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.933052748 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.940136504 seconds)
  done (took 15.733044259 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.915911612 seconds)
  done (took 8.750068874 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.627429849 seconds)
  done (took 9.549755908 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.917505672 seconds)
  done (took 8.769678737 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.948575446 seconds)
  done (took 8.782503151 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.028891434 seconds)
  done (took 8.859423576 seconds)
done (took 163.210111936 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.919756035 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.910511529 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.908799844 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.908579117 seconds)
  done (took 29.477979081 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.942529905 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.943872595 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.949685635 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.941871996 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.932170275 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.932927033 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.941886584 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.942978476 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.933349969 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.940792451 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.942705929 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.939471465 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.941353723 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.951192666 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.951597725 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.939381718 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.943351473 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.942685056 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.933111635 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.951551614 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.939758885 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.941355945 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.908616366 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.908940376 seconds)
  done (took 48.366847837 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.097827107 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.978526034 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.066120319 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.95855549 seconds)
  done (took 9.930213454 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.908088898 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.972125783 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.959558287 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.954870568 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.002120665 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.011079433 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.961463004 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.119316791 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.024366198 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.036050595 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.916384883 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.930845473 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.934047459 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.965154638 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.011346247 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.909456998 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.908658184 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.024760605 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.972421778 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.119273866 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.908998504 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.963357465 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.994914221 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.961777032 seconds)
  done (took 49.300552654 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.91189486 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.917526196 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.916804151 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.910755944 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.911206882 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.912257438 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.918057584 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.913011518 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.933419236 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.912740285 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.910217376 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.911294254 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.918344112 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.911972585 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.9107283 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.923941029 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.924706098 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.911703955 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.915639768 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.918301399 seconds)
  done (took 40.145707195 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.912015343 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.758989409 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.25876353 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.165359937 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.913605469 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.914069798 seconds)
  done (took 31.753733251 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.927632691 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.921722275 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.91483818 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.972616459 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.05552307 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.923693926 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.915640489 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.927246827 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.962697504 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.984568145 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.936582713 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.945032752 seconds)
  done (took 25.220509591 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.916400377 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.916021809 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.91464844 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.931247981 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.92768099 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.926139319 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.924004577 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.915076039 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.927978704 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.935961124 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.925963051 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.928269301 seconds)
  done (took 44.927093107 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.12900339 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.138521194 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.129568297 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.528432473 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.914581198 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.816071526 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.613470016 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.612692423 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.220855589 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.903723813 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.890482458 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.830052135 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.169619781 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.932881869 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.181519515 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.852296439 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.927602512 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.19844094 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.929539621 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.931848011 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.227055901 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.983240132 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.141674845 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.975195203 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.142309697 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.445221037 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.180567097 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.191477312 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.261689734 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.977027925 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.131493159 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.980972821 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.937100275 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.940488333 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.932996677 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.943258404 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.200862658 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.930806515 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.936264822 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.912291784 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.855269773 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.263283098 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.043672112 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.35025258 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.059289554 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.17161405 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.934682815 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.131691745 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.995759108 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.205869838 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.033966265 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.144772408 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.855219853 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.284971802 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.055498004 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.93243677 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.935303141 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.629489408 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.170281854 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.010835969 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.266662417 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.043210828 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.933259965 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.019919947 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.931062177 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.035732211 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.126066119 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.936971828 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.934241894 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.938847058 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.028306265 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.144227763 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.932262471 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.931388296 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.946901764 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.934529293 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.283863357 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.514554929 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.927582491 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.489508402 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.415919193 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.903880952 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.415561604 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.981875356 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.212655832 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.14781988 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.015312547 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.176426254 seconds)
    (89/481) benchmarking "5d"...
    done (took 3.796852078 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.936576305 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.738397956 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.013350652 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.99627576 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.931727475 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.124430598 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.252706142 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.049759854 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.932480489 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.858969768 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.943760052 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.135441921 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.407792163 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.995881394 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.932813079 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.932581119 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.936518562 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.934285889 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.949129617 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.947039212 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.851247268 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.217518621 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.046368956 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.187254576 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.924507377 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.63889759 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.200399025 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.058558954 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.535713085 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.064766345 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.934176863 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.075037647 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.944218217 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.935898901 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.126850008 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.350153498 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.145937313 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.180563366 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.976823986 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.957795526 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.938810607 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.015090517 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.160166491 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.931551531 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.179842924 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.178599517 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.587987478 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.981173687 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.009296573 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.943547369 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.147839376 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.016326222 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.494691289 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.152631739 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.518504959 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.929022533 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.531468638 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.207966867 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.318189972 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.950844434 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.143010838 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.972885592 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.635515614 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.860710807 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.939367821 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.275724362 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.975922081 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.022698473 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.936234839 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.937033086 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.942862152 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.016519249 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.010593183 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.010310437 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.865545777 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.937669222 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.937502336 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.934578065 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.475850935 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.607864757 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.227729684 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.934638882 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.007419683 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.933564004 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.534293163 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.935381716 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.117739398 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.937747671 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.674499876 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.96322072 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.213368329 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.345820607 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.048690807 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.930394035 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.933039553 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.63175445 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.939711939 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.631995032 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.217129754 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.931824199 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.374315274 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.993117109 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.015467796 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.945582383 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.932846624 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.934113978 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.935235372 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.132241192 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.445443525 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.295741722 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.277582714 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.012139989 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.198890776 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.111870103 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.42453823 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.615464491 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.442829508 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.156183896 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.931416244 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.932713714 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.399794406 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.937348636 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.145431345 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.13303078 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.205240124 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.227675334 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.341309944 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.936062492 seconds)
    (218/481) benchmarking "4d"...
    done (took 2.946673247 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.172158992 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.93127935 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.369917137 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.004331525 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.318951368 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.742450701 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.193205356 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 1.993353888 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.942593929 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.57381927 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.062265403 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.886689365 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.060625836 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.856273095 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.650268957 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.226130298 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.208968999 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.911179825 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.278469318 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.22461638 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.210925209 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.56329809 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.933186415 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.98155221 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.013444808 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.933998439 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.487874755 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.973866342 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.985591491 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.932957425 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.928620835 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.936628355 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.627284538 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.008841327 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.060032886 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.663290396 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.436139071 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.84093911 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.192727277 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.983675674 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.378590857 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.969277872 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.137490291 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.926283933 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.510530026 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.973487234 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.201776407 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.882638369 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.130406266 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.124018817 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.943729646 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.92203171 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.842137364 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.787857444 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.921548804 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.120089498 seconds)
    (275/481) benchmarking "3d"...
    done (took 2.804815198 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 1.917979057 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.217348014 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.548641903 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.955908348 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.915405485 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.27209885 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.362002966 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.099527777 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.922496794 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.127660704 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.063197141 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.833913109 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.406518716 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.494251218 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.616496652 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 1.926548251 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.117544164 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.271811265 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.225594826 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.956700776 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.992874848 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.179396509 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.891335369 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.912923685 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.431370739 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.004552171 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.146671625 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.226328359 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.424424416 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.31988338 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.15403098 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.883719551 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.118220547 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.272467987 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.146926617 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.956356469 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.992718874 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.113126226 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.183583359 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.797244274 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.609186085 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.140998806 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.904157465 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.826298965 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.109843254 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.406991688 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.269182757 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.442912683 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.111673699 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.933354966 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.39391879 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.916776845 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.838069895 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.902595334 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.8484059 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.115003675 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.104817479 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.946460147 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.46742974 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.199990713 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.309427848 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.158894474 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.94596418 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.827929309 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.637395014 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.858914085 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.981169481 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.946397024 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.976239048 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.907157218 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.106826536 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.343317246 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.960230138 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.457860683 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.118495919 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.208724932 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.17575198 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.213561862 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.864425817 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.177754402 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.858190469 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.432562668 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.001934851 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.982832455 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.905721405 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.908443867 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.177317882 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.282988082 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.504354128 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.947664121 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.26760279 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.007419902 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.90735727 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.910829396 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.397713181 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.148161684 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.119421385 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.982769427 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 7.109267672 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.978411925 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.420042526 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.910697903 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.909422072 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.034613345 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.906877531 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.670498515 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.204777583 seconds)
    (383/481) benchmarking "6d"...
    done (took 3.652753815 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.109061461 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.427392038 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.855866226 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.122353341 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.958108296 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.907447395 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.954147554 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.913139502 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.148238634 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.176018253 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.66874363 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.912665552 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.906870773 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.857676741 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.576097694 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.144129036 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.914587737 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.955611201 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.910663572 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.015819736 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.913892039 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.175543796 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.959991548 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.90705563 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.90886612 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.121329954 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.422803499 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.924832122 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.608450449 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.112333028 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.912925723 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.4012754 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.356618431 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.186002406 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 1.956784626 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.113687529 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.161453792 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.436919793 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.118495586 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.907670458 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.135202215 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.910507339 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.180417951 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.183848404 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.909939839 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.123544334 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.388090618 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.205753809 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.920174364 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.788469342 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.912157659 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.174792068 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.9649677 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.909353215 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.918389991 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.912487788 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.626713664 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.393920884 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.066423468 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.259630634 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.733962456 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.667628998 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.913649171 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.913921464 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.633538984 seconds)
    (449/481) benchmarking "2d"...
    done (took 2.633324948 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.124333288 seconds)
    (451/481) benchmarking "7d"...
    done (took 2.199668617 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.857845941 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.113023006 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.617983633 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.910925371 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.176419659 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.837432005 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.91381085 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.416354787 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.189986607 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.85013963 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.916648676 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.533238075 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.913105937 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.995823624 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.912726635 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.039687821 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.17805121 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.299064181 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 2.025202156 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.560930241 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.575269358 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.854279991 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.966693761 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.718853511 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.472195942 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.636778481 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.936353817 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.928826211 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.837875262 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.915484419 seconds)
  done (took 1665.25907854 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.056266658 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.927169142 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.97433591 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.927090054 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.012092314 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.971392543 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.950266469 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.926472952 seconds)
  done (took 57.579977737 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.916324418 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.931229769 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.921335301 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.917604579 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.935669679 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.926755985 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.076112768 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.92905495 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.921123346 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.921514526 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.917882157 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.916767075 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.190325436 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.941729535 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.917398173 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.949403461 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.936051618 seconds)
  done (took 75.041367314 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.912129776 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.137208664 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.973763957 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.918008568 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.881093662 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.930392645 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.923127682 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.936077619 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.917221453 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.147740649 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.213632459 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.939571821 seconds)
  done (took 90.666357189 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.923529308 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.917991309 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.91857081 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.918733277 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.917516085 seconds)
  done (took 11.437672034 seconds)
done (took 2181.007186397 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.153261882 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.975046275 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.01724646 seconds)
  done (took 5.829556077 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.066048806 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.111989558 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.225277162 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.985597567 seconds)
  done (took 10.233736463 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.178456262 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.299020572 seconds)
  done (took 6.315213532 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.272406262 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.927930194 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.28047801 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.918809902 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.917094075 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.921183642 seconds)
  done (took 22.601327092 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.915783115 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.918247376 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.916899301 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.917771181 seconds)
  done (took 9.506218451 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.916849494 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.644827053 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.917835427 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.92903804 seconds)
  done (took 21.24662779 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.056944213 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.028574825 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.054954854 seconds)
  done (took 7.978616232 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.141216763 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.124421728 seconds)
  done (took 7.103194945 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.060565949 seconds)
  done (took 3.898613516 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.945406821 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.187769918 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.435996469 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.48772433 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.59400707 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.71442297 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.248150079 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.167733182 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.357200003 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.379637532 seconds)
  done (took 25.358300803 seconds)
done (took 135.543793471 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.273024616 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.94172015 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.120897094 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.283751996 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.147741747 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.121285366 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.133918158 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.275601714 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.959215036 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.947998945 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.286917358 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.149381607 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.083566497 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.943747252 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.090282363 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.937037661 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.148240214 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.287523052 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.968864403 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.207208766 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.144881965 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.932719847 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.13146231 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.946355015 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.14942073 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.072837354 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.477602578 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.940100358 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.117676702 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.489431141 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.073914763 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.355424838 seconds)
  done (took 169.979742707 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.923623854 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.924334033 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.924501022 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.925612834 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.240572524 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.924225461 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.92511336 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.925202204 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.119943612 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.109901385 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.924735604 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.235151339 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.926085801 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.923929352 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.924494691 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.923039917 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.256745391 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.925325722 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.924868147 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.92338317 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.925699108 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.077312589 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.924759376 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.094654244 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.248132475 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.925825306 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.924497005 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.924611311 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.926748775 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.924748605 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.924783489 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.925503592 seconds)
  done (took 209.42102503 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.924821954 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.923206759 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.924840518 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.926749139 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.925883684 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.92628595 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.92745485 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.924392318 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.649126071 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.634337528 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.925711607 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.925794799 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.929554072 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.92846094 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.924796383 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.925279412 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.9254509 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.928566755 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.926670309 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.92521932 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.928782579 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.678500693 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.925519663 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.693656224 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.924482974 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.928080083 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.927913263 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.926725567 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.926273508 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.926554109 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.927211591 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.928783604 seconds)
  done (took 222.440566992 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.164023385 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.924242115 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.925229249 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.975642909 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.925547445 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.924492868 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.926365339 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.171599169 seconds)
  done (took 19.78214219 seconds)
done (took 623.479816971 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.237865222 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.641232309 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.067595275 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.954653765 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.178142865 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.000830618 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.944426172 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.005104568 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.785130984 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.020753586 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.332702139 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.955807711 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.703812793 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.974542783 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.068033672 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.002926151 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.287766381 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.599940536 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.091547942 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.601660757 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.105647463 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.898028908 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.024032189 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.829857559 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.360689662 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.920858651 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.9881705 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.289610793 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.951482607 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.109458811 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.546685349 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.217514122 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.96405957 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.949672665 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.000969152 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.979429117 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.155121811 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.960914836 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.070245268 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.693638393 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.595416542 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.667212509 seconds)
  done (took 102.580152086 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.938403547 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.933949422 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.934388711 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.93474158 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.942646679 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.933956951 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.934155717 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.93416262 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.934985545 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.934246886 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.93330576 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.943750372 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.9345542 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.942750123 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.934154163 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.935323523 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.933970418 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.943267811 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.934954844 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.934738493 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.934806084 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.934458976 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.92678064 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.934749636 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.93435738 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.934410018 seconds)
  done (took 52.187648955 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.928150601 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.126874211 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.178399513 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.951473807 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.933799127 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.934532025 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.96063575 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.937022082 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.934987495 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.933993922 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.033572103 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.933988758 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.946364582 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.17880343 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.950917603 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.928476185 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.928475758 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.93386171 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.135516859 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.949919604 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.963080925 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.937143466 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.962270978 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.949308195 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.935966709 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.93405987 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.936517222 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.40494322 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.945829996 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.032808595 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.976002902 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.966683044 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.275404887 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.191915853 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.989054274 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.935659524 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.930563707 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.037989765 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.939603162 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.934121718 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.961774052 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.94140021 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.184613668 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.473103171 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.94978352 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.930168625 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.405380134 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.050518125 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.975701993 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.945309672 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.190773056 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.952158242 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.930530833 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.933605737 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.970430999 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.946582617 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.935924432 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.226861608 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.950652827 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.962967994 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.939042031 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.93638339 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.14248299 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.944970304 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.127472591 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.944955001 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.94127529 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.936568893 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.182605773 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.952358236 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.49176775 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.951244907 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.931251509 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.035267194 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.135040279 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.431502842 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.950469769 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.145287061 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.296028191 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.973055579 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.947412705 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.391608686 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.976296056 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.947960963 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.932865871 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.932756644 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.932834489 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.977472879 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.962475909 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.398610593 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.488021579 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.246574959 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.976761988 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.949708416 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.936206553 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.227483926 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.943693436 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.932740921 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.17472478 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.500064812 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.95276137 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.943405935 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.464251086 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.953176616 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.966661107 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.950084705 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.198100494 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.956253177 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.979711061 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.933957825 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.943653621 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.941701325 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.966154474 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.947678676 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.934588147 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.4577626 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.056040873 seconds)
  done (took 240.303618683 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.939203715 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.936658659 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.936566888 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.938124447 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.937047022 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.937205857 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.935609753 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.936315611 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.93725186 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.937123437 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.936871488 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.938244277 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.937946211 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.938711489 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.979548847 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.939919699 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.428128057 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.937502912 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.937406625 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.939795828 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.501797515 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.940975394 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.938076345 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.939718129 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.939383612 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.938819889 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.940041971 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.975432195 seconds)
  done (took 169.258479075 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.936003828 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.993815746 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.948383011 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.986133407 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.948528635 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.936280726 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.035548349 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.95648272 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.945681751 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.936761783 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.936126353 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.970244617 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.945331944 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.031990341 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.970658665 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.04134791 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.042401025 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.943995104 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.937398409 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.937116094 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.9868094 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.951897751 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.971389147 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.001684686 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.949635899 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.995531654 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.953651288 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.937433076 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.940261106 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.053537941 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.954199532 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.968641416 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.975088258 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.96203589 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.058194253 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.05236265 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.038962511 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.039105854 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.946218441 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.937988008 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.938362403 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.939864523 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.996516185 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.951220628 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.943168071 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.055028174 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.954818093 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.940145899 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.939032265 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.939186466 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.954943584 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.960658768 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.978960076 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.06590445 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.984090309 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.965197364 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.037869853 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.060382793 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.937410945 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.037289499 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.946134164 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.052764478 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.958408751 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.942091734 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.941379254 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.94273961 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.987393569 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.049449986 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.044407895 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.950230346 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.037595738 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.994586889 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.954380269 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.940720224 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.941294393 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.998169714 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.052883721 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.993864701 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.003232126 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.97907476 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.950494544 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.944103557 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.943037885 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.971089812 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.948523221 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.05277768 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.055520428 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.946438451 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.940134844 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.940384474 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.94065198 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.969462185 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.006758139 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.98476175 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.04739288 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.981449108 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.982787278 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.949072071 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.954769699 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.94642109 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.978316077 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.950065226 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.954069065 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.225640974 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.975748974 seconds)
  done (took 209.747753428 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.337802419 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.988231629 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.020317496 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.233922132 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.300515925 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.845704183 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.984440105 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.994265407 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.015976454 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.122468833 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.062798392 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.033178908 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.983934275 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.967725576 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.989290148 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.017929852 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.021413827 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.309463286 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.185151625 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.485861347 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.984917598 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.291702733 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.317011059 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.347873801 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.036315024 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.384494213 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.619926651 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.087261494 seconds)
  done (took 64.83737477 seconds)
done (took 840.76314064 seconds)
SAVING RESULT...
DONE!
