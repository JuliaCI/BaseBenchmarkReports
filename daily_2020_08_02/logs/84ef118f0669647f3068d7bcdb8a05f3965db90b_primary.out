cset: moving following pidspec: 25710
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.560042615 seconds)
loading group "shootout"... done (took 1.196104039 seconds)
loading group "string"... done (took 0.402851051 seconds)
loading group "linalg"... done (took 7.574352288 seconds)
loading group "parallel"... done (took 0.143448772 seconds)
loading group "find"... done (took 1.26264239 seconds)
loading group "tuple"... done (took 1.827556573 seconds)
loading group "union"... done (took 11.9754059 seconds)
loading group "dates"... done (took 1.247807839 seconds)
loading group "micro"... done (took 0.190696803 seconds)
loading group "simd"... done (took 4.137704447 seconds)
loading group "io"... done (took 0.991747179 seconds)
loading group "random"... done (took 8.250271934 seconds)
loading group "problem"... done (took 1.518873955 seconds)
loading group "array"... done (took 18.481356994 seconds)
loading group "misc"... done (took 1.447895628 seconds)
loading group "scalar"... done (took 37.767410264 seconds)
loading group "sort"... done (took 2.881620383 seconds)
loading group "sparse"... done (took 11.347461437 seconds)
loading group "collection"... done (took 16.532641328 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.481562849 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.121172464 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.12690642 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.115237954 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.14086697 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.118525297 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.121846841 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082133564 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.906400274 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.138897357 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.109022085 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.42031495 seconds)
done (took 5.215545361 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.163163718 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084229927 seconds)
    (2/2) benchmarking "String"...
    done (took 0.074788357 seconds)
  done (took 1.2835066 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.061241676 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.125929815 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.062498329 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.064160797 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.063623151 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.063695362 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.062771179 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.062903751 seconds)
  done (took 1.629238021 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.068022254 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.064477312 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.062230426 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.06459118 seconds)
  done (took 1.388756991 seconds)
done (took 5.668247581 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.232069694 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.098652255 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.282523393 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.385750081 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.445185333 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.088129528 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.07101329 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.066675437 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.127433705 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.323632551 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.101938421 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.176805221 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.088181325 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.177654288 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.988095488 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.117294344 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082186176 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.117265567 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088017668 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.12628911 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.406672299 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.075399485 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.071004669 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.067392673 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.064059415 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.659963902 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.692687694 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.126216695 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080280125 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.097525213 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.111834884 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.64798247 seconds)
  done (took 10.444931632 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.089076159 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.087132525 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.065274692 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.121774292 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.091004319 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.066458135 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071350868 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.063440677 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.08832001 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.121449307 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087960397 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.097368879 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.063148201 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.066229644 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.072891056 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.195280849 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.075927506 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.076601536 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.064825886 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076953278 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.10384229 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.075805906 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076185244 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.075850089 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.125645171 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.166693666 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.091629957 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.093208379 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.063612528 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.077091808 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.1116741 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.123685501 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06347734 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.062424067 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.11772332 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.092222592 seconds)
  done (took 4.441665537 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.920188133 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.08675376 seconds)
    (2/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.086795712 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.099302199 seconds)
    (4/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.60869599 seconds)
    (5/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.061596764 seconds)
    (6/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.145344067 seconds)
    (7/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.233065927 seconds)
    (8/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.06939278 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.346875461 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.146832328 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.109753463 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.140885978 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.111574245 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.06660668 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.202315593 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.110770855 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.348884606 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.064133171 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.062956844 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.062450616 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.065409736 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.064240704 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.059822404 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.06631256 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.088586483 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.083564009 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.164203186 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.913662638 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.244068165 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.064185851 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.161818928 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.082445146 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.354341631 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.066904896 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.079928913 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.394634633 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.116717154 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.061425046 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.163373829 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.111033082 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063800073 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.110350433 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.073110426 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.063999055 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.063723307 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.064553663 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070763172 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.07464278 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.098284804 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.065040157 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.061895067 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.159229668 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.062074089 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.063727835 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.064353931 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.145927528 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.061810052 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.137524964 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.061192129 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.064931033 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.095925578 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.065142794 seconds)
    (63/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.060771098 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.087471836 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.098956097 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.329034291 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.045524515 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.062610186 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.128627558 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.074145389 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.062522538 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.067228423 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.062562738 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.063968158 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.063115396 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.068411187 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.06473228 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.063190628 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.103329972 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.061749925 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.064836422 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.061592423 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.079701956 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.066320713 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.095120931 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.060245979 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.456811676 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.092129883 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.062051409 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.071882981 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.099516083 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.06198865 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.067375768 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.062213479 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.062639316 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.060882767 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.061784137 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.17570726 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.088502521 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.059866608 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.065412473 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.110127075 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.031281383 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.063853683 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.062504989 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.067398551 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066778163 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.065743715 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.063253892 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066020615 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.064437343 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.061383001 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.108536563 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.062073263 seconds)
  done (took 21.122803418 seconds)
done (took 38.058540763 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.244173369 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.079405444 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.077721143 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.078252673 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.077479706 seconds)
  done (took 1.780320894 seconds)
done (took 2.996047073 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.103328159 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.060785032 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.0949239 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.094272074 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.062751217 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.060298767 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.094107978 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.060149704 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.091667666 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.093591665 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.095632127 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.094881434 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.059521595 seconds)
  done (took 2.286998083 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.064791593 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.075590391 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.077601877 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.058595873 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.069105588 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.076081998 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.0577207 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.075441683 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.082224145 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.077134852 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.077881136 seconds)
  done (took 2.000076681 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.06455728 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.075886326 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.078323758 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.058527284 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.073417003 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.078103896 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.059036207 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.077624284 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.080873406 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.077749161 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.077795038 seconds)
  done (took 2.004475656 seconds)
done (took 7.496063544 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.063969987 seconds)
  done (took 1.24927144 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.523457398 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.539772706 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.065399821 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.08425327 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.178682036 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.094141143 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.219889275 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.069453921 seconds)
  done (took 8.136578948 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.09076441 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071564974 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.065125539 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.064720361 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.066416126 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.065674907 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.06535458 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.066704721 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.065841731 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.06542492 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.064640314 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.065710798 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.065561305 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.064387568 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.065498077 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.066091358 seconds)
  done (took 2.36771832 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092676883 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092376424 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.070793445 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.070290028 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.06716045 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.067358287 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.070946253 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.069413666 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.066367363 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.067911496 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.069728557 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.0675914 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.067284913 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.059165024 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.06890293 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.071725204 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.067357374 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.070315379 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.071252838 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.071917726 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.07103388 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.060302191 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.068597039 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.068802307 seconds)
  done (took 2.999743101 seconds)
done (took 15.95674561 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.10904416 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071546602 seconds)
  done (took 1.378020068 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.066234041 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.067551293 seconds)
  done (took 1.343548752 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.072591875 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.05689628 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.077953077 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.068601993 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.058098356 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.058552474 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.078736363 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.059321097 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.0592476 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.059239409 seconds)
  done (took 1.861248621 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.060101756 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.066661586 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.06443021 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.066250678 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.064531333 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.059245983 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.061836934 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.059285582 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.066658931 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.05785224 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.06305774 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.077401966 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.06251193 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.079071703 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.062110306 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.062859033 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.0652406 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.062004204 seconds)
  done (took 2.376675785 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.057468459 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.058441419 seconds)
  done (took 1.335390353 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.061600264 seconds)
    (2/7) benchmarking "second"...
    done (took 0.058923025 seconds)
    (3/7) benchmarking "month"...
    done (took 0.061417793 seconds)
    (4/7) benchmarking "year"...
    done (took 0.061737147 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.058348817 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.057653321 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.058342105 seconds)
  done (took 1.629405447 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.400591791 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.114725491 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.330527918 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.064826553 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.075735696 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.244847331 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.060528437 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.066124691 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.065619678 seconds)
  done (took 2.675597846 seconds)
done (took 13.82500334 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.075396443 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.078721258 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.084794263 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.412979509 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.089467194 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.064069943 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.109675946 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.173555278 seconds)
done (took 2.324367454 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.208722499 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.399016357 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.950233043 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.063594344 seconds)
  done (took 3.635927721 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.31608801 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.080793211 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.074586793 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.064556762 seconds)
  done (took 1.769920926 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.060733945 seconds)
    (2/2) benchmarking "read"...
    done (took 0.067196966 seconds)
  done (took 1.357148252 seconds)
done (took 8.204785477 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.060031612 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.087289793 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06052268 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.060728014 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.060327902 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.060578194 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.060640893 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.060449623 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.060458644 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.060780305 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.060074272 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.060213895 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.060313632 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06076693 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060795005 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06122834 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06047566 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.060318904 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.060697103 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060678384 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060688049 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060566554 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.060666218 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.060522093 seconds)
  done (took 2.735709558 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.075681721 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.062093121 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.063151219 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.062653134 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.063273173 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.063413361 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.064409195 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.062823042 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.06457251 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.062377495 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064665758 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.064763209 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.062214044 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.064729339 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062630484 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.064802179 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.064364391 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062809066 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062330915 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.064949257 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.06425456 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062644239 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.064996916 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064038103 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.064959645 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064734308 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.062961064 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.063371575 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06482699 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.064522356 seconds)
  done (took 3.165593579 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.060485697 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.055975665 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.057702632 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.064473481 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.05747184 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.05821866 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.058148936 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.056927796 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.057965998 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.058993865 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.058037517 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.057306659 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.058631627 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.05741906 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.057534625 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.058264651 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.061177342 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.075191866 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.05770323 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.057555729 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.061136425 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.058176588 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.057266018 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.057195502 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.058397127 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.057228979 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.057224488 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.058217672 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.057219135 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.058317318 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.057234715 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.061258837 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.062295201 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.057488998 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.066089503 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.061783318 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.0573267 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.061400415 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.058812213 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.057431323 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.057195984 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.057421921 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.057414452 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.058066801 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.06606062 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.058066723 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.058879545 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.058479472 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.057787895 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.057187628 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.057378778 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.059536587 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.062523257 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.059187553 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.057141679 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.058842723 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.057538636 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.058016119 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.057638788 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.056873911 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.057149504 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.060064378 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.059317498 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.058484875 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.075016531 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.059497668 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.066168676 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.057495617 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.061614419 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.060589897 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.058142223 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.072967009 seconds)
  done (took 5.525276491 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.081185152 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.083830923 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.061417137 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.062262759 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.058722094 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.058623231 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.065978858 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058150265 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062582167 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077209303 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.05814883 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062401527 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062528906 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.062000078 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.058305319 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062656194 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.066447587 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058188783 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.057780277 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.061623144 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.058129089 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.065742425 seconds)
  done (took 2.659701146 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.133639001 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.062563757 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.098073961 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07328395 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064829859 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07309733 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.062213681 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.063085993 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063928371 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064585076 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064167751 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064075973 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066260827 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064715605 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064139946 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064442815 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063844192 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064345115 seconds)
  done (took 2.524855596 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.073387285 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.062379203 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.084685939 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.063455274 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.06300286 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.063143553 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067440083 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.068286185 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.062742615 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.063316963 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.068438075 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063144513 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.063001394 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063133995 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062613836 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.063152066 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.062822146 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063113973 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068060623 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067101054 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067315437 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067816864 seconds)
  done (took 2.703678731 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070641097 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.060742699 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074387864 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06298723 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.057755523 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.057043508 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.063076408 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.062430486 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.06395958 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.061734941 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062224282 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.058247564 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.064365656 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.062485462 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.063827844 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06139935 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.061108753 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.061955823 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061892403 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.057632578 seconds)
  done (took 2.50100857 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082666734 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06019374 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.059695479 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077561521 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.059694609 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.059618195 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077193054 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.059532936 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.059951819 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080339934 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.059561749 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.059793828 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077628744 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078187687 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.059683414 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077606697 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079103998 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.0781096 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06011496 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059948262 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.080374994 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.059794575 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077865186 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.059682987 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.059816683 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.060052326 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.05954666 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077831473 seconds)
  done (took 3.15374959 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070058266 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.05870852 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.059876094 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.06061189 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.060740935 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.060656984 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.060962959 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.061494047 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.061253506 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.061206035 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.060688463 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.060566269 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.060640462 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.060318966 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.060724636 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.060865158 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060750558 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.061007653 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061032302 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061094235 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.060776843 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060683319 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.060828277 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.060968261 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060863991 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.060428404 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060865672 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.060712117 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060541461 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.061374341 seconds)
  done (took 3.089547758 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.070123772 seconds)
    (2/2) benchmarking "in"...
    done (took 0.068142974 seconds)
  done (took 1.397572395 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.058912076 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072875267 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.056404919 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066678126 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.065557713 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.059722617 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.066036832 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065211489 seconds)
  done (took 1.765151244 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.063807041 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.084971736 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.059126223 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.059440835 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.062198486 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.113232358 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.072370488 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.06791291 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072587066 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.059960091 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.059052444 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.069783473 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.05803607 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.068786168 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.05999653 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065313038 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064640535 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069281903 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.070312242 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.057746459 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06963665 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060427653 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.058319918 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.060881912 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.059693625 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.064849367 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.073424927 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.069500156 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.065728909 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.056176955 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.076314031 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.058536281 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.059819557 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.066566255 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.063601501 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.058264078 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092374167 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.058606792 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.064750167 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.058093237 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069509551 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076660623 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.070746386 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.074711269 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.060298375 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.060761277 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.05810412 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.060584102 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.060850229 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.065352179 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.056876348 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.062701412 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.056344551 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.058629618 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.066499987 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.057397874 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.063472003 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.064912074 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068134345 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.066156709 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.064364609 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.070558602 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.064542953 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.066184942 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.057878942 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074030089 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.058902234 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.06768596 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.069456688 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.058142882 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069381978 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.056328671 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.055770925 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.056964143 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086159179 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.058573896 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.057902782 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.056703572 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.056804166 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.058398879 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.065411298 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.063107153 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.062618162 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.060882547 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071146843 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.064697473 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.056830052 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.064572159 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.073264953 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.059200413 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.057259287 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.071022522 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.059364936 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.056383155 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.072786435 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.06471909 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.058466816 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.057819024 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.058939115 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.069157198 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.05813099 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.05515336 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.062949429 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.058291614 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.059452867 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.061772754 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.062570822 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.056344418 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.065409207 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.062004266 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.058883123 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.055417675 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.060255302 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.05784222 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.055232044 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.064168818 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.055889624 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.069361271 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.061002466 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.068382461 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.068197183 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.06508111 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069538509 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.056125981 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.054848516 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.071627272 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.063695469 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.05737277 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.071205551 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.055755032 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.064558116 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.055484048 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.057626297 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.063802254 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.055034769 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.057901949 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.056259012 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.061595782 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.057588596 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.057928214 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.059732368 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.062649303 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.066931508 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.057434305 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.063121847 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.056272962 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.068713897 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.06446828 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.059403595 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.059790468 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.057069546 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.066140969 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.061592955 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.063509105 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.055608617 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.057020491 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.056274627 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.064959441 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.064140079 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.057605424 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.063883482 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.059669668 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.05665771 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.056282954 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.057469474 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.058914309 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060115081 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.058378695 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064481133 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.064905724 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.070153056 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069233846 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.063642066 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.054898009 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.055645304 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.057229386 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.05518005 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.059342171 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.06357786 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.068351379 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.065068868 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.072874762 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.055788631 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.063361984 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.056953411 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.069045576 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.066367438 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.055902263 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.059575584 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.054124338 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.057122904 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.063225528 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.0647698 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.066968408 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.067424302 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.058752272 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.058493205 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.054859793 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.066790492 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.055242929 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.062391689 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.062775568 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.060320905 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.055460925 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.057634281 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.062765458 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.059557982 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.056117194 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.068495147 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.061462616 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.054798802 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.066819154 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.055309665 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.064108228 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.055351871 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.058398081 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.05927955 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.057278776 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.062613317 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068225423 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.054205794 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.056209599 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068332166 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.056814786 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.056975955 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.061453699 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.067536751 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.058552707 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.062182136 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06440423 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.064366674 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.058847138 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.063454804 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.056988785 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.063461055 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.059209227 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.065283676 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.055968601 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.070563311 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.054488669 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.068217748 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.055661835 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.064653798 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.055234561 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.063041024 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.055956869 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.069624896 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.05675301 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.056574852 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.065369391 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.053865738 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.062896837 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.055099022 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.060105677 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.061017221 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.063545307 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.056903252 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.30502528 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.061030679 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.066284105 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.06309179 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.066932746 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.067570995 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.063070183 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.058459095 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066997065 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070338276 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067136894 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.061394377 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.061434111 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.060886066 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068507706 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.061475967 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.061020583 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066500281 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.063075594 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.064336677 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060786556 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.061319029 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.061044928 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066614084 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.067020528 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.075077005 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.065293775 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.065136932 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.06659492 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.05836072 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07261897 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.058820569 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.064792391 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.057888694 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.066595501 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.066276328 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.058356644 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.076530293 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.060111 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.065307428 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069762937 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06508296 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.061322205 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.07411723 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.061655652 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.064896236 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.064360034 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.061643142 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.063428747 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.060190869 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.065013322 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.066168679 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.067138612 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.058827122 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.064334137 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064768157 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.059639369 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.067327313 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.059644996 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065123462 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.060216019 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.057244321 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.062394276 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.068664867 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.06140943 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.062022729 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.057935177 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.056728607 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.058373379 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.065681465 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.061396197 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.065240165 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.071172867 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.056508454 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.059013536 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.057821635 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.062646305 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.073699388 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.066274398 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.064151398 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.062967187 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.058375822 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.061325119 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.060427016 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.058178811 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.061925384 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.057000187 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.057312048 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066819357 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.059559461 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.061362243 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.057834876 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.058703411 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.065602953 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.063019457 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.057901409 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.06296448 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.057429745 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.061707494 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.057178131 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.059239222 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.061180622 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.056789198 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.060237781 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.066131426 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.071747997 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.063048583 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.064874262 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.059064267 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.064244112 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070760224 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.066402792 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.058507383 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.065323797 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.057204842 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.074120737 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.065571504 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.064311808 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.066181994 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.058647191 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.072402022 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.060640069 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.065939895 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.070662044 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.057946824 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.064908679 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.056748063 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.070597922 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.060612443 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.05675624 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.064015978 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063476803 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.200957834 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.068542476 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.058844809 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.06550302 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064076774 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.060495277 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.059527118 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.059490664 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.065325218 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.071840767 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.05895449 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.063361827 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.06401855 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.064561134 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.060745855 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.068364929 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.064294163 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.058467463 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.059857899 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.059991599 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.059134175 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.068849687 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.058512451 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06158694 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06155453 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.057887747 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.063777342 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071641111 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.066057127 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.066938116 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.059044843 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.057046929 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.073207534 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.059737677 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.061112155 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.064336192 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.065726208 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.068456225 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.065392262 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.072189726 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.058210553 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.063423487 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069836608 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.059763461 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.058952532 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.061033397 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.059053575 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.064792177 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.06574988 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.063135646 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059831501 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.063267057 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068731236 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.059008115 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.061165059 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.062908335 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.058178842 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.066486158 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.064247624 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.064555223 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.059198228 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.057104136 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.059909725 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.064739935 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.063580109 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.065210389 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.058650145 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.065362113 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.0703806 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.063633888 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061484686 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.057477852 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061561738 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.065094186 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.062823574 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.057178668 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.06123344 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06024166 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.065419428 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.065659236 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.060822432 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.057112833 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.072465632 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.064544056 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.064884654 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.059459147 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.059563833 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.057806469 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.057159043 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.067688521 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.057026623 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.059120239 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.060858243 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.058982968 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.072757943 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.064252989 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.071056611 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.058206971 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.060826446 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.056912812 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.065549292 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.060730284 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.057127427 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.065951534 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.056509749 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.070746998 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.06791467 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.066059014 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.057087023 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.061103134 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.064463725 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.070119847 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.065407898 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.065313396 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.061354028 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.06565991 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.059387362 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.066914512 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.056926331 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.056557771 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.066099507 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.063822595 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.068396594 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.056680052 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.065586301 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.058904085 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.063885748 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.063627533 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.05883634 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.058677883 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.058450418 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.206380004 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.062079897 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.066375544 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.061718305 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.073515821 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.059585479 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.06803103 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.065066248 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.067654394 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070244008 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070622395 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.064838246 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.058382892 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063602452 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.064096372 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.05907522 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.062321111 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.061180452 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.078171794 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.059704953 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.059783269 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.071328689 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.065618712 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.057334236 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.065424957 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.061993603 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.067905165 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.060576817 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.068205614 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.063843112 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.059431223 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.062520393 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.062182996 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.057792844 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.058336862 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.058665299 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.067730636 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.062537798 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.059162252 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.074504493 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.058975088 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.064233724 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.066960658 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.063850779 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.060088156 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.055890185 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.05816965 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.067746283 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.071232076 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.060350717 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064723932 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.059139118 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.065335241 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.056268246 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.064497094 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.064081769 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.064338617 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.057438262 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.057449481 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.069840715 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.070853526 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.060888391 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.065687408 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.065386766 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.059693874 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.07777591 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.064506333 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.05954341 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.067826634 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060444085 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.057453017 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.056857834 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.059730034 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.067719533 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.057252057 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.062723635 seconds)
  done (took 39.232301374 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.096206122 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.059223413 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.057978028 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.058254311 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069209369 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.058869136 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.057611271 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.059308752 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.058524009 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06078397 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.057728392 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.057917676 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069435629 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07246181 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068892375 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.062182114 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.057938908 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.058926241 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.057799662 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.058832841 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.06829226 seconds)
  done (took 2.730004177 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.065568485 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.072949643 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069998854 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074536367 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066419467 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.062925983 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070055485 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062650968 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07025183 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067774956 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.070344812 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062558441 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067854364 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067908957 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067657498 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062875388 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070262291 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065995804 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.063014534 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069615619 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062805244 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069899254 seconds)
  done (took 2.854537901 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.05962958 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.058127199 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.065206233 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.056936405 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.057613696 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.061388633 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.056884646 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.061001813 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.060537281 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.060781506 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.064863208 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.05821433 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.057350288 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.061529764 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.056921403 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.05826146 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.09993983 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.058453175 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.058457129 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.057449672 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.063499134 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.065254959 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.057252264 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.058856132 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.061934479 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.062641238 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.058516382 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.061434613 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.058016811 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.060651671 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.058944049 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.05699039 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.065224582 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065119192 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.062028019 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.062027036 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.06069881 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.05936708 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.057012037 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.056998173 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.0642077 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.0590105 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.057286508 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.058475129 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.064624708 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.057239572 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.056975622 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.064661038 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.056862218 seconds)
  done (took 4.354877918 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.070219147 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.106073317 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.063744306 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088976277 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.073048125 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.06678998 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.063638402 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088413686 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.059088284 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.059425349 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.072991806 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.0726342 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.060901082 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.062425107 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.064694823 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.060526804 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06215029 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.060239952 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.064898951 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.061883569 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.065290838 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.066049978 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.072759461 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.073345021 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.063524922 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.061110026 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.061065267 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.062203159 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.071709039 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.064567323 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.062379892 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.063391012 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.072031791 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.065722708 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.060104942 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.060309915 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.07266856 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.061253836 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.060546084 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.058547311 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.060498928 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.062205778 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.064520072 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.07289345 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.060759075 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.065028235 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.061619835 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.058402648 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.0721084 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.060759409 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.065316359 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.073147809 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.061976295 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.061473699 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.062826323 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.071926726 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.06137595 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.059477418 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.06114457 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.071465766 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.059187655 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.062101001 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.072667756 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.060277094 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.064854369 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.073145831 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.064994799 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.061822907 seconds)
  done (took 6.004061304 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067610138 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.089128882 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069820727 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069181955 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06819701 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.069050441 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068184349 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.068736726 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.068174734 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069387259 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068306351 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106761007 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.064066507 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073722205 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.068922914 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.0684417 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.069777709 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07028377 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070324644 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069843681 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.070133726 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.069693076 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069078259 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.069470297 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.071528912 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064071785 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068364464 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.068074353 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068841574 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.06824933 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.071741024 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.068196554 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.068225662 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.068714252 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.071097212 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.067957421 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.058272761 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068437796 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.068432071 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.068693696 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064042918 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068933696 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068329899 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.064252941 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069169183 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.068112379 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.069397899 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.07145795 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076934568 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069392372 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.068471953 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069296974 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068664477 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068766114 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.069486127 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.077005503 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069465864 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069275737 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068770309 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.069848716 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069253867 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.07676696 seconds)
  done (took 5.75198525 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073461175 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065689241 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.077578621 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061429049 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.058638982 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068978974 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.058758231 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.058840976 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067366368 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.067163916 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068735378 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06746586 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069712433 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068005483 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067452878 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069818817 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068178945 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069020814 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067272546 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069454878 seconds)
  done (took 2.749396559 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.069854784 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.075328745 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.064142049 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069339182 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.063482404 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066810392 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.062207077 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063257357 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063497496 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063522635 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068561684 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068552749 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063804947 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067160298 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068710201 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066942204 seconds)
  done (took 2.462040944 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.064341028 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.065964551 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.065312257 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.05956743 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.062979522 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.058021797 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.058711848 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.058287065 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.0588577 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.072076907 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.058335841 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.069905603 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.058487414 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.057712692 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.058155102 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.063928159 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.057770753 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.058556214 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.058731266 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.063904585 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.065994154 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.060780923 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.062793477 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.058735798 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.063785758 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.065671434 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.060383545 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.062029695 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.058441167 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.059083239 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.063921387 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.06503952 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.058318906 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.059007604 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.057397594 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.058531877 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.058573361 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.059240755 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.063994303 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.058458963 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.057023151 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.063224059 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.058370628 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.06012649 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.057875736 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.059234683 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.05769474 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.064237537 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.059050806 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.063877163 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.058663835 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.060912192 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.05932831 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.065961775 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.061391473 seconds)
  done (took 4.753358881 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072858487 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.062417642 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.057542715 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.057957833 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.063904345 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.063593092 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.062420953 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.063388108 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06451971 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.058393175 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064438699 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.063340978 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064650204 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.064004581 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064743432 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063982428 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058480818 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.064118018 seconds)
  done (took 2.544264999 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.068336743 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062275729 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.068025731 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.063404171 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.063389685 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.063208789 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.059157824 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.058929214 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058899858 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.063659633 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063596664 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.063018549 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059095149 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.063219422 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.063766002 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062730959 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.061965248 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.057876782 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.061908111 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.057818483 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.061671883 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.057836357 seconds)
  done (took 2.767979475 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.084454632 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.079316819 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.11730421 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.074855082 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.083078271 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.067223964 seconds)
  done (took 1.910033421 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086753459 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100202844 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061747998 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.062056666 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072572911 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065799835 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065919852 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066191598 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072621159 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070467383 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065958602 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073034246 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072525484 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067780381 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07226958 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075653348 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066317578 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066036511 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.062394494 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075882352 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065953518 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072570902 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066668697 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065414062 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06588898 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086761662 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075372509 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070414814 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067975613 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072345356 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075636201 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065744195 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072426957 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070676784 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.062151844 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072454068 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065905214 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075921579 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072831737 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067860532 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.062266302 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072834886 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073216071 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068049907 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075784731 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066259365 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068074344 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065957599 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066085824 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07841201 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072652008 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068434631 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07292915 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076840326 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075876245 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078372712 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070917496 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068057392 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07272331 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071203025 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068289699 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07308535 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068153852 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071471803 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075887807 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067768145 seconds)
  done (took 6.091520614 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093733584 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063382799 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066356472 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07084984 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068170696 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066010072 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066493218 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065971933 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065964086 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.062715636 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099976796 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065929224 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067870727 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06794024 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066204719 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066507305 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066127833 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068067359 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.063399029 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078390912 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066000938 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068141423 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068210291 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067872549 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070634245 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075793341 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065938661 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065968698 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06599923 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065917851 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06824892 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065872626 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067781482 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.062367543 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068005498 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065940008 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065793202 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068009076 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065732326 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072597571 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067813548 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075595091 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066162784 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065980025 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070551777 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066014759 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066126171 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.062789035 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066003681 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06262914 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070740021 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070629584 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071088483 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068533818 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066401819 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066329197 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066597507 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066010504 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066461467 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075712691 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068157158 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065903884 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078488501 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066059537 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066204243 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068503677 seconds)
  done (took 5.953613789 seconds)
done (took 122.612600862 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.20429531 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.180290417 seconds)
  done (took 1.780222352 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069126786 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.092339007 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.070569514 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128508878 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066387672 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.10064215 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099637488 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.07115462 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065987837 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066126674 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066120638 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.069177417 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13185236 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066716461 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066021343 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.06897078 seconds)
  done (took 2.714076963 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.10024914 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.176517675 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106093082 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065662902 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099693756 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.071902996 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064439871 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074851239 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.068578174 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.06771821 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.071868391 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.07021692 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.067547007 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070001651 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.068175874 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072807278 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.069239504 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073384177 seconds)
  done (took 2.878128766 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.088626137 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.081595909 seconds)
  done (took 1.595655721 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.155280602 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.101563622 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.140217358 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.317065554 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.133441277 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.274133661 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.130460736 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127711032 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.109783688 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.121912782 seconds)
  done (took 3.028043179 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.096733246 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.160581231 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.296986047 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116555774 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072317509 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.083502502 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115357591 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.076524941 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.075649083 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.074970085 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.07584792 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076747514 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.095244352 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.07422186 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073579586 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.073865329 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.098543112 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.073224607 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07263737 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.073252904 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.097556065 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066508522 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073710508 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.073014549 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.075345783 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.075235554 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.06788613 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.066547003 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.073328615 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.072822559 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076202643 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.081353955 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.074960708 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.100707797 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070890637 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.101614431 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.071910448 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.071050135 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.072827091 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.069794436 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.072503478 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.072650768 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.073421725 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.073189816 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067921138 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.07171856 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067550402 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066650082 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.076777939 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067915516 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.076931607 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.074524588 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.098592429 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066476683 seconds)
  done (took 5.961034986 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103841701 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104169162 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065548602 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.109016043 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100323927 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065868281 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.100445032 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094531983 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102320789 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.064913281 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.064492399 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.064329311 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.073076248 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.075344228 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.110359004 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.103534154 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067113862 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.065264369 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.10559013 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.105859809 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065911158 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098565882 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.093479265 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101977442 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.06398826 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067231119 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.064989103 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.066136555 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07278128 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.073554559 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.065815782 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.074874845 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.082596111 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07214027 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.064073614 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.064126004 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06493148 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.074396078 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07542158 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.073249073 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.073393234 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064748881 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.064948349 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.065642154 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066477601 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.064382274 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07350041 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.074522432 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.073844379 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065535714 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.066058146 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.065093866 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.066060945 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.074691161 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.073406945 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.075661351 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075241371 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.065846636 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065420093 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.067387549 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075643428 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.073569205 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.073264993 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06488696 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.073380003 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.063778877 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.074322252 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077596019 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06445766 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.064656926 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.064531389 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.063951023 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.064651525 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.071443256 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.071255722 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066355826 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.065390452 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065453801 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.076174271 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.073612613 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065431683 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.072409576 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.064807049 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.065531663 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065822164 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065973676 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.072384069 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.072139571 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.064426188 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.063992283 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.064203129 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.063737639 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.063422075 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.070333593 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.071929307 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.071859714 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.070894746 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.063861981 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.071671 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.071071034 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.063959032 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.071425052 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.064036113 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.063808189 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.063857219 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.071381154 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.070778198 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.072337508 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.063269048 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.062937222 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.072527425 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.210518311 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066810511 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.074119153 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076241512 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.075223384 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066248716 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080562883 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065187351 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.07652071 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064590493 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.073918811 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064230268 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.071806503 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065467009 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.063936627 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.064537605 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.072936565 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06498156 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.064080258 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.064772213 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.064183038 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.072615863 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.075681197 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065090397 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074867247 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.074566046 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.066818238 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.073620926 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065813497 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.074803341 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.064781709 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065924729 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065265245 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.0766108 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.064689579 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.064208606 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06418345 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.07401504 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.064432307 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.073958474 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.070786895 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.064316526 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.07606672 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.074065695 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.071833854 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.07368343 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.064958756 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.065981667 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065703363 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.064944864 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.070953536 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.072601029 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064940328 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.064083588 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.070735975 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.073665482 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.063344279 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.071093227 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.071577162 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.071518354 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.064352465 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.063957998 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.074156417 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.073189739 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.071390633 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.07143787 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.072383989 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.063929298 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.0711531 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.071630252 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.063959512 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077346405 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064112639 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.075791394 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.072008443 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.070579705 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.072155793 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.072971229 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.073826091 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.073783063 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.075622403 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.063255439 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.063714074 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.071324479 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.063558724 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.064363598 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.071566275 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.064967255 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.064341005 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.076080251 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.064253188 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.073622112 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.063141246 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.072460473 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.063528759 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064353966 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076194226 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06427801 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.064541323 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.071152302 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06406496 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.07095066 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.073005858 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.071036073 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.063499871 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064047709 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.071894476 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.072114949 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.063492155 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.063306046 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06374473 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.070822098 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.069593406 seconds)
  done (took 17.493395472 seconds)
done (took 36.883536665 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.20025783 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.153734583 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.18642149 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.110615579 seconds)
  done (took 2.172232435 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.093539316 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.093427096 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.074601117 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.060612249 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.080463566 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.060801938 seconds)
  done (took 1.92918279 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.271878499 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.192877309 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.171932984 seconds)
  done (took 2.094647612 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.209739133 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.193954555 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.457400708 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.284283254 seconds)
  done (took 2.703344796 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.128126152 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.076989259 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.060299919 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.070494934 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.108979275 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.141322222 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.087121526 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.110810606 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.071329718 seconds)
  done (took 2.376437243 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.129777657 seconds)
done (took 12.890873737 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.210441357 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.109995719 seconds)
    (3/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.088982538 seconds)
    (4/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.198323323 seconds)
    (5/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.10034353 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.069410967 seconds)
    (7/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.16184395 seconds)
    (8/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.198972686 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.161571223 seconds)
    (10/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.065527111 seconds)
    (11/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.205190372 seconds)
    (12/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.169972423 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.113413366 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071648471 seconds)
    (15/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.396707554 seconds)
    (16/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.155015201 seconds)
    (17/309) benchmarking ("sort", Float64, false)...
    done (took 0.130049492 seconds)
    (18/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.161514629 seconds)
    (19/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.108015852 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.071818349 seconds)
    (21/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.245340561 seconds)
    (22/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.071620339 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072341201 seconds)
    (24/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072176726 seconds)
    (25/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.211685674 seconds)
    (26/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.077219173 seconds)
    (27/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.163976234 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.118035471 seconds)
    (29/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.07443294 seconds)
    (30/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.075605162 seconds)
    (31/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.216765219 seconds)
    (32/309) benchmarking ("sort", BigInt, false)...
    done (took 0.240562383 seconds)
    (33/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.204528384 seconds)
    (34/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.07029139 seconds)
    (35/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.065117497 seconds)
    (36/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.163206062 seconds)
    (37/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.138792028 seconds)
    (38/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071231804 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.078017949 seconds)
    (40/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.061929151 seconds)
    (41/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.071969919 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090751266 seconds)
    (43/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.062498204 seconds)
    (44/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.061900081 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.130716239 seconds)
    (46/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.186910698 seconds)
    (47/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.11318159 seconds)
    (48/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.072097839 seconds)
    (49/309) benchmarking ("sort", Bool, false)...
    done (took 0.150966245 seconds)
    (50/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.077284342 seconds)
    (51/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.085017179 seconds)
    (52/309) benchmarking ("sort", Int64, false)...
    done (took 0.063717407 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.073614597 seconds)
    (54/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.200388114 seconds)
    (55/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.060706479 seconds)
    (56/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.069963057 seconds)
    (57/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.153661363 seconds)
    (58/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.212502868 seconds)
    (59/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.060296281 seconds)
    (60/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.155896728 seconds)
    (61/309) benchmarking ("sort", Float32, false)...
    done (took 0.128673012 seconds)
    (62/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.131678591 seconds)
    (63/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.072333343 seconds)
    (64/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.089994277 seconds)
    (65/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.176600775 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.080665054 seconds)
    (67/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.069979647 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.078393927 seconds)
    (69/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.062168472 seconds)
    (70/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.081511673 seconds)
    (71/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.136506508 seconds)
    (72/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.071910575 seconds)
    (73/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.18800421 seconds)
    (74/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.15308912 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.075760466 seconds)
    (76/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.070134562 seconds)
    (77/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.060716857 seconds)
    (78/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.068385609 seconds)
    (79/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.124563781 seconds)
    (80/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.06728923 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.127353111 seconds)
    (82/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.227265083 seconds)
    (83/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.072258406 seconds)
    (84/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.196492734 seconds)
    (85/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.063972804 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.086854627 seconds)
    (87/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064038933 seconds)
    (88/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.064762822 seconds)
    (89/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.218252613 seconds)
    (90/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.062976031 seconds)
    (91/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.134363969 seconds)
    (92/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.072821315 seconds)
    (93/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073254995 seconds)
    (94/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070036745 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.063147319 seconds)
    (96/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.075629852 seconds)
    (97/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.091529755 seconds)
    (98/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.070452367 seconds)
    (99/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.063181886 seconds)
    (100/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.063059207 seconds)
    (101/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071872459 seconds)
    (102/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.07575395 seconds)
    (103/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.220880115 seconds)
    (104/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.07461971 seconds)
    (105/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.07318957 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.085907756 seconds)
    (107/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068785302 seconds)
    (108/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.064209408 seconds)
    (109/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.185295203 seconds)
    (110/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.203360286 seconds)
    (111/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.066250341 seconds)
    (112/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.065805502 seconds)
    (113/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.062747015 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.084546259 seconds)
    (115/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.061017799 seconds)
    (116/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.166401821 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072898331 seconds)
    (118/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.154788323 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.061353093 seconds)
    (120/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.070846139 seconds)
    (121/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088319214 seconds)
    (122/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.062413212 seconds)
    (123/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.067880349 seconds)
    (124/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.062229084 seconds)
    (125/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.207146241 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.085177869 seconds)
    (127/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.069633052 seconds)
    (128/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.060559573 seconds)
    (129/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.060607701 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.06098227 seconds)
    (131/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061540233 seconds)
    (132/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.061868631 seconds)
    (133/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.068511687 seconds)
    (134/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.069848162 seconds)
    (135/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.062052036 seconds)
    (136/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.177858502 seconds)
    (137/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.161374505 seconds)
    (138/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071450743 seconds)
    (139/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.06373913 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.061144896 seconds)
    (141/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.060936382 seconds)
    (142/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072076715 seconds)
    (143/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.134389877 seconds)
    (144/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.070758945 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092307772 seconds)
    (146/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.06276219 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072355301 seconds)
    (148/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.090468228 seconds)
    (149/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.163410368 seconds)
    (150/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.063500546 seconds)
    (151/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.15686504 seconds)
    (152/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.063941409 seconds)
    (153/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.071129218 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.124867552 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.124513663 seconds)
    (156/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.074790188 seconds)
    (157/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.13500364 seconds)
    (158/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.06076415 seconds)
    (159/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.067611022 seconds)
    (160/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.06955352 seconds)
    (161/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.160434975 seconds)
    (162/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.060076339 seconds)
    (163/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.069016279 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.112528378 seconds)
    (165/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.060560799 seconds)
    (166/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.072952408 seconds)
    (167/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.166508238 seconds)
    (168/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.199621352 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.131857722 seconds)
    (170/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.064319385 seconds)
    (171/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.075278479 seconds)
    (172/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.060273228 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.088124327 seconds)
    (174/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066020571 seconds)
    (175/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.069999128 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.138254607 seconds)
    (177/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.06182885 seconds)
    (178/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.150554568 seconds)
    (179/309) benchmarking ("sort", Int8, false)...
    done (took 0.165582459 seconds)
    (180/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.060023035 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.082758899 seconds)
    (182/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.200717234 seconds)
    (183/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.07581338 seconds)
    (184/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.065008297 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.060546229 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.060076413 seconds)
    (187/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.073011764 seconds)
    (188/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.061760541 seconds)
    (189/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.070987367 seconds)
    (190/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.226905287 seconds)
    (191/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.063557834 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.062687545 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.11841342 seconds)
    (194/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.06948666 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.123664908 seconds)
    (196/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.165490139 seconds)
    (197/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.092905296 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.089290521 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088868635 seconds)
    (200/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.137503653 seconds)
    (201/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.064550433 seconds)
    (202/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.06233671 seconds)
    (203/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.13655607 seconds)
    (204/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.06246596 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.062194262 seconds)
    (206/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.061584089 seconds)
    (207/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.070069853 seconds)
    (208/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.061408781 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.061077258 seconds)
    (210/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.062175114 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.068908416 seconds)
    (212/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.06221583 seconds)
    (213/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.170785535 seconds)
    (214/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.070721079 seconds)
    (215/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.064601961 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.084505232 seconds)
    (217/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.069943702 seconds)
    (218/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.062316222 seconds)
    (219/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.063597429 seconds)
    (220/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.063442045 seconds)
    (221/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.064547715 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074359971 seconds)
    (223/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.062762784 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074519852 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.138318062 seconds)
    (226/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.065913322 seconds)
    (227/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.064448544 seconds)
    (228/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.062912638 seconds)
    (229/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.073824163 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.061191097 seconds)
    (231/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.135237151 seconds)
    (232/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.069880982 seconds)
    (233/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.200765338 seconds)
    (234/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.068661891 seconds)
    (235/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.151057905 seconds)
    (236/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.061082251 seconds)
    (237/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.064424824 seconds)
    (238/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.067836511 seconds)
    (239/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.065263974 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.109782793 seconds)
    (241/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.061100145 seconds)
    (242/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.06223688 seconds)
    (243/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.061651745 seconds)
    (244/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.061013694 seconds)
    (245/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.197338179 seconds)
    (246/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.060685418 seconds)
    (247/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.062076134 seconds)
    (248/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.06200724 seconds)
    (249/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.141795653 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.061052308 seconds)
    (251/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.060644229 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085027213 seconds)
    (253/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.064352168 seconds)
    (254/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.063705174 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.116082429 seconds)
    (256/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.063482776 seconds)
    (257/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.061888081 seconds)
    (258/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.06223181 seconds)
    (259/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.065750746 seconds)
    (260/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.063449264 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.11038994 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.088991773 seconds)
    (263/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.143391839 seconds)
    (264/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.062613496 seconds)
    (265/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.069934814 seconds)
    (266/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.063988084 seconds)
    (267/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.062678479 seconds)
    (268/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.06921597 seconds)
    (269/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.069468375 seconds)
    (270/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.063398628 seconds)
    (271/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.06201003 seconds)
    (272/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.062151357 seconds)
    (273/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.137608135 seconds)
    (274/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.062462756 seconds)
    (275/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.139412632 seconds)
    (276/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.065788721 seconds)
    (277/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.062334984 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.118962916 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.086826826 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.10666145 seconds)
    (281/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.127937533 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.11666715 seconds)
    (283/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.069373879 seconds)
    (284/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.062897457 seconds)
    (285/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.064049638 seconds)
    (286/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.06166278 seconds)
    (287/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.06934319 seconds)
    (288/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.061589754 seconds)
    (289/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.061344102 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071922765 seconds)
    (291/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.060668309 seconds)
    (292/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.060595355 seconds)
    (293/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.06198857 seconds)
    (294/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.06007491 seconds)
    (295/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.061852845 seconds)
    (296/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.06196224 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.068057786 seconds)
    (298/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.060663976 seconds)
    (299/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.072690748 seconds)
    (300/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.061786048 seconds)
    (301/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.062474494 seconds)
    (302/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.061244081 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.0893982 seconds)
    (304/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.060452602 seconds)
    (305/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.061235628 seconds)
    (306/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.060243115 seconds)
    (307/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.13925385 seconds)
    (308/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.060189996 seconds)
    (309/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.062485778 seconds)
  done (took 31.62965684 seconds)
done (took 33.111822499 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082214933 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.085921344 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.069307153 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.081118162 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.076501081 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091490487 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.07153032 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.076204831 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.07843459 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.078015648 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.07716405 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.069857354 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073413966 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.072884313 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.070667066 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086740194 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077289674 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072261683 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.071562215 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.062871682 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.071811068 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.063029785 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.06229591 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069873756 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.074584895 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070126266 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073212744 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07263722 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.063199754 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06339278 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.06798015 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073133506 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064131871 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.073899953 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.070684417 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.070693678 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073227092 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075661126 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.062907565 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.063776386 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073298009 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.063340006 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.070653169 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.068445389 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.066127393 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.068271877 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.070343009 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.073868102 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.084333057 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065452906 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.071418442 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.072052515 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.073521118 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.068885589 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068370182 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.071508766 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.069348946 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.086496824 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07195697 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067504166 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.072639487 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.071821276 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.068888153 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07112378 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.071366577 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.073911151 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.076681855 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.069488167 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073592484 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070191019 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.062583153 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.071644696 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.06818154 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.062854544 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074285383 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076188952 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.062333725 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.067070997 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071349597 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071872743 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.062399138 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.064923257 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.060779843 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.066466915 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065372284 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.067531897 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.066488381 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.068637507 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06072864 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.069672375 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.068641736 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.069618319 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.06081 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074445929 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.060963496 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.0674679 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.06110706 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.061614349 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.062323892 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.067362977 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.060522839 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065568066 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.07009475 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.060151977 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.06610239 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.074390216 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.061107955 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.069273763 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.060306897 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.061047709 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.072913141 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.071206436 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.061353557 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065449934 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.060924022 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.06675481 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.060910583 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.061212385 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.061046351 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.062897654 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.067368689 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.062742389 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066853419 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.068218479 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076470758 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.062822318 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067704533 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067138492 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.062817645 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069749872 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063110296 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063002803 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.062710699 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.076491268 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067483295 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.063279225 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.06701375 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.064700425 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.068633455 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.060078447 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.068705573 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.066359864 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.205218494 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.06906718 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.062630427 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.07532394 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067549545 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067203338 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.062626089 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.063026091 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.062619091 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.063065278 seconds)
done (took 12.216411065 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.062323001 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.089818894 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.06962087 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.077703412 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.074035633 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.064140547 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.068058876 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.082037321 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066608546 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.082845367 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.084551973 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.082815901 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.088704017 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.060675791 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.061894407 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.062469685 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.060703169 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.068724828 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.078576686 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.082521373 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.090309868 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.061619582 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.070843132 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.076645644 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.072135117 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.077908439 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.062652817 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.062363229 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.064401801 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.079297649 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.084614902 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.062000587 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.062460963 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.076582472 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.075503962 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.069652919 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.062453656 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.065881145 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.062356675 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.061413678 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.063620279 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.076607712 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.065459374 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.068002977 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.062719885 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.062617082 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.062756944 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.065734173 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.074606201 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.065639376 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.069194883 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.07389843 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.063924769 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.061769903 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.060657047 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.066268155 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.061939485 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.062625445 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.061541184 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.061687717 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.061779352 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.063557354 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.062428939 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.062235351 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.06542186 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.067120206 seconds)
  done (took 6.092204743 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.0791396 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089705335 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.078112689 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.077971872 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.061372384 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.062239625 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.06181859 seconds)
  done (took 2.086890288 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.06262733 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.074593561 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.077699208 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.078143383 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.07156776 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.079941902 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.062360943 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.091098346 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.062369762 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.076067075 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.110243587 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.08123866 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067211663 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073962294 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.06174548 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.069833935 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.061866892 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072220492 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072748402 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080623119 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06849074 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.09061115 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.077196925 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.063697656 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.085377094 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.069463332 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.063363969 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.064078573 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065212652 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.065211992 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065239946 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.103387152 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.06876112 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078148373 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065177398 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.063696263 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.070844834 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067403466 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.066484463 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.068435486 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.06789175 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.064091836 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.061448935 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063747736 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.065410081 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.06648543 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.061190296 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.063740219 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.06331111 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.073677031 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.060974433 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.066845228 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.066116282 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.067282825 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068024792 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06831949 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.071986584 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.065678186 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.076254668 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.070399541 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063408233 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.072017179 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.072160377 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.070079626 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.073128132 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.068063651 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.067000464 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.067930039 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.063435248 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.065632571 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.065165104 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.072423327 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.063044427 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.065893159 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.067087294 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.065638231 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.067827557 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.078484399 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.078404912 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.074203769 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.063774633 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.063725015 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066369416 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.078061409 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.066987893 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063402188 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065829706 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.061424528 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.066556417 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.063955451 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067974719 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.064197737 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.070446018 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.065015488 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.066131336 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.071154489 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.061957765 seconds)
  done (took 8.320625598 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.064816154 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.063741637 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.065073264 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.063660079 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.063010673 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.063684431 seconds)
  done (took 1.991916072 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.085552455 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.063559765 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.076170375 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.063047854 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.09658734 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.070366438 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.070465399 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071542724 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.075441871 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.075875819 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.072901795 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.07581751 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.071875101 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.067004879 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.072243245 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.066108318 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.072700941 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.069703796 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.076630076 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067000213 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.078296164 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.0650285 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.064848422 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.074600895 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.065832134 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.064045222 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.062910208 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.074519413 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.074823544 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.074407981 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.064752113 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.066114089 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070577604 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.071311191 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.070416058 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070451451 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.062736809 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.068825936 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.065000934 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.065814852 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.072834726 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.065240413 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.065241448 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.068741333 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.07149585 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.06989948 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.069047778 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.066351841 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.070619686 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.068368918 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.068567523 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.063966546 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.065759678 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.06828763 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.071003343 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071264798 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.068373712 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.069880593 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.06458793 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070208819 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.062844031 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.066004895 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070992993 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.065974437 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.066860868 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.068822435 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070478014 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.064475392 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.065135612 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.062994552 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.06867784 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.062848344 seconds)
  done (took 6.572935058 seconds)
done (took 26.62846645 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.978768378 seconds)
  done (took 2.532291102 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.559654748 seconds)
  done (took 2.151744502 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.792551298 seconds)
  done (took 8.384599745 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.283220278 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.328256871 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.704815831 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.128355201 seconds)
  done (took 3.065014102 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.705543341 seconds)
  done (took 2.306563216 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.228687696 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.216595308 seconds)
  done (took 2.054345147 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.34218897 seconds)
  done (took 1.933526479 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.066332204 seconds)
  done (took 2.655963551 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.224444104 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.154106672 seconds)
  done (took 1.98008113 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.447135454 seconds)
  done (took 2.04294389 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.266594826 seconds)
  done (took 5.869178647 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.233683347 seconds)
  done (took 1.872117943 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.229124889 seconds)
  done (took 1.831208147 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.733708666 seconds)
  done (took 3.330594906 seconds)
done (took 43.610416946 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078397305 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080888233 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.079885007 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.076128392 seconds)
  done (took 1.887303266 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.070084322 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.066418025 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.070601712 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.070245873 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.066713912 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.068710541 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.070410873 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.067312632 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.069044687 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.067660417 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.06593994 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.067260655 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.070168362 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.067678062 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.070466601 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.071886721 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.067859659 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.066268396 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.06888204 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.065560848 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.069952627 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.067772762 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.065876961 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.067163871 seconds)
  done (took 3.235502203 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.073366456 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.069158371 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.072237794 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.068735601 seconds)
  done (took 1.89075543 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.072006514 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.083842376 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.084280306 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.088599645 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.073850769 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.074693632 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.082362503 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.083557108 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.06281583 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.086452124 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.065610358 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.063953819 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.064164364 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.084605837 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.082231654 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.060558998 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.062379596 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.075029415 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.073870985 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.076512215 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.065166155 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.06291931 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.0741344 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.074088374 seconds)
  done (took 3.38426025 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.075235547 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.061595757 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076061939 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088000282 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.09213468 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.062946183 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.078710498 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092120029 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.139192201 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.063263655 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.068869762 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06300584 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.104939632 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.063032297 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079389404 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.108946558 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.109890149 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.065017682 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094339489 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.061473108 seconds)
  done (took 3.265131247 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072045257 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.066943495 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.067512864 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.062680683 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.073706755 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.070791655 seconds)
  done (took 2.028653809 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.064019735 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.064680474 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.065346886 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.064277362 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.069693856 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.064337959 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.062769976 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.064743136 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.064974525 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.064839404 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.064130874 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.063304303 seconds)
  done (took 2.389147083 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.156857549 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.066766257 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.065999888 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.063769714 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.067035255 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.062189061 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.077957552 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.064589622 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.083267773 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.063794351 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.063738304 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.066417721 seconds)
  done (took 2.512874395 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096076755 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125303772 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092361526 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.070483895 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169271861 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093760922 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.089899576 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.121262623 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092226375 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.06799771 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.092084636 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134668207 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094161478 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.097150672 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080733341 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123643853 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.108835857 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086621043 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112864775 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081316394 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.069600177 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130494416 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.068605335 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091626158 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097771978 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.093860756 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105248745 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128261905 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08025866 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.086226536 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079229593 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.070688198 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.101156927 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.080679528 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.093998397 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08949836 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094664862 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083709601 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.085315686 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119481974 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152889081 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099186374 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099247133 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133297102 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077720044 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.107320557 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080584032 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098091299 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103195058 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09110389 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072843412 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088914787 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.102503009 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09884794 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.078294802 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078967014 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113896475 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.096986171 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094059767 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079176888 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104346953 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.085597582 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105590515 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267092617 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1385517 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098316692 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133442543 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121235485 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09380009 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.085555966 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.087545928 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072493101 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106872007 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095327788 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132729459 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105865179 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096240393 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.092822535 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078951665 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105263963 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110105641 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091333955 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090640961 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141412478 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104900643 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086602197 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087986432 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.142637654 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.068202991 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143017934 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085448745 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117006696 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093378304 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134818332 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087859415 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.080116208 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102118114 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100273312 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086027939 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099113859 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081453936 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10987644 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09007541 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099673295 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.080977013 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089769092 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086014259 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.096949466 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.074110632 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102941525 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114978511 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112751312 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.074165136 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107603048 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085724879 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.076258069 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091877196 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13818315 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082980192 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.074800023 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149973253 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.092169529 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.116082087 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106721128 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.079283494 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.263286408 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136715006 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092458593 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090209249 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07640275 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153972749 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075879259 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118449001 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080984157 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1000257 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102545049 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128320408 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135279701 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092336236 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075493682 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088723849 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.103391487 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084807669 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085482173 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075823792 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.108100452 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122526535 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.096818773 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077249691 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.089259264 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.066295585 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109993536 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073277982 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081545789 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092491541 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.084254423 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.086852975 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138324778 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.081255173 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107044088 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096085411 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.066496264 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09090056 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149987031 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.080109842 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.108684511 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112617015 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080692858 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.065746837 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.092500412 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.070256171 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1055741 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.092191471 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106796105 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077536246 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106274684 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.067660957 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073342919 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128875968 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101431657 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088464746 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.13254706 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105094542 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.08843454 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.103562679 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.096293591 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093981131 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09916026 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.259796286 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106770489 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.073836034 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129964718 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091574511 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.077229587 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086715915 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078262493 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.077662416 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100017606 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114322165 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08632553 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097827668 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100596073 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087365329 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.108871715 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086464478 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075327945 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128442577 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073937406 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.072333347 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08500234 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.103257944 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085999217 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.130320129 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.076542599 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132265971 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088775698 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078677859 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11254077 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.06613254 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.067311884 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.078655746 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089189997 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112729428 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076661563 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075601102 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117695708 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131156165 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095784454 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099600304 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.065852568 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087881628 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131647092 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.111590524 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078429322 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106786095 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08167217 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126193281 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093239049 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117351756 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102993551 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108322639 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.090479913 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.078225121 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.073047587 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086346068 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108487987 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083789689 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081237366 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.06733683 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073688594 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092054143 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091177938 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111786143 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086274118 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13036061 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.070189886 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096836964 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.250786451 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109115346 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089224729 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092379246 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.090026819 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089533224 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089249968 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089530129 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.072649043 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126448982 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102850604 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077839677 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088634315 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094622106 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106594062 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107811255 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105785593 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090559862 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103874267 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119466662 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094888339 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079523127 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081429014 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.09020009 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.081510479 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07882468 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.100905215 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109009219 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095472003 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105664751 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.091900064 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.090643137 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103967345 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090094953 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085977745 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.115342899 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149299691 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.09940627 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.100999132 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082596166 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103967189 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102374661 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11017754 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.107635325 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106096877 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.068007172 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.072854316 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.068170434 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103522203 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076638009 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11396269 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074190483 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103888672 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093669555 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077230022 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.064666581 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098739427 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090634511 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.079971642 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119814126 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.110653558 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.070534448 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087627356 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103623268 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080294998 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12022521 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.098181989 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09774592 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.069462527 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.087028081 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.070280556 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.261109445 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.101573787 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.078226816 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.076485295 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.070326311 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108394738 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083576529 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1091856 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089301456 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101518007 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119270133 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129589062 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086270894 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096209545 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11745361 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113837667 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.081753445 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112714442 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13583267 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.120372408 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.079586813 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.081484415 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103004946 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103633744 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099169453 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073664497 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076693681 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106071448 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110815319 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.065535084 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081988892 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.067859875 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.081681214 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109529421 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092423893 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.079804616 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114721458 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072318064 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105043487 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092232142 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119646432 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119095646 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141307888 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094625169 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082471465 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074219376 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120833111 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.068167094 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114046556 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.10906791 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085204152 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.065955588 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081076367 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.092853454 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.623725433 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105872416 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.07343177 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132109296 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08439099 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112381865 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082001378 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.113966737 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086038625 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097943787 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.087364434 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.280508848 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.083384684 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110098172 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.177466044 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110823291 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.107793183 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073524046 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.087363513 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.073855755 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.077930021 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.079979899 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083629939 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106116243 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.082231988 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103761142 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.07701673 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.103324284 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088366014 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087195417 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.099176789 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081138513 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139065946 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088292153 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121513106 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104383616 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.075841412 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.071880157 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.083788988 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.098252117 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08040151 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091884566 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.077184007 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.074162677 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151775052 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102064798 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084969741 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103139801 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.091741891 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.08694547 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090950828 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117032207 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109004044 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.070831277 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.085096889 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100689805 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076415611 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.072361781 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094306141 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.067071137 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086677805 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095726975 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093296038 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08888232 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.102832655 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077912715 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085508719 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108504158 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08558175 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.075140676 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074520409 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.073818936 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.073456287 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100529464 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105367767 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112715575 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108153223 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09022299 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092683423 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.077953141 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.223260647 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.237479608 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098492339 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.106070357 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.076292891 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.131829145 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089080396 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08923769 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096725006 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10203129 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152114889 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074065874 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109897805 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094552433 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109938597 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086670046 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106911593 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095422919 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092477096 seconds)
  done (took 49.633720873 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.089474118 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.14774176 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.15469515 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.077518632 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.091349497 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.115032 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204514737 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.187914975 seconds)
  done (took 2.807384363 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.063689917 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.077966314 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.101648033 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.080897582 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.063667592 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.065018466 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.204773445 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.07975451 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.064018998 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.101545529 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.074523223 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.066169174 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.41845906 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.063410307 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.064387788 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.073574327 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.065349728 seconds)
  done (took 3.442890159 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.360211116 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.598694533 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.33843496 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073122429 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.000225669 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.084701861 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.3393157 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.131732247 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.075877423 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.53489356 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.36640009 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.127028035 seconds)
  done (took 18.765556668 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.071297716 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.072729469 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.076142309 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.076041236 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072088644 seconds)
  done (took 2.090618085 seconds)
done (took 98.945897253 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.07695462 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.16548105 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.06526025 seconds)
  done (took 1.986861146 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.07916624 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.078684417 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.079043602 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.077313391 seconds)
  done (took 2.050337261 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.069648822 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.073668572 seconds)
  done (took 1.87054224 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.242887954 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.163222184 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.091783234 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.078431148 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076095705 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.076526719 seconds)
  done (took 1.969101865 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.068237551 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.069443837 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.070929414 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.071239448 seconds)
  done (took 2.004155533 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.063683918 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.064161121 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.066319891 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.069056527 seconds)
  done (took 1.990962328 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.079223679 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.081701924 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.076936701 seconds)
  done (took 1.96691122 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.091567357 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.095066308 seconds)
  done (took 1.913907431 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.076255284 seconds)
  done (took 1.804509342 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.084754102 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.096709899 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.150190396 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.111117409 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.150658013 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.134509499 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.076719701 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.077560752 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.071808112 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.070768752 seconds)
  done (took 2.750044505 seconds)
done (took 22.608228848 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074150192 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.365734604 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.355058146 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.081509202 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.66542437 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.35207196 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.980424814 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.08631435 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.09392468 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064083361 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.07971667 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.646932114 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.975747161 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.328778705 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.962119197 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.327299143 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.64789961 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.064183137 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06294903 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.064033497 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.963377672 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064035681 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066085123 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.065742516 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.683168167 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370231286 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066486797 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.326495438 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06590299 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068729351 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355051065 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067580425 seconds)
  done (took 16.151839367 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.065779146 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.116545186 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.068553524 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.079173427 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.065548282 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.065140021 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.06709069 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.067048678 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.107810205 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066716447 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083588426 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.065697627 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.070882959 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068698493 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086884175 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067166626 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068354889 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067254252 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067250586 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071021547 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.083916989 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066550181 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067934795 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067448517 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068048803 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080247078 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068290433 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066906474 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066775156 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070119264 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070767699 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06877092 seconds)
  done (took 4.080428426 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115775997 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121576009 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.068737725 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102223765 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114673149 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.065449517 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.144665327 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090288666 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112186226 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066648732 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082490061 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066337395 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102026564 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069244311 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087695024 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067616507 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068739655 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.0671844 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066922814 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068427079 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086365477 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067055812 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067852022 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067335645 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067818695 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081914253 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068641838 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066876512 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066983038 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069651273 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071171791 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068730533 seconds)
  done (took 4.35248875 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.065909637 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.068352817 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.077304458 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.076932599 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.062784278 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.064823742 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.066421121 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.063196119 seconds)
  done (took 2.303879486 seconds)
done (took 28.636621366 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.073792967 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.064859184 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.068873333 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.085084018 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.071045808 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.068352125 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.062920061 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.072093321 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.069186309 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.069747959 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.070342065 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.063866675 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.067980078 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06306644 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.070185297 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.065044785 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.071395368 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.068772446 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.069394179 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.07054118 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.067548176 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.070396812 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.07299118 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.069508975 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.069926848 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.070053258 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.073837239 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.069724297 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.065298289 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.067253947 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.067254834 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.076131915 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.07165616 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.071614199 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.064561479 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.064976108 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.069026885 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067097489 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.070953554 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.073716555 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.066226004 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.073991304 seconds)
  done (took 4.639957532 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.079315318 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.085942372 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.079491457 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.079374927 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.09759606 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080070569 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.084194189 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.076368465 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.074902438 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.083475102 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.071069713 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.078742324 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.075906903 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.070488219 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.075151528 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.072265822 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.07773238 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.070525954 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.073145508 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.073186862 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.082152632 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.067430143 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.075554739 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.076877226 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.072647648 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.077923186 seconds)
  done (took 3.768924666 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.068602809 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.080289152 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087865279 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.14338031 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.110713409 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077039758 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078161042 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.0915756 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.095157284 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.065652639 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.069646238 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.090522001 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090495275 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.072218585 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.106466934 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.081603844 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.080945005 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.067779864 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.072705812 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.094438932 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.08610169 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083390641 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092204223 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081933803 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.064961468 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.067238999 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071606988 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.078911083 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071740246 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076339255 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.069460075 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.068007661 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.065782981 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.076974158 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.069116262 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.064497777 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089048964 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076808163 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078399907 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.108716046 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.074050225 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.066635984 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093009093 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.126393934 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.06468128 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.0683962 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.068689733 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076416239 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.06638018 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09359422 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079599159 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.065000419 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.065577774 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066143478 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.064185537 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078070036 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.064738523 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.064883918 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.074018251 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.068747938 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.084648605 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.069754157 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082390134 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.065146461 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075404252 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066313383 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.066315918 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.064195435 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.095884415 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071492813 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.113117511 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.065970766 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.064080656 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076428118 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.07397861 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.068652169 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.062856177 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07967434 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.073558483 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.066126949 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.074354489 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.065700413 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.066163634 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.09428978 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.063104919 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.062544489 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.061618521 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.066045043 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.065759499 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.064198161 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.076032778 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.062179189 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.065850141 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.077135281 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.062691759 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.063391468 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.066249364 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.064737369 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.062395618 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.075324947 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.066932739 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.06398711 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.074047546 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.063541071 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.065588427 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.075707353 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.069887364 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.062361232 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.064586242 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.065739008 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.063918341 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.066443201 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.065704173 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.065067172 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.069799973 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.069908364 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.068395525 seconds)
  done (took 10.499778983 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.156148528 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.146524691 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.0658542 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.140374388 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.071194841 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.068667486 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.141292756 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.082460741 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.063854797 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.064677214 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.062786205 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.092343938 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.088198338 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.098080454 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.068409811 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.063786434 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.086312435 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.095613613 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.143456441 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.139604974 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.086531658 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.070516831 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.065584167 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.064782136 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.065348872 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.071912064 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.078675305 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.071465948 seconds)
  done (took 4.29925137 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.073350637 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.087403158 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.067641516 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.07449174 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.08349199 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.063983768 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.065399848 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.065185088 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.078303365 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.072936896 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.063823112 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.067635556 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.067098717 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.066215402 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.06638284 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.07165046 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.072371447 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.063791324 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.067586329 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.06833672 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.07364802 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.088184122 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.067604617 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.063147243 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.065715635 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.063590233 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.072107743 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.076980629 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.065616644 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.078534484 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.061114224 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.067881917 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.077287377 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.064386549 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.06291355 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.063584085 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.063846265 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.063708672 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.063934286 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.062139394 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.062137995 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.068078078 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06230079 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.071445159 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.0773061 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.07011506 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.065348107 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.065939643 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.066480942 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.061006919 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.066521936 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.066603896 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.065828731 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.070500436 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.066826996 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.066194336 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.066723143 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.088397033 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.069090249 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.062915426 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.062568028 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.062322126 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.065767362 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.073453962 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.080387188 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.065772974 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.062319189 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.063686858 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068986932 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.077244902 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.062659827 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.068578877 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.061226241 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.064536287 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.066208439 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.067728795 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.066165034 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.064210532 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.065334042 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.065366318 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.064962027 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.06342744 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.06308209 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.065693947 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.0615498 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.062098513 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.063852987 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.064754602 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.071780926 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.062644695 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.067134355 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.064330759 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.062637017 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.065662981 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.068330329 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.06602278 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.076124267 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.074564742 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.064066228 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.061718912 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.076476657 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.065640586 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.062612428 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.069141922 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.067274818 seconds)
  done (took 8.90874251 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.086536446 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.064934374 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.079199976 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.086626856 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.074027471 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.068460377 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.07420766 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.064700194 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.079914734 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.06297276 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.071923547 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.062226056 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.074799004 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.073625145 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.06485489 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.073980415 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.067368564 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082281757 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.078389402 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.062653765 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.072176049 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.075265902 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.07567397 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.077920991 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.079119297 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.080759674 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.077500956 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.06831769 seconds)
  done (took 3.85985232 seconds)
done (took 37.721190147 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.812459601 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.094479138 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.820562932 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.040184185 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.878255618 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.018416774 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.930284171 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.812607273 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.004199382 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.868171209 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.116329001 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.369783769 seconds)
done (took 66.576861511 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.857823194 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.976406917 seconds)
    (2/2) benchmarking "String"...
    done (took 2.078660333 seconds)
  done (took 5.809351608 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.062964725 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.655932811 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.080020967 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.815193172 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.823325434 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.263201465 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.624837203 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.280889768 seconds)
  done (took 31.298942244 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.001693102 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.048533283 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.508434251 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.54215607 seconds)
  done (took 15.895264617 seconds)
done (took 64.768280105 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.829916866 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.816670134 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.823382633 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.84447775 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.820704479 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.818984417 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.822616261 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.817954642 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.834778165 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.988038239 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.823322535 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.835000783 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.818318815 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.869080419 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.512351737 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.876858126 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.826505491 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.832130022 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.825981772 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.83569415 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.825066807 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.819198639 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.300144774 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 2.005167664 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.435722711 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.007100889 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.277870011 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.205546924 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.821719566 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.817733278 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.858746915 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 6.997236092 seconds)
  done (took 205.597678906 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.81789889 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.809933581 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.881521032 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.836380584 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.289821798 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.99893498 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.915107653 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.322952796 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.824137856 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.845881643 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.051521432 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.825039032 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.077807377 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.769340789 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.851773829 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.836430621 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.063408048 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.096774205 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.859939021 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.977964724 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.844622722 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.897593507 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.835304403 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.051509027 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.852045776 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.923922587 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.83587138 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.829355734 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.011230252 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.037595679 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.827937717 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.85110843 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.987168061 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.689740194 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.845663679 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.838641168 seconds)
  done (took 171.867768708 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.010524109 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.821698321 seconds)
    (2/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.825327692 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.819640752 seconds)
    (4/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.873340141 seconds)
    (5/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.941517531 seconds)
    (6/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.826311593 seconds)
    (7/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.455728902 seconds)
    (8/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.830395037 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.299917209 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.828860069 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.819862918 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.819779309 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.821363326 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.834902361 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.896362258 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.823699338 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.836608237 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.823169581 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.84400903 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.825702751 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.819500999 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.819119146 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.819998368 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.820490197 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.820057478 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.82016292 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 21.993278194 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.062024255 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.821084227 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.820964359 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.941096928 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.833850878 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.189430026 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.822803922 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.913584863 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.877971899 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.938778646 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.827118706 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.038663401 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.894440148 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.82146042 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.819872251 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.885841396 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.836238806 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.821954667 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.823318661 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.826428997 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.886485156 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.060054948 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.823092832 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.942449975 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.307791619 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.8245417 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.822972931 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.821950957 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.40854449 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.826675071 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.822050785 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.828104615 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.828396844 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.821595155 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.822359383 seconds)
    (63/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.821094232 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.208124365 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.892991 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.907683197 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 21.983538981 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.825126511 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.228510666 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.952108181 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.82193133 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.821567405 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.822396667 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.825500512 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.822903306 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.825492598 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.942963248 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.833093715 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.950208857 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.910196133 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.945506927 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.827680455 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.822719376 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.833042219 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.64844178 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.896114756 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.860359386 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.652710737 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.828564323 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.196863449 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.594582375 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.823643001 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.824678858 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.837927401 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.824161469 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.824983273 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.824105094 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.907686677 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.824241756 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.824691671 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.945911141 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.548017734 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.109526595 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.824277602 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.825319525 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.83053254 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.905076191 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.945162648 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.828147767 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.890096896 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.829433535 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.825552155 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.908033143 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.825861892 seconds)
  done (took 406.279035391 seconds)
done (took 787.57347473 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.410642276 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.38651016 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.480071938 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.39659382 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.373545731 seconds)
  done (took 13.808611753 seconds)
done (took 15.573970918 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.839189799 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.830939294 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.883697954 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.909373235 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.842509246 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.846708564 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.909354201 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.843515126 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.876327573 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.879722041 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.913550789 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.91088492 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.850607512 seconds)
  done (took 26.098264824 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.835389994 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.989261542 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.056618305 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.866331713 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.837521174 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.069563972 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.890251575 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.973610725 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.993982975 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.067789529 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.070232408 seconds)
  done (took 23.415927066 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.833576045 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.989397594 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.060178705 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.870675815 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.835526545 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.069942276 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.897084282 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.974649428 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.985102853 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.073694141 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.085472081 seconds)
  done (took 23.445795884 seconds)
done (took 74.72619641 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.830075659 seconds)
  done (took 3.59347052 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.860486247 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.996627223 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.83035681 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.829364455 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.830190911 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.830649181 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.828546238 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.830297755 seconds)
  done (took 16.600746662 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.830239541 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.830180371 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.829999876 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.830107384 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.830024386 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.830021079 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.830085696 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.830146961 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.830188811 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.830480186 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.83138457 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.831472295 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.832366694 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.830677314 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.832072303 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.831116862 seconds)
  done (took 31.054596302 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.832031794 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.831162403 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.83243203 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.829999987 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.830796715 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.831547794 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.833484548 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.830365566 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.830692881 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.831592317 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.830571965 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.830332803 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.830225551 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.830930784 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.828783902 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.83123434 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.831770019 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.832739358 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.834940824 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.832099985 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.830632753 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.832977859 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.830730644 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.832666717 seconds)
  done (took 45.721649557 seconds)
done (took 98.745218943 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.575623808 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.807866013 seconds)
  done (took 10.148858897 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.83330535 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.833160445 seconds)
  done (took 5.437774094 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.832558543 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.832656981 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.832277122 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.834036864 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.833739012 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.83273047 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.833991674 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.834905193 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.833371028 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.834149156 seconds)
  done (took 20.100786553 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.831934726 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.834962448 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.834174745 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.833676793 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.833963448 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.833502115 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.834398673 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.835147542 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.83332007 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.832583339 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.833245652 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.833441571 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.833397492 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.832359557 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.833785818 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.833912115 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.83499896 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.835654162 seconds)
  done (took 34.777946637 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.835003614 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.834056886 seconds)
  done (took 5.435941779 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.835323196 seconds)
    (2/7) benchmarking "second"...
    done (took 1.832872247 seconds)
    (3/7) benchmarking "month"...
    done (took 1.835569627 seconds)
    (4/7) benchmarking "year"...
    done (took 1.83318378 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.83505511 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.834358919 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.835139846 seconds)
  done (took 14.611874897 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.833958127 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.988424356 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.055320365 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.683238814 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.834860398 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.837841424 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.177709399 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.839268454 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.839038683 seconds)
  done (took 20.859257379 seconds)
done (took 113.141206947 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.682376684 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.835946954 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.099618351 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.946706129 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.854731949 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.128007506 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.876303037 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.477254603 seconds)
done (took 42.674215252 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.858844568 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.833142553 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.863956339 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.866225863 seconds)
  done (took 22.333560233 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.835178503 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.17016622 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.858782044 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.672780139 seconds)
  done (took 22.325484929 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.220911308 seconds)
    (2/2) benchmarking "read"...
    done (took 2.180122524 seconds)
  done (took 6.177144875 seconds)
done (took 59.468749358 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.836055547 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.837143976 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.837484979 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.835556803 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.834516479 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.836105375 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.836416541 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.835975684 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.837069516 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.836214883 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.837013638 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.837475213 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.836320004 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.837386671 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.837396283 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.836285305 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.836912672 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.836096932 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.837383117 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.836684301 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.836969959 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.836795415 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.837600575 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.836479 seconds)
  done (took 45.84955418 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.836166391 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.838465817 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.838470197 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.837328401 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.83776107 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.837901608 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.837102756 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.836678096 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.839650863 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.836861779 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.836159555 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.839208332 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.836807089 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.838204799 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.836515747 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.837465654 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.837034355 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.838564398 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.838054933 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.837975928 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.83806956 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.838686996 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.837587546 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.838088904 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.838845194 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.838734026 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.837077318 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.839166461 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.839382516 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.83838567 seconds)
  done (took 56.909091945 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.837164568 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.840124402 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.838618586 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.839163437 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.838751821 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.839516627 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.841534094 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.839758261 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.839177691 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.838284246 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.838957582 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.839268394 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.838824915 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.840418027 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.839367034 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.8389902 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.839542747 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.838310701 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.838598284 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.839322912 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.840210071 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.840228811 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.840602358 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.840473202 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.840475568 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.840186706 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.841244878 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.84084262 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.840532957 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.839711233 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.842492547 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.841300461 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.839410034 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.84108108 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.840212987 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.841676499 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.84078051 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.840789946 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.840133031 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.840356702 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.841004411 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.841948199 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.841614068 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.840788395 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.840039605 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.84041266 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.840282959 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.840300762 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.84080638 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.841304244 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.841642102 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.841022575 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.841115372 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.842470776 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.841815521 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.84230034 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.84194794 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.841381148 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.841135701 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.842091753 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.842518852 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.842681079 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.842250266 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.84218885 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.843618979 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.843046657 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.8413906 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.842730305 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.843183882 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.842548194 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.84457081 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.842515157 seconds)
  done (took 134.310052492 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.842760931 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.843129651 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.843355503 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.843100137 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.84311491 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.844798678 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.843798766 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.842817815 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.843842021 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.844047819 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.844552677 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.844679206 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.844114187 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.84300436 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.843037923 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.843769278 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.842958083 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.844008399 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.844908258 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.843251919 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.844613018 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.842149728 seconds)
  done (took 42.336243251 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.842880785 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.844406469 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.844404822 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.844011013 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.843452293 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.842476379 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.845207969 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.842712089 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.843872024 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.843868434 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.84351114 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.844391308 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.843710262 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.843230871 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.843778865 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.846234612 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.843879899 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.845509691 seconds)
  done (took 34.968996026 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.842470953 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.845093606 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.843304661 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.843682942 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.844894608 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.846084209 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.844492326 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.844948018 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.845022655 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.843885603 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.846103253 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.844158785 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.845099051 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.845278793 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.844410914 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.845566491 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.845645474 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.847285458 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.844835205 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.847225504 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.845006477 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.845961486 seconds)
  done (took 42.369034158 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.844572807 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.846088042 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.845300317 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.846755017 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.84495054 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.844624528 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.847174671 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.845578675 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.844936909 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.844956471 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.845906585 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.846196127 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.846862446 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.846397769 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.846097672 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.846189163 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.847290335 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.847155533 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.848804876 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.848499186 seconds)
  done (took 38.704388873 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.845241612 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.848721569 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.846529995 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.84679666 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.846931726 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.846337385 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.849627071 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.846469677 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.84671349 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.846192742 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.845794565 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.848286888 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.848657772 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.848310237 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.849204719 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.846970094 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.848774244 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.846931662 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.848984134 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.849087316 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.848256961 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.848473684 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.849016996 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.847889196 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.847593033 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.847757794 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.849859148 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.848947966 seconds)
  done (took 53.520359296 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.849500254 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.849045701 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.848200378 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.847805616 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.850294189 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.847004525 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.848310843 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.847928868 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.847486215 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.848032091 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.850281306 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.848421491 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.849514791 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.848563822 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.851117814 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.851173019 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.849436993 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.850022399 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.848803606 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.849110412 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.85034787 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.84970607 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.848011429 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.849139621 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.849089418 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.848041334 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.849807767 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.848883904 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.849863062 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.8493429 seconds)
  done (took 57.255584469 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.870314015 seconds)
    (2/2) benchmarking "in"...
    done (took 1.87113383 seconds)
  done (took 5.5256601 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.849651858 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.848851704 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.850457574 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.850238705 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.852699289 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.849120951 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.850291791 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.850681986 seconds)
  done (took 16.585435546 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.851066285 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.854796101 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.850881432 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.852736669 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.850837052 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.858679691 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.851437828 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.851724398 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.851917027 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.853066604 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.85626178 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.856988014 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.860734282 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.854744983 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.851953438 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.852762779 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.852709813 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.854213776 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.853857082 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.851983895 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.854695826 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.85097028 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.850840978 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.852821366 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.852041452 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.853532276 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.861472932 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.854800931 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.85436576 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.851377657 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.859720173 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.853740589 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.852664226 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.855214044 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.85229141 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.853684576 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.85951166 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.852704493 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.851465096 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.853206712 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.855959696 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.857373715 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.856289876 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.861723245 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.852861327 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.853085506 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.855259898 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.8544596 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.855768717 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.858407409 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.862938665 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.853122346 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.855180566 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.857107441 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.856933319 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.854155856 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.853542939 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.855373385 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.860828094 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.861255397 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.85984007 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.876841083 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.866199254 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.853829606 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.854779342 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.866107707 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.878418339 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.858634007 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.857553089 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.855144869 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.864944578 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.857152303 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.855407981 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.853781274 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.866130757 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.866147181 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.856234154 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.856141389 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.855812873 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.854147664 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.858076593 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.85553359 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.856327811 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.855155809 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.864494165 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.881042186 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.856904731 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.856410679 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.859239132 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.85748874 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.860723048 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.859434788 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.857683943 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.856024879 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.85749774 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.856253065 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.857644281 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.856062407 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.856663466 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.864381586 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.85791875 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.855936341 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.861906459 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.864167751 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.85684083 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.857254381 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.858372955 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.857289812 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.866198416 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.861631607 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.858322619 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.858689385 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.860210575 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.864512369 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.857898512 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.86248605 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.865902846 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.86649348 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.861508236 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.861108713 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.864889887 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.860277678 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.868846497 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.882451438 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.858819747 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.862333517 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.864314722 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.869954848 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.861767935 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.858558611 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.860023115 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.85822138 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.858383222 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.861826912 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.860950932 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.861489389 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.862094978 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.858873159 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.859401911 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.858250279 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.859804087 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.859576018 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.860005475 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.860571482 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.862808447 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.860891181 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.862799743 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.869527019 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.860525729 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.862822512 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.858764433 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.863167101 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.860305697 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.862634556 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.862517551 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.862103806 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.862124908 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.861343675 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.861607408 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.862241305 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.861182208 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.862861368 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.863892643 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.86037425 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.861814532 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.86074627 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.862351591 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.861830387 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.862182235 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.86641399 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.86224308 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.861054028 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.863801026 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.860131466 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.861966067 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.86053642 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.862710373 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.860856286 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.865724741 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.873697492 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.866745629 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.868913269 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.859909332 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.869711345 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.865082091 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.862229016 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.865603904 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.862000236 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.862422197 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.863140911 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.8639382 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.865798473 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.881103325 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.875715899 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.865006721 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.864159072 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.870209489 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.867631847 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.86821355 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.864263347 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.863238667 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.868190252 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.865433321 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.863048495 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.862304949 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.864993486 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.865182245 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.864891603 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.867890342 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.863349676 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.869306638 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.865177942 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.866623393 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.868405957 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.865325458 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.863482106 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.864878002 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.865080121 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.873891529 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.867447867 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.865661468 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.8624231 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.868584834 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.864457655 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.863832108 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.865433487 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.869439592 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.865891858 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.864217476 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.872481277 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.866548685 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.86470918 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.865274892 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.866834459 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.867602803 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.866817947 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.870095437 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.874170643 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.871166731 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.86497119 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.870046036 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.865092278 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.869440588 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.866764035 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.867425458 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.867072781 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.868126801 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.868574157 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.865346213 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.871714175 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.866836651 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.865624457 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.869333134 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.869093971 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.86505792 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.870124753 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.866916456 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.868423361 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.873907095 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.870921645 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.869397942 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.871251647 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.869760324 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.867838261 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.871409841 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.867544075 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.881961449 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.879800412 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.864733087 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.866496538 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.865747804 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.872856731 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.869883873 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.867823366 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.873174911 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.87128703 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.872715959 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.874685291 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.870304145 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.868746072 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.875823148 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.872193087 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.87256195 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.870939979 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.870551831 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.869944334 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.868655942 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.868579618 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.869084485 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.870922084 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.872844502 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.869185279 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.871155617 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.868979103 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.881300655 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.872047784 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.871741919 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.876464593 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.871499734 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.868167637 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.871729044 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.871668277 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.871416624 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.869605045 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.869991255 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.872345008 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.868689741 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.87324842 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.880142712 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.872338982 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.882402058 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.874135431 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.880412328 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.872018104 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.869765468 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.873487883 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.873263484 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.879551491 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.870916592 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.869689254 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.879318509 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.872894263 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.869835085 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.873505223 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.870373451 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.867711675 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.872586952 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.8727566 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.876486789 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.876141515 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.870795706 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.872940396 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.872859276 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.871257383 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.873030393 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.872544518 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.872020036 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.872992609 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.872669594 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.87116564 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.876666949 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.872696323 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.872778055 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.872252639 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.873516182 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.879267919 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.877021333 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.876263983 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.880274778 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.872350052 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.882850095 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.876706679 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.876190751 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.878394296 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.880573268 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.880588849 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.880448317 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.878352853 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.87380281 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.876929414 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.884536402 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.890452522 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.888327433 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.883800188 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.877883288 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.878312069 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.880678899 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.886122109 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.904662695 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.879664752 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.884424825 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.88457016 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.884891301 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.884309273 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.882899018 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.887005276 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.885913775 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.882895188 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.878781314 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.883492608 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.893707711 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.879048459 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.87748001 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.87857441 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.883499728 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.880829685 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.877076 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.87814819 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.882558575 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.879370667 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.8908925 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.880309387 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.879181278 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.87931761 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.875986448 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.878777524 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.87952444 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.882594508 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.880008123 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.879918076 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.879342028 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.882518852 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.88696727 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.876686271 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.886639294 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.887313082 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.878030328 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.881480067 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.881977607 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.879477753 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.885078328 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.885390203 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.878751339 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.880043322 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.881489763 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.879870804 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.886266249 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.892670662 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.88403772 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.886497122 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.883470755 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.885559832 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.877738902 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.877887234 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.878112809 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.88947464 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.885433217 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.888986058 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.884374935 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.878821278 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.87945069 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.887586559 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.887012183 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.877721587 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.875702312 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.876624457 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.879936602 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.881639407 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.882382002 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.882471164 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.882021778 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.884744437 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.882589543 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.877495722 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.880711418 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.881023638 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.88261179 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.880432431 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.889173177 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.879711558 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.878145189 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.876215842 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.876682304 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.881025636 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.88125599 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.881493145 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.882333402 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.8828227 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.887426429 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.883785891 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.881600619 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.881635144 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.887531766 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.88461424 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.881340158 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.884548056 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.88103692 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.883075203 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.885136066 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.893581421 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.884826417 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.886027202 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.88631472 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.887574279 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.883405981 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.882268857 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.881510473 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.884411758 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.890640521 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.885106573 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.88108308 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.882029212 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.885905112 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.89007241 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.885941469 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.8887383 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.883033035 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.885426367 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.885494733 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.889260128 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.892076196 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.890544408 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.889624511 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.891687327 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.890202089 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.884723821 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.883854116 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.887695043 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.88082855 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.882944861 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.886511143 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.883610708 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.885253192 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.883288569 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.886208811 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.884731872 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.883637748 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.882527843 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.885605062 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.889279733 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.896540113 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.892858261 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.889146355 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.886186622 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.883540897 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.88674148 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.893254134 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.886460907 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.884425756 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.883124715 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.887041619 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.883478438 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.891647762 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.896941302 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.891718512 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.887870779 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.889789366 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.90248871 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.88809913 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.894615756 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.91840289 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.8889798 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.886202084 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.886653135 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.885872839 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.886270264 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.887371992 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.886949558 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.892505475 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.888065143 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.884928233 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.888868523 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.886283408 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.884312395 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.887918774 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.888056956 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.891487458 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.882299025 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.889512804 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.88625695 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.888327643 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.88785689 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.886807654 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.89061014 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.892794758 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.892376103 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.891255788 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.888847257 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.889055129 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.898088587 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.888473395 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.888605782 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.89523587 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.898193956 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.887350679 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.884164423 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.883881631 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.889613192 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.893681027 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.887529751 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.8907725 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.894887047 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.889228279 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.896468211 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.886048868 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.889063647 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.888384589 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.887869744 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.887577718 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.897992925 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.901147475 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.888224433 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.88962405 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.894158035 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.886152917 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.895188931 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.898465407 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.891046952 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.891178841 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.891664363 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.891102016 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.893263386 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.893093382 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.897301821 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.900552196 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.893690393 seconds)
  done (took 1118.214999771 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.892438685 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.889589826 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.893622148 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.89191807 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.888645829 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.89020662 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.893204662 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.891087452 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.890107599 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.890464334 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.887008268 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.886050837 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.883622398 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.884540583 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.884858317 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.884819008 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.884785034 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.886340387 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.889120162 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.885739262 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.885479549 seconds)
  done (took 41.476771613 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.886209854 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.887008366 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.886971352 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.886874581 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.88298283 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.884153547 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.884247493 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.884875263 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.885514087 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.883468473 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.882958393 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.882595971 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.88355181 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.883303279 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.88472026 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.884955523 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.884526591 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.884350911 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.885519258 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.883474827 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.885775002 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.885050312 seconds)
  done (took 43.2824272 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.885273664 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.885812253 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.885166462 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.884777629 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.88507038 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.88542655 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.886273947 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.884778653 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.882923412 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.884739413 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.89047139 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.892458991 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.879469865 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.881619562 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.878919884 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.880225116 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.027955639 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.877410714 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.87469069 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.875573303 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.875142707 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.882242398 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.87512431 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.875869604 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.875130517 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.876312307 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.875203894 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.874710345 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.875572076 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.875823294 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.879402113 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.875184644 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.876867033 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.878211629 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.875537036 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.875656133 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.880404158 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.875095851 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.87532169 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.875584338 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.885594543 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.899610935 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.87500902 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.875697097 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.883831607 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.875836778 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.875847586 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.878335061 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.884941263 seconds)
  done (took 94.090123372 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.875228836 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.875001228 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.875297996 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.878567172 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.87751608 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.874032204 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.874419691 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.873969212 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.87449562 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.875798144 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.873631368 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.87243187 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.87286131 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.873060694 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.873302386 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.874547394 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.87465959 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.87278971 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.871391692 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.872556748 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.872541074 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.87088304 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.871249743 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.872051681 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.872019617 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.872912916 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.871720632 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.871663439 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.871019694 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.871340336 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.871821774 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.873030195 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.872947891 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.872724955 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.8728398 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.872234516 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.873339084 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.872860487 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.873522855 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.873854833 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.872888399 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.873406338 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.872549205 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.872848243 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.872654534 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.8734763 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.874200455 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.873390226 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.872541992 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.872859738 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.873134509 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.873842282 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.874127298 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.873999393 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.873979291 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.874814437 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.874862321 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.873077889 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.875244147 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.873503093 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.874428532 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.875553446 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.875300162 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.876593057 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.874169258 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.873916623 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.874075037 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.873943141 seconds)
  done (took 129.211578264 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.875811423 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.875853172 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.874927957 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.875391724 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.874173711 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.874620772 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.873521124 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.874987966 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.875067894 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.874643862 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.874484872 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.875036677 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.874878426 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.874306203 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.874678122 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.875840541 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.874488998 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.874175706 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.873575171 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.873928603 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.87425242 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.876119616 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.874437844 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.874243912 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.874427542 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.874775146 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.873946327 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.870100698 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.869076139 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.869811546 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.870647219 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.87284495 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.867113913 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.867773829 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.867503919 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.86712989 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.866092222 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.869521451 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.866470638 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.867182266 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.866407099 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.867049758 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.868852875 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.86580877 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.865475123 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.864990858 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.865986797 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.865507051 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.866152277 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.865275155 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.864705564 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.864967769 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.864425403 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.866013916 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.863986653 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.865475293 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.865631965 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.864489098 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.865529849 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.863219678 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.863725834 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.862141034 seconds)
  done (took 117.754059112 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.863884545 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.865162841 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.862880832 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.863755603 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.863365944 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.863899156 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.863769974 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.863211309 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.862621417 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.863446603 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.865547718 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.862997911 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.863040181 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.862812453 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.861865992 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.863908643 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.861900448 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.863341069 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.862468989 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.862418283 seconds)
  done (took 39.064075329 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.861672207 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.863167477 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.863495079 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.862968631 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.863823182 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.863659671 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.8631316 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.864591644 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.861804026 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.862918917 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.862967204 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.861887057 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.8634756 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.861141814 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.860853875 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.862535 seconds)
  done (took 31.598740513 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.863551381 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.862611147 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.862438278 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.862716315 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.864025682 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.864493629 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.861873665 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.862078602 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.862910316 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.861939328 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.863194067 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.862442759 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.862254547 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.861003109 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.860537658 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.860943194 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.861696555 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.862028363 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.862201091 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.860327148 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.86136606 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.862123336 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.86264098 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.861790549 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.860657249 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.865674535 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.861432813 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.862403905 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.860914262 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.861171856 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.860990848 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.861145727 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.861883926 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.861867052 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.861257695 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.860922735 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.86094386 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.860963486 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.861156813 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.859280592 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.857873854 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.85809778 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.857494122 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.861490369 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.857944972 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.859515061 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.85893961 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.859703115 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.857449619 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.859469649 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.859261574 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.858685021 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.859593047 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.858882569 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.860103729 seconds)
  done (took 104.156835273 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.859567327 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.857742637 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.859267536 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.859652725 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.856785575 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.858956785 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.858087391 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.858793516 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.858283972 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.859440325 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.857781265 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.857846024 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.857717517 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.857870745 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.858982308 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.857478436 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.858138079 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.85796894 seconds)
  done (took 35.243175263 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.85966951 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.859272054 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.859376761 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.858777757 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.857573003 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.858043128 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.858652616 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.857749483 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.857785578 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.857195447 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.856410874 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.859198971 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.858111321 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.857265699 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.857427138 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.857414961 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.858241765 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.859125351 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.856902455 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.856627925 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.857768234 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.85793701 seconds)
  done (took 42.667334056 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.858350893 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.858437846 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.870809634 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.87600433 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.876450171 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.891460304 seconds)
  done (took 13.023254842 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.857254377 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856123386 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.856801552 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.858104224 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.857378896 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.857671265 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85705681 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856861144 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.859122714 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.857432384 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.856472815 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.856227852 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.857359288 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857848858 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858483574 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.857018331 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856736489 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856969509 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.855453854 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85555339 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.856773132 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.854958798 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.855691503 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.855743918 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.855839578 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.859644112 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856654738 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855562596 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.855568913 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856806461 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.857825214 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.858446309 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856048594 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.856581065 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856313416 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.857818122 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.855676581 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.855855418 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.856705426 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.856768119 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.855416595 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856993533 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854553969 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856586721 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.85523512 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.855477723 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.857327527 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857726082 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.856670526 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.85645879 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.855656765 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.857491127 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.855283082 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.856415348 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856961777 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856301719 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.856306846 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.856351735 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856670874 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.857053502 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856695617 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85806968 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859695845 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860262489 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85639247 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.8583866 seconds)
  done (took 124.341547438 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.857732295 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.858080451 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856518972 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.857898036 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856780998 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.856694413 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.858674906 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859247488 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.858539688 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.857135938 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.85774876 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.859436748 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.859484727 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857678599 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.857911124 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.857678694 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.857954692 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859800569 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857728633 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858609758 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858291737 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85830861 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85895549 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.858415653 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.859559779 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.857812781 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.858363994 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.857965089 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860758964 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858941052 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.857931748 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858292136 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859083247 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.859478574 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858529718 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.859051848 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.858461888 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.859226527 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860735838 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858998178 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860434556 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85861331 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860965914 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.859666179 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.861005782 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.861778935 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859468683 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.859688845 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.859022805 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.861866246 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.859537873 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860378063 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859748247 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.860652279 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.859865755 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.860062916 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.860000256 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859007619 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860242511 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.859809482 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.861043844 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860680131 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860718701 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.860861928 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.860765583 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859669608 seconds)
  done (took 124.496217636 seconds)
done (took 2588.732270005 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.889766525 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.866798363 seconds)
  done (took 15.550476597 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.023869045 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.978393997 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.863242695 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.877671553 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.863793598 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.889988504 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.88619667 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.863539759 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.865726213 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.866658234 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.864518475 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.048167232 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.86378471 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.864703156 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.865844684 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.958491965 seconds)
  done (took 52.241544667 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.870865108 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.870051663 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.879396303 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.869248594 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.869934866 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.882813156 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.899465918 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.874676253 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.904697239 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.882970498 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.938456534 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.879650975 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.86967074 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.919565497 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.883643577 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.883514518 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.965774772 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.945202427 seconds)
  done (took 35.885989264 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.947800029 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.870712974 seconds)
  done (took 10.621986451 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.897270737 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.874886765 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.889740741 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.884238997 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.894040007 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.867238185 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.904659895 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.905783818 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.874023644 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.893094181 seconds)
  done (took 70.6844883 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.873070496 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.870134906 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.870205374 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.866660701 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.864755356 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.868277579 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.867625705 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.865316067 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.557532821 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.903884132 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.875616013 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.8761249 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.867604669 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.870701258 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.867906266 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.895231335 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.00652213 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.865503354 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.86570155 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.873287695 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.868264183 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.919454291 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.882558632 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.870099762 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.901243784 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.546596576 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.879808217 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.873828173 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.97845395 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.865103835 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.870979479 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.077944116 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.872101972 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.33169525 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.135663877 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.873424183 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.881068645 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.875921396 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.865786948 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.984411991 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.869672587 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.875138541 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.869503765 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.112619746 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.963048613 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.91522547 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.197663896 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.87242162 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.870509306 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.903006799 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.873282486 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.86834427 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.887134647 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.391058299 seconds)
  done (took 132.893576372 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.869682078 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.213364265 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.031325583 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.870136637 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.151452797 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.071362086 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.867957797 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.914264632 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.870568486 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.093853194 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.12058751 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.97207983 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.868655497 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.8663592 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.866925096 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.866981366 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.019607385 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.936023398 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.870188574 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.865895016 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.895146641 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.104902348 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.985805409 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.87048143 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.892192439 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.07555188 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.987226523 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.971390205 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.665888545 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.866057464 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.927762604 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.869223426 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.868598938 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.867404246 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.021296393 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.960546189 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.947554578 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.871551807 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.867110091 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.868232279 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.523837883 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.066762889 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.961707189 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.995538828 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.118235306 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.069605836 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.643825612 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.867049136 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.596787085 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.030773874 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.095052954 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.095130642 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.988867079 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.87074521 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.107286737 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.871442063 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.870723804 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.116882861 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.089252204 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.969212332 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.874744037 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.868610247 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.868463554 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.10489318 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.869874978 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.960831516 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.871089986 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.868623371 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.962491167 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.966809903 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.098693993 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.07903378 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.898760567 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.217332543 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.367836313 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.112993271 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.933135959 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.116910136 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.871349662 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.868683976 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.944600811 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.712837387 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.122250161 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.109315672 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.111419723 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.90063215 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.583445573 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.866462429 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.091440126 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.089065154 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.129019655 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.111982632 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.102297531 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.192246025 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.870464247 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.871598283 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.109983026 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.99263184 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.872326455 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.218812372 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.100929141 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.427211971 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.895409313 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.174627193 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.998068555 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.8719666 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.498047135 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.870361498 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.098261259 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.909837579 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.871253952 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.873356235 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.088498967 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.863323956 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.871494728 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.735437315 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.931593709 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.874183984 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.102200456 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.872303483 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.139523364 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.873471108 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.10332446 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.047389011 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.902160301 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.044056201 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.115352754 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.875396377 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.116962497 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.112505318 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.987572268 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.143630268 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.758498238 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.874048055 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.160378622 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.876294481 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.876422669 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.04230831 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.877373148 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.016762251 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.878895029 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.167352373 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.896086133 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.10618405 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.878839254 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.128070355 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.906858137 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.923975664 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.879532846 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.998318901 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.87886908 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.706042369 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.032074462 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.878166427 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.876408734 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.418255179 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.876353402 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.030206246 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.101419085 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.899264924 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.947872472 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.534823879 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.877344065 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.957117383 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.900751665 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.270281093 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.879297026 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.12805656 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.880674729 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.88096744 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.883285569 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.115074359 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.116386567 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.883519325 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.885430816 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.785886531 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.879749731 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.878390767 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.059907345 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.215889267 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.877119427 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.07773972 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.882625068 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.00262635 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.880518513 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.95896429 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.209013616 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.877606487 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.876763218 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.878547114 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.881719198 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.879078995 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.082078129 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.902550168 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.407645927 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.012377908 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.150401399 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.190154897 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.115746582 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.917861734 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.877209928 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.128423825 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.88364059 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.937462539 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.87900376 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.89559973 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.107609381 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.881367448 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.135996234 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.145254049 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.756429251 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.923766052 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.8813445 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.880448867 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.879232121 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.023427064 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.964034035 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.881494828 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.881086747 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.990219881 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.998264581 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.087574944 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.880300945 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.093909776 seconds)
  done (took 904.4830964 seconds)
done (took 1224.156530238 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.878624945 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.879256202 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.885182658 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.882580542 seconds)
  done (took 29.336985444 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.880176983 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.878764868 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.877758239 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.878558263 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.879308716 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.878686018 seconds)
  done (took 13.084325321 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.944745915 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.881062961 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.883774061 seconds)
  done (took 21.520639639 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.954806948 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.291922984 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.016622864 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.315174503 seconds)
  done (took 10.389773996 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.87727947 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.877794486 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.878887807 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.880359216 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.883715972 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.881459354 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.883166912 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.882127779 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.881999021 seconds)
  done (took 18.738508054 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.673183117 seconds)
done (took 99.556740777 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.961305788 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.209969251 seconds)
    (3/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.880163241 seconds)
    (4/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.640012131 seconds)
    (5/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.878784674 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.001354131 seconds)
    (7/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.988654881 seconds)
    (8/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.980032642 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.905962662 seconds)
    (10/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.977314431 seconds)
    (11/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.192053005 seconds)
    (12/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.024954377 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.54973284 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.907387907 seconds)
    (15/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.973844381 seconds)
    (16/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.398493248 seconds)
    (17/309) benchmarking ("sort", Float64, false)...
    done (took 5.603077445 seconds)
    (18/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.977354891 seconds)
    (19/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.751521759 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.044907003 seconds)
    (21/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.217153607 seconds)
    (22/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.958299887 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.901519485 seconds)
    (24/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.900090851 seconds)
    (25/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.102616846 seconds)
    (26/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.13215774 seconds)
    (27/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.123987051 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.880619986 seconds)
    (29/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.005837139 seconds)
    (30/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.886021221 seconds)
    (31/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.877918482 seconds)
    (32/309) benchmarking ("sort", BigInt, false)...
    done (took 8.400398565 seconds)
    (33/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.348065538 seconds)
    (34/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.107842304 seconds)
    (35/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.644646099 seconds)
    (36/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.400527045 seconds)
    (37/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.005852826 seconds)
    (38/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.154178887 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.194178097 seconds)
    (40/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.405493582 seconds)
    (41/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.97989083 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.916606097 seconds)
    (43/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.256730807 seconds)
    (44/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.019095885 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.921011637 seconds)
    (46/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.881478936 seconds)
    (47/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.895720384 seconds)
    (48/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 1.965522316 seconds)
    (49/309) benchmarking ("sort", Bool, false)...
    done (took 2.098557187 seconds)
    (50/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.300636786 seconds)
    (51/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.881477269 seconds)
    (52/309) benchmarking ("sort", Int64, false)...
    done (took 7.383747783 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.121188439 seconds)
    (54/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.125242535 seconds)
    (55/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.034439291 seconds)
    (56/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.901602151 seconds)
    (57/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.332663093 seconds)
    (58/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.667732482 seconds)
    (59/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.056581943 seconds)
    (60/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.043179547 seconds)
    (61/309) benchmarking ("sort", Float32, false)...
    done (took 5.627853862 seconds)
    (62/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.357087916 seconds)
    (63/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.895582253 seconds)
    (64/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.92155944 seconds)
    (65/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.090697895 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.270335709 seconds)
    (67/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.904971 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.184201296 seconds)
    (69/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.367436767 seconds)
    (70/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.510992278 seconds)
    (71/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.880224895 seconds)
    (72/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.01689496 seconds)
    (73/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.065619891 seconds)
    (74/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.137546008 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.232420294 seconds)
    (76/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.304550719 seconds)
    (77/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.050674021 seconds)
    (78/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.385572586 seconds)
    (79/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.9854601 seconds)
    (80/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.023272599 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.016101326 seconds)
    (82/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.56761637 seconds)
    (83/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.027524116 seconds)
    (84/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.193998107 seconds)
    (85/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.27882944 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.011688042 seconds)
    (87/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.066381663 seconds)
    (88/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.165798608 seconds)
    (89/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.967585326 seconds)
    (90/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.201859339 seconds)
    (91/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.884234427 seconds)
    (92/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.91062554 seconds)
    (93/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.901984572 seconds)
    (94/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.969881115 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.146385044 seconds)
    (96/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.442322067 seconds)
    (97/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.911329383 seconds)
    (98/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.898963659 seconds)
    (99/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.087607499 seconds)
    (100/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.980614468 seconds)
    (101/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.907911089 seconds)
    (102/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.883326552 seconds)
    (103/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.960905776 seconds)
    (104/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.247522828 seconds)
    (105/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 2.016163954 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.78472068 seconds)
    (107/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.907424428 seconds)
    (108/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.191596614 seconds)
    (109/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.267721665 seconds)
    (110/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.273530501 seconds)
    (111/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.965361367 seconds)
    (112/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.942333522 seconds)
    (113/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.099801096 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.025349354 seconds)
    (115/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.269029289 seconds)
    (116/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.885062153 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.175457169 seconds)
    (118/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.133935976 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.193484872 seconds)
    (120/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.912559403 seconds)
    (121/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.390942409 seconds)
    (122/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.498447025 seconds)
    (123/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.30183689 seconds)
    (124/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.269424566 seconds)
    (125/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.884042465 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.791747981 seconds)
    (127/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.395683799 seconds)
    (128/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.06893395 seconds)
    (129/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.333618819 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.186461252 seconds)
    (131/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.171254069 seconds)
    (132/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.306530322 seconds)
    (133/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.989386477 seconds)
    (134/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.902884486 seconds)
    (135/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.142700063 seconds)
    (136/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.19140461 seconds)
    (137/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.888736967 seconds)
    (138/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.914023868 seconds)
    (139/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.016652004 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.228653393 seconds)
    (141/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.201612093 seconds)
    (142/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.144337152 seconds)
    (143/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.136789224 seconds)
    (144/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.893776248 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.487702723 seconds)
    (146/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.889971265 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.154132567 seconds)
    (148/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.884969012 seconds)
    (149/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.928682503 seconds)
    (150/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.885648533 seconds)
    (151/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 3.681811746 seconds)
    (152/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.887730759 seconds)
    (153/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.914002014 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.985403891 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.988378518 seconds)
    (156/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.05344731 seconds)
    (157/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.961356894 seconds)
    (158/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.889069328 seconds)
    (159/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.894686031 seconds)
    (160/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.031738047 seconds)
    (161/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.097059721 seconds)
    (162/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.902015767 seconds)
    (163/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.011950141 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.492600573 seconds)
    (165/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.362203892 seconds)
    (166/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.370194454 seconds)
    (167/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.892548473 seconds)
    (168/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.304432036 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.022939681 seconds)
    (170/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.944444638 seconds)
    (171/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.688114544 seconds)
    (172/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.137208114 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.49467394 seconds)
    (174/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.986488556 seconds)
    (175/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.893082673 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.88395731 seconds)
    (177/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.187489444 seconds)
    (178/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.080623762 seconds)
    (179/309) benchmarking ("sort", Int8, false)...
    done (took 4.770254023 seconds)
    (180/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.998308993 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.832677588 seconds)
    (182/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.207430192 seconds)
    (183/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.696870952 seconds)
    (184/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.045969619 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.165304015 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.289589931 seconds)
    (187/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.379894479 seconds)
    (188/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.894150895 seconds)
    (189/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 8.784023547 seconds)
    (190/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.175542615 seconds)
    (191/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.017731848 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.282469491 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.891026449 seconds)
    (194/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.985693055 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.019604294 seconds)
    (196/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.023309007 seconds)
    (197/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.917012919 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.233589222 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.779436773 seconds)
    (200/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.039011808 seconds)
    (201/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.998371069 seconds)
    (202/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.998141759 seconds)
    (203/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.167348252 seconds)
    (204/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.964371484 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.147409067 seconds)
    (206/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.644815102 seconds)
    (207/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.909930491 seconds)
    (208/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.064849047 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.041176547 seconds)
    (210/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.762117427 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.040102094 seconds)
    (212/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.003805883 seconds)
    (213/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.892914368 seconds)
    (214/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.278278055 seconds)
    (215/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.192913646 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.782300669 seconds)
    (217/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.128252599 seconds)
    (218/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.207518725 seconds)
    (219/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.590730095 seconds)
    (220/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.017026678 seconds)
    (221/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.886845936 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 4.271912802 seconds)
    (223/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.028742879 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.19125932 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.886572986 seconds)
    (226/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.350184605 seconds)
    (227/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.165658848 seconds)
    (228/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.898258807 seconds)
    (229/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.909501682 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.240832944 seconds)
    (231/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.378911965 seconds)
    (232/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.916343265 seconds)
    (233/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.220977203 seconds)
    (234/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.220771548 seconds)
    (235/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.992686032 seconds)
    (236/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.282028412 seconds)
    (237/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.968059547 seconds)
    (238/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.905948517 seconds)
    (239/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.949167624 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.012831857 seconds)
    (241/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.07197043 seconds)
    (242/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.136891443 seconds)
    (243/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.069349552 seconds)
    (244/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.163648016 seconds)
    (245/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.194920127 seconds)
    (246/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.079041236 seconds)
    (247/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.104069175 seconds)
    (248/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.18956414 seconds)
    (249/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.89524573 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.287451134 seconds)
    (251/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.99169563 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.856926727 seconds)
    (253/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.319114537 seconds)
    (254/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.891376964 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.643494814 seconds)
    (256/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.609648765 seconds)
    (257/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.07464081 seconds)
    (258/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.156820458 seconds)
    (259/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.891001656 seconds)
    (260/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.986248423 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.044997937 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.66771626 seconds)
    (263/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.100982279 seconds)
    (264/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.185276999 seconds)
    (265/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.898616506 seconds)
    (266/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.889210968 seconds)
    (267/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 4.207348107 seconds)
    (268/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.891956331 seconds)
    (269/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.905233875 seconds)
    (270/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.889580729 seconds)
    (271/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 4.084302761 seconds)
    (272/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.047600873 seconds)
    (273/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.984959505 seconds)
    (274/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.151510714 seconds)
    (275/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.892663497 seconds)
    (276/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.925955314 seconds)
    (277/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.987527181 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.013669054 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.670436204 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.025599116 seconds)
    (281/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.891951957 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.018580061 seconds)
    (283/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.912243171 seconds)
    (284/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.78195292 seconds)
    (285/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.040652114 seconds)
    (286/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.082420667 seconds)
    (287/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.923903758 seconds)
    (288/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.892201016 seconds)
    (289/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.940723984 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.851229752 seconds)
    (291/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.001192524 seconds)
    (292/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.977766812 seconds)
    (293/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.408577295 seconds)
    (294/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.370323019 seconds)
    (295/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.693540249 seconds)
    (296/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.682940309 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.922286432 seconds)
    (298/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.058348915 seconds)
    (299/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.581511424 seconds)
    (300/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.900587716 seconds)
    (301/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.151073841 seconds)
    (302/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.896545229 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.90217072 seconds)
    (304/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.108703383 seconds)
    (305/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.199286125 seconds)
    (306/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.098470396 seconds)
    (307/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.893631298 seconds)
    (308/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.99457861 seconds)
    (309/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.898092287 seconds)
  done (took 1014.712041169 seconds)
done (took 1016.602021154 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.920279957 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.914482632 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.895865379 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.918512522 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.009593585 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.941291771 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.910306225 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.899427629 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.947296334 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.948504812 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.897142996 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.938598697 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.906787232 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.898054647 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.898967761 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.914027399 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.197859544 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.922084334 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.916174275 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.910692184 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.916225532 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.895787466 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.947954144 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.9373989 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.903270881 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.903146977 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.902119199 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.919288757 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.011957195 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.902964616 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.902870621 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.91083086 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.199930272 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.920131928 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.896809854 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.918166219 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.911195013 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.910611266 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.901678295 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.933357922 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.336502096 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.901834125 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.899715793 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.899744274 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.898529071 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.905160585 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.89959485 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.90719066 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.913020437 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.914625798 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.328607337 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.919444572 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.903430181 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.898995257 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.913220068 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.900166659 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.903362905 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.916823731 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.92046429 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.915530122 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.187405452 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.931084192 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.903447982 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.919090693 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.909720049 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.365959724 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.903578187 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.907348317 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.336850542 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.911764873 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.36556025 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.915293789 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.902306796 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.916959884 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.934046553 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.202121518 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.923060596 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.900292012 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.911367793 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.899649873 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.913217269 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.915888347 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.905205198 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.900970026 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.919063736 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.946615684 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.913784063 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.902409299 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.913866783 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.92197683 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.911068629 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.914060337 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.905145238 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.899397641 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.913586371 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.905352614 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.906378911 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.905285132 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.9058176 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.914817222 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.335714504 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.924353408 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.898806502 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.898568314 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.903606602 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.917216539 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.335963219 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.90688168 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.925273089 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.952420367 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.904138149 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.192102881 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.931359836 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.91976111 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.915095867 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.905662288 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.901658511 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.191028393 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.356852695 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.924270173 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.903590645 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.901986375 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.920692413 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.904684585 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.900532106 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.205235373 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.931239601 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.920237098 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.027318142 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.918260596 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.936622488 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.902649706 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.909022783 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.948785498 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.922537053 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.937198104 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.907256771 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.920981617 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.921817317 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.902038691 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.916756609 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.916458718 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.904058279 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.913341376 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.901714021 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.950161848 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.920705792 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.920332978 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.927917343 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.028322838 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.905422356 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.194537848 seconds)
done (took 298.914444399 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.979782868 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.900504278 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.019114523 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.902003705 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.988674007 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.973165528 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.902593769 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.903048514 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.9021494 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.4376377 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.903374098 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.909963958 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.902307534 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.903583682 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.972436838 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.902771315 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.902166247 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.348775611 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.907419309 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.982204597 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.903132337 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.906042303 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.903147848 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.420349428 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.903571008 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.904637296 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.98626525 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.906406781 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.351985589 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.904452684 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.903877411 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.370618718 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.984317347 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.931868351 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.912879185 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.91042585 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.998311976 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.914757258 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.971050021 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.972265169 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.024656111 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.938340998 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.906721862 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.904153898 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.909130262 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.907002474 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.906640723 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.938778856 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.905973184 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.914352623 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.352713347 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.914417586 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.912487452 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.908213526 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.906806299 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.936002195 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.909966046 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.907789047 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.986434921 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.911717765 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.975221103 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.410171871 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.408594887 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.909438223 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.905157205 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.905218545 seconds)
  done (took 187.753380085 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.971326653 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.980156812 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.97137503 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.91231153 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.955251469 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.971545482 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.910186673 seconds)
  done (took 15.506763939 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.914001197 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.90513952 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.954989473 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.955527257 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.905529605 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.083328526 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.91763216 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.911793212 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.93395711 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.90648424 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.540907486 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.956293071 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.914099882 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.906953713 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.919764299 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.96505837 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.911804102 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.90867667 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.025623933 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.06094919 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.912498485 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.915593222 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.934417428 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.917257726 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.908684338 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.908348225 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.906338007 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.91462389 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.908803945 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.910731297 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.907047113 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.95952131 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.907609463 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.906817038 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.910450731 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.908781675 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.908621683 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.915414339 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.910474103 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.910674658 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.910810624 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.91076802 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.909404794 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.910226823 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.909654809 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.933256339 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.909634629 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.91120994 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.909064512 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.911303388 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.939145909 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.910972726 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.909489134 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.916445843 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.955540244 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.91589232 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.916844001 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.910060651 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.911820457 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.911562054 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.910323334 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.064603245 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.959754711 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.911391078 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.960699253 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.065901304 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.916658618 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.912953993 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.911652266 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.000358175 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.913289348 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.962597807 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.913253581 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.028547354 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.912463845 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.091262928 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.94175901 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.914629118 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.918663279 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.912865202 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.919024132 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.912872198 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.913945709 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.921982625 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.919841748 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.913065054 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.912160031 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.914471294 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.921090586 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.913786836 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.964892797 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.913736711 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.914612387 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.051861919 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.912265055 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.029220275 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.943862725 seconds)
  done (took 209.960265921 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.924691858 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.92167875 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.914365319 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.929410497 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.913877319 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.915160493 seconds)
  done (took 13.362242671 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.915611674 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.918996473 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.912742064 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.91186751 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.914030312 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.91355124 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.913179093 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.91407558 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.917644717 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.915194367 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.915785747 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.915154254 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.917163557 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.912703697 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.91466473 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.914135961 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.91464081 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.912768824 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.915365501 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.914481534 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.120494149 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.914269768 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.912635612 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.917313412 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.920400716 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.913423689 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.925686105 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.912748339 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.913449029 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.920179103 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.917196246 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.91322724 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.917506376 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.919901708 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.917977995 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.916867408 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.917700273 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.913938725 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.91245949 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.913402126 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.914172266 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.913492668 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.914657136 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.914275015 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.915294081 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.92031233 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.91785273 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.926898981 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.916556724 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.914185789 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.914667563 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.915260757 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.914709419 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.91587815 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.918382212 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.920928938 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.920667119 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.915102586 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.913046949 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.917912464 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.918156441 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.913984838 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.916355336 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.91883285 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.923077384 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.916319784 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.920549831 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.919750458 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.916014572 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.917212681 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.917853254 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.917824306 seconds)
  done (took 141.018033152 seconds)
done (took 569.446995449 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.925030564 seconds)
  done (took 8.77010701 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.071471274 seconds)
  done (took 9.014712985 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.521644099 seconds)
  done (took 10.370205246 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.93744777 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.935710036 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.930718505 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.917967536 seconds)
  done (took 29.578509663 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.925730777 seconds)
  done (took 8.773289411 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.928152728 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.921477036 seconds)
  done (took 15.735350468 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.964073389 seconds)
  done (took 8.812990575 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.263662001 seconds)
  done (took 9.12318042 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.94314941 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.930633061 seconds)
  done (took 15.743147776 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.924083295 seconds)
  done (took 8.774085277 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.128216226 seconds)
  done (took 10.064736873 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.926991165 seconds)
  done (took 8.815147433 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.948877447 seconds)
  done (took 8.797195383 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.135508443 seconds)
  done (took 9.984688234 seconds)
done (took 164.20584534 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.923894934 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.919361604 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.918597228 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.917938375 seconds)
  done (took 29.528328125 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.957335472 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.955895916 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.963277012 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.955357193 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.944817347 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.948357129 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.957953023 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.957699736 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.944102254 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.954298621 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.956974997 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.952282963 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.955717022 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.966363039 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.963639435 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.955061024 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.957252369 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.959021917 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.948063385 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.965137738 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.955719059 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.958043891 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.922515188 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.924219242 seconds)
  done (took 48.728977623 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.111529018 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.989904616 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.077512942 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.974808873 seconds)
  done (took 10.004396989 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.923025037 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.986981848 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.974153611 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.96905615 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.973673431 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.026178885 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.977630093 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.057973846 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.050376938 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.047379438 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.93105226 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.944885687 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.95194023 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.970234512 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.029823948 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.922977481 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.924241366 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.043378756 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.986457954 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.111189027 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.924797764 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.979120524 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.974984835 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.976153504 seconds)
  done (took 49.508837815 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.924803659 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.932153127 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.931354851 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.924800341 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.927411646 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.925841485 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.931636668 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.927077988 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.945630136 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.92621557 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.92533721 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.927146175 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.932597764 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.925555012 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.92393733 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.938122769 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.93930714 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.925578721 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.927912979 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.931896499 seconds)
  done (took 40.446334517 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.922025058 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.768895323 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.267534117 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.176150997 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.923986417 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.928088659 seconds)
  done (took 31.838553881 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.937056088 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.92788854 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.924166385 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.98007809 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.060278507 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.927793933 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.926888616 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.936421491 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.968139407 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.98892173 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.943430538 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.949623504 seconds)
  done (took 25.323257806 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.925223063 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.926944517 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.926931683 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.938606498 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.936332232 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.931698462 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.935421748 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.924117862 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.935843559 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.944111667 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.930733058 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.936931741 seconds)
  done (took 45.049784592 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.63304076 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999463442 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.926212531 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.800529377 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.387778294 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.476918968 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.819165472 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.697295035 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.391331007 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.851199693 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.127391601 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.925022753 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.007616811 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.926589243 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.196228999 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.303260929 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.115439825 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.167985064 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.645129049 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.954311328 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.127980897 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.147444239 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.217180297 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.926053617 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927913755 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.928395753 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.466253908 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.736256057 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.959705599 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.246798901 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.166128176 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.87437923 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980540564 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.92944013 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.938138486 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.928943237 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931370922 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.197474559 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.934754204 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.172076116 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000129985 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.175051115 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93215447 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.347352594 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.634933604 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.246508384 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.040565223 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.925786224 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927908133 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.927019584 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.850507702 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.010113165 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.930137195 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.9320736 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.626361547 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.926180822 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00329719 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.927071833 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.130049872 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.735981688 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.613864213 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.929660198 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928915169 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.476414514 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.029502897 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.03735793 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.708181502 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.308561561 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.341906539 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.024180217 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.929468737 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.928421271 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.063599916 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.888539273 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.65315057 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.96417493 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.063614008 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.943857339 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.568596757 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.220080723 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.360646445 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.48438471 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.846100912 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.212799481 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.612011817 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.910559723 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.145138939 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.775563409 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.853694336 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.149841753 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961088966 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931697833 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.1911361 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.710512617 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.037872763 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.941289553 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.363354774 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944619672 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.933534462 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931626253 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.144458717 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.327686477 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.958639473 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.049552051 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945239093 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.012642552 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.855878409 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.944326282 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.931351682 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.836630707 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.935886169 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.847174355 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.973671913 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.593617952 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.968226955 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.870994569 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.934511839 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.040760134 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.972044983 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.886239843 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.183901302 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.236482861 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.602247476 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.875651945 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.061938824 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.31930223 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.154770857 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.937321835 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.144170624 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.471620652 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.371062326 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.973105462 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.219098554 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.992146253 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.225909326 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.364489454 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005959567 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.71471288 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.731999499 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.148164664 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.946866491 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 6.931995203 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.935328854 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.938015573 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.865726981 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.571964159 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.317198282 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.097551395 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.14569023 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.232051513 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.914033628 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.869178791 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.23607333 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.067363513 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.922239873 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.596794552 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.318885739 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.744696989 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.957527995 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.05976005 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.107601456 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.891273245 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946318175 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008167048 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948301978 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.947797893 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.306820403 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.29203731 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.933811619 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.934286786 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.882915465 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.939618056 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.934568004 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.466806728 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.900216254 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.939095573 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.944145303 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.806565048 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006672701 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.936246418 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.936880299 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.469952917 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.437798797 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.93702835 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.591595144 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.94270431 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.119034055 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.206427695 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.322691736 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.05780186 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.633790472 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.375681605 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.044755988 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.633899551 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.859881089 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.935085985 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.872546152 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936940383 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.935227378 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.939045265 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.118115094 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.216390184 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.233921011 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.402007264 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.003187392 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.14125524 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.653601979 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.887053814 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.935752339 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.939247408 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.935681269 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.933751125 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.44406235 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.232872358 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.038454703 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.961972343 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.939426188 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062735136 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.946006482 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.859505158 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.935380238 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.936136959 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.361186474 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.961892551 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.880911329 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.248494492 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.825685572 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.051404831 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983321708 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.948291677 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.941624931 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.653774139 seconds)
    (233/481) benchmarking "4d"...
    done (took 2.979050216 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.86427672 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355958457 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97161622 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.705752337 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.424193997 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.496522438 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.236588688 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.254106677 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.263682585 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 2.005733122 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.150972022 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.020249905 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.98910308 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.023174282 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.873738972 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.864182269 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.597330001 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.273653534 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.201993395 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.948075804 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.153402702 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.653861368 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.164126316 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965290564 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.605476031 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.242971618 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.913550782 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.953311827 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.243839559 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.041903662 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.018825017 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.941646964 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.892386964 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.274715556 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97836703 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.638106419 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.951706915 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.289126377 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.357112017 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.00266825 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.322328393 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.139860146 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.944701687 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.292427686 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.129174183 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.973206068 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.941633418 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.924866225 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.152734733 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.515380233 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.782671071 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.944585489 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.085071634 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.231831898 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.842399906 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 1.940217119 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.080960073 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.194763136 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.93796538 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.293710828 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.301617281 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.054989128 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996560585 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.164435143 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.603657998 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.240245718 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.491678927 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.418453001 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.945449035 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.864866712 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.638211918 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.141604286 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.941285306 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.907722456 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.154917477 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.172051532 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.621856188 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.160135419 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.184012726 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.949780823 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.212297319 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.014489897 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.036564726 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.256900454 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.367489474 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.188803537 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.166353072 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.482478385 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.157634086 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.402082176 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.108371004 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.94291668 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.145984047 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.157608453 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.153132804 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.319506957 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.110323847 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.651742217 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.948273971 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.147346828 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.234558996 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.003075841 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.319358502 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.105805476 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.028938945 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945372495 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007617717 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.948310191 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94961841 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.313226338 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.466890632 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.955132279 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021638616 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.057709267 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.443699288 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.944853433 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.948791837 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.215100561 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.297811523 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.277741686 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.925157696 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.943078015 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.947936686 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072433075 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.868616887 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.954735192 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.212191509 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.946446729 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.377747497 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.086050154 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956399702 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.257880661 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.328369613 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.602938013 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.902948033 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.950778977 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.164995881 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.251633038 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.118736062 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.055109268 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.217436812 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.284137962 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.979016951 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.317942103 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.181485885 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.948305859 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.823616053 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.949056554 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.07462162 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.142118651 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.22434545 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.456154519 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.666399312 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.212252899 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.797698405 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.951552586 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.721099494 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.214410424 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.217528596 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.996028204 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.011798295 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.95297515 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.367460671 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.664652997 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.077247445 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.831599899 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.874984133 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.953255035 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.27196483 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.192098065 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.656952141 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.95364702 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.222663704 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.25077514 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.228729627 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.000241694 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.810027064 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.162014356 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951327079 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.964473859 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.199654413 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.1705579 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.190471889 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.948566649 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.950263899 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.752004222 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.875940559 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.946921784 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998994385 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.175744055 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.967761719 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.463012433 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.650164221 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.233809455 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.994911466 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.95217457 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.220740125 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.469376461 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.496253286 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.952713207 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.167723994 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.920618049 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.244063868 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.952719507 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.376201458 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.248625798 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.947271931 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.474914932 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.193492773 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.217906147 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.882664238 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.957935809 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.165552703 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.798478456 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.94700302 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.952740521 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368657607 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.178525683 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.687501733 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.508983975 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.949049123 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.951852656 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.381333481 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.978198101 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.380971479 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.976409866 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.967935332 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.468846484 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.642973502 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.234753455 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.194234618 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.460188903 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.555751435 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.95169844 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.94917038 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.952434573 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.870939883 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.30189836 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.139912172 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.236131458 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.982965447 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.381742203 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.981944865 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.334487481 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.063846787 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.100965283 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.987706915 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.477110719 seconds)
  done (took 1691.638789162 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.975862406 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.043850435 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.984901783 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.95809399 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.951102671 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.951568417 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.034980633 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.964335729 seconds)
  done (took 57.746674769 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.942723196 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.957084617 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.945673998 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.94518585 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.946102215 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.942527221 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.097048555 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.950067843 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.949594548 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.946381979 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.943315927 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.941732258 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.218638871 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.957042027 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.940206237 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.943504449 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.945540408 seconds)
  done (took 75.390097333 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.942101484 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.175918746 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.999459756 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.939063166 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.871826503 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.955139521 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.890166658 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.956514136 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.944989107 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.166789666 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.239844295 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.949655371 seconds)
  done (took 90.900025456 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.943496958 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.940459438 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.939102915 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.941800597 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.940675926 seconds)
  done (took 11.575585225 seconds)
done (took 2209.562872946 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.169275145 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.99824562 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.036752707 seconds)
  done (took 5.903116443 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.089514608 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.132752045 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.247990846 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.006201231 seconds)
  done (took 10.351251695 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.242253189 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.326903376 seconds)
  done (took 6.437753792 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.287837451 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.958307392 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.348551419 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.941805587 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.945904686 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.945174831 seconds)
  done (took 22.706536306 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.940279174 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.941090641 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.941108256 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.940769882 seconds)
  done (took 9.630893258 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.938281898 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.69708608 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.937801718 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.949079386 seconds)
  done (took 21.389707542 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.086388393 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.054853473 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.081827983 seconds)
  done (took 8.090241208 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.082314874 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.781306419 seconds)
  done (took 6.72959309 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.080963474 seconds)
  done (took 3.949702504 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.966013258 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.210120484 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.379219464 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.487469267 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.611787944 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.713658666 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.244989208 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.175121919 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.368606687 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.371130248 seconds)
  done (took 25.396277924 seconds)
done (took 136.219569539 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.28628448 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.959925807 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.147490994 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.30037448 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.167108886 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.145887336 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.161401046 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.289710258 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.966649397 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.953620202 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.297672725 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.163272916 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.108151092 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.952451763 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.115592226 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.950402676 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.158378601 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.284809375 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.975025792 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.191407603 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.164045308 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.9388435 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.137230546 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.946216566 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.156171767 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.085987265 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.475426306 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.94535944 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.119170073 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.485387613 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.083857038 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.328159927 seconds)
  done (took 170.31788408 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.929587311 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.930735037 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.931919313 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.930685649 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.411717512 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.926778746 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.922026012 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.92190706 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.36551127 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.354819773 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.919517783 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.413666573 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.920223099 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.917198299 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.917943567 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.917110598 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.545534522 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.922422407 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.91461661 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.915210291 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.917012305 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.215956808 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.913691625 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.234569836 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.520645106 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.912052616 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.910864617 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.911619873 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.9104223 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.914827033 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.911150605 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.907710501 seconds)
  done (took 210.970134257 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.887846647 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.907894528 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.908793042 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.913080438 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.907799189 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.911061184 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.90708692 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.907487868 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.739817788 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.722929221 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.905898351 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.905934251 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.907250206 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.905889362 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.911052658 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.907177543 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.911090167 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.914513231 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.912629149 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.914276794 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.904997591 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.60314377 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.904474441 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.621120988 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.911196311 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.912025527 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.906874982 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.906391483 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.906750534 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.907386291 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.907578779 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.905847515 seconds)
  done (took 221.949514086 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.144523086 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.906434429 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.908419528 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.828271704 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.908193752 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.907464085 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.896779297 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.15300364 seconds)
  done (took 19.489392447 seconds)
done (took 624.617312404 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.283310886 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.755877234 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.107774605 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.942369222 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.230160799 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.993399088 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.940894881 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.011341179 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.861886534 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.017313807 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.579331184 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.96757782 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.67151085 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.970679834 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.065246835 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.998877001 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.485290178 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.5812652 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.081742783 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.04092933 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.127246318 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.884758142 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.023610057 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.816769178 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.596877557 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.930538499 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.982328588 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.488721714 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.953281101 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.099983112 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.623018831 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.25740192 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.957377863 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.940851036 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.995352693 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.973386534 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.171055464 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.953097273 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.065798587 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.677701523 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.034996528 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.692801874 seconds)
  done (took 105.671954848 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.93074615 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.925732239 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.926404234 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.927271097 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.93612034 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.927378908 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.927253931 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.926097166 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.927733823 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.926817242 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.927003363 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.935114268 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.925868384 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.934071228 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.927066424 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.926989798 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.928527233 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.93569032 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.926788418 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.926823178 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.927222352 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.928828893 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.923635375 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.927870024 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.928086506 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.927000488 seconds)
  done (took 52.004774968 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.921758543 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.077365067 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.172163137 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.944617384 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.924894439 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.925935197 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.941500526 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.927867161 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.924750258 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.923838779 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.010946663 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.929298341 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.941944433 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.17428037 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.941092795 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.922771501 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.92346127 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.92415376 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.084990356 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.940182639 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.943785419 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.928130392 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.941205095 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.936954774 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.925040862 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.923472382 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.926991721 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.366002203 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.932044153 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.013235273 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.015948213 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.950080667 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.302106427 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.182274098 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.985892092 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.935038518 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.922162628 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.015701481 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.930708559 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.923539762 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.940804691 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.928770898 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.172293609 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.445364626 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.938940498 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.922869788 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.37419295 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.025368784 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.967244791 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.935244676 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.177651954 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.941147102 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.92374753 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.924749256 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.961090427 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.935503556 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.924733829 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.2283315 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.938681653 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.942238064 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.93269919 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.925510585 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.089582624 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.935399836 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.079804954 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.937003214 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.929922128 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.927450502 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.175192199 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.941008695 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.459842094 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.938449163 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.923516253 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.012366616 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.08437908 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.398542008 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.940212782 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.093266104 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.315832552 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.949418188 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.933256813 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.349236988 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.953440628 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.931918388 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.923723085 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.923529798 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.920064387 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.966149721 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.937891075 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.362202072 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.453003323 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.245104908 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.94857553 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.935412913 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.92247474 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.229606105 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.931763243 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.923745309 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.165902929 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.464312975 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.939523072 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.930797449 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.436922307 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.941255046 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.941746846 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.931297428 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.179910415 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.94397152 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.969098499 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.922975349 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.929880781 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.928378767 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.942987331 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.932081404 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.923096055 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.427653994 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.034876336 seconds)
  done (took 238.549379392 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.921942887 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.919951077 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.920944916 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.920006022 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.919248405 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.921356027 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.919100395 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.919281397 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.921274274 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.919051162 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.920819924 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.923050396 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.920903096 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.920827142 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.976032791 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.934058805 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.532143788 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.931654664 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.930831504 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.930563407 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.576954899 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.93226234 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.928852489 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.928376628 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.928092356 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.931222809 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.930322205 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.968308943 seconds)
  done (took 169.101169955 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.924147889 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.036770654 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.946951616 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.953809945 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.931204183 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.924577051 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.024057136 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.942047502 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.929239612 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.923104405 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.92402194 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.98454684 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.936221988 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.021245448 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.954997564 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.031622871 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.027802238 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.930461687 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.925360128 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.924492603 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.954068259 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.934324898 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.984865065 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.049491259 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.945473668 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.037784742 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.948745009 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.925167534 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.924804648 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.040874931 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.944784073 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.982198183 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.952227778 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.939818658 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.040677706 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.035974207 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.023478673 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.022690169 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.922966938 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.919324101 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.91579097 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.917642326 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.028184137 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.936023241 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.917618168 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.03189337 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.937914589 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.917168021 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.917035487 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.918745596 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.929271612 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.933200783 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.977996622 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.047284703 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.955219826 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.935671023 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.010251735 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.044325031 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.913540063 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.012063213 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.915456947 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.022196044 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.931538642 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.910803327 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.911035503 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.916113509 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.936567906 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.013414816 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.011559152 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.91446976 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.006907367 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.938526455 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.914288542 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.902835272 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.9034177 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.019444468 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.019060974 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.935761112 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.93730754 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.930333376 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.911887682 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.898393644 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.900222355 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.916680773 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.903955434 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.012703993 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.014450339 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.901798395 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.898804968 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.896368897 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.900496538 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.919361612 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.01461718 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.930184259 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.998052115 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.958519373 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.96664201 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.906763965 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.904496792 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.894957565 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.952846877 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.907415227 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.900270418 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.202488265 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.948818402 seconds)
  done (took 207.330568256 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.299000958 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.932722753 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.942291823 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.201704897 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.250855162 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.90642382 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.931729794 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.934276585 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.964421955 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.157795701 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.012336252 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.948781005 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.917753972 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.90396895 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.928344259 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.963554702 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.940423267 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.269536518 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.134724 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.464642481 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.92431886 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.201422103 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.24758663 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.511200369 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.983498404 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.357384072 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.557869966 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.090756807 seconds)
  done (took 63.702486004 seconds)
done (took 838.200331673 seconds)
SAVING RESULT...
DONE!
